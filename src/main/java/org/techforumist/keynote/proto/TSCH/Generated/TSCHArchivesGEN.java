// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TSCHArchives.GEN.proto

package org.techforumist.keynote.proto.TSCH.Generated;

public final class TSCHArchivesGEN {
  private TSCHArchivesGEN() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
    registry.add(org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive.current);
    registry.add(org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive.current);
    registry.add(org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive.current);
    registry.add(org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive.current);
    registry.add(org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive.current);
    registry.add(org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive.current);
    registry.add(org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive.current);
    registry.add(org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive.current);
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ChartStyleArchiveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TSCH.Generated.ChartStyleArchive)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional float tschchartinfodefault3dchartopacity = 1;</code>
     */
    boolean hasTschchartinfodefault3Dchartopacity();
    /**
     * <code>optional float tschchartinfodefault3dchartopacity = 1;</code>
     */
    float getTschchartinfodefault3Dchartopacity();

    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 2;</code>
     */
    boolean hasTschchartinfoarea3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 2;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfoarea3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 2;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfoarea3DlightingpackageOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 3;</code>
     */
    boolean hasTschchartinfobar3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 3;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfobar3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 3;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfobar3DlightingpackageOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 4;</code>
     */
    boolean hasTschchartinfocolumn3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 4;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfocolumn3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 4;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfocolumn3DlightingpackageOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 5;</code>
     */
    boolean hasTschchartinfodefault3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 5;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfodefault3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 5;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfodefault3DlightingpackageOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 6;</code>
     */
    boolean hasTschchartinfoline3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 6;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfoline3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 6;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfoline3DlightingpackageOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 7;</code>
     */
    boolean hasTschchartinfopie3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 7;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfopie3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 7;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfopie3DlightingpackageOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 8;</code>
     */
    boolean hasTschchartinfodefaultbackgroundfill();
    /**
     * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 8;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartinfodefaultbackgroundfill();
    /**
     * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 8;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartinfodefaultbackgroundfillOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 9;</code>
     */
    boolean hasTschchartinfodefaultbackgroundstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 9;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartinfodefaultbackgroundstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 9;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartinfodefaultbackgroundstrokeOrBuilder();

    /**
     * <code>optional float tschchartinfodefaultborderopacity = 10;</code>
     */
    boolean hasTschchartinfodefaultborderopacity();
    /**
     * <code>optional float tschchartinfodefaultborderopacity = 10;</code>
     */
    float getTschchartinfodefaultborderopacity();

    /**
     * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 11;</code>
     */
    boolean hasTschchartinfodefaultbordershadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 11;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfodefaultbordershadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 11;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfodefaultbordershadowOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 12;</code>
     */
    boolean hasTschchartinfodefaultborderstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 12;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartinfodefaultborderstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 12;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartinfodefaultborderstrokeOrBuilder();

    /**
     * <code>optional bool tschchartinfodefaultcombinelayers = 13;</code>
     */
    boolean hasTschchartinfodefaultcombinelayers();
    /**
     * <code>optional bool tschchartinfodefaultcombinelayers = 13;</code>
     */
    boolean getTschchartinfodefaultcombinelayers();

    /**
     * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 14;</code>
     */
    boolean hasTschchartinfodefaultgridbackgroundfill();
    /**
     * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 14;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartinfodefaultgridbackgroundfill();
    /**
     * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 14;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartinfodefaultgridbackgroundfillOrBuilder();

    /**
     * <code>optional float tschchartinfodefaultgridbackgroundopacity = 15;</code>
     */
    boolean hasTschchartinfodefaultgridbackgroundopacity();
    /**
     * <code>optional float tschchartinfodefaultgridbackgroundopacity = 15;</code>
     */
    float getTschchartinfodefaultgridbackgroundopacity();

    /**
     * <code>optional float tschchartinfodefaultinterbargap = 16;</code>
     */
    boolean hasTschchartinfodefaultinterbargap();
    /**
     * <code>optional float tschchartinfodefaultinterbargap = 16;</code>
     */
    float getTschchartinfodefaultinterbargap();

    /**
     * <code>optional float tschchartinfodefaultintersetgap = 17;</code>
     */
    boolean hasTschchartinfodefaultintersetgap();
    /**
     * <code>optional float tschchartinfodefaultintersetgap = 17;</code>
     */
    float getTschchartinfodefaultintersetgap();

    /**
     * <code>optional bool tschchartinfodefaultshowborder = 18;</code>
     */
    boolean hasTschchartinfodefaultshowborder();
    /**
     * <code>optional bool tschchartinfodefaultshowborder = 18;</code>
     */
    boolean getTschchartinfodefaultshowborder();

    /**
     * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 19;</code>
     */
    boolean hasTschchartinfodefaulttitlecolor();
    /**
     * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 19;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.Color getTschchartinfodefaulttitlecolor();
    /**
     * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 19;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.ColorOrBuilder getTschchartinfodefaulttitlecolorOrBuilder();

    /**
     * <code>optional int32 tschchartinfodefaulttitleparagraphstyleindex = 20;</code>
     */
    boolean hasTschchartinfodefaulttitleparagraphstyleindex();
    /**
     * <code>optional int32 tschchartinfodefaulttitleparagraphstyleindex = 20;</code>
     */
    int getTschchartinfodefaulttitleparagraphstyleindex();

    /**
     * <code>optional int32 tschchartinfodefaultdatasetnameparagraphstyleindex = 21;</code>
     */
    boolean hasTschchartinfodefaultdatasetnameparagraphstyleindex();
    /**
     * <code>optional int32 tschchartinfodefaultdatasetnameparagraphstyleindex = 21;</code>
     */
    int getTschchartinfodefaultdatasetnameparagraphstyleindex();
  }
  /**
   * Protobuf type {@code TSCH.Generated.ChartStyleArchive}
   */
  public  static final class ChartStyleArchive extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TSCH.Generated.ChartStyleArchive)
      ChartStyleArchiveOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChartStyleArchive.newBuilder() to construct.
    private ChartStyleArchive(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChartStyleArchive() {
      tschchartinfodefault3Dchartopacity_ = 0F;
      tschchartinfodefaultborderopacity_ = 0F;
      tschchartinfodefaultcombinelayers_ = false;
      tschchartinfodefaultgridbackgroundopacity_ = 0F;
      tschchartinfodefaultinterbargap_ = 0F;
      tschchartinfodefaultintersetgap_ = 0F;
      tschchartinfodefaultshowborder_ = false;
      tschchartinfodefaulttitleparagraphstyleindex_ = 0;
      tschchartinfodefaultdatasetnameparagraphstyleindex_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChartStyleArchive(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              tschchartinfodefault3Dchartopacity_ = input.readFloat();
              break;
            }
            case 18: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = tschchartinfoarea3Dlightingpackage_.toBuilder();
              }
              tschchartinfoarea3Dlightingpackage_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfoarea3Dlightingpackage_);
                tschchartinfoarea3Dlightingpackage_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = tschchartinfobar3Dlightingpackage_.toBuilder();
              }
              tschchartinfobar3Dlightingpackage_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfobar3Dlightingpackage_);
                tschchartinfobar3Dlightingpackage_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = tschchartinfocolumn3Dlightingpackage_.toBuilder();
              }
              tschchartinfocolumn3Dlightingpackage_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfocolumn3Dlightingpackage_);
                tschchartinfocolumn3Dlightingpackage_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = tschchartinfodefault3Dlightingpackage_.toBuilder();
              }
              tschchartinfodefault3Dlightingpackage_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfodefault3Dlightingpackage_);
                tschchartinfodefault3Dlightingpackage_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = tschchartinfoline3Dlightingpackage_.toBuilder();
              }
              tschchartinfoline3Dlightingpackage_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfoline3Dlightingpackage_);
                tschchartinfoline3Dlightingpackage_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = tschchartinfopie3Dlightingpackage_.toBuilder();
              }
              tschchartinfopie3Dlightingpackage_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfopie3Dlightingpackage_);
                tschchartinfopie3Dlightingpackage_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 66: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = tschchartinfodefaultbackgroundfill_.toBuilder();
              }
              tschchartinfodefaultbackgroundfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfodefaultbackgroundfill_);
                tschchartinfodefaultbackgroundfill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 74: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = tschchartinfodefaultbackgroundstroke_.toBuilder();
              }
              tschchartinfodefaultbackgroundstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfodefaultbackgroundstroke_);
                tschchartinfodefaultbackgroundstroke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              tschchartinfodefaultborderopacity_ = input.readFloat();
              break;
            }
            case 90: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = tschchartinfodefaultbordershadow_.toBuilder();
              }
              tschchartinfodefaultbordershadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfodefaultbordershadow_);
                tschchartinfodefaultbordershadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 98: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = tschchartinfodefaultborderstroke_.toBuilder();
              }
              tschchartinfodefaultborderstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfodefaultborderstroke_);
                tschchartinfodefaultborderstroke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              tschchartinfodefaultcombinelayers_ = input.readBool();
              break;
            }
            case 114: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00002000) == 0x00002000)) {
                subBuilder = tschchartinfodefaultgridbackgroundfill_.toBuilder();
              }
              tschchartinfodefaultgridbackgroundfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfodefaultgridbackgroundfill_);
                tschchartinfodefaultgridbackgroundfill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00002000;
              break;
            }
            case 125: {
              bitField0_ |= 0x00004000;
              tschchartinfodefaultgridbackgroundopacity_ = input.readFloat();
              break;
            }
            case 133: {
              bitField0_ |= 0x00008000;
              tschchartinfodefaultinterbargap_ = input.readFloat();
              break;
            }
            case 141: {
              bitField0_ |= 0x00010000;
              tschchartinfodefaultintersetgap_ = input.readFloat();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              tschchartinfodefaultshowborder_ = input.readBool();
              break;
            }
            case 154: {
              org.techforumist.keynote.proto.TSP.TSPMessages.Color.Builder subBuilder = null;
              if (((bitField0_ & 0x00040000) == 0x00040000)) {
                subBuilder = tschchartinfodefaulttitlecolor_.toBuilder();
              }
              tschchartinfodefaulttitlecolor_ = input.readMessage(org.techforumist.keynote.proto.TSP.TSPMessages.Color.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfodefaulttitlecolor_);
                tschchartinfodefaulttitlecolor_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00040000;
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              tschchartinfodefaulttitleparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              tschchartinfodefaultdatasetnameparagraphstyleindex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartStyleArchive_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartStyleArchive_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive.class, org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive.Builder.class);
    }

    private int bitField0_;
    public static final int TSCHCHARTINFODEFAULT3DCHARTOPACITY_FIELD_NUMBER = 1;
    private float tschchartinfodefault3Dchartopacity_;
    /**
     * <code>optional float tschchartinfodefault3dchartopacity = 1;</code>
     */
    public boolean hasTschchartinfodefault3Dchartopacity() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional float tschchartinfodefault3dchartopacity = 1;</code>
     */
    public float getTschchartinfodefault3Dchartopacity() {
      return tschchartinfodefault3Dchartopacity_;
    }

    public static final int TSCHCHARTINFOAREA3DLIGHTINGPACKAGE_FIELD_NUMBER = 2;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfoarea3Dlightingpackage_;
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 2;</code>
     */
    public boolean hasTschchartinfoarea3Dlightingpackage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 2;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfoarea3Dlightingpackage() {
      return tschchartinfoarea3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfoarea3Dlightingpackage_;
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 2;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfoarea3DlightingpackageOrBuilder() {
      return tschchartinfoarea3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfoarea3Dlightingpackage_;
    }

    public static final int TSCHCHARTINFOBAR3DLIGHTINGPACKAGE_FIELD_NUMBER = 3;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfobar3Dlightingpackage_;
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 3;</code>
     */
    public boolean hasTschchartinfobar3Dlightingpackage() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 3;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfobar3Dlightingpackage() {
      return tschchartinfobar3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfobar3Dlightingpackage_;
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 3;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfobar3DlightingpackageOrBuilder() {
      return tschchartinfobar3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfobar3Dlightingpackage_;
    }

    public static final int TSCHCHARTINFOCOLUMN3DLIGHTINGPACKAGE_FIELD_NUMBER = 4;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfocolumn3Dlightingpackage_;
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 4;</code>
     */
    public boolean hasTschchartinfocolumn3Dlightingpackage() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 4;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfocolumn3Dlightingpackage() {
      return tschchartinfocolumn3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfocolumn3Dlightingpackage_;
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 4;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfocolumn3DlightingpackageOrBuilder() {
      return tschchartinfocolumn3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfocolumn3Dlightingpackage_;
    }

    public static final int TSCHCHARTINFODEFAULT3DLIGHTINGPACKAGE_FIELD_NUMBER = 5;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfodefault3Dlightingpackage_;
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 5;</code>
     */
    public boolean hasTschchartinfodefault3Dlightingpackage() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 5;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfodefault3Dlightingpackage() {
      return tschchartinfodefault3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfodefault3Dlightingpackage_;
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 5;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfodefault3DlightingpackageOrBuilder() {
      return tschchartinfodefault3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfodefault3Dlightingpackage_;
    }

    public static final int TSCHCHARTINFOLINE3DLIGHTINGPACKAGE_FIELD_NUMBER = 6;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfoline3Dlightingpackage_;
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 6;</code>
     */
    public boolean hasTschchartinfoline3Dlightingpackage() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 6;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfoline3Dlightingpackage() {
      return tschchartinfoline3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfoline3Dlightingpackage_;
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 6;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfoline3DlightingpackageOrBuilder() {
      return tschchartinfoline3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfoline3Dlightingpackage_;
    }

    public static final int TSCHCHARTINFOPIE3DLIGHTINGPACKAGE_FIELD_NUMBER = 7;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfopie3Dlightingpackage_;
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 7;</code>
     */
    public boolean hasTschchartinfopie3Dlightingpackage() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 7;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfopie3Dlightingpackage() {
      return tschchartinfopie3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfopie3Dlightingpackage_;
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 7;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfopie3DlightingpackageOrBuilder() {
      return tschchartinfopie3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfopie3Dlightingpackage_;
    }

    public static final int TSCHCHARTINFODEFAULTBACKGROUNDFILL_FIELD_NUMBER = 8;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartinfodefaultbackgroundfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 8;</code>
     */
    public boolean hasTschchartinfodefaultbackgroundfill() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 8;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartinfodefaultbackgroundfill() {
      return tschchartinfodefaultbackgroundfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartinfodefaultbackgroundfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 8;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartinfodefaultbackgroundfillOrBuilder() {
      return tschchartinfodefaultbackgroundfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartinfodefaultbackgroundfill_;
    }

    public static final int TSCHCHARTINFODEFAULTBACKGROUNDSTROKE_FIELD_NUMBER = 9;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartinfodefaultbackgroundstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 9;</code>
     */
    public boolean hasTschchartinfodefaultbackgroundstroke() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 9;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartinfodefaultbackgroundstroke() {
      return tschchartinfodefaultbackgroundstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartinfodefaultbackgroundstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 9;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartinfodefaultbackgroundstrokeOrBuilder() {
      return tschchartinfodefaultbackgroundstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartinfodefaultbackgroundstroke_;
    }

    public static final int TSCHCHARTINFODEFAULTBORDEROPACITY_FIELD_NUMBER = 10;
    private float tschchartinfodefaultborderopacity_;
    /**
     * <code>optional float tschchartinfodefaultborderopacity = 10;</code>
     */
    public boolean hasTschchartinfodefaultborderopacity() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional float tschchartinfodefaultborderopacity = 10;</code>
     */
    public float getTschchartinfodefaultborderopacity() {
      return tschchartinfodefaultborderopacity_;
    }

    public static final int TSCHCHARTINFODEFAULTBORDERSHADOW_FIELD_NUMBER = 11;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartinfodefaultbordershadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 11;</code>
     */
    public boolean hasTschchartinfodefaultbordershadow() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 11;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfodefaultbordershadow() {
      return tschchartinfodefaultbordershadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfodefaultbordershadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 11;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfodefaultbordershadowOrBuilder() {
      return tschchartinfodefaultbordershadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfodefaultbordershadow_;
    }

    public static final int TSCHCHARTINFODEFAULTBORDERSTROKE_FIELD_NUMBER = 12;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartinfodefaultborderstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 12;</code>
     */
    public boolean hasTschchartinfodefaultborderstroke() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 12;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartinfodefaultborderstroke() {
      return tschchartinfodefaultborderstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartinfodefaultborderstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 12;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartinfodefaultborderstrokeOrBuilder() {
      return tschchartinfodefaultborderstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartinfodefaultborderstroke_;
    }

    public static final int TSCHCHARTINFODEFAULTCOMBINELAYERS_FIELD_NUMBER = 13;
    private boolean tschchartinfodefaultcombinelayers_;
    /**
     * <code>optional bool tschchartinfodefaultcombinelayers = 13;</code>
     */
    public boolean hasTschchartinfodefaultcombinelayers() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional bool tschchartinfodefaultcombinelayers = 13;</code>
     */
    public boolean getTschchartinfodefaultcombinelayers() {
      return tschchartinfodefaultcombinelayers_;
    }

    public static final int TSCHCHARTINFODEFAULTGRIDBACKGROUNDFILL_FIELD_NUMBER = 14;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartinfodefaultgridbackgroundfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 14;</code>
     */
    public boolean hasTschchartinfodefaultgridbackgroundfill() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 14;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartinfodefaultgridbackgroundfill() {
      return tschchartinfodefaultgridbackgroundfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartinfodefaultgridbackgroundfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 14;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartinfodefaultgridbackgroundfillOrBuilder() {
      return tschchartinfodefaultgridbackgroundfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartinfodefaultgridbackgroundfill_;
    }

    public static final int TSCHCHARTINFODEFAULTGRIDBACKGROUNDOPACITY_FIELD_NUMBER = 15;
    private float tschchartinfodefaultgridbackgroundopacity_;
    /**
     * <code>optional float tschchartinfodefaultgridbackgroundopacity = 15;</code>
     */
    public boolean hasTschchartinfodefaultgridbackgroundopacity() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional float tschchartinfodefaultgridbackgroundopacity = 15;</code>
     */
    public float getTschchartinfodefaultgridbackgroundopacity() {
      return tschchartinfodefaultgridbackgroundopacity_;
    }

    public static final int TSCHCHARTINFODEFAULTINTERBARGAP_FIELD_NUMBER = 16;
    private float tschchartinfodefaultinterbargap_;
    /**
     * <code>optional float tschchartinfodefaultinterbargap = 16;</code>
     */
    public boolean hasTschchartinfodefaultinterbargap() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional float tschchartinfodefaultinterbargap = 16;</code>
     */
    public float getTschchartinfodefaultinterbargap() {
      return tschchartinfodefaultinterbargap_;
    }

    public static final int TSCHCHARTINFODEFAULTINTERSETGAP_FIELD_NUMBER = 17;
    private float tschchartinfodefaultintersetgap_;
    /**
     * <code>optional float tschchartinfodefaultintersetgap = 17;</code>
     */
    public boolean hasTschchartinfodefaultintersetgap() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional float tschchartinfodefaultintersetgap = 17;</code>
     */
    public float getTschchartinfodefaultintersetgap() {
      return tschchartinfodefaultintersetgap_;
    }

    public static final int TSCHCHARTINFODEFAULTSHOWBORDER_FIELD_NUMBER = 18;
    private boolean tschchartinfodefaultshowborder_;
    /**
     * <code>optional bool tschchartinfodefaultshowborder = 18;</code>
     */
    public boolean hasTschchartinfodefaultshowborder() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional bool tschchartinfodefaultshowborder = 18;</code>
     */
    public boolean getTschchartinfodefaultshowborder() {
      return tschchartinfodefaultshowborder_;
    }

    public static final int TSCHCHARTINFODEFAULTTITLECOLOR_FIELD_NUMBER = 19;
    private org.techforumist.keynote.proto.TSP.TSPMessages.Color tschchartinfodefaulttitlecolor_;
    /**
     * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 19;</code>
     */
    public boolean hasTschchartinfodefaulttitlecolor() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 19;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.Color getTschchartinfodefaulttitlecolor() {
      return tschchartinfodefaulttitlecolor_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Color.getDefaultInstance() : tschchartinfodefaulttitlecolor_;
    }
    /**
     * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 19;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.ColorOrBuilder getTschchartinfodefaulttitlecolorOrBuilder() {
      return tschchartinfodefaulttitlecolor_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Color.getDefaultInstance() : tschchartinfodefaulttitlecolor_;
    }

    public static final int TSCHCHARTINFODEFAULTTITLEPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 20;
    private int tschchartinfodefaulttitleparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartinfodefaulttitleparagraphstyleindex = 20;</code>
     */
    public boolean hasTschchartinfodefaulttitleparagraphstyleindex() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 tschchartinfodefaulttitleparagraphstyleindex = 20;</code>
     */
    public int getTschchartinfodefaulttitleparagraphstyleindex() {
      return tschchartinfodefaulttitleparagraphstyleindex_;
    }

    public static final int TSCHCHARTINFODEFAULTDATASETNAMEPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 21;
    private int tschchartinfodefaultdatasetnameparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartinfodefaultdatasetnameparagraphstyleindex = 21;</code>
     */
    public boolean hasTschchartinfodefaultdatasetnameparagraphstyleindex() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 tschchartinfodefaultdatasetnameparagraphstyleindex = 21;</code>
     */
    public int getTschchartinfodefaultdatasetnameparagraphstyleindex() {
      return tschchartinfodefaultdatasetnameparagraphstyleindex_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasTschchartinfoarea3Dlightingpackage()) {
        if (!getTschchartinfoarea3Dlightingpackage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfobar3Dlightingpackage()) {
        if (!getTschchartinfobar3Dlightingpackage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfocolumn3Dlightingpackage()) {
        if (!getTschchartinfocolumn3Dlightingpackage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfodefault3Dlightingpackage()) {
        if (!getTschchartinfodefault3Dlightingpackage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfoline3Dlightingpackage()) {
        if (!getTschchartinfoline3Dlightingpackage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfopie3Dlightingpackage()) {
        if (!getTschchartinfopie3Dlightingpackage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfodefaultbackgroundfill()) {
        if (!getTschchartinfodefaultbackgroundfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfodefaultbackgroundstroke()) {
        if (!getTschchartinfodefaultbackgroundstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfodefaultbordershadow()) {
        if (!getTschchartinfodefaultbordershadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfodefaultborderstroke()) {
        if (!getTschchartinfodefaultborderstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfodefaultgridbackgroundfill()) {
        if (!getTschchartinfodefaultgridbackgroundfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfodefaulttitlecolor()) {
        if (!getTschchartinfodefaulttitlecolor().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, tschchartinfodefault3Dchartopacity_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getTschchartinfoarea3Dlightingpackage());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getTschchartinfobar3Dlightingpackage());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getTschchartinfocolumn3Dlightingpackage());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, getTschchartinfodefault3Dlightingpackage());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, getTschchartinfoline3Dlightingpackage());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, getTschchartinfopie3Dlightingpackage());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, getTschchartinfodefaultbackgroundfill());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(9, getTschchartinfodefaultbackgroundstroke());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, tschchartinfodefaultborderopacity_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(11, getTschchartinfodefaultbordershadow());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(12, getTschchartinfodefaultborderstroke());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBool(13, tschchartinfodefaultcombinelayers_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(14, getTschchartinfodefaultgridbackgroundfill());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeFloat(15, tschchartinfodefaultgridbackgroundopacity_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeFloat(16, tschchartinfodefaultinterbargap_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeFloat(17, tschchartinfodefaultintersetgap_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeBool(18, tschchartinfodefaultshowborder_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeMessage(19, getTschchartinfodefaulttitlecolor());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(20, tschchartinfodefaulttitleparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(21, tschchartinfodefaultdatasetnameparagraphstyleindex_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, tschchartinfodefault3Dchartopacity_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTschchartinfoarea3Dlightingpackage());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTschchartinfobar3Dlightingpackage());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTschchartinfocolumn3Dlightingpackage());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getTschchartinfodefault3Dlightingpackage());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getTschchartinfoline3Dlightingpackage());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getTschchartinfopie3Dlightingpackage());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getTschchartinfodefaultbackgroundfill());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getTschchartinfodefaultbackgroundstroke());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, tschchartinfodefaultborderopacity_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getTschchartinfodefaultbordershadow());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getTschchartinfodefaultborderstroke());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, tschchartinfodefaultcombinelayers_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getTschchartinfodefaultgridbackgroundfill());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, tschchartinfodefaultgridbackgroundopacity_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(16, tschchartinfodefaultinterbargap_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(17, tschchartinfodefaultintersetgap_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, tschchartinfodefaultshowborder_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, getTschchartinfodefaulttitlecolor());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, tschchartinfodefaulttitleparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, tschchartinfodefaultdatasetnameparagraphstyleindex_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive)) {
        return super.equals(obj);
      }
      org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive other = (org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive) obj;

      boolean result = true;
      result = result && (hasTschchartinfodefault3Dchartopacity() == other.hasTschchartinfodefault3Dchartopacity());
      if (hasTschchartinfodefault3Dchartopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartinfodefault3Dchartopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartinfodefault3Dchartopacity()));
      }
      result = result && (hasTschchartinfoarea3Dlightingpackage() == other.hasTschchartinfoarea3Dlightingpackage());
      if (hasTschchartinfoarea3Dlightingpackage()) {
        result = result && getTschchartinfoarea3Dlightingpackage()
            .equals(other.getTschchartinfoarea3Dlightingpackage());
      }
      result = result && (hasTschchartinfobar3Dlightingpackage() == other.hasTschchartinfobar3Dlightingpackage());
      if (hasTschchartinfobar3Dlightingpackage()) {
        result = result && getTschchartinfobar3Dlightingpackage()
            .equals(other.getTschchartinfobar3Dlightingpackage());
      }
      result = result && (hasTschchartinfocolumn3Dlightingpackage() == other.hasTschchartinfocolumn3Dlightingpackage());
      if (hasTschchartinfocolumn3Dlightingpackage()) {
        result = result && getTschchartinfocolumn3Dlightingpackage()
            .equals(other.getTschchartinfocolumn3Dlightingpackage());
      }
      result = result && (hasTschchartinfodefault3Dlightingpackage() == other.hasTschchartinfodefault3Dlightingpackage());
      if (hasTschchartinfodefault3Dlightingpackage()) {
        result = result && getTschchartinfodefault3Dlightingpackage()
            .equals(other.getTschchartinfodefault3Dlightingpackage());
      }
      result = result && (hasTschchartinfoline3Dlightingpackage() == other.hasTschchartinfoline3Dlightingpackage());
      if (hasTschchartinfoline3Dlightingpackage()) {
        result = result && getTschchartinfoline3Dlightingpackage()
            .equals(other.getTschchartinfoline3Dlightingpackage());
      }
      result = result && (hasTschchartinfopie3Dlightingpackage() == other.hasTschchartinfopie3Dlightingpackage());
      if (hasTschchartinfopie3Dlightingpackage()) {
        result = result && getTschchartinfopie3Dlightingpackage()
            .equals(other.getTschchartinfopie3Dlightingpackage());
      }
      result = result && (hasTschchartinfodefaultbackgroundfill() == other.hasTschchartinfodefaultbackgroundfill());
      if (hasTschchartinfodefaultbackgroundfill()) {
        result = result && getTschchartinfodefaultbackgroundfill()
            .equals(other.getTschchartinfodefaultbackgroundfill());
      }
      result = result && (hasTschchartinfodefaultbackgroundstroke() == other.hasTschchartinfodefaultbackgroundstroke());
      if (hasTschchartinfodefaultbackgroundstroke()) {
        result = result && getTschchartinfodefaultbackgroundstroke()
            .equals(other.getTschchartinfodefaultbackgroundstroke());
      }
      result = result && (hasTschchartinfodefaultborderopacity() == other.hasTschchartinfodefaultborderopacity());
      if (hasTschchartinfodefaultborderopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartinfodefaultborderopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartinfodefaultborderopacity()));
      }
      result = result && (hasTschchartinfodefaultbordershadow() == other.hasTschchartinfodefaultbordershadow());
      if (hasTschchartinfodefaultbordershadow()) {
        result = result && getTschchartinfodefaultbordershadow()
            .equals(other.getTschchartinfodefaultbordershadow());
      }
      result = result && (hasTschchartinfodefaultborderstroke() == other.hasTschchartinfodefaultborderstroke());
      if (hasTschchartinfodefaultborderstroke()) {
        result = result && getTschchartinfodefaultborderstroke()
            .equals(other.getTschchartinfodefaultborderstroke());
      }
      result = result && (hasTschchartinfodefaultcombinelayers() == other.hasTschchartinfodefaultcombinelayers());
      if (hasTschchartinfodefaultcombinelayers()) {
        result = result && (getTschchartinfodefaultcombinelayers()
            == other.getTschchartinfodefaultcombinelayers());
      }
      result = result && (hasTschchartinfodefaultgridbackgroundfill() == other.hasTschchartinfodefaultgridbackgroundfill());
      if (hasTschchartinfodefaultgridbackgroundfill()) {
        result = result && getTschchartinfodefaultgridbackgroundfill()
            .equals(other.getTschchartinfodefaultgridbackgroundfill());
      }
      result = result && (hasTschchartinfodefaultgridbackgroundopacity() == other.hasTschchartinfodefaultgridbackgroundopacity());
      if (hasTschchartinfodefaultgridbackgroundopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartinfodefaultgridbackgroundopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartinfodefaultgridbackgroundopacity()));
      }
      result = result && (hasTschchartinfodefaultinterbargap() == other.hasTschchartinfodefaultinterbargap());
      if (hasTschchartinfodefaultinterbargap()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartinfodefaultinterbargap())
            == java.lang.Float.floatToIntBits(
                other.getTschchartinfodefaultinterbargap()));
      }
      result = result && (hasTschchartinfodefaultintersetgap() == other.hasTschchartinfodefaultintersetgap());
      if (hasTschchartinfodefaultintersetgap()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartinfodefaultintersetgap())
            == java.lang.Float.floatToIntBits(
                other.getTschchartinfodefaultintersetgap()));
      }
      result = result && (hasTschchartinfodefaultshowborder() == other.hasTschchartinfodefaultshowborder());
      if (hasTschchartinfodefaultshowborder()) {
        result = result && (getTschchartinfodefaultshowborder()
            == other.getTschchartinfodefaultshowborder());
      }
      result = result && (hasTschchartinfodefaulttitlecolor() == other.hasTschchartinfodefaulttitlecolor());
      if (hasTschchartinfodefaulttitlecolor()) {
        result = result && getTschchartinfodefaulttitlecolor()
            .equals(other.getTschchartinfodefaulttitlecolor());
      }
      result = result && (hasTschchartinfodefaulttitleparagraphstyleindex() == other.hasTschchartinfodefaulttitleparagraphstyleindex());
      if (hasTschchartinfodefaulttitleparagraphstyleindex()) {
        result = result && (getTschchartinfodefaulttitleparagraphstyleindex()
            == other.getTschchartinfodefaulttitleparagraphstyleindex());
      }
      result = result && (hasTschchartinfodefaultdatasetnameparagraphstyleindex() == other.hasTschchartinfodefaultdatasetnameparagraphstyleindex());
      if (hasTschchartinfodefaultdatasetnameparagraphstyleindex()) {
        result = result && (getTschchartinfodefaultdatasetnameparagraphstyleindex()
            == other.getTschchartinfodefaultdatasetnameparagraphstyleindex());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTschchartinfodefault3Dchartopacity()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULT3DCHARTOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartinfodefault3Dchartopacity());
      }
      if (hasTschchartinfoarea3Dlightingpackage()) {
        hash = (37 * hash) + TSCHCHARTINFOAREA3DLIGHTINGPACKAGE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfoarea3Dlightingpackage().hashCode();
      }
      if (hasTschchartinfobar3Dlightingpackage()) {
        hash = (37 * hash) + TSCHCHARTINFOBAR3DLIGHTINGPACKAGE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfobar3Dlightingpackage().hashCode();
      }
      if (hasTschchartinfocolumn3Dlightingpackage()) {
        hash = (37 * hash) + TSCHCHARTINFOCOLUMN3DLIGHTINGPACKAGE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfocolumn3Dlightingpackage().hashCode();
      }
      if (hasTschchartinfodefault3Dlightingpackage()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULT3DLIGHTINGPACKAGE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefault3Dlightingpackage().hashCode();
      }
      if (hasTschchartinfoline3Dlightingpackage()) {
        hash = (37 * hash) + TSCHCHARTINFOLINE3DLIGHTINGPACKAGE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfoline3Dlightingpackage().hashCode();
      }
      if (hasTschchartinfopie3Dlightingpackage()) {
        hash = (37 * hash) + TSCHCHARTINFOPIE3DLIGHTINGPACKAGE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfopie3Dlightingpackage().hashCode();
      }
      if (hasTschchartinfodefaultbackgroundfill()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTBACKGROUNDFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaultbackgroundfill().hashCode();
      }
      if (hasTschchartinfodefaultbackgroundstroke()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTBACKGROUNDSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaultbackgroundstroke().hashCode();
      }
      if (hasTschchartinfodefaultborderopacity()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTBORDEROPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartinfodefaultborderopacity());
      }
      if (hasTschchartinfodefaultbordershadow()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTBORDERSHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaultbordershadow().hashCode();
      }
      if (hasTschchartinfodefaultborderstroke()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTBORDERSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaultborderstroke().hashCode();
      }
      if (hasTschchartinfodefaultcombinelayers()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTCOMBINELAYERS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartinfodefaultcombinelayers());
      }
      if (hasTschchartinfodefaultgridbackgroundfill()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTGRIDBACKGROUNDFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaultgridbackgroundfill().hashCode();
      }
      if (hasTschchartinfodefaultgridbackgroundopacity()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTGRIDBACKGROUNDOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartinfodefaultgridbackgroundopacity());
      }
      if (hasTschchartinfodefaultinterbargap()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTINTERBARGAP_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartinfodefaultinterbargap());
      }
      if (hasTschchartinfodefaultintersetgap()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTINTERSETGAP_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartinfodefaultintersetgap());
      }
      if (hasTschchartinfodefaultshowborder()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTSHOWBORDER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartinfodefaultshowborder());
      }
      if (hasTschchartinfodefaulttitlecolor()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTTITLECOLOR_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaulttitlecolor().hashCode();
      }
      if (hasTschchartinfodefaulttitleparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTTITLEPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaulttitleparagraphstyleindex();
      }
      if (hasTschchartinfodefaultdatasetnameparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTDATASETNAMEPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaultdatasetnameparagraphstyleindex();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TSCH.Generated.ChartStyleArchive}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TSCH.Generated.ChartStyleArchive)
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchiveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartStyleArchive_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartStyleArchive_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive.class, org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive.Builder.class);
      }

      // Construct using TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTschchartinfoarea3DlightingpackageFieldBuilder();
          getTschchartinfobar3DlightingpackageFieldBuilder();
          getTschchartinfocolumn3DlightingpackageFieldBuilder();
          getTschchartinfodefault3DlightingpackageFieldBuilder();
          getTschchartinfoline3DlightingpackageFieldBuilder();
          getTschchartinfopie3DlightingpackageFieldBuilder();
          getTschchartinfodefaultbackgroundfillFieldBuilder();
          getTschchartinfodefaultbackgroundstrokeFieldBuilder();
          getTschchartinfodefaultbordershadowFieldBuilder();
          getTschchartinfodefaultborderstrokeFieldBuilder();
          getTschchartinfodefaultgridbackgroundfillFieldBuilder();
          getTschchartinfodefaulttitlecolorFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        tschchartinfodefault3Dchartopacity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (tschchartinfoarea3DlightingpackageBuilder_ == null) {
          tschchartinfoarea3Dlightingpackage_ = null;
        } else {
          tschchartinfoarea3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (tschchartinfobar3DlightingpackageBuilder_ == null) {
          tschchartinfobar3Dlightingpackage_ = null;
        } else {
          tschchartinfobar3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (tschchartinfocolumn3DlightingpackageBuilder_ == null) {
          tschchartinfocolumn3Dlightingpackage_ = null;
        } else {
          tschchartinfocolumn3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (tschchartinfodefault3DlightingpackageBuilder_ == null) {
          tschchartinfodefault3Dlightingpackage_ = null;
        } else {
          tschchartinfodefault3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (tschchartinfoline3DlightingpackageBuilder_ == null) {
          tschchartinfoline3Dlightingpackage_ = null;
        } else {
          tschchartinfoline3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (tschchartinfopie3DlightingpackageBuilder_ == null) {
          tschchartinfopie3Dlightingpackage_ = null;
        } else {
          tschchartinfopie3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (tschchartinfodefaultbackgroundfillBuilder_ == null) {
          tschchartinfodefaultbackgroundfill_ = null;
        } else {
          tschchartinfodefaultbackgroundfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (tschchartinfodefaultbackgroundstrokeBuilder_ == null) {
          tschchartinfodefaultbackgroundstroke_ = null;
        } else {
          tschchartinfodefaultbackgroundstrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        tschchartinfodefaultborderopacity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        if (tschchartinfodefaultbordershadowBuilder_ == null) {
          tschchartinfodefaultbordershadow_ = null;
        } else {
          tschchartinfodefaultbordershadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        if (tschchartinfodefaultborderstrokeBuilder_ == null) {
          tschchartinfodefaultborderstroke_ = null;
        } else {
          tschchartinfodefaultborderstrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        tschchartinfodefaultcombinelayers_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        if (tschchartinfodefaultgridbackgroundfillBuilder_ == null) {
          tschchartinfodefaultgridbackgroundfill_ = null;
        } else {
          tschchartinfodefaultgridbackgroundfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        tschchartinfodefaultgridbackgroundopacity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00004000);
        tschchartinfodefaultinterbargap_ = 0F;
        bitField0_ = (bitField0_ & ~0x00008000);
        tschchartinfodefaultintersetgap_ = 0F;
        bitField0_ = (bitField0_ & ~0x00010000);
        tschchartinfodefaultshowborder_ = false;
        bitField0_ = (bitField0_ & ~0x00020000);
        if (tschchartinfodefaulttitlecolorBuilder_ == null) {
          tschchartinfodefaulttitlecolor_ = null;
        } else {
          tschchartinfodefaulttitlecolorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        tschchartinfodefaulttitleparagraphstyleindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        tschchartinfodefaultdatasetnameparagraphstyleindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartStyleArchive_descriptor;
      }

      public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive getDefaultInstanceForType() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive.getDefaultInstance();
      }

      public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive build() {
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive buildPartial() {
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive result = new org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tschchartinfodefault3Dchartopacity_ = tschchartinfodefault3Dchartopacity_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (tschchartinfoarea3DlightingpackageBuilder_ == null) {
          result.tschchartinfoarea3Dlightingpackage_ = tschchartinfoarea3Dlightingpackage_;
        } else {
          result.tschchartinfoarea3Dlightingpackage_ = tschchartinfoarea3DlightingpackageBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (tschchartinfobar3DlightingpackageBuilder_ == null) {
          result.tschchartinfobar3Dlightingpackage_ = tschchartinfobar3Dlightingpackage_;
        } else {
          result.tschchartinfobar3Dlightingpackage_ = tschchartinfobar3DlightingpackageBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (tschchartinfocolumn3DlightingpackageBuilder_ == null) {
          result.tschchartinfocolumn3Dlightingpackage_ = tschchartinfocolumn3Dlightingpackage_;
        } else {
          result.tschchartinfocolumn3Dlightingpackage_ = tschchartinfocolumn3DlightingpackageBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (tschchartinfodefault3DlightingpackageBuilder_ == null) {
          result.tschchartinfodefault3Dlightingpackage_ = tschchartinfodefault3Dlightingpackage_;
        } else {
          result.tschchartinfodefault3Dlightingpackage_ = tschchartinfodefault3DlightingpackageBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (tschchartinfoline3DlightingpackageBuilder_ == null) {
          result.tschchartinfoline3Dlightingpackage_ = tschchartinfoline3Dlightingpackage_;
        } else {
          result.tschchartinfoline3Dlightingpackage_ = tschchartinfoline3DlightingpackageBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (tschchartinfopie3DlightingpackageBuilder_ == null) {
          result.tschchartinfopie3Dlightingpackage_ = tschchartinfopie3Dlightingpackage_;
        } else {
          result.tschchartinfopie3Dlightingpackage_ = tschchartinfopie3DlightingpackageBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (tschchartinfodefaultbackgroundfillBuilder_ == null) {
          result.tschchartinfodefaultbackgroundfill_ = tschchartinfodefaultbackgroundfill_;
        } else {
          result.tschchartinfodefaultbackgroundfill_ = tschchartinfodefaultbackgroundfillBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (tschchartinfodefaultbackgroundstrokeBuilder_ == null) {
          result.tschchartinfodefaultbackgroundstroke_ = tschchartinfodefaultbackgroundstroke_;
        } else {
          result.tschchartinfodefaultbackgroundstroke_ = tschchartinfodefaultbackgroundstrokeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.tschchartinfodefaultborderopacity_ = tschchartinfodefaultborderopacity_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (tschchartinfodefaultbordershadowBuilder_ == null) {
          result.tschchartinfodefaultbordershadow_ = tschchartinfodefaultbordershadow_;
        } else {
          result.tschchartinfodefaultbordershadow_ = tschchartinfodefaultbordershadowBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        if (tschchartinfodefaultborderstrokeBuilder_ == null) {
          result.tschchartinfodefaultborderstroke_ = tschchartinfodefaultborderstroke_;
        } else {
          result.tschchartinfodefaultborderstroke_ = tschchartinfodefaultborderstrokeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.tschchartinfodefaultcombinelayers_ = tschchartinfodefaultcombinelayers_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        if (tschchartinfodefaultgridbackgroundfillBuilder_ == null) {
          result.tschchartinfodefaultgridbackgroundfill_ = tschchartinfodefaultgridbackgroundfill_;
        } else {
          result.tschchartinfodefaultgridbackgroundfill_ = tschchartinfodefaultgridbackgroundfillBuilder_.build();
        }
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.tschchartinfodefaultgridbackgroundopacity_ = tschchartinfodefaultgridbackgroundopacity_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.tschchartinfodefaultinterbargap_ = tschchartinfodefaultinterbargap_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.tschchartinfodefaultintersetgap_ = tschchartinfodefaultintersetgap_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.tschchartinfodefaultshowborder_ = tschchartinfodefaultshowborder_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        if (tschchartinfodefaulttitlecolorBuilder_ == null) {
          result.tschchartinfodefaulttitlecolor_ = tschchartinfodefaulttitlecolor_;
        } else {
          result.tschchartinfodefaulttitlecolor_ = tschchartinfodefaulttitlecolorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.tschchartinfodefaulttitleparagraphstyleindex_ = tschchartinfodefaulttitleparagraphstyleindex_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.tschchartinfodefaultdatasetnameparagraphstyleindex_ = tschchartinfodefaultdatasetnameparagraphstyleindex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive) {
          return mergeFrom((org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive other) {
        if (other == org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive.getDefaultInstance()) return this;
        if (other.hasTschchartinfodefault3Dchartopacity()) {
          setTschchartinfodefault3Dchartopacity(other.getTschchartinfodefault3Dchartopacity());
        }
        if (other.hasTschchartinfoarea3Dlightingpackage()) {
          mergeTschchartinfoarea3Dlightingpackage(other.getTschchartinfoarea3Dlightingpackage());
        }
        if (other.hasTschchartinfobar3Dlightingpackage()) {
          mergeTschchartinfobar3Dlightingpackage(other.getTschchartinfobar3Dlightingpackage());
        }
        if (other.hasTschchartinfocolumn3Dlightingpackage()) {
          mergeTschchartinfocolumn3Dlightingpackage(other.getTschchartinfocolumn3Dlightingpackage());
        }
        if (other.hasTschchartinfodefault3Dlightingpackage()) {
          mergeTschchartinfodefault3Dlightingpackage(other.getTschchartinfodefault3Dlightingpackage());
        }
        if (other.hasTschchartinfoline3Dlightingpackage()) {
          mergeTschchartinfoline3Dlightingpackage(other.getTschchartinfoline3Dlightingpackage());
        }
        if (other.hasTschchartinfopie3Dlightingpackage()) {
          mergeTschchartinfopie3Dlightingpackage(other.getTschchartinfopie3Dlightingpackage());
        }
        if (other.hasTschchartinfodefaultbackgroundfill()) {
          mergeTschchartinfodefaultbackgroundfill(other.getTschchartinfodefaultbackgroundfill());
        }
        if (other.hasTschchartinfodefaultbackgroundstroke()) {
          mergeTschchartinfodefaultbackgroundstroke(other.getTschchartinfodefaultbackgroundstroke());
        }
        if (other.hasTschchartinfodefaultborderopacity()) {
          setTschchartinfodefaultborderopacity(other.getTschchartinfodefaultborderopacity());
        }
        if (other.hasTschchartinfodefaultbordershadow()) {
          mergeTschchartinfodefaultbordershadow(other.getTschchartinfodefaultbordershadow());
        }
        if (other.hasTschchartinfodefaultborderstroke()) {
          mergeTschchartinfodefaultborderstroke(other.getTschchartinfodefaultborderstroke());
        }
        if (other.hasTschchartinfodefaultcombinelayers()) {
          setTschchartinfodefaultcombinelayers(other.getTschchartinfodefaultcombinelayers());
        }
        if (other.hasTschchartinfodefaultgridbackgroundfill()) {
          mergeTschchartinfodefaultgridbackgroundfill(other.getTschchartinfodefaultgridbackgroundfill());
        }
        if (other.hasTschchartinfodefaultgridbackgroundopacity()) {
          setTschchartinfodefaultgridbackgroundopacity(other.getTschchartinfodefaultgridbackgroundopacity());
        }
        if (other.hasTschchartinfodefaultinterbargap()) {
          setTschchartinfodefaultinterbargap(other.getTschchartinfodefaultinterbargap());
        }
        if (other.hasTschchartinfodefaultintersetgap()) {
          setTschchartinfodefaultintersetgap(other.getTschchartinfodefaultintersetgap());
        }
        if (other.hasTschchartinfodefaultshowborder()) {
          setTschchartinfodefaultshowborder(other.getTschchartinfodefaultshowborder());
        }
        if (other.hasTschchartinfodefaulttitlecolor()) {
          mergeTschchartinfodefaulttitlecolor(other.getTschchartinfodefaulttitlecolor());
        }
        if (other.hasTschchartinfodefaulttitleparagraphstyleindex()) {
          setTschchartinfodefaulttitleparagraphstyleindex(other.getTschchartinfodefaulttitleparagraphstyleindex());
        }
        if (other.hasTschchartinfodefaultdatasetnameparagraphstyleindex()) {
          setTschchartinfodefaultdatasetnameparagraphstyleindex(other.getTschchartinfodefaultdatasetnameparagraphstyleindex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (hasTschchartinfoarea3Dlightingpackage()) {
          if (!getTschchartinfoarea3Dlightingpackage().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfobar3Dlightingpackage()) {
          if (!getTschchartinfobar3Dlightingpackage().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfocolumn3Dlightingpackage()) {
          if (!getTschchartinfocolumn3Dlightingpackage().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfodefault3Dlightingpackage()) {
          if (!getTschchartinfodefault3Dlightingpackage().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfoline3Dlightingpackage()) {
          if (!getTschchartinfoline3Dlightingpackage().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfopie3Dlightingpackage()) {
          if (!getTschchartinfopie3Dlightingpackage().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfodefaultbackgroundfill()) {
          if (!getTschchartinfodefaultbackgroundfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfodefaultbackgroundstroke()) {
          if (!getTschchartinfodefaultbackgroundstroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfodefaultbordershadow()) {
          if (!getTschchartinfodefaultbordershadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfodefaultborderstroke()) {
          if (!getTschchartinfodefaultborderstroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfodefaultgridbackgroundfill()) {
          if (!getTschchartinfodefaultgridbackgroundfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfodefaulttitlecolor()) {
          if (!getTschchartinfodefaulttitlecolor().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float tschchartinfodefault3Dchartopacity_ ;
      /**
       * <code>optional float tschchartinfodefault3dchartopacity = 1;</code>
       */
      public boolean hasTschchartinfodefault3Dchartopacity() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional float tschchartinfodefault3dchartopacity = 1;</code>
       */
      public float getTschchartinfodefault3Dchartopacity() {
        return tschchartinfodefault3Dchartopacity_;
      }
      /**
       * <code>optional float tschchartinfodefault3dchartopacity = 1;</code>
       */
      public Builder setTschchartinfodefault3Dchartopacity(float value) {
        bitField0_ |= 0x00000001;
        tschchartinfodefault3Dchartopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartinfodefault3dchartopacity = 1;</code>
       */
      public Builder clearTschchartinfodefault3Dchartopacity() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tschchartinfodefault3Dchartopacity_ = 0F;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfoarea3Dlightingpackage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> tschchartinfoarea3DlightingpackageBuilder_;
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 2;</code>
       */
      public boolean hasTschchartinfoarea3Dlightingpackage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 2;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfoarea3Dlightingpackage() {
        if (tschchartinfoarea3DlightingpackageBuilder_ == null) {
          return tschchartinfoarea3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfoarea3Dlightingpackage_;
        } else {
          return tschchartinfoarea3DlightingpackageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 2;</code>
       */
      public Builder setTschchartinfoarea3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfoarea3DlightingpackageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfoarea3Dlightingpackage_ = value;
          onChanged();
        } else {
          tschchartinfoarea3DlightingpackageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 2;</code>
       */
      public Builder setTschchartinfoarea3Dlightingpackage(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder builderForValue) {
        if (tschchartinfoarea3DlightingpackageBuilder_ == null) {
          tschchartinfoarea3Dlightingpackage_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfoarea3DlightingpackageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 2;</code>
       */
      public Builder mergeTschchartinfoarea3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfoarea3DlightingpackageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              tschchartinfoarea3Dlightingpackage_ != null &&
              tschchartinfoarea3Dlightingpackage_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance()) {
            tschchartinfoarea3Dlightingpackage_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.newBuilder(tschchartinfoarea3Dlightingpackage_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfoarea3Dlightingpackage_ = value;
          }
          onChanged();
        } else {
          tschchartinfoarea3DlightingpackageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 2;</code>
       */
      public Builder clearTschchartinfoarea3Dlightingpackage() {
        if (tschchartinfoarea3DlightingpackageBuilder_ == null) {
          tschchartinfoarea3Dlightingpackage_ = null;
          onChanged();
        } else {
          tschchartinfoarea3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 2;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder getTschchartinfoarea3DlightingpackageBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTschchartinfoarea3DlightingpackageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 2;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfoarea3DlightingpackageOrBuilder() {
        if (tschchartinfoarea3DlightingpackageBuilder_ != null) {
          return tschchartinfoarea3DlightingpackageBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfoarea3Dlightingpackage_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfoarea3Dlightingpackage_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> 
          getTschchartinfoarea3DlightingpackageFieldBuilder() {
        if (tschchartinfoarea3DlightingpackageBuilder_ == null) {
          tschchartinfoarea3DlightingpackageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder>(
                  getTschchartinfoarea3Dlightingpackage(),
                  getParentForChildren(),
                  isClean());
          tschchartinfoarea3Dlightingpackage_ = null;
        }
        return tschchartinfoarea3DlightingpackageBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfobar3Dlightingpackage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> tschchartinfobar3DlightingpackageBuilder_;
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 3;</code>
       */
      public boolean hasTschchartinfobar3Dlightingpackage() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 3;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfobar3Dlightingpackage() {
        if (tschchartinfobar3DlightingpackageBuilder_ == null) {
          return tschchartinfobar3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfobar3Dlightingpackage_;
        } else {
          return tschchartinfobar3DlightingpackageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 3;</code>
       */
      public Builder setTschchartinfobar3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfobar3DlightingpackageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfobar3Dlightingpackage_ = value;
          onChanged();
        } else {
          tschchartinfobar3DlightingpackageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 3;</code>
       */
      public Builder setTschchartinfobar3Dlightingpackage(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder builderForValue) {
        if (tschchartinfobar3DlightingpackageBuilder_ == null) {
          tschchartinfobar3Dlightingpackage_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfobar3DlightingpackageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 3;</code>
       */
      public Builder mergeTschchartinfobar3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfobar3DlightingpackageBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              tschchartinfobar3Dlightingpackage_ != null &&
              tschchartinfobar3Dlightingpackage_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance()) {
            tschchartinfobar3Dlightingpackage_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.newBuilder(tschchartinfobar3Dlightingpackage_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfobar3Dlightingpackage_ = value;
          }
          onChanged();
        } else {
          tschchartinfobar3DlightingpackageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 3;</code>
       */
      public Builder clearTschchartinfobar3Dlightingpackage() {
        if (tschchartinfobar3DlightingpackageBuilder_ == null) {
          tschchartinfobar3Dlightingpackage_ = null;
          onChanged();
        } else {
          tschchartinfobar3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 3;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder getTschchartinfobar3DlightingpackageBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getTschchartinfobar3DlightingpackageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 3;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfobar3DlightingpackageOrBuilder() {
        if (tschchartinfobar3DlightingpackageBuilder_ != null) {
          return tschchartinfobar3DlightingpackageBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfobar3Dlightingpackage_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfobar3Dlightingpackage_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> 
          getTschchartinfobar3DlightingpackageFieldBuilder() {
        if (tschchartinfobar3DlightingpackageBuilder_ == null) {
          tschchartinfobar3DlightingpackageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder>(
                  getTschchartinfobar3Dlightingpackage(),
                  getParentForChildren(),
                  isClean());
          tschchartinfobar3Dlightingpackage_ = null;
        }
        return tschchartinfobar3DlightingpackageBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfocolumn3Dlightingpackage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> tschchartinfocolumn3DlightingpackageBuilder_;
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 4;</code>
       */
      public boolean hasTschchartinfocolumn3Dlightingpackage() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 4;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfocolumn3Dlightingpackage() {
        if (tschchartinfocolumn3DlightingpackageBuilder_ == null) {
          return tschchartinfocolumn3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfocolumn3Dlightingpackage_;
        } else {
          return tschchartinfocolumn3DlightingpackageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 4;</code>
       */
      public Builder setTschchartinfocolumn3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfocolumn3DlightingpackageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfocolumn3Dlightingpackage_ = value;
          onChanged();
        } else {
          tschchartinfocolumn3DlightingpackageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 4;</code>
       */
      public Builder setTschchartinfocolumn3Dlightingpackage(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder builderForValue) {
        if (tschchartinfocolumn3DlightingpackageBuilder_ == null) {
          tschchartinfocolumn3Dlightingpackage_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfocolumn3DlightingpackageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 4;</code>
       */
      public Builder mergeTschchartinfocolumn3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfocolumn3DlightingpackageBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              tschchartinfocolumn3Dlightingpackage_ != null &&
              tschchartinfocolumn3Dlightingpackage_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance()) {
            tschchartinfocolumn3Dlightingpackage_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.newBuilder(tschchartinfocolumn3Dlightingpackage_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfocolumn3Dlightingpackage_ = value;
          }
          onChanged();
        } else {
          tschchartinfocolumn3DlightingpackageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 4;</code>
       */
      public Builder clearTschchartinfocolumn3Dlightingpackage() {
        if (tschchartinfocolumn3DlightingpackageBuilder_ == null) {
          tschchartinfocolumn3Dlightingpackage_ = null;
          onChanged();
        } else {
          tschchartinfocolumn3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 4;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder getTschchartinfocolumn3DlightingpackageBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getTschchartinfocolumn3DlightingpackageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 4;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfocolumn3DlightingpackageOrBuilder() {
        if (tschchartinfocolumn3DlightingpackageBuilder_ != null) {
          return tschchartinfocolumn3DlightingpackageBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfocolumn3Dlightingpackage_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfocolumn3Dlightingpackage_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> 
          getTschchartinfocolumn3DlightingpackageFieldBuilder() {
        if (tschchartinfocolumn3DlightingpackageBuilder_ == null) {
          tschchartinfocolumn3DlightingpackageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder>(
                  getTschchartinfocolumn3Dlightingpackage(),
                  getParentForChildren(),
                  isClean());
          tschchartinfocolumn3Dlightingpackage_ = null;
        }
        return tschchartinfocolumn3DlightingpackageBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfodefault3Dlightingpackage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> tschchartinfodefault3DlightingpackageBuilder_;
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 5;</code>
       */
      public boolean hasTschchartinfodefault3Dlightingpackage() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 5;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfodefault3Dlightingpackage() {
        if (tschchartinfodefault3DlightingpackageBuilder_ == null) {
          return tschchartinfodefault3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfodefault3Dlightingpackage_;
        } else {
          return tschchartinfodefault3DlightingpackageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 5;</code>
       */
      public Builder setTschchartinfodefault3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfodefault3DlightingpackageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfodefault3Dlightingpackage_ = value;
          onChanged();
        } else {
          tschchartinfodefault3DlightingpackageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 5;</code>
       */
      public Builder setTschchartinfodefault3Dlightingpackage(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder builderForValue) {
        if (tschchartinfodefault3DlightingpackageBuilder_ == null) {
          tschchartinfodefault3Dlightingpackage_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfodefault3DlightingpackageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 5;</code>
       */
      public Builder mergeTschchartinfodefault3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfodefault3DlightingpackageBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              tschchartinfodefault3Dlightingpackage_ != null &&
              tschchartinfodefault3Dlightingpackage_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance()) {
            tschchartinfodefault3Dlightingpackage_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.newBuilder(tschchartinfodefault3Dlightingpackage_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfodefault3Dlightingpackage_ = value;
          }
          onChanged();
        } else {
          tschchartinfodefault3DlightingpackageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 5;</code>
       */
      public Builder clearTschchartinfodefault3Dlightingpackage() {
        if (tschchartinfodefault3DlightingpackageBuilder_ == null) {
          tschchartinfodefault3Dlightingpackage_ = null;
          onChanged();
        } else {
          tschchartinfodefault3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 5;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder getTschchartinfodefault3DlightingpackageBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getTschchartinfodefault3DlightingpackageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 5;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfodefault3DlightingpackageOrBuilder() {
        if (tschchartinfodefault3DlightingpackageBuilder_ != null) {
          return tschchartinfodefault3DlightingpackageBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfodefault3Dlightingpackage_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfodefault3Dlightingpackage_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> 
          getTschchartinfodefault3DlightingpackageFieldBuilder() {
        if (tschchartinfodefault3DlightingpackageBuilder_ == null) {
          tschchartinfodefault3DlightingpackageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder>(
                  getTschchartinfodefault3Dlightingpackage(),
                  getParentForChildren(),
                  isClean());
          tschchartinfodefault3Dlightingpackage_ = null;
        }
        return tschchartinfodefault3DlightingpackageBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfoline3Dlightingpackage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> tschchartinfoline3DlightingpackageBuilder_;
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 6;</code>
       */
      public boolean hasTschchartinfoline3Dlightingpackage() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 6;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfoline3Dlightingpackage() {
        if (tschchartinfoline3DlightingpackageBuilder_ == null) {
          return tschchartinfoline3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfoline3Dlightingpackage_;
        } else {
          return tschchartinfoline3DlightingpackageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 6;</code>
       */
      public Builder setTschchartinfoline3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfoline3DlightingpackageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfoline3Dlightingpackage_ = value;
          onChanged();
        } else {
          tschchartinfoline3DlightingpackageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 6;</code>
       */
      public Builder setTschchartinfoline3Dlightingpackage(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder builderForValue) {
        if (tschchartinfoline3DlightingpackageBuilder_ == null) {
          tschchartinfoline3Dlightingpackage_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfoline3DlightingpackageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 6;</code>
       */
      public Builder mergeTschchartinfoline3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfoline3DlightingpackageBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              tschchartinfoline3Dlightingpackage_ != null &&
              tschchartinfoline3Dlightingpackage_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance()) {
            tschchartinfoline3Dlightingpackage_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.newBuilder(tschchartinfoline3Dlightingpackage_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfoline3Dlightingpackage_ = value;
          }
          onChanged();
        } else {
          tschchartinfoline3DlightingpackageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 6;</code>
       */
      public Builder clearTschchartinfoline3Dlightingpackage() {
        if (tschchartinfoline3DlightingpackageBuilder_ == null) {
          tschchartinfoline3Dlightingpackage_ = null;
          onChanged();
        } else {
          tschchartinfoline3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 6;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder getTschchartinfoline3DlightingpackageBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getTschchartinfoline3DlightingpackageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 6;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfoline3DlightingpackageOrBuilder() {
        if (tschchartinfoline3DlightingpackageBuilder_ != null) {
          return tschchartinfoline3DlightingpackageBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfoline3Dlightingpackage_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfoline3Dlightingpackage_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> 
          getTschchartinfoline3DlightingpackageFieldBuilder() {
        if (tschchartinfoline3DlightingpackageBuilder_ == null) {
          tschchartinfoline3DlightingpackageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder>(
                  getTschchartinfoline3Dlightingpackage(),
                  getParentForChildren(),
                  isClean());
          tschchartinfoline3Dlightingpackage_ = null;
        }
        return tschchartinfoline3DlightingpackageBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfopie3Dlightingpackage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> tschchartinfopie3DlightingpackageBuilder_;
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 7;</code>
       */
      public boolean hasTschchartinfopie3Dlightingpackage() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 7;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfopie3Dlightingpackage() {
        if (tschchartinfopie3DlightingpackageBuilder_ == null) {
          return tschchartinfopie3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfopie3Dlightingpackage_;
        } else {
          return tschchartinfopie3DlightingpackageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 7;</code>
       */
      public Builder setTschchartinfopie3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfopie3DlightingpackageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfopie3Dlightingpackage_ = value;
          onChanged();
        } else {
          tschchartinfopie3DlightingpackageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 7;</code>
       */
      public Builder setTschchartinfopie3Dlightingpackage(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder builderForValue) {
        if (tschchartinfopie3DlightingpackageBuilder_ == null) {
          tschchartinfopie3Dlightingpackage_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfopie3DlightingpackageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 7;</code>
       */
      public Builder mergeTschchartinfopie3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfopie3DlightingpackageBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              tschchartinfopie3Dlightingpackage_ != null &&
              tschchartinfopie3Dlightingpackage_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance()) {
            tschchartinfopie3Dlightingpackage_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.newBuilder(tschchartinfopie3Dlightingpackage_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfopie3Dlightingpackage_ = value;
          }
          onChanged();
        } else {
          tschchartinfopie3DlightingpackageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 7;</code>
       */
      public Builder clearTschchartinfopie3Dlightingpackage() {
        if (tschchartinfopie3DlightingpackageBuilder_ == null) {
          tschchartinfopie3Dlightingpackage_ = null;
          onChanged();
        } else {
          tschchartinfopie3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 7;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder getTschchartinfopie3DlightingpackageBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getTschchartinfopie3DlightingpackageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 7;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfopie3DlightingpackageOrBuilder() {
        if (tschchartinfopie3DlightingpackageBuilder_ != null) {
          return tschchartinfopie3DlightingpackageBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfopie3Dlightingpackage_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfopie3Dlightingpackage_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> 
          getTschchartinfopie3DlightingpackageFieldBuilder() {
        if (tschchartinfopie3DlightingpackageBuilder_ == null) {
          tschchartinfopie3DlightingpackageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder>(
                  getTschchartinfopie3Dlightingpackage(),
                  getParentForChildren(),
                  isClean());
          tschchartinfopie3Dlightingpackage_ = null;
        }
        return tschchartinfopie3DlightingpackageBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartinfodefaultbackgroundfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartinfodefaultbackgroundfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 8;</code>
       */
      public boolean hasTschchartinfodefaultbackgroundfill() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 8;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartinfodefaultbackgroundfill() {
        if (tschchartinfodefaultbackgroundfillBuilder_ == null) {
          return tschchartinfodefaultbackgroundfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartinfodefaultbackgroundfill_;
        } else {
          return tschchartinfodefaultbackgroundfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 8;</code>
       */
      public Builder setTschchartinfodefaultbackgroundfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartinfodefaultbackgroundfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfodefaultbackgroundfill_ = value;
          onChanged();
        } else {
          tschchartinfodefaultbackgroundfillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 8;</code>
       */
      public Builder setTschchartinfodefaultbackgroundfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartinfodefaultbackgroundfillBuilder_ == null) {
          tschchartinfodefaultbackgroundfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfodefaultbackgroundfillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 8;</code>
       */
      public Builder mergeTschchartinfodefaultbackgroundfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartinfodefaultbackgroundfillBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              tschchartinfodefaultbackgroundfill_ != null &&
              tschchartinfodefaultbackgroundfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartinfodefaultbackgroundfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartinfodefaultbackgroundfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfodefaultbackgroundfill_ = value;
          }
          onChanged();
        } else {
          tschchartinfodefaultbackgroundfillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 8;</code>
       */
      public Builder clearTschchartinfodefaultbackgroundfill() {
        if (tschchartinfodefaultbackgroundfillBuilder_ == null) {
          tschchartinfodefaultbackgroundfill_ = null;
          onChanged();
        } else {
          tschchartinfodefaultbackgroundfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 8;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartinfodefaultbackgroundfillBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getTschchartinfodefaultbackgroundfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 8;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartinfodefaultbackgroundfillOrBuilder() {
        if (tschchartinfodefaultbackgroundfillBuilder_ != null) {
          return tschchartinfodefaultbackgroundfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfodefaultbackgroundfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartinfodefaultbackgroundfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartinfodefaultbackgroundfillFieldBuilder() {
        if (tschchartinfodefaultbackgroundfillBuilder_ == null) {
          tschchartinfodefaultbackgroundfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartinfodefaultbackgroundfill(),
                  getParentForChildren(),
                  isClean());
          tschchartinfodefaultbackgroundfill_ = null;
        }
        return tschchartinfodefaultbackgroundfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartinfodefaultbackgroundstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartinfodefaultbackgroundstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 9;</code>
       */
      public boolean hasTschchartinfodefaultbackgroundstroke() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 9;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartinfodefaultbackgroundstroke() {
        if (tschchartinfodefaultbackgroundstrokeBuilder_ == null) {
          return tschchartinfodefaultbackgroundstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartinfodefaultbackgroundstroke_;
        } else {
          return tschchartinfodefaultbackgroundstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 9;</code>
       */
      public Builder setTschchartinfodefaultbackgroundstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartinfodefaultbackgroundstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfodefaultbackgroundstroke_ = value;
          onChanged();
        } else {
          tschchartinfodefaultbackgroundstrokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 9;</code>
       */
      public Builder setTschchartinfodefaultbackgroundstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartinfodefaultbackgroundstrokeBuilder_ == null) {
          tschchartinfodefaultbackgroundstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfodefaultbackgroundstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 9;</code>
       */
      public Builder mergeTschchartinfodefaultbackgroundstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartinfodefaultbackgroundstrokeBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              tschchartinfodefaultbackgroundstroke_ != null &&
              tschchartinfodefaultbackgroundstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartinfodefaultbackgroundstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartinfodefaultbackgroundstroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfodefaultbackgroundstroke_ = value;
          }
          onChanged();
        } else {
          tschchartinfodefaultbackgroundstrokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 9;</code>
       */
      public Builder clearTschchartinfodefaultbackgroundstroke() {
        if (tschchartinfodefaultbackgroundstrokeBuilder_ == null) {
          tschchartinfodefaultbackgroundstroke_ = null;
          onChanged();
        } else {
          tschchartinfodefaultbackgroundstrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 9;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartinfodefaultbackgroundstrokeBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getTschchartinfodefaultbackgroundstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 9;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartinfodefaultbackgroundstrokeOrBuilder() {
        if (tschchartinfodefaultbackgroundstrokeBuilder_ != null) {
          return tschchartinfodefaultbackgroundstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfodefaultbackgroundstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartinfodefaultbackgroundstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartinfodefaultbackgroundstrokeFieldBuilder() {
        if (tschchartinfodefaultbackgroundstrokeBuilder_ == null) {
          tschchartinfodefaultbackgroundstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartinfodefaultbackgroundstroke(),
                  getParentForChildren(),
                  isClean());
          tschchartinfodefaultbackgroundstroke_ = null;
        }
        return tschchartinfodefaultbackgroundstrokeBuilder_;
      }

      private float tschchartinfodefaultborderopacity_ ;
      /**
       * <code>optional float tschchartinfodefaultborderopacity = 10;</code>
       */
      public boolean hasTschchartinfodefaultborderopacity() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float tschchartinfodefaultborderopacity = 10;</code>
       */
      public float getTschchartinfodefaultborderopacity() {
        return tschchartinfodefaultborderopacity_;
      }
      /**
       * <code>optional float tschchartinfodefaultborderopacity = 10;</code>
       */
      public Builder setTschchartinfodefaultborderopacity(float value) {
        bitField0_ |= 0x00000200;
        tschchartinfodefaultborderopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartinfodefaultborderopacity = 10;</code>
       */
      public Builder clearTschchartinfodefaultborderopacity() {
        bitField0_ = (bitField0_ & ~0x00000200);
        tschchartinfodefaultborderopacity_ = 0F;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartinfodefaultbordershadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartinfodefaultbordershadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 11;</code>
       */
      public boolean hasTschchartinfodefaultbordershadow() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 11;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfodefaultbordershadow() {
        if (tschchartinfodefaultbordershadowBuilder_ == null) {
          return tschchartinfodefaultbordershadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfodefaultbordershadow_;
        } else {
          return tschchartinfodefaultbordershadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 11;</code>
       */
      public Builder setTschchartinfodefaultbordershadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartinfodefaultbordershadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfodefaultbordershadow_ = value;
          onChanged();
        } else {
          tschchartinfodefaultbordershadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 11;</code>
       */
      public Builder setTschchartinfodefaultbordershadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartinfodefaultbordershadowBuilder_ == null) {
          tschchartinfodefaultbordershadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfodefaultbordershadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 11;</code>
       */
      public Builder mergeTschchartinfodefaultbordershadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartinfodefaultbordershadowBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              tschchartinfodefaultbordershadow_ != null &&
              tschchartinfodefaultbordershadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartinfodefaultbordershadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartinfodefaultbordershadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfodefaultbordershadow_ = value;
          }
          onChanged();
        } else {
          tschchartinfodefaultbordershadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 11;</code>
       */
      public Builder clearTschchartinfodefaultbordershadow() {
        if (tschchartinfodefaultbordershadowBuilder_ == null) {
          tschchartinfodefaultbordershadow_ = null;
          onChanged();
        } else {
          tschchartinfodefaultbordershadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 11;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartinfodefaultbordershadowBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getTschchartinfodefaultbordershadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 11;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfodefaultbordershadowOrBuilder() {
        if (tschchartinfodefaultbordershadowBuilder_ != null) {
          return tschchartinfodefaultbordershadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfodefaultbordershadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfodefaultbordershadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartinfodefaultbordershadowFieldBuilder() {
        if (tschchartinfodefaultbordershadowBuilder_ == null) {
          tschchartinfodefaultbordershadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartinfodefaultbordershadow(),
                  getParentForChildren(),
                  isClean());
          tschchartinfodefaultbordershadow_ = null;
        }
        return tschchartinfodefaultbordershadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartinfodefaultborderstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartinfodefaultborderstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 12;</code>
       */
      public boolean hasTschchartinfodefaultborderstroke() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 12;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartinfodefaultborderstroke() {
        if (tschchartinfodefaultborderstrokeBuilder_ == null) {
          return tschchartinfodefaultborderstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartinfodefaultborderstroke_;
        } else {
          return tschchartinfodefaultborderstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 12;</code>
       */
      public Builder setTschchartinfodefaultborderstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartinfodefaultborderstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfodefaultborderstroke_ = value;
          onChanged();
        } else {
          tschchartinfodefaultborderstrokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 12;</code>
       */
      public Builder setTschchartinfodefaultborderstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartinfodefaultborderstrokeBuilder_ == null) {
          tschchartinfodefaultborderstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfodefaultborderstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 12;</code>
       */
      public Builder mergeTschchartinfodefaultborderstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartinfodefaultborderstrokeBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              tschchartinfodefaultborderstroke_ != null &&
              tschchartinfodefaultborderstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartinfodefaultborderstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartinfodefaultborderstroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfodefaultborderstroke_ = value;
          }
          onChanged();
        } else {
          tschchartinfodefaultborderstrokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 12;</code>
       */
      public Builder clearTschchartinfodefaultborderstroke() {
        if (tschchartinfodefaultborderstrokeBuilder_ == null) {
          tschchartinfodefaultborderstroke_ = null;
          onChanged();
        } else {
          tschchartinfodefaultborderstrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 12;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartinfodefaultborderstrokeBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getTschchartinfodefaultborderstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 12;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartinfodefaultborderstrokeOrBuilder() {
        if (tschchartinfodefaultborderstrokeBuilder_ != null) {
          return tschchartinfodefaultborderstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfodefaultborderstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartinfodefaultborderstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartinfodefaultborderstrokeFieldBuilder() {
        if (tschchartinfodefaultborderstrokeBuilder_ == null) {
          tschchartinfodefaultborderstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartinfodefaultborderstroke(),
                  getParentForChildren(),
                  isClean());
          tschchartinfodefaultborderstroke_ = null;
        }
        return tschchartinfodefaultborderstrokeBuilder_;
      }

      private boolean tschchartinfodefaultcombinelayers_ ;
      /**
       * <code>optional bool tschchartinfodefaultcombinelayers = 13;</code>
       */
      public boolean hasTschchartinfodefaultcombinelayers() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bool tschchartinfodefaultcombinelayers = 13;</code>
       */
      public boolean getTschchartinfodefaultcombinelayers() {
        return tschchartinfodefaultcombinelayers_;
      }
      /**
       * <code>optional bool tschchartinfodefaultcombinelayers = 13;</code>
       */
      public Builder setTschchartinfodefaultcombinelayers(boolean value) {
        bitField0_ |= 0x00001000;
        tschchartinfodefaultcombinelayers_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartinfodefaultcombinelayers = 13;</code>
       */
      public Builder clearTschchartinfodefaultcombinelayers() {
        bitField0_ = (bitField0_ & ~0x00001000);
        tschchartinfodefaultcombinelayers_ = false;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartinfodefaultgridbackgroundfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartinfodefaultgridbackgroundfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 14;</code>
       */
      public boolean hasTschchartinfodefaultgridbackgroundfill() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 14;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartinfodefaultgridbackgroundfill() {
        if (tschchartinfodefaultgridbackgroundfillBuilder_ == null) {
          return tschchartinfodefaultgridbackgroundfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartinfodefaultgridbackgroundfill_;
        } else {
          return tschchartinfodefaultgridbackgroundfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 14;</code>
       */
      public Builder setTschchartinfodefaultgridbackgroundfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartinfodefaultgridbackgroundfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfodefaultgridbackgroundfill_ = value;
          onChanged();
        } else {
          tschchartinfodefaultgridbackgroundfillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 14;</code>
       */
      public Builder setTschchartinfodefaultgridbackgroundfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartinfodefaultgridbackgroundfillBuilder_ == null) {
          tschchartinfodefaultgridbackgroundfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfodefaultgridbackgroundfillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 14;</code>
       */
      public Builder mergeTschchartinfodefaultgridbackgroundfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartinfodefaultgridbackgroundfillBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
              tschchartinfodefaultgridbackgroundfill_ != null &&
              tschchartinfodefaultgridbackgroundfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartinfodefaultgridbackgroundfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartinfodefaultgridbackgroundfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfodefaultgridbackgroundfill_ = value;
          }
          onChanged();
        } else {
          tschchartinfodefaultgridbackgroundfillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 14;</code>
       */
      public Builder clearTschchartinfodefaultgridbackgroundfill() {
        if (tschchartinfodefaultgridbackgroundfillBuilder_ == null) {
          tschchartinfodefaultgridbackgroundfill_ = null;
          onChanged();
        } else {
          tschchartinfodefaultgridbackgroundfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 14;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartinfodefaultgridbackgroundfillBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getTschchartinfodefaultgridbackgroundfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 14;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartinfodefaultgridbackgroundfillOrBuilder() {
        if (tschchartinfodefaultgridbackgroundfillBuilder_ != null) {
          return tschchartinfodefaultgridbackgroundfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfodefaultgridbackgroundfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartinfodefaultgridbackgroundfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartinfodefaultgridbackgroundfillFieldBuilder() {
        if (tschchartinfodefaultgridbackgroundfillBuilder_ == null) {
          tschchartinfodefaultgridbackgroundfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartinfodefaultgridbackgroundfill(),
                  getParentForChildren(),
                  isClean());
          tschchartinfodefaultgridbackgroundfill_ = null;
        }
        return tschchartinfodefaultgridbackgroundfillBuilder_;
      }

      private float tschchartinfodefaultgridbackgroundopacity_ ;
      /**
       * <code>optional float tschchartinfodefaultgridbackgroundopacity = 15;</code>
       */
      public boolean hasTschchartinfodefaultgridbackgroundopacity() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional float tschchartinfodefaultgridbackgroundopacity = 15;</code>
       */
      public float getTschchartinfodefaultgridbackgroundopacity() {
        return tschchartinfodefaultgridbackgroundopacity_;
      }
      /**
       * <code>optional float tschchartinfodefaultgridbackgroundopacity = 15;</code>
       */
      public Builder setTschchartinfodefaultgridbackgroundopacity(float value) {
        bitField0_ |= 0x00004000;
        tschchartinfodefaultgridbackgroundopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartinfodefaultgridbackgroundopacity = 15;</code>
       */
      public Builder clearTschchartinfodefaultgridbackgroundopacity() {
        bitField0_ = (bitField0_ & ~0x00004000);
        tschchartinfodefaultgridbackgroundopacity_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartinfodefaultinterbargap_ ;
      /**
       * <code>optional float tschchartinfodefaultinterbargap = 16;</code>
       */
      public boolean hasTschchartinfodefaultinterbargap() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional float tschchartinfodefaultinterbargap = 16;</code>
       */
      public float getTschchartinfodefaultinterbargap() {
        return tschchartinfodefaultinterbargap_;
      }
      /**
       * <code>optional float tschchartinfodefaultinterbargap = 16;</code>
       */
      public Builder setTschchartinfodefaultinterbargap(float value) {
        bitField0_ |= 0x00008000;
        tschchartinfodefaultinterbargap_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartinfodefaultinterbargap = 16;</code>
       */
      public Builder clearTschchartinfodefaultinterbargap() {
        bitField0_ = (bitField0_ & ~0x00008000);
        tschchartinfodefaultinterbargap_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartinfodefaultintersetgap_ ;
      /**
       * <code>optional float tschchartinfodefaultintersetgap = 17;</code>
       */
      public boolean hasTschchartinfodefaultintersetgap() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional float tschchartinfodefaultintersetgap = 17;</code>
       */
      public float getTschchartinfodefaultintersetgap() {
        return tschchartinfodefaultintersetgap_;
      }
      /**
       * <code>optional float tschchartinfodefaultintersetgap = 17;</code>
       */
      public Builder setTschchartinfodefaultintersetgap(float value) {
        bitField0_ |= 0x00010000;
        tschchartinfodefaultintersetgap_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartinfodefaultintersetgap = 17;</code>
       */
      public Builder clearTschchartinfodefaultintersetgap() {
        bitField0_ = (bitField0_ & ~0x00010000);
        tschchartinfodefaultintersetgap_ = 0F;
        onChanged();
        return this;
      }

      private boolean tschchartinfodefaultshowborder_ ;
      /**
       * <code>optional bool tschchartinfodefaultshowborder = 18;</code>
       */
      public boolean hasTschchartinfodefaultshowborder() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional bool tschchartinfodefaultshowborder = 18;</code>
       */
      public boolean getTschchartinfodefaultshowborder() {
        return tschchartinfodefaultshowborder_;
      }
      /**
       * <code>optional bool tschchartinfodefaultshowborder = 18;</code>
       */
      public Builder setTschchartinfodefaultshowborder(boolean value) {
        bitField0_ |= 0x00020000;
        tschchartinfodefaultshowborder_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartinfodefaultshowborder = 18;</code>
       */
      public Builder clearTschchartinfodefaultshowborder() {
        bitField0_ = (bitField0_ & ~0x00020000);
        tschchartinfodefaultshowborder_ = false;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSP.TSPMessages.Color tschchartinfodefaulttitlecolor_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Color, org.techforumist.keynote.proto.TSP.TSPMessages.Color.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ColorOrBuilder> tschchartinfodefaulttitlecolorBuilder_;
      /**
       * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 19;</code>
       */
      public boolean hasTschchartinfodefaulttitlecolor() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 19;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Color getTschchartinfodefaulttitlecolor() {
        if (tschchartinfodefaulttitlecolorBuilder_ == null) {
          return tschchartinfodefaulttitlecolor_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Color.getDefaultInstance() : tschchartinfodefaulttitlecolor_;
        } else {
          return tschchartinfodefaulttitlecolorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 19;</code>
       */
      public Builder setTschchartinfodefaulttitlecolor(org.techforumist.keynote.proto.TSP.TSPMessages.Color value) {
        if (tschchartinfodefaulttitlecolorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfodefaulttitlecolor_ = value;
          onChanged();
        } else {
          tschchartinfodefaulttitlecolorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 19;</code>
       */
      public Builder setTschchartinfodefaulttitlecolor(
          org.techforumist.keynote.proto.TSP.TSPMessages.Color.Builder builderForValue) {
        if (tschchartinfodefaulttitlecolorBuilder_ == null) {
          tschchartinfodefaulttitlecolor_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfodefaulttitlecolorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 19;</code>
       */
      public Builder mergeTschchartinfodefaulttitlecolor(org.techforumist.keynote.proto.TSP.TSPMessages.Color value) {
        if (tschchartinfodefaulttitlecolorBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000) &&
              tschchartinfodefaulttitlecolor_ != null &&
              tschchartinfodefaulttitlecolor_ != org.techforumist.keynote.proto.TSP.TSPMessages.Color.getDefaultInstance()) {
            tschchartinfodefaulttitlecolor_ =
              org.techforumist.keynote.proto.TSP.TSPMessages.Color.newBuilder(tschchartinfodefaulttitlecolor_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfodefaulttitlecolor_ = value;
          }
          onChanged();
        } else {
          tschchartinfodefaulttitlecolorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 19;</code>
       */
      public Builder clearTschchartinfodefaulttitlecolor() {
        if (tschchartinfodefaulttitlecolorBuilder_ == null) {
          tschchartinfodefaulttitlecolor_ = null;
          onChanged();
        } else {
          tschchartinfodefaulttitlecolorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }
      /**
       * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 19;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Color.Builder getTschchartinfodefaulttitlecolorBuilder() {
        bitField0_ |= 0x00040000;
        onChanged();
        return getTschchartinfodefaulttitlecolorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 19;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.ColorOrBuilder getTschchartinfodefaulttitlecolorOrBuilder() {
        if (tschchartinfodefaulttitlecolorBuilder_ != null) {
          return tschchartinfodefaulttitlecolorBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfodefaulttitlecolor_ == null ?
              org.techforumist.keynote.proto.TSP.TSPMessages.Color.getDefaultInstance() : tschchartinfodefaulttitlecolor_;
        }
      }
      /**
       * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 19;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Color, org.techforumist.keynote.proto.TSP.TSPMessages.Color.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ColorOrBuilder> 
          getTschchartinfodefaulttitlecolorFieldBuilder() {
        if (tschchartinfodefaulttitlecolorBuilder_ == null) {
          tschchartinfodefaulttitlecolorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSP.TSPMessages.Color, org.techforumist.keynote.proto.TSP.TSPMessages.Color.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ColorOrBuilder>(
                  getTschchartinfodefaulttitlecolor(),
                  getParentForChildren(),
                  isClean());
          tschchartinfodefaulttitlecolor_ = null;
        }
        return tschchartinfodefaulttitlecolorBuilder_;
      }

      private int tschchartinfodefaulttitleparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartinfodefaulttitleparagraphstyleindex = 20;</code>
       */
      public boolean hasTschchartinfodefaulttitleparagraphstyleindex() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 tschchartinfodefaulttitleparagraphstyleindex = 20;</code>
       */
      public int getTschchartinfodefaulttitleparagraphstyleindex() {
        return tschchartinfodefaulttitleparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartinfodefaulttitleparagraphstyleindex = 20;</code>
       */
      public Builder setTschchartinfodefaulttitleparagraphstyleindex(int value) {
        bitField0_ |= 0x00080000;
        tschchartinfodefaulttitleparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartinfodefaulttitleparagraphstyleindex = 20;</code>
       */
      public Builder clearTschchartinfodefaulttitleparagraphstyleindex() {
        bitField0_ = (bitField0_ & ~0x00080000);
        tschchartinfodefaulttitleparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartinfodefaultdatasetnameparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartinfodefaultdatasetnameparagraphstyleindex = 21;</code>
       */
      public boolean hasTschchartinfodefaultdatasetnameparagraphstyleindex() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 tschchartinfodefaultdatasetnameparagraphstyleindex = 21;</code>
       */
      public int getTschchartinfodefaultdatasetnameparagraphstyleindex() {
        return tschchartinfodefaultdatasetnameparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartinfodefaultdatasetnameparagraphstyleindex = 21;</code>
       */
      public Builder setTschchartinfodefaultdatasetnameparagraphstyleindex(int value) {
        bitField0_ |= 0x00100000;
        tschchartinfodefaultdatasetnameparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartinfodefaultdatasetnameparagraphstyleindex = 21;</code>
       */
      public Builder clearTschchartinfodefaultdatasetnameparagraphstyleindex() {
        bitField0_ = (bitField0_ & ~0x00100000);
        tschchartinfodefaultdatasetnameparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TSCH.Generated.ChartStyleArchive)
    }

    // @@protoc_insertion_point(class_scope:TSCH.Generated.ChartStyleArchive)
    private static final org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive();
    }

    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ChartStyleArchive>
        PARSER = new com.google.protobuf.AbstractParser<ChartStyleArchive>() {
      public ChartStyleArchive parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ChartStyleArchive(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChartStyleArchive> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChartStyleArchive> getParserForType() {
      return PARSER;
    }

    public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    public static final int CURRENT_FIELD_NUMBER = 10000;
    /**
     * <code>extend .TSCH.ChartStyleArchive { ... }</code>
     */
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartStyleArchive,
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive> current = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive.getDefaultInstance(),
          0,
          org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive.class,
          org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartStyleArchive.getDefaultInstance());
  }

  public interface ChartNonStyleArchiveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TSCH.Generated.ChartNonStyleArchive)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 tschchartinfodefault3dbarshape = 1;</code>
     */
    boolean hasTschchartinfodefault3Dbarshape();
    /**
     * <code>optional int32 tschchartinfodefault3dbarshape = 1;</code>
     */
    int getTschchartinfodefault3Dbarshape();

    /**
     * <code>optional bool tschchartinfodefault3dbeveledges = 2;</code>
     */
    boolean hasTschchartinfodefault3Dbeveledges();
    /**
     * <code>optional bool tschchartinfodefault3dbeveledges = 2;</code>
     */
    boolean getTschchartinfodefault3Dbeveledges();

    /**
     * <code>optional float tschchartinfodefault3dintersetdepthgap = 3;</code>
     */
    boolean hasTschchartinfodefault3Dintersetdepthgap();
    /**
     * <code>optional float tschchartinfodefault3dintersetdepthgap = 3;</code>
     */
    float getTschchartinfodefault3Dintersetdepthgap();

    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 4;</code>
     */
    boolean hasTschchartinfodefault3Drotation();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 4;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfodefault3Drotation();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 4;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfodefault3DrotationOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 5;</code>
     */
    boolean hasTschchartinfoarea3Dscale();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 5;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfoarea3Dscale();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 5;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfoarea3DscaleOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 6;</code>
     */
    boolean hasTschchartinfobar3Dscale();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 6;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfobar3Dscale();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 6;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfobar3DscaleOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 7;</code>
     */
    boolean hasTschchartinfocolumn3Dscale();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 7;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfocolumn3Dscale();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 7;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfocolumn3DscaleOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 8;</code>
     */
    boolean hasTschchartinfodefault3Dscale();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 8;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfodefault3Dscale();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 8;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfodefault3DscaleOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 9;</code>
     */
    boolean hasTschchartinfoline3Dscale();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 9;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfoline3Dscale();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 9;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfoline3DscaleOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 10;</code>
     */
    boolean hasTschchartinfopie3Dscale();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 10;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfopie3Dscale();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 10;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfopie3DscaleOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 11;</code>
     */
    boolean hasTschchartinfodefault3Dviewport();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 11;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfodefault3Dviewport();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 11;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfodefault3DviewportOrBuilder();

    /**
     * <code>optional float tschchartinfodefaultpiestartangle = 19;</code>
     */
    boolean hasTschchartinfodefaultpiestartangle();
    /**
     * <code>optional float tschchartinfodefaultpiestartangle = 19;</code>
     */
    float getTschchartinfodefaultpiestartangle();

    /**
     * <code>optional bool tschchartinfodefaultshowlegend = 20;</code>
     */
    boolean hasTschchartinfodefaultshowlegend();
    /**
     * <code>optional bool tschchartinfodefaultshowlegend = 20;</code>
     */
    boolean getTschchartinfodefaultshowlegend();

    /**
     * <code>optional bool tschchartinfodefaultshowtitle = 21;</code>
     */
    boolean hasTschchartinfodefaultshowtitle();
    /**
     * <code>optional bool tschchartinfodefaultshowtitle = 21;</code>
     */
    boolean getTschchartinfodefaultshowtitle();

    /**
     * <code>optional bool tschchartinfodefaultskiphiddendata = 22;</code>
     */
    boolean hasTschchartinfodefaultskiphiddendata();
    /**
     * <code>optional bool tschchartinfodefaultskiphiddendata = 22;</code>
     */
    boolean getTschchartinfodefaultskiphiddendata();

    /**
     * <code>optional string tschchartinfodefaulttitle = 23;</code>
     */
    boolean hasTschchartinfodefaulttitle();
    /**
     * <code>optional string tschchartinfodefaulttitle = 23;</code>
     */
    java.lang.String getTschchartinfodefaulttitle();
    /**
     * <code>optional string tschchartinfodefaulttitle = 23;</code>
     */
    com.google.protobuf.ByteString
        getTschchartinfodefaulttitleBytes();

    /**
     * <code>optional int32 tschchartinfodefaultdatasetnamelocation = 24;</code>
     */
    boolean hasTschchartinfodefaultdatasetnamelocation();
    /**
     * <code>optional int32 tschchartinfodefaultdatasetnamelocation = 24;</code>
     */
    int getTschchartinfodefaultdatasetnamelocation();

    /**
     * <code>optional int32 tschchartinfodefaultmultidatacontroltype = 25;</code>
     */
    boolean hasTschchartinfodefaultmultidatacontroltype();
    /**
     * <code>optional int32 tschchartinfodefaultmultidatacontroltype = 25;</code>
     */
    int getTschchartinfodefaultmultidatacontroltype();
  }
  /**
   * Protobuf type {@code TSCH.Generated.ChartNonStyleArchive}
   */
  public  static final class ChartNonStyleArchive extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TSCH.Generated.ChartNonStyleArchive)
      ChartNonStyleArchiveOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChartNonStyleArchive.newBuilder() to construct.
    private ChartNonStyleArchive(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChartNonStyleArchive() {
      tschchartinfodefault3Dbarshape_ = 0;
      tschchartinfodefault3Dbeveledges_ = false;
      tschchartinfodefault3Dintersetdepthgap_ = 0F;
      tschchartinfodefaultpiestartangle_ = 0F;
      tschchartinfodefaultshowlegend_ = false;
      tschchartinfodefaultshowtitle_ = false;
      tschchartinfodefaultskiphiddendata_ = false;
      tschchartinfodefaulttitle_ = "";
      tschchartinfodefaultdatasetnamelocation_ = 0;
      tschchartinfodefaultmultidatacontroltype_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChartNonStyleArchive(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tschchartinfodefault3Dbarshape_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tschchartinfodefault3Dbeveledges_ = input.readBool();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              tschchartinfodefault3Dintersetdepthgap_ = input.readFloat();
              break;
            }
            case 34: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = tschchartinfodefault3Drotation_.toBuilder();
              }
              tschchartinfodefault3Drotation_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfodefault3Drotation_);
                tschchartinfodefault3Drotation_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = tschchartinfoarea3Dscale_.toBuilder();
              }
              tschchartinfoarea3Dscale_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfoarea3Dscale_);
                tschchartinfoarea3Dscale_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = tschchartinfobar3Dscale_.toBuilder();
              }
              tschchartinfobar3Dscale_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfobar3Dscale_);
                tschchartinfobar3Dscale_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = tschchartinfocolumn3Dscale_.toBuilder();
              }
              tschchartinfocolumn3Dscale_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfocolumn3Dscale_);
                tschchartinfocolumn3Dscale_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 66: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = tschchartinfodefault3Dscale_.toBuilder();
              }
              tschchartinfodefault3Dscale_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfodefault3Dscale_);
                tschchartinfodefault3Dscale_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 74: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = tschchartinfoline3Dscale_.toBuilder();
              }
              tschchartinfoline3Dscale_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfoline3Dscale_);
                tschchartinfoline3Dscale_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 82: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = tschchartinfopie3Dscale_.toBuilder();
              }
              tschchartinfopie3Dscale_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfopie3Dscale_);
                tschchartinfopie3Dscale_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 90: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = tschchartinfodefault3Dviewport_.toBuilder();
              }
              tschchartinfodefault3Dviewport_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfodefault3Dviewport_);
                tschchartinfodefault3Dviewport_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 157: {
              bitField0_ |= 0x00000800;
              tschchartinfodefaultpiestartangle_ = input.readFloat();
              break;
            }
            case 160: {
              bitField0_ |= 0x00001000;
              tschchartinfodefaultshowlegend_ = input.readBool();
              break;
            }
            case 168: {
              bitField0_ |= 0x00002000;
              tschchartinfodefaultshowtitle_ = input.readBool();
              break;
            }
            case 176: {
              bitField0_ |= 0x00004000;
              tschchartinfodefaultskiphiddendata_ = input.readBool();
              break;
            }
            case 186: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00008000;
              tschchartinfodefaulttitle_ = bs;
              break;
            }
            case 192: {
              bitField0_ |= 0x00010000;
              tschchartinfodefaultdatasetnamelocation_ = input.readInt32();
              break;
            }
            case 200: {
              bitField0_ |= 0x00020000;
              tschchartinfodefaultmultidatacontroltype_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartNonStyleArchive_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartNonStyleArchive_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive.class, org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive.Builder.class);
    }

    private int bitField0_;
    public static final int TSCHCHARTINFODEFAULT3DBARSHAPE_FIELD_NUMBER = 1;
    private int tschchartinfodefault3Dbarshape_;
    /**
     * <code>optional int32 tschchartinfodefault3dbarshape = 1;</code>
     */
    public boolean hasTschchartinfodefault3Dbarshape() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 tschchartinfodefault3dbarshape = 1;</code>
     */
    public int getTschchartinfodefault3Dbarshape() {
      return tschchartinfodefault3Dbarshape_;
    }

    public static final int TSCHCHARTINFODEFAULT3DBEVELEDGES_FIELD_NUMBER = 2;
    private boolean tschchartinfodefault3Dbeveledges_;
    /**
     * <code>optional bool tschchartinfodefault3dbeveledges = 2;</code>
     */
    public boolean hasTschchartinfodefault3Dbeveledges() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool tschchartinfodefault3dbeveledges = 2;</code>
     */
    public boolean getTschchartinfodefault3Dbeveledges() {
      return tschchartinfodefault3Dbeveledges_;
    }

    public static final int TSCHCHARTINFODEFAULT3DINTERSETDEPTHGAP_FIELD_NUMBER = 3;
    private float tschchartinfodefault3Dintersetdepthgap_;
    /**
     * <code>optional float tschchartinfodefault3dintersetdepthgap = 3;</code>
     */
    public boolean hasTschchartinfodefault3Dintersetdepthgap() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float tschchartinfodefault3dintersetdepthgap = 3;</code>
     */
    public float getTschchartinfodefault3Dintersetdepthgap() {
      return tschchartinfodefault3Dintersetdepthgap_;
    }

    public static final int TSCHCHARTINFODEFAULT3DROTATION_FIELD_NUMBER = 4;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfodefault3Drotation_;
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 4;</code>
     */
    public boolean hasTschchartinfodefault3Drotation() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 4;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfodefault3Drotation() {
      return tschchartinfodefault3Drotation_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfodefault3Drotation_;
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 4;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfodefault3DrotationOrBuilder() {
      return tschchartinfodefault3Drotation_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfodefault3Drotation_;
    }

    public static final int TSCHCHARTINFOAREA3DSCALE_FIELD_NUMBER = 5;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfoarea3Dscale_;
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 5;</code>
     */
    public boolean hasTschchartinfoarea3Dscale() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 5;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfoarea3Dscale() {
      return tschchartinfoarea3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfoarea3Dscale_;
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 5;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfoarea3DscaleOrBuilder() {
      return tschchartinfoarea3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfoarea3Dscale_;
    }

    public static final int TSCHCHARTINFOBAR3DSCALE_FIELD_NUMBER = 6;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfobar3Dscale_;
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 6;</code>
     */
    public boolean hasTschchartinfobar3Dscale() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 6;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfobar3Dscale() {
      return tschchartinfobar3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfobar3Dscale_;
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 6;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfobar3DscaleOrBuilder() {
      return tschchartinfobar3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfobar3Dscale_;
    }

    public static final int TSCHCHARTINFOCOLUMN3DSCALE_FIELD_NUMBER = 7;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfocolumn3Dscale_;
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 7;</code>
     */
    public boolean hasTschchartinfocolumn3Dscale() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 7;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfocolumn3Dscale() {
      return tschchartinfocolumn3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfocolumn3Dscale_;
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 7;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfocolumn3DscaleOrBuilder() {
      return tschchartinfocolumn3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfocolumn3Dscale_;
    }

    public static final int TSCHCHARTINFODEFAULT3DSCALE_FIELD_NUMBER = 8;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfodefault3Dscale_;
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 8;</code>
     */
    public boolean hasTschchartinfodefault3Dscale() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 8;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfodefault3Dscale() {
      return tschchartinfodefault3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfodefault3Dscale_;
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 8;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfodefault3DscaleOrBuilder() {
      return tschchartinfodefault3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfodefault3Dscale_;
    }

    public static final int TSCHCHARTINFOLINE3DSCALE_FIELD_NUMBER = 9;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfoline3Dscale_;
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 9;</code>
     */
    public boolean hasTschchartinfoline3Dscale() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 9;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfoline3Dscale() {
      return tschchartinfoline3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfoline3Dscale_;
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 9;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfoline3DscaleOrBuilder() {
      return tschchartinfoline3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfoline3Dscale_;
    }

    public static final int TSCHCHARTINFOPIE3DSCALE_FIELD_NUMBER = 10;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfopie3Dscale_;
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 10;</code>
     */
    public boolean hasTschchartinfopie3Dscale() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 10;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfopie3Dscale() {
      return tschchartinfopie3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfopie3Dscale_;
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 10;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfopie3DscaleOrBuilder() {
      return tschchartinfopie3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfopie3Dscale_;
    }

    public static final int TSCHCHARTINFODEFAULT3DVIEWPORT_FIELD_NUMBER = 11;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfodefault3Dviewport_;
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 11;</code>
     */
    public boolean hasTschchartinfodefault3Dviewport() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 11;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfodefault3Dviewport() {
      return tschchartinfodefault3Dviewport_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfodefault3Dviewport_;
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 11;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfodefault3DviewportOrBuilder() {
      return tschchartinfodefault3Dviewport_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfodefault3Dviewport_;
    }

    public static final int TSCHCHARTINFODEFAULTPIESTARTANGLE_FIELD_NUMBER = 19;
    private float tschchartinfodefaultpiestartangle_;
    /**
     * <code>optional float tschchartinfodefaultpiestartangle = 19;</code>
     */
    public boolean hasTschchartinfodefaultpiestartangle() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional float tschchartinfodefaultpiestartangle = 19;</code>
     */
    public float getTschchartinfodefaultpiestartangle() {
      return tschchartinfodefaultpiestartangle_;
    }

    public static final int TSCHCHARTINFODEFAULTSHOWLEGEND_FIELD_NUMBER = 20;
    private boolean tschchartinfodefaultshowlegend_;
    /**
     * <code>optional bool tschchartinfodefaultshowlegend = 20;</code>
     */
    public boolean hasTschchartinfodefaultshowlegend() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional bool tschchartinfodefaultshowlegend = 20;</code>
     */
    public boolean getTschchartinfodefaultshowlegend() {
      return tschchartinfodefaultshowlegend_;
    }

    public static final int TSCHCHARTINFODEFAULTSHOWTITLE_FIELD_NUMBER = 21;
    private boolean tschchartinfodefaultshowtitle_;
    /**
     * <code>optional bool tschchartinfodefaultshowtitle = 21;</code>
     */
    public boolean hasTschchartinfodefaultshowtitle() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional bool tschchartinfodefaultshowtitle = 21;</code>
     */
    public boolean getTschchartinfodefaultshowtitle() {
      return tschchartinfodefaultshowtitle_;
    }

    public static final int TSCHCHARTINFODEFAULTSKIPHIDDENDATA_FIELD_NUMBER = 22;
    private boolean tschchartinfodefaultskiphiddendata_;
    /**
     * <code>optional bool tschchartinfodefaultskiphiddendata = 22;</code>
     */
    public boolean hasTschchartinfodefaultskiphiddendata() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional bool tschchartinfodefaultskiphiddendata = 22;</code>
     */
    public boolean getTschchartinfodefaultskiphiddendata() {
      return tschchartinfodefaultskiphiddendata_;
    }

    public static final int TSCHCHARTINFODEFAULTTITLE_FIELD_NUMBER = 23;
    private volatile java.lang.Object tschchartinfodefaulttitle_;
    /**
     * <code>optional string tschchartinfodefaulttitle = 23;</code>
     */
    public boolean hasTschchartinfodefaulttitle() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional string tschchartinfodefaulttitle = 23;</code>
     */
    public java.lang.String getTschchartinfodefaulttitle() {
      java.lang.Object ref = tschchartinfodefaulttitle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tschchartinfodefaulttitle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string tschchartinfodefaulttitle = 23;</code>
     */
    public com.google.protobuf.ByteString
        getTschchartinfodefaulttitleBytes() {
      java.lang.Object ref = tschchartinfodefaulttitle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tschchartinfodefaulttitle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TSCHCHARTINFODEFAULTDATASETNAMELOCATION_FIELD_NUMBER = 24;
    private int tschchartinfodefaultdatasetnamelocation_;
    /**
     * <code>optional int32 tschchartinfodefaultdatasetnamelocation = 24;</code>
     */
    public boolean hasTschchartinfodefaultdatasetnamelocation() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 tschchartinfodefaultdatasetnamelocation = 24;</code>
     */
    public int getTschchartinfodefaultdatasetnamelocation() {
      return tschchartinfodefaultdatasetnamelocation_;
    }

    public static final int TSCHCHARTINFODEFAULTMULTIDATACONTROLTYPE_FIELD_NUMBER = 25;
    private int tschchartinfodefaultmultidatacontroltype_;
    /**
     * <code>optional int32 tschchartinfodefaultmultidatacontroltype = 25;</code>
     */
    public boolean hasTschchartinfodefaultmultidatacontroltype() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 tschchartinfodefaultmultidatacontroltype = 25;</code>
     */
    public int getTschchartinfodefaultmultidatacontroltype() {
      return tschchartinfodefaultmultidatacontroltype_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasTschchartinfodefault3Drotation()) {
        if (!getTschchartinfodefault3Drotation().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfoarea3Dscale()) {
        if (!getTschchartinfoarea3Dscale().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfobar3Dscale()) {
        if (!getTschchartinfobar3Dscale().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfocolumn3Dscale()) {
        if (!getTschchartinfocolumn3Dscale().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfodefault3Dscale()) {
        if (!getTschchartinfodefault3Dscale().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfoline3Dscale()) {
        if (!getTschchartinfoline3Dscale().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfopie3Dscale()) {
        if (!getTschchartinfopie3Dscale().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfodefault3Dviewport()) {
        if (!getTschchartinfodefault3Dviewport().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, tschchartinfodefault3Dbarshape_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, tschchartinfodefault3Dbeveledges_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, tschchartinfodefault3Dintersetdepthgap_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getTschchartinfodefault3Drotation());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, getTschchartinfoarea3Dscale());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, getTschchartinfobar3Dscale());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, getTschchartinfocolumn3Dscale());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, getTschchartinfodefault3Dscale());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(9, getTschchartinfoline3Dscale());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(10, getTschchartinfopie3Dscale());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(11, getTschchartinfodefault3Dviewport());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(19, tschchartinfodefaultpiestartangle_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBool(20, tschchartinfodefaultshowlegend_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBool(21, tschchartinfodefaultshowtitle_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBool(22, tschchartinfodefaultskiphiddendata_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 23, tschchartinfodefaulttitle_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(24, tschchartinfodefaultdatasetnamelocation_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(25, tschchartinfodefaultmultidatacontroltype_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, tschchartinfodefault3Dbarshape_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, tschchartinfodefault3Dbeveledges_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, tschchartinfodefault3Dintersetdepthgap_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTschchartinfodefault3Drotation());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getTschchartinfoarea3Dscale());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getTschchartinfobar3Dscale());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getTschchartinfocolumn3Dscale());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getTschchartinfodefault3Dscale());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getTschchartinfoline3Dscale());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getTschchartinfopie3Dscale());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getTschchartinfodefault3Dviewport());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(19, tschchartinfodefaultpiestartangle_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(20, tschchartinfodefaultshowlegend_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(21, tschchartinfodefaultshowtitle_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(22, tschchartinfodefaultskiphiddendata_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(23, tschchartinfodefaulttitle_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, tschchartinfodefaultdatasetnamelocation_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, tschchartinfodefaultmultidatacontroltype_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive)) {
        return super.equals(obj);
      }
      org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive other = (org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive) obj;

      boolean result = true;
      result = result && (hasTschchartinfodefault3Dbarshape() == other.hasTschchartinfodefault3Dbarshape());
      if (hasTschchartinfodefault3Dbarshape()) {
        result = result && (getTschchartinfodefault3Dbarshape()
            == other.getTschchartinfodefault3Dbarshape());
      }
      result = result && (hasTschchartinfodefault3Dbeveledges() == other.hasTschchartinfodefault3Dbeveledges());
      if (hasTschchartinfodefault3Dbeveledges()) {
        result = result && (getTschchartinfodefault3Dbeveledges()
            == other.getTschchartinfodefault3Dbeveledges());
      }
      result = result && (hasTschchartinfodefault3Dintersetdepthgap() == other.hasTschchartinfodefault3Dintersetdepthgap());
      if (hasTschchartinfodefault3Dintersetdepthgap()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartinfodefault3Dintersetdepthgap())
            == java.lang.Float.floatToIntBits(
                other.getTschchartinfodefault3Dintersetdepthgap()));
      }
      result = result && (hasTschchartinfodefault3Drotation() == other.hasTschchartinfodefault3Drotation());
      if (hasTschchartinfodefault3Drotation()) {
        result = result && getTschchartinfodefault3Drotation()
            .equals(other.getTschchartinfodefault3Drotation());
      }
      result = result && (hasTschchartinfoarea3Dscale() == other.hasTschchartinfoarea3Dscale());
      if (hasTschchartinfoarea3Dscale()) {
        result = result && getTschchartinfoarea3Dscale()
            .equals(other.getTschchartinfoarea3Dscale());
      }
      result = result && (hasTschchartinfobar3Dscale() == other.hasTschchartinfobar3Dscale());
      if (hasTschchartinfobar3Dscale()) {
        result = result && getTschchartinfobar3Dscale()
            .equals(other.getTschchartinfobar3Dscale());
      }
      result = result && (hasTschchartinfocolumn3Dscale() == other.hasTschchartinfocolumn3Dscale());
      if (hasTschchartinfocolumn3Dscale()) {
        result = result && getTschchartinfocolumn3Dscale()
            .equals(other.getTschchartinfocolumn3Dscale());
      }
      result = result && (hasTschchartinfodefault3Dscale() == other.hasTschchartinfodefault3Dscale());
      if (hasTschchartinfodefault3Dscale()) {
        result = result && getTschchartinfodefault3Dscale()
            .equals(other.getTschchartinfodefault3Dscale());
      }
      result = result && (hasTschchartinfoline3Dscale() == other.hasTschchartinfoline3Dscale());
      if (hasTschchartinfoline3Dscale()) {
        result = result && getTschchartinfoline3Dscale()
            .equals(other.getTschchartinfoline3Dscale());
      }
      result = result && (hasTschchartinfopie3Dscale() == other.hasTschchartinfopie3Dscale());
      if (hasTschchartinfopie3Dscale()) {
        result = result && getTschchartinfopie3Dscale()
            .equals(other.getTschchartinfopie3Dscale());
      }
      result = result && (hasTschchartinfodefault3Dviewport() == other.hasTschchartinfodefault3Dviewport());
      if (hasTschchartinfodefault3Dviewport()) {
        result = result && getTschchartinfodefault3Dviewport()
            .equals(other.getTschchartinfodefault3Dviewport());
      }
      result = result && (hasTschchartinfodefaultpiestartangle() == other.hasTschchartinfodefaultpiestartangle());
      if (hasTschchartinfodefaultpiestartangle()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartinfodefaultpiestartangle())
            == java.lang.Float.floatToIntBits(
                other.getTschchartinfodefaultpiestartangle()));
      }
      result = result && (hasTschchartinfodefaultshowlegend() == other.hasTschchartinfodefaultshowlegend());
      if (hasTschchartinfodefaultshowlegend()) {
        result = result && (getTschchartinfodefaultshowlegend()
            == other.getTschchartinfodefaultshowlegend());
      }
      result = result && (hasTschchartinfodefaultshowtitle() == other.hasTschchartinfodefaultshowtitle());
      if (hasTschchartinfodefaultshowtitle()) {
        result = result && (getTschchartinfodefaultshowtitle()
            == other.getTschchartinfodefaultshowtitle());
      }
      result = result && (hasTschchartinfodefaultskiphiddendata() == other.hasTschchartinfodefaultskiphiddendata());
      if (hasTschchartinfodefaultskiphiddendata()) {
        result = result && (getTschchartinfodefaultskiphiddendata()
            == other.getTschchartinfodefaultskiphiddendata());
      }
      result = result && (hasTschchartinfodefaulttitle() == other.hasTschchartinfodefaulttitle());
      if (hasTschchartinfodefaulttitle()) {
        result = result && getTschchartinfodefaulttitle()
            .equals(other.getTschchartinfodefaulttitle());
      }
      result = result && (hasTschchartinfodefaultdatasetnamelocation() == other.hasTschchartinfodefaultdatasetnamelocation());
      if (hasTschchartinfodefaultdatasetnamelocation()) {
        result = result && (getTschchartinfodefaultdatasetnamelocation()
            == other.getTschchartinfodefaultdatasetnamelocation());
      }
      result = result && (hasTschchartinfodefaultmultidatacontroltype() == other.hasTschchartinfodefaultmultidatacontroltype());
      if (hasTschchartinfodefaultmultidatacontroltype()) {
        result = result && (getTschchartinfodefaultmultidatacontroltype()
            == other.getTschchartinfodefaultmultidatacontroltype());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTschchartinfodefault3Dbarshape()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULT3DBARSHAPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefault3Dbarshape();
      }
      if (hasTschchartinfodefault3Dbeveledges()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULT3DBEVELEDGES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartinfodefault3Dbeveledges());
      }
      if (hasTschchartinfodefault3Dintersetdepthgap()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULT3DINTERSETDEPTHGAP_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartinfodefault3Dintersetdepthgap());
      }
      if (hasTschchartinfodefault3Drotation()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULT3DROTATION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefault3Drotation().hashCode();
      }
      if (hasTschchartinfoarea3Dscale()) {
        hash = (37 * hash) + TSCHCHARTINFOAREA3DSCALE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfoarea3Dscale().hashCode();
      }
      if (hasTschchartinfobar3Dscale()) {
        hash = (37 * hash) + TSCHCHARTINFOBAR3DSCALE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfobar3Dscale().hashCode();
      }
      if (hasTschchartinfocolumn3Dscale()) {
        hash = (37 * hash) + TSCHCHARTINFOCOLUMN3DSCALE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfocolumn3Dscale().hashCode();
      }
      if (hasTschchartinfodefault3Dscale()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULT3DSCALE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefault3Dscale().hashCode();
      }
      if (hasTschchartinfoline3Dscale()) {
        hash = (37 * hash) + TSCHCHARTINFOLINE3DSCALE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfoline3Dscale().hashCode();
      }
      if (hasTschchartinfopie3Dscale()) {
        hash = (37 * hash) + TSCHCHARTINFOPIE3DSCALE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfopie3Dscale().hashCode();
      }
      if (hasTschchartinfodefault3Dviewport()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULT3DVIEWPORT_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefault3Dviewport().hashCode();
      }
      if (hasTschchartinfodefaultpiestartangle()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTPIESTARTANGLE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartinfodefaultpiestartangle());
      }
      if (hasTschchartinfodefaultshowlegend()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTSHOWLEGEND_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartinfodefaultshowlegend());
      }
      if (hasTschchartinfodefaultshowtitle()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTSHOWTITLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartinfodefaultshowtitle());
      }
      if (hasTschchartinfodefaultskiphiddendata()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTSKIPHIDDENDATA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartinfodefaultskiphiddendata());
      }
      if (hasTschchartinfodefaulttitle()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTTITLE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaulttitle().hashCode();
      }
      if (hasTschchartinfodefaultdatasetnamelocation()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTDATASETNAMELOCATION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaultdatasetnamelocation();
      }
      if (hasTschchartinfodefaultmultidatacontroltype()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTMULTIDATACONTROLTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaultmultidatacontroltype();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TSCH.Generated.ChartNonStyleArchive}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TSCH.Generated.ChartNonStyleArchive)
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchiveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartNonStyleArchive_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartNonStyleArchive_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive.class, org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive.Builder.class);
      }

      // Construct using TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTschchartinfodefault3DrotationFieldBuilder();
          getTschchartinfoarea3DscaleFieldBuilder();
          getTschchartinfobar3DscaleFieldBuilder();
          getTschchartinfocolumn3DscaleFieldBuilder();
          getTschchartinfodefault3DscaleFieldBuilder();
          getTschchartinfoline3DscaleFieldBuilder();
          getTschchartinfopie3DscaleFieldBuilder();
          getTschchartinfodefault3DviewportFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        tschchartinfodefault3Dbarshape_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        tschchartinfodefault3Dbeveledges_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        tschchartinfodefault3Dintersetdepthgap_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (tschchartinfodefault3DrotationBuilder_ == null) {
          tschchartinfodefault3Drotation_ = null;
        } else {
          tschchartinfodefault3DrotationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (tschchartinfoarea3DscaleBuilder_ == null) {
          tschchartinfoarea3Dscale_ = null;
        } else {
          tschchartinfoarea3DscaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (tschchartinfobar3DscaleBuilder_ == null) {
          tschchartinfobar3Dscale_ = null;
        } else {
          tschchartinfobar3DscaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (tschchartinfocolumn3DscaleBuilder_ == null) {
          tschchartinfocolumn3Dscale_ = null;
        } else {
          tschchartinfocolumn3DscaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (tschchartinfodefault3DscaleBuilder_ == null) {
          tschchartinfodefault3Dscale_ = null;
        } else {
          tschchartinfodefault3DscaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (tschchartinfoline3DscaleBuilder_ == null) {
          tschchartinfoline3Dscale_ = null;
        } else {
          tschchartinfoline3DscaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (tschchartinfopie3DscaleBuilder_ == null) {
          tschchartinfopie3Dscale_ = null;
        } else {
          tschchartinfopie3DscaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (tschchartinfodefault3DviewportBuilder_ == null) {
          tschchartinfodefault3Dviewport_ = null;
        } else {
          tschchartinfodefault3DviewportBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        tschchartinfodefaultpiestartangle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000800);
        tschchartinfodefaultshowlegend_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        tschchartinfodefaultshowtitle_ = false;
        bitField0_ = (bitField0_ & ~0x00002000);
        tschchartinfodefaultskiphiddendata_ = false;
        bitField0_ = (bitField0_ & ~0x00004000);
        tschchartinfodefaulttitle_ = "";
        bitField0_ = (bitField0_ & ~0x00008000);
        tschchartinfodefaultdatasetnamelocation_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        tschchartinfodefaultmultidatacontroltype_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartNonStyleArchive_descriptor;
      }

      public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive getDefaultInstanceForType() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive.getDefaultInstance();
      }

      public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive build() {
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive buildPartial() {
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive result = new org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tschchartinfodefault3Dbarshape_ = tschchartinfodefault3Dbarshape_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tschchartinfodefault3Dbeveledges_ = tschchartinfodefault3Dbeveledges_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tschchartinfodefault3Dintersetdepthgap_ = tschchartinfodefault3Dintersetdepthgap_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (tschchartinfodefault3DrotationBuilder_ == null) {
          result.tschchartinfodefault3Drotation_ = tschchartinfodefault3Drotation_;
        } else {
          result.tschchartinfodefault3Drotation_ = tschchartinfodefault3DrotationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (tschchartinfoarea3DscaleBuilder_ == null) {
          result.tschchartinfoarea3Dscale_ = tschchartinfoarea3Dscale_;
        } else {
          result.tschchartinfoarea3Dscale_ = tschchartinfoarea3DscaleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (tschchartinfobar3DscaleBuilder_ == null) {
          result.tschchartinfobar3Dscale_ = tschchartinfobar3Dscale_;
        } else {
          result.tschchartinfobar3Dscale_ = tschchartinfobar3DscaleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (tschchartinfocolumn3DscaleBuilder_ == null) {
          result.tschchartinfocolumn3Dscale_ = tschchartinfocolumn3Dscale_;
        } else {
          result.tschchartinfocolumn3Dscale_ = tschchartinfocolumn3DscaleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (tschchartinfodefault3DscaleBuilder_ == null) {
          result.tschchartinfodefault3Dscale_ = tschchartinfodefault3Dscale_;
        } else {
          result.tschchartinfodefault3Dscale_ = tschchartinfodefault3DscaleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (tschchartinfoline3DscaleBuilder_ == null) {
          result.tschchartinfoline3Dscale_ = tschchartinfoline3Dscale_;
        } else {
          result.tschchartinfoline3Dscale_ = tschchartinfoline3DscaleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (tschchartinfopie3DscaleBuilder_ == null) {
          result.tschchartinfopie3Dscale_ = tschchartinfopie3Dscale_;
        } else {
          result.tschchartinfopie3Dscale_ = tschchartinfopie3DscaleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (tschchartinfodefault3DviewportBuilder_ == null) {
          result.tschchartinfodefault3Dviewport_ = tschchartinfodefault3Dviewport_;
        } else {
          result.tschchartinfodefault3Dviewport_ = tschchartinfodefault3DviewportBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.tschchartinfodefaultpiestartangle_ = tschchartinfodefaultpiestartangle_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.tschchartinfodefaultshowlegend_ = tschchartinfodefaultshowlegend_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.tschchartinfodefaultshowtitle_ = tschchartinfodefaultshowtitle_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.tschchartinfodefaultskiphiddendata_ = tschchartinfodefaultskiphiddendata_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.tschchartinfodefaulttitle_ = tschchartinfodefaulttitle_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.tschchartinfodefaultdatasetnamelocation_ = tschchartinfodefaultdatasetnamelocation_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.tschchartinfodefaultmultidatacontroltype_ = tschchartinfodefaultmultidatacontroltype_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive) {
          return mergeFrom((org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive other) {
        if (other == org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive.getDefaultInstance()) return this;
        if (other.hasTschchartinfodefault3Dbarshape()) {
          setTschchartinfodefault3Dbarshape(other.getTschchartinfodefault3Dbarshape());
        }
        if (other.hasTschchartinfodefault3Dbeveledges()) {
          setTschchartinfodefault3Dbeveledges(other.getTschchartinfodefault3Dbeveledges());
        }
        if (other.hasTschchartinfodefault3Dintersetdepthgap()) {
          setTschchartinfodefault3Dintersetdepthgap(other.getTschchartinfodefault3Dintersetdepthgap());
        }
        if (other.hasTschchartinfodefault3Drotation()) {
          mergeTschchartinfodefault3Drotation(other.getTschchartinfodefault3Drotation());
        }
        if (other.hasTschchartinfoarea3Dscale()) {
          mergeTschchartinfoarea3Dscale(other.getTschchartinfoarea3Dscale());
        }
        if (other.hasTschchartinfobar3Dscale()) {
          mergeTschchartinfobar3Dscale(other.getTschchartinfobar3Dscale());
        }
        if (other.hasTschchartinfocolumn3Dscale()) {
          mergeTschchartinfocolumn3Dscale(other.getTschchartinfocolumn3Dscale());
        }
        if (other.hasTschchartinfodefault3Dscale()) {
          mergeTschchartinfodefault3Dscale(other.getTschchartinfodefault3Dscale());
        }
        if (other.hasTschchartinfoline3Dscale()) {
          mergeTschchartinfoline3Dscale(other.getTschchartinfoline3Dscale());
        }
        if (other.hasTschchartinfopie3Dscale()) {
          mergeTschchartinfopie3Dscale(other.getTschchartinfopie3Dscale());
        }
        if (other.hasTschchartinfodefault3Dviewport()) {
          mergeTschchartinfodefault3Dviewport(other.getTschchartinfodefault3Dviewport());
        }
        if (other.hasTschchartinfodefaultpiestartangle()) {
          setTschchartinfodefaultpiestartangle(other.getTschchartinfodefaultpiestartangle());
        }
        if (other.hasTschchartinfodefaultshowlegend()) {
          setTschchartinfodefaultshowlegend(other.getTschchartinfodefaultshowlegend());
        }
        if (other.hasTschchartinfodefaultshowtitle()) {
          setTschchartinfodefaultshowtitle(other.getTschchartinfodefaultshowtitle());
        }
        if (other.hasTschchartinfodefaultskiphiddendata()) {
          setTschchartinfodefaultskiphiddendata(other.getTschchartinfodefaultskiphiddendata());
        }
        if (other.hasTschchartinfodefaulttitle()) {
          bitField0_ |= 0x00008000;
          tschchartinfodefaulttitle_ = other.tschchartinfodefaulttitle_;
          onChanged();
        }
        if (other.hasTschchartinfodefaultdatasetnamelocation()) {
          setTschchartinfodefaultdatasetnamelocation(other.getTschchartinfodefaultdatasetnamelocation());
        }
        if (other.hasTschchartinfodefaultmultidatacontroltype()) {
          setTschchartinfodefaultmultidatacontroltype(other.getTschchartinfodefaultmultidatacontroltype());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (hasTschchartinfodefault3Drotation()) {
          if (!getTschchartinfodefault3Drotation().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfoarea3Dscale()) {
          if (!getTschchartinfoarea3Dscale().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfobar3Dscale()) {
          if (!getTschchartinfobar3Dscale().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfocolumn3Dscale()) {
          if (!getTschchartinfocolumn3Dscale().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfodefault3Dscale()) {
          if (!getTschchartinfodefault3Dscale().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfoline3Dscale()) {
          if (!getTschchartinfoline3Dscale().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfopie3Dscale()) {
          if (!getTschchartinfopie3Dscale().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfodefault3Dviewport()) {
          if (!getTschchartinfodefault3Dviewport().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int tschchartinfodefault3Dbarshape_ ;
      /**
       * <code>optional int32 tschchartinfodefault3dbarshape = 1;</code>
       */
      public boolean hasTschchartinfodefault3Dbarshape() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 tschchartinfodefault3dbarshape = 1;</code>
       */
      public int getTschchartinfodefault3Dbarshape() {
        return tschchartinfodefault3Dbarshape_;
      }
      /**
       * <code>optional int32 tschchartinfodefault3dbarshape = 1;</code>
       */
      public Builder setTschchartinfodefault3Dbarshape(int value) {
        bitField0_ |= 0x00000001;
        tschchartinfodefault3Dbarshape_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartinfodefault3dbarshape = 1;</code>
       */
      public Builder clearTschchartinfodefault3Dbarshape() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tschchartinfodefault3Dbarshape_ = 0;
        onChanged();
        return this;
      }

      private boolean tschchartinfodefault3Dbeveledges_ ;
      /**
       * <code>optional bool tschchartinfodefault3dbeveledges = 2;</code>
       */
      public boolean hasTschchartinfodefault3Dbeveledges() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool tschchartinfodefault3dbeveledges = 2;</code>
       */
      public boolean getTschchartinfodefault3Dbeveledges() {
        return tschchartinfodefault3Dbeveledges_;
      }
      /**
       * <code>optional bool tschchartinfodefault3dbeveledges = 2;</code>
       */
      public Builder setTschchartinfodefault3Dbeveledges(boolean value) {
        bitField0_ |= 0x00000002;
        tschchartinfodefault3Dbeveledges_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartinfodefault3dbeveledges = 2;</code>
       */
      public Builder clearTschchartinfodefault3Dbeveledges() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tschchartinfodefault3Dbeveledges_ = false;
        onChanged();
        return this;
      }

      private float tschchartinfodefault3Dintersetdepthgap_ ;
      /**
       * <code>optional float tschchartinfodefault3dintersetdepthgap = 3;</code>
       */
      public boolean hasTschchartinfodefault3Dintersetdepthgap() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float tschchartinfodefault3dintersetdepthgap = 3;</code>
       */
      public float getTschchartinfodefault3Dintersetdepthgap() {
        return tschchartinfodefault3Dintersetdepthgap_;
      }
      /**
       * <code>optional float tschchartinfodefault3dintersetdepthgap = 3;</code>
       */
      public Builder setTschchartinfodefault3Dintersetdepthgap(float value) {
        bitField0_ |= 0x00000004;
        tschchartinfodefault3Dintersetdepthgap_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartinfodefault3dintersetdepthgap = 3;</code>
       */
      public Builder clearTschchartinfodefault3Dintersetdepthgap() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tschchartinfodefault3Dintersetdepthgap_ = 0F;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfodefault3Drotation_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> tschchartinfodefault3DrotationBuilder_;
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 4;</code>
       */
      public boolean hasTschchartinfodefault3Drotation() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 4;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfodefault3Drotation() {
        if (tschchartinfodefault3DrotationBuilder_ == null) {
          return tschchartinfodefault3Drotation_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfodefault3Drotation_;
        } else {
          return tschchartinfodefault3DrotationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 4;</code>
       */
      public Builder setTschchartinfodefault3Drotation(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfodefault3DrotationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfodefault3Drotation_ = value;
          onChanged();
        } else {
          tschchartinfodefault3DrotationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 4;</code>
       */
      public Builder setTschchartinfodefault3Drotation(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder builderForValue) {
        if (tschchartinfodefault3DrotationBuilder_ == null) {
          tschchartinfodefault3Drotation_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfodefault3DrotationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 4;</code>
       */
      public Builder mergeTschchartinfodefault3Drotation(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfodefault3DrotationBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              tschchartinfodefault3Drotation_ != null &&
              tschchartinfodefault3Drotation_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance()) {
            tschchartinfodefault3Drotation_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.newBuilder(tschchartinfodefault3Drotation_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfodefault3Drotation_ = value;
          }
          onChanged();
        } else {
          tschchartinfodefault3DrotationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 4;</code>
       */
      public Builder clearTschchartinfodefault3Drotation() {
        if (tschchartinfodefault3DrotationBuilder_ == null) {
          tschchartinfodefault3Drotation_ = null;
          onChanged();
        } else {
          tschchartinfodefault3DrotationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 4;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder getTschchartinfodefault3DrotationBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getTschchartinfodefault3DrotationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 4;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfodefault3DrotationOrBuilder() {
        if (tschchartinfodefault3DrotationBuilder_ != null) {
          return tschchartinfodefault3DrotationBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfodefault3Drotation_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfodefault3Drotation_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> 
          getTschchartinfodefault3DrotationFieldBuilder() {
        if (tschchartinfodefault3DrotationBuilder_ == null) {
          tschchartinfodefault3DrotationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder>(
                  getTschchartinfodefault3Drotation(),
                  getParentForChildren(),
                  isClean());
          tschchartinfodefault3Drotation_ = null;
        }
        return tschchartinfodefault3DrotationBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfoarea3Dscale_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> tschchartinfoarea3DscaleBuilder_;
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 5;</code>
       */
      public boolean hasTschchartinfoarea3Dscale() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 5;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfoarea3Dscale() {
        if (tschchartinfoarea3DscaleBuilder_ == null) {
          return tschchartinfoarea3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfoarea3Dscale_;
        } else {
          return tschchartinfoarea3DscaleBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 5;</code>
       */
      public Builder setTschchartinfoarea3Dscale(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfoarea3DscaleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfoarea3Dscale_ = value;
          onChanged();
        } else {
          tschchartinfoarea3DscaleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 5;</code>
       */
      public Builder setTschchartinfoarea3Dscale(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder builderForValue) {
        if (tschchartinfoarea3DscaleBuilder_ == null) {
          tschchartinfoarea3Dscale_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfoarea3DscaleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 5;</code>
       */
      public Builder mergeTschchartinfoarea3Dscale(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfoarea3DscaleBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              tschchartinfoarea3Dscale_ != null &&
              tschchartinfoarea3Dscale_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance()) {
            tschchartinfoarea3Dscale_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.newBuilder(tschchartinfoarea3Dscale_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfoarea3Dscale_ = value;
          }
          onChanged();
        } else {
          tschchartinfoarea3DscaleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 5;</code>
       */
      public Builder clearTschchartinfoarea3Dscale() {
        if (tschchartinfoarea3DscaleBuilder_ == null) {
          tschchartinfoarea3Dscale_ = null;
          onChanged();
        } else {
          tschchartinfoarea3DscaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 5;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder getTschchartinfoarea3DscaleBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getTschchartinfoarea3DscaleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 5;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfoarea3DscaleOrBuilder() {
        if (tschchartinfoarea3DscaleBuilder_ != null) {
          return tschchartinfoarea3DscaleBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfoarea3Dscale_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfoarea3Dscale_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> 
          getTschchartinfoarea3DscaleFieldBuilder() {
        if (tschchartinfoarea3DscaleBuilder_ == null) {
          tschchartinfoarea3DscaleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder>(
                  getTschchartinfoarea3Dscale(),
                  getParentForChildren(),
                  isClean());
          tschchartinfoarea3Dscale_ = null;
        }
        return tschchartinfoarea3DscaleBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfobar3Dscale_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> tschchartinfobar3DscaleBuilder_;
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 6;</code>
       */
      public boolean hasTschchartinfobar3Dscale() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 6;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfobar3Dscale() {
        if (tschchartinfobar3DscaleBuilder_ == null) {
          return tschchartinfobar3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfobar3Dscale_;
        } else {
          return tschchartinfobar3DscaleBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 6;</code>
       */
      public Builder setTschchartinfobar3Dscale(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfobar3DscaleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfobar3Dscale_ = value;
          onChanged();
        } else {
          tschchartinfobar3DscaleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 6;</code>
       */
      public Builder setTschchartinfobar3Dscale(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder builderForValue) {
        if (tschchartinfobar3DscaleBuilder_ == null) {
          tschchartinfobar3Dscale_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfobar3DscaleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 6;</code>
       */
      public Builder mergeTschchartinfobar3Dscale(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfobar3DscaleBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              tschchartinfobar3Dscale_ != null &&
              tschchartinfobar3Dscale_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance()) {
            tschchartinfobar3Dscale_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.newBuilder(tschchartinfobar3Dscale_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfobar3Dscale_ = value;
          }
          onChanged();
        } else {
          tschchartinfobar3DscaleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 6;</code>
       */
      public Builder clearTschchartinfobar3Dscale() {
        if (tschchartinfobar3DscaleBuilder_ == null) {
          tschchartinfobar3Dscale_ = null;
          onChanged();
        } else {
          tschchartinfobar3DscaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 6;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder getTschchartinfobar3DscaleBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getTschchartinfobar3DscaleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 6;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfobar3DscaleOrBuilder() {
        if (tschchartinfobar3DscaleBuilder_ != null) {
          return tschchartinfobar3DscaleBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfobar3Dscale_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfobar3Dscale_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> 
          getTschchartinfobar3DscaleFieldBuilder() {
        if (tschchartinfobar3DscaleBuilder_ == null) {
          tschchartinfobar3DscaleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder>(
                  getTschchartinfobar3Dscale(),
                  getParentForChildren(),
                  isClean());
          tschchartinfobar3Dscale_ = null;
        }
        return tschchartinfobar3DscaleBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfocolumn3Dscale_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> tschchartinfocolumn3DscaleBuilder_;
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 7;</code>
       */
      public boolean hasTschchartinfocolumn3Dscale() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 7;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfocolumn3Dscale() {
        if (tschchartinfocolumn3DscaleBuilder_ == null) {
          return tschchartinfocolumn3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfocolumn3Dscale_;
        } else {
          return tschchartinfocolumn3DscaleBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 7;</code>
       */
      public Builder setTschchartinfocolumn3Dscale(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfocolumn3DscaleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfocolumn3Dscale_ = value;
          onChanged();
        } else {
          tschchartinfocolumn3DscaleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 7;</code>
       */
      public Builder setTschchartinfocolumn3Dscale(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder builderForValue) {
        if (tschchartinfocolumn3DscaleBuilder_ == null) {
          tschchartinfocolumn3Dscale_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfocolumn3DscaleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 7;</code>
       */
      public Builder mergeTschchartinfocolumn3Dscale(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfocolumn3DscaleBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              tschchartinfocolumn3Dscale_ != null &&
              tschchartinfocolumn3Dscale_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance()) {
            tschchartinfocolumn3Dscale_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.newBuilder(tschchartinfocolumn3Dscale_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfocolumn3Dscale_ = value;
          }
          onChanged();
        } else {
          tschchartinfocolumn3DscaleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 7;</code>
       */
      public Builder clearTschchartinfocolumn3Dscale() {
        if (tschchartinfocolumn3DscaleBuilder_ == null) {
          tschchartinfocolumn3Dscale_ = null;
          onChanged();
        } else {
          tschchartinfocolumn3DscaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 7;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder getTschchartinfocolumn3DscaleBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getTschchartinfocolumn3DscaleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 7;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfocolumn3DscaleOrBuilder() {
        if (tschchartinfocolumn3DscaleBuilder_ != null) {
          return tschchartinfocolumn3DscaleBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfocolumn3Dscale_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfocolumn3Dscale_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> 
          getTschchartinfocolumn3DscaleFieldBuilder() {
        if (tschchartinfocolumn3DscaleBuilder_ == null) {
          tschchartinfocolumn3DscaleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder>(
                  getTschchartinfocolumn3Dscale(),
                  getParentForChildren(),
                  isClean());
          tschchartinfocolumn3Dscale_ = null;
        }
        return tschchartinfocolumn3DscaleBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfodefault3Dscale_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> tschchartinfodefault3DscaleBuilder_;
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 8;</code>
       */
      public boolean hasTschchartinfodefault3Dscale() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 8;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfodefault3Dscale() {
        if (tschchartinfodefault3DscaleBuilder_ == null) {
          return tschchartinfodefault3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfodefault3Dscale_;
        } else {
          return tschchartinfodefault3DscaleBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 8;</code>
       */
      public Builder setTschchartinfodefault3Dscale(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfodefault3DscaleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfodefault3Dscale_ = value;
          onChanged();
        } else {
          tschchartinfodefault3DscaleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 8;</code>
       */
      public Builder setTschchartinfodefault3Dscale(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder builderForValue) {
        if (tschchartinfodefault3DscaleBuilder_ == null) {
          tschchartinfodefault3Dscale_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfodefault3DscaleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 8;</code>
       */
      public Builder mergeTschchartinfodefault3Dscale(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfodefault3DscaleBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              tschchartinfodefault3Dscale_ != null &&
              tschchartinfodefault3Dscale_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance()) {
            tschchartinfodefault3Dscale_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.newBuilder(tschchartinfodefault3Dscale_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfodefault3Dscale_ = value;
          }
          onChanged();
        } else {
          tschchartinfodefault3DscaleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 8;</code>
       */
      public Builder clearTschchartinfodefault3Dscale() {
        if (tschchartinfodefault3DscaleBuilder_ == null) {
          tschchartinfodefault3Dscale_ = null;
          onChanged();
        } else {
          tschchartinfodefault3DscaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 8;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder getTschchartinfodefault3DscaleBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getTschchartinfodefault3DscaleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 8;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfodefault3DscaleOrBuilder() {
        if (tschchartinfodefault3DscaleBuilder_ != null) {
          return tschchartinfodefault3DscaleBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfodefault3Dscale_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfodefault3Dscale_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> 
          getTschchartinfodefault3DscaleFieldBuilder() {
        if (tschchartinfodefault3DscaleBuilder_ == null) {
          tschchartinfodefault3DscaleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder>(
                  getTschchartinfodefault3Dscale(),
                  getParentForChildren(),
                  isClean());
          tschchartinfodefault3Dscale_ = null;
        }
        return tschchartinfodefault3DscaleBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfoline3Dscale_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> tschchartinfoline3DscaleBuilder_;
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 9;</code>
       */
      public boolean hasTschchartinfoline3Dscale() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 9;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfoline3Dscale() {
        if (tschchartinfoline3DscaleBuilder_ == null) {
          return tschchartinfoline3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfoline3Dscale_;
        } else {
          return tschchartinfoline3DscaleBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 9;</code>
       */
      public Builder setTschchartinfoline3Dscale(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfoline3DscaleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfoline3Dscale_ = value;
          onChanged();
        } else {
          tschchartinfoline3DscaleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 9;</code>
       */
      public Builder setTschchartinfoline3Dscale(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder builderForValue) {
        if (tschchartinfoline3DscaleBuilder_ == null) {
          tschchartinfoline3Dscale_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfoline3DscaleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 9;</code>
       */
      public Builder mergeTschchartinfoline3Dscale(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfoline3DscaleBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              tschchartinfoline3Dscale_ != null &&
              tschchartinfoline3Dscale_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance()) {
            tschchartinfoline3Dscale_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.newBuilder(tschchartinfoline3Dscale_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfoline3Dscale_ = value;
          }
          onChanged();
        } else {
          tschchartinfoline3DscaleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 9;</code>
       */
      public Builder clearTschchartinfoline3Dscale() {
        if (tschchartinfoline3DscaleBuilder_ == null) {
          tschchartinfoline3Dscale_ = null;
          onChanged();
        } else {
          tschchartinfoline3DscaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 9;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder getTschchartinfoline3DscaleBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getTschchartinfoline3DscaleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 9;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfoline3DscaleOrBuilder() {
        if (tschchartinfoline3DscaleBuilder_ != null) {
          return tschchartinfoline3DscaleBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfoline3Dscale_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfoline3Dscale_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> 
          getTschchartinfoline3DscaleFieldBuilder() {
        if (tschchartinfoline3DscaleBuilder_ == null) {
          tschchartinfoline3DscaleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder>(
                  getTschchartinfoline3Dscale(),
                  getParentForChildren(),
                  isClean());
          tschchartinfoline3Dscale_ = null;
        }
        return tschchartinfoline3DscaleBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfopie3Dscale_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> tschchartinfopie3DscaleBuilder_;
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 10;</code>
       */
      public boolean hasTschchartinfopie3Dscale() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 10;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfopie3Dscale() {
        if (tschchartinfopie3DscaleBuilder_ == null) {
          return tschchartinfopie3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfopie3Dscale_;
        } else {
          return tschchartinfopie3DscaleBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 10;</code>
       */
      public Builder setTschchartinfopie3Dscale(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfopie3DscaleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfopie3Dscale_ = value;
          onChanged();
        } else {
          tschchartinfopie3DscaleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 10;</code>
       */
      public Builder setTschchartinfopie3Dscale(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder builderForValue) {
        if (tschchartinfopie3DscaleBuilder_ == null) {
          tschchartinfopie3Dscale_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfopie3DscaleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 10;</code>
       */
      public Builder mergeTschchartinfopie3Dscale(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfopie3DscaleBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              tschchartinfopie3Dscale_ != null &&
              tschchartinfopie3Dscale_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance()) {
            tschchartinfopie3Dscale_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.newBuilder(tschchartinfopie3Dscale_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfopie3Dscale_ = value;
          }
          onChanged();
        } else {
          tschchartinfopie3DscaleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 10;</code>
       */
      public Builder clearTschchartinfopie3Dscale() {
        if (tschchartinfopie3DscaleBuilder_ == null) {
          tschchartinfopie3Dscale_ = null;
          onChanged();
        } else {
          tschchartinfopie3DscaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 10;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder getTschchartinfopie3DscaleBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getTschchartinfopie3DscaleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 10;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfopie3DscaleOrBuilder() {
        if (tschchartinfopie3DscaleBuilder_ != null) {
          return tschchartinfopie3DscaleBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfopie3Dscale_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfopie3Dscale_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> 
          getTschchartinfopie3DscaleFieldBuilder() {
        if (tschchartinfopie3DscaleBuilder_ == null) {
          tschchartinfopie3DscaleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder>(
                  getTschchartinfopie3Dscale(),
                  getParentForChildren(),
                  isClean());
          tschchartinfopie3Dscale_ = null;
        }
        return tschchartinfopie3DscaleBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfodefault3Dviewport_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> tschchartinfodefault3DviewportBuilder_;
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 11;</code>
       */
      public boolean hasTschchartinfodefault3Dviewport() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 11;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfodefault3Dviewport() {
        if (tschchartinfodefault3DviewportBuilder_ == null) {
          return tschchartinfodefault3Dviewport_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfodefault3Dviewport_;
        } else {
          return tschchartinfodefault3DviewportBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 11;</code>
       */
      public Builder setTschchartinfodefault3Dviewport(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfodefault3DviewportBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfodefault3Dviewport_ = value;
          onChanged();
        } else {
          tschchartinfodefault3DviewportBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 11;</code>
       */
      public Builder setTschchartinfodefault3Dviewport(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder builderForValue) {
        if (tschchartinfodefault3DviewportBuilder_ == null) {
          tschchartinfodefault3Dviewport_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfodefault3DviewportBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 11;</code>
       */
      public Builder mergeTschchartinfodefault3Dviewport(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfodefault3DviewportBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              tschchartinfodefault3Dviewport_ != null &&
              tschchartinfodefault3Dviewport_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance()) {
            tschchartinfodefault3Dviewport_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.newBuilder(tschchartinfodefault3Dviewport_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfodefault3Dviewport_ = value;
          }
          onChanged();
        } else {
          tschchartinfodefault3DviewportBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 11;</code>
       */
      public Builder clearTschchartinfodefault3Dviewport() {
        if (tschchartinfodefault3DviewportBuilder_ == null) {
          tschchartinfodefault3Dviewport_ = null;
          onChanged();
        } else {
          tschchartinfodefault3DviewportBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 11;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder getTschchartinfodefault3DviewportBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getTschchartinfodefault3DviewportFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 11;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfodefault3DviewportOrBuilder() {
        if (tschchartinfodefault3DviewportBuilder_ != null) {
          return tschchartinfodefault3DviewportBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfodefault3Dviewport_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfodefault3Dviewport_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> 
          getTschchartinfodefault3DviewportFieldBuilder() {
        if (tschchartinfodefault3DviewportBuilder_ == null) {
          tschchartinfodefault3DviewportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder>(
                  getTschchartinfodefault3Dviewport(),
                  getParentForChildren(),
                  isClean());
          tschchartinfodefault3Dviewport_ = null;
        }
        return tschchartinfodefault3DviewportBuilder_;
      }

      private float tschchartinfodefaultpiestartangle_ ;
      /**
       * <code>optional float tschchartinfodefaultpiestartangle = 19;</code>
       */
      public boolean hasTschchartinfodefaultpiestartangle() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional float tschchartinfodefaultpiestartangle = 19;</code>
       */
      public float getTschchartinfodefaultpiestartangle() {
        return tschchartinfodefaultpiestartangle_;
      }
      /**
       * <code>optional float tschchartinfodefaultpiestartangle = 19;</code>
       */
      public Builder setTschchartinfodefaultpiestartangle(float value) {
        bitField0_ |= 0x00000800;
        tschchartinfodefaultpiestartangle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartinfodefaultpiestartangle = 19;</code>
       */
      public Builder clearTschchartinfodefaultpiestartangle() {
        bitField0_ = (bitField0_ & ~0x00000800);
        tschchartinfodefaultpiestartangle_ = 0F;
        onChanged();
        return this;
      }

      private boolean tschchartinfodefaultshowlegend_ ;
      /**
       * <code>optional bool tschchartinfodefaultshowlegend = 20;</code>
       */
      public boolean hasTschchartinfodefaultshowlegend() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bool tschchartinfodefaultshowlegend = 20;</code>
       */
      public boolean getTschchartinfodefaultshowlegend() {
        return tschchartinfodefaultshowlegend_;
      }
      /**
       * <code>optional bool tschchartinfodefaultshowlegend = 20;</code>
       */
      public Builder setTschchartinfodefaultshowlegend(boolean value) {
        bitField0_ |= 0x00001000;
        tschchartinfodefaultshowlegend_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartinfodefaultshowlegend = 20;</code>
       */
      public Builder clearTschchartinfodefaultshowlegend() {
        bitField0_ = (bitField0_ & ~0x00001000);
        tschchartinfodefaultshowlegend_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartinfodefaultshowtitle_ ;
      /**
       * <code>optional bool tschchartinfodefaultshowtitle = 21;</code>
       */
      public boolean hasTschchartinfodefaultshowtitle() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional bool tschchartinfodefaultshowtitle = 21;</code>
       */
      public boolean getTschchartinfodefaultshowtitle() {
        return tschchartinfodefaultshowtitle_;
      }
      /**
       * <code>optional bool tschchartinfodefaultshowtitle = 21;</code>
       */
      public Builder setTschchartinfodefaultshowtitle(boolean value) {
        bitField0_ |= 0x00002000;
        tschchartinfodefaultshowtitle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartinfodefaultshowtitle = 21;</code>
       */
      public Builder clearTschchartinfodefaultshowtitle() {
        bitField0_ = (bitField0_ & ~0x00002000);
        tschchartinfodefaultshowtitle_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartinfodefaultskiphiddendata_ ;
      /**
       * <code>optional bool tschchartinfodefaultskiphiddendata = 22;</code>
       */
      public boolean hasTschchartinfodefaultskiphiddendata() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional bool tschchartinfodefaultskiphiddendata = 22;</code>
       */
      public boolean getTschchartinfodefaultskiphiddendata() {
        return tschchartinfodefaultskiphiddendata_;
      }
      /**
       * <code>optional bool tschchartinfodefaultskiphiddendata = 22;</code>
       */
      public Builder setTschchartinfodefaultskiphiddendata(boolean value) {
        bitField0_ |= 0x00004000;
        tschchartinfodefaultskiphiddendata_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartinfodefaultskiphiddendata = 22;</code>
       */
      public Builder clearTschchartinfodefaultskiphiddendata() {
        bitField0_ = (bitField0_ & ~0x00004000);
        tschchartinfodefaultskiphiddendata_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object tschchartinfodefaulttitle_ = "";
      /**
       * <code>optional string tschchartinfodefaulttitle = 23;</code>
       */
      public boolean hasTschchartinfodefaulttitle() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional string tschchartinfodefaulttitle = 23;</code>
       */
      public java.lang.String getTschchartinfodefaulttitle() {
        java.lang.Object ref = tschchartinfodefaulttitle_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tschchartinfodefaulttitle_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string tschchartinfodefaulttitle = 23;</code>
       */
      public com.google.protobuf.ByteString
          getTschchartinfodefaulttitleBytes() {
        java.lang.Object ref = tschchartinfodefaulttitle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tschchartinfodefaulttitle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string tschchartinfodefaulttitle = 23;</code>
       */
      public Builder setTschchartinfodefaulttitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        tschchartinfodefaulttitle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string tschchartinfodefaulttitle = 23;</code>
       */
      public Builder clearTschchartinfodefaulttitle() {
        bitField0_ = (bitField0_ & ~0x00008000);
        tschchartinfodefaulttitle_ = getDefaultInstance().getTschchartinfodefaulttitle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string tschchartinfodefaulttitle = 23;</code>
       */
      public Builder setTschchartinfodefaulttitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        tschchartinfodefaulttitle_ = value;
        onChanged();
        return this;
      }

      private int tschchartinfodefaultdatasetnamelocation_ ;
      /**
       * <code>optional int32 tschchartinfodefaultdatasetnamelocation = 24;</code>
       */
      public boolean hasTschchartinfodefaultdatasetnamelocation() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 tschchartinfodefaultdatasetnamelocation = 24;</code>
       */
      public int getTschchartinfodefaultdatasetnamelocation() {
        return tschchartinfodefaultdatasetnamelocation_;
      }
      /**
       * <code>optional int32 tschchartinfodefaultdatasetnamelocation = 24;</code>
       */
      public Builder setTschchartinfodefaultdatasetnamelocation(int value) {
        bitField0_ |= 0x00010000;
        tschchartinfodefaultdatasetnamelocation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartinfodefaultdatasetnamelocation = 24;</code>
       */
      public Builder clearTschchartinfodefaultdatasetnamelocation() {
        bitField0_ = (bitField0_ & ~0x00010000);
        tschchartinfodefaultdatasetnamelocation_ = 0;
        onChanged();
        return this;
      }

      private int tschchartinfodefaultmultidatacontroltype_ ;
      /**
       * <code>optional int32 tschchartinfodefaultmultidatacontroltype = 25;</code>
       */
      public boolean hasTschchartinfodefaultmultidatacontroltype() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 tschchartinfodefaultmultidatacontroltype = 25;</code>
       */
      public int getTschchartinfodefaultmultidatacontroltype() {
        return tschchartinfodefaultmultidatacontroltype_;
      }
      /**
       * <code>optional int32 tschchartinfodefaultmultidatacontroltype = 25;</code>
       */
      public Builder setTschchartinfodefaultmultidatacontroltype(int value) {
        bitField0_ |= 0x00020000;
        tschchartinfodefaultmultidatacontroltype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartinfodefaultmultidatacontroltype = 25;</code>
       */
      public Builder clearTschchartinfodefaultmultidatacontroltype() {
        bitField0_ = (bitField0_ & ~0x00020000);
        tschchartinfodefaultmultidatacontroltype_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TSCH.Generated.ChartNonStyleArchive)
    }

    // @@protoc_insertion_point(class_scope:TSCH.Generated.ChartNonStyleArchive)
    private static final org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive();
    }

    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ChartNonStyleArchive>
        PARSER = new com.google.protobuf.AbstractParser<ChartNonStyleArchive>() {
      public ChartNonStyleArchive parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ChartNonStyleArchive(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChartNonStyleArchive> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChartNonStyleArchive> getParserForType() {
      return PARSER;
    }

    public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    public static final int CURRENT_FIELD_NUMBER = 10000;
    /**
     * <code>extend .TSCH.ChartNonStyleArchive { ... }</code>
     */
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartNonStyleArchive,
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive> current = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive.getDefaultInstance(),
          0,
          org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive.class,
          org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartNonStyleArchive.getDefaultInstance());
  }

  public interface LegendStyleArchiveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TSCH.Generated.LegendStyleArchive)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 1;</code>
     */
    boolean hasTschlegendmodeldefaultfill();
    /**
     * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 1;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschlegendmodeldefaultfill();
    /**
     * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 1;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschlegendmodeldefaultfillOrBuilder();

    /**
     * <code>optional int32 tschlegendmodeldefaultlabelparagraphstyleindex = 2;</code>
     */
    boolean hasTschlegendmodeldefaultlabelparagraphstyleindex();
    /**
     * <code>optional int32 tschlegendmodeldefaultlabelparagraphstyleindex = 2;</code>
     */
    int getTschlegendmodeldefaultlabelparagraphstyleindex();

    /**
     * <code>optional float tschlegendmodeldefaultopacity = 3;</code>
     */
    boolean hasTschlegendmodeldefaultopacity();
    /**
     * <code>optional float tschlegendmodeldefaultopacity = 3;</code>
     */
    float getTschlegendmodeldefaultopacity();

    /**
     * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 4;</code>
     */
    boolean hasTschlegendmodeldefaultshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 4;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschlegendmodeldefaultshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 4;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschlegendmodeldefaultshadowOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 5;</code>
     */
    boolean hasTschlegendmodeldefaultstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 5;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschlegendmodeldefaultstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 5;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschlegendmodeldefaultstrokeOrBuilder();
  }
  /**
   * Protobuf type {@code TSCH.Generated.LegendStyleArchive}
   */
  public  static final class LegendStyleArchive extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TSCH.Generated.LegendStyleArchive)
      LegendStyleArchiveOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LegendStyleArchive.newBuilder() to construct.
    private LegendStyleArchive(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LegendStyleArchive() {
      tschlegendmodeldefaultlabelparagraphstyleindex_ = 0;
      tschlegendmodeldefaultopacity_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LegendStyleArchive(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = tschlegendmodeldefaultfill_.toBuilder();
              }
              tschlegendmodeldefaultfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschlegendmodeldefaultfill_);
                tschlegendmodeldefaultfill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tschlegendmodeldefaultlabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              tschlegendmodeldefaultopacity_ = input.readFloat();
              break;
            }
            case 34: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = tschlegendmodeldefaultshadow_.toBuilder();
              }
              tschlegendmodeldefaultshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschlegendmodeldefaultshadow_);
                tschlegendmodeldefaultshadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = tschlegendmodeldefaultstroke_.toBuilder();
              }
              tschlegendmodeldefaultstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschlegendmodeldefaultstroke_);
                tschlegendmodeldefaultstroke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_LegendStyleArchive_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_LegendStyleArchive_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive.class, org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive.Builder.class);
    }

    private int bitField0_;
    public static final int TSCHLEGENDMODELDEFAULTFILL_FIELD_NUMBER = 1;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschlegendmodeldefaultfill_;
    /**
     * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 1;</code>
     */
    public boolean hasTschlegendmodeldefaultfill() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 1;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschlegendmodeldefaultfill() {
      return tschlegendmodeldefaultfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschlegendmodeldefaultfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 1;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschlegendmodeldefaultfillOrBuilder() {
      return tschlegendmodeldefaultfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschlegendmodeldefaultfill_;
    }

    public static final int TSCHLEGENDMODELDEFAULTLABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 2;
    private int tschlegendmodeldefaultlabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschlegendmodeldefaultlabelparagraphstyleindex = 2;</code>
     */
    public boolean hasTschlegendmodeldefaultlabelparagraphstyleindex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 tschlegendmodeldefaultlabelparagraphstyleindex = 2;</code>
     */
    public int getTschlegendmodeldefaultlabelparagraphstyleindex() {
      return tschlegendmodeldefaultlabelparagraphstyleindex_;
    }

    public static final int TSCHLEGENDMODELDEFAULTOPACITY_FIELD_NUMBER = 3;
    private float tschlegendmodeldefaultopacity_;
    /**
     * <code>optional float tschlegendmodeldefaultopacity = 3;</code>
     */
    public boolean hasTschlegendmodeldefaultopacity() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float tschlegendmodeldefaultopacity = 3;</code>
     */
    public float getTschlegendmodeldefaultopacity() {
      return tschlegendmodeldefaultopacity_;
    }

    public static final int TSCHLEGENDMODELDEFAULTSHADOW_FIELD_NUMBER = 4;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschlegendmodeldefaultshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 4;</code>
     */
    public boolean hasTschlegendmodeldefaultshadow() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 4;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschlegendmodeldefaultshadow() {
      return tschlegendmodeldefaultshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschlegendmodeldefaultshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 4;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschlegendmodeldefaultshadowOrBuilder() {
      return tschlegendmodeldefaultshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschlegendmodeldefaultshadow_;
    }

    public static final int TSCHLEGENDMODELDEFAULTSTROKE_FIELD_NUMBER = 5;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschlegendmodeldefaultstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 5;</code>
     */
    public boolean hasTschlegendmodeldefaultstroke() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 5;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschlegendmodeldefaultstroke() {
      return tschlegendmodeldefaultstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschlegendmodeldefaultstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 5;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschlegendmodeldefaultstrokeOrBuilder() {
      return tschlegendmodeldefaultstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschlegendmodeldefaultstroke_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasTschlegendmodeldefaultfill()) {
        if (!getTschlegendmodeldefaultfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschlegendmodeldefaultshadow()) {
        if (!getTschlegendmodeldefaultshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschlegendmodeldefaultstroke()) {
        if (!getTschlegendmodeldefaultstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getTschlegendmodeldefaultfill());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, tschlegendmodeldefaultlabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, tschlegendmodeldefaultopacity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getTschlegendmodeldefaultshadow());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, getTschlegendmodeldefaultstroke());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTschlegendmodeldefaultfill());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, tschlegendmodeldefaultlabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, tschlegendmodeldefaultopacity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTschlegendmodeldefaultshadow());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getTschlegendmodeldefaultstroke());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive)) {
        return super.equals(obj);
      }
      org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive other = (org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive) obj;

      boolean result = true;
      result = result && (hasTschlegendmodeldefaultfill() == other.hasTschlegendmodeldefaultfill());
      if (hasTschlegendmodeldefaultfill()) {
        result = result && getTschlegendmodeldefaultfill()
            .equals(other.getTschlegendmodeldefaultfill());
      }
      result = result && (hasTschlegendmodeldefaultlabelparagraphstyleindex() == other.hasTschlegendmodeldefaultlabelparagraphstyleindex());
      if (hasTschlegendmodeldefaultlabelparagraphstyleindex()) {
        result = result && (getTschlegendmodeldefaultlabelparagraphstyleindex()
            == other.getTschlegendmodeldefaultlabelparagraphstyleindex());
      }
      result = result && (hasTschlegendmodeldefaultopacity() == other.hasTschlegendmodeldefaultopacity());
      if (hasTschlegendmodeldefaultopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschlegendmodeldefaultopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschlegendmodeldefaultopacity()));
      }
      result = result && (hasTschlegendmodeldefaultshadow() == other.hasTschlegendmodeldefaultshadow());
      if (hasTschlegendmodeldefaultshadow()) {
        result = result && getTschlegendmodeldefaultshadow()
            .equals(other.getTschlegendmodeldefaultshadow());
      }
      result = result && (hasTschlegendmodeldefaultstroke() == other.hasTschlegendmodeldefaultstroke());
      if (hasTschlegendmodeldefaultstroke()) {
        result = result && getTschlegendmodeldefaultstroke()
            .equals(other.getTschlegendmodeldefaultstroke());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTschlegendmodeldefaultfill()) {
        hash = (37 * hash) + TSCHLEGENDMODELDEFAULTFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschlegendmodeldefaultfill().hashCode();
      }
      if (hasTschlegendmodeldefaultlabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHLEGENDMODELDEFAULTLABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschlegendmodeldefaultlabelparagraphstyleindex();
      }
      if (hasTschlegendmodeldefaultopacity()) {
        hash = (37 * hash) + TSCHLEGENDMODELDEFAULTOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschlegendmodeldefaultopacity());
      }
      if (hasTschlegendmodeldefaultshadow()) {
        hash = (37 * hash) + TSCHLEGENDMODELDEFAULTSHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschlegendmodeldefaultshadow().hashCode();
      }
      if (hasTschlegendmodeldefaultstroke()) {
        hash = (37 * hash) + TSCHLEGENDMODELDEFAULTSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschlegendmodeldefaultstroke().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TSCH.Generated.LegendStyleArchive}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TSCH.Generated.LegendStyleArchive)
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchiveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_LegendStyleArchive_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_LegendStyleArchive_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive.class, org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive.Builder.class);
      }

      // Construct using TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTschlegendmodeldefaultfillFieldBuilder();
          getTschlegendmodeldefaultshadowFieldBuilder();
          getTschlegendmodeldefaultstrokeFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (tschlegendmodeldefaultfillBuilder_ == null) {
          tschlegendmodeldefaultfill_ = null;
        } else {
          tschlegendmodeldefaultfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        tschlegendmodeldefaultlabelparagraphstyleindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        tschlegendmodeldefaultopacity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (tschlegendmodeldefaultshadowBuilder_ == null) {
          tschlegendmodeldefaultshadow_ = null;
        } else {
          tschlegendmodeldefaultshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (tschlegendmodeldefaultstrokeBuilder_ == null) {
          tschlegendmodeldefaultstroke_ = null;
        } else {
          tschlegendmodeldefaultstrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_LegendStyleArchive_descriptor;
      }

      public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive getDefaultInstanceForType() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive.getDefaultInstance();
      }

      public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive build() {
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive buildPartial() {
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive result = new org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (tschlegendmodeldefaultfillBuilder_ == null) {
          result.tschlegendmodeldefaultfill_ = tschlegendmodeldefaultfill_;
        } else {
          result.tschlegendmodeldefaultfill_ = tschlegendmodeldefaultfillBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tschlegendmodeldefaultlabelparagraphstyleindex_ = tschlegendmodeldefaultlabelparagraphstyleindex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tschlegendmodeldefaultopacity_ = tschlegendmodeldefaultopacity_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (tschlegendmodeldefaultshadowBuilder_ == null) {
          result.tschlegendmodeldefaultshadow_ = tschlegendmodeldefaultshadow_;
        } else {
          result.tschlegendmodeldefaultshadow_ = tschlegendmodeldefaultshadowBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (tschlegendmodeldefaultstrokeBuilder_ == null) {
          result.tschlegendmodeldefaultstroke_ = tschlegendmodeldefaultstroke_;
        } else {
          result.tschlegendmodeldefaultstroke_ = tschlegendmodeldefaultstrokeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive) {
          return mergeFrom((org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive other) {
        if (other == org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive.getDefaultInstance()) return this;
        if (other.hasTschlegendmodeldefaultfill()) {
          mergeTschlegendmodeldefaultfill(other.getTschlegendmodeldefaultfill());
        }
        if (other.hasTschlegendmodeldefaultlabelparagraphstyleindex()) {
          setTschlegendmodeldefaultlabelparagraphstyleindex(other.getTschlegendmodeldefaultlabelparagraphstyleindex());
        }
        if (other.hasTschlegendmodeldefaultopacity()) {
          setTschlegendmodeldefaultopacity(other.getTschlegendmodeldefaultopacity());
        }
        if (other.hasTschlegendmodeldefaultshadow()) {
          mergeTschlegendmodeldefaultshadow(other.getTschlegendmodeldefaultshadow());
        }
        if (other.hasTschlegendmodeldefaultstroke()) {
          mergeTschlegendmodeldefaultstroke(other.getTschlegendmodeldefaultstroke());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (hasTschlegendmodeldefaultfill()) {
          if (!getTschlegendmodeldefaultfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschlegendmodeldefaultshadow()) {
          if (!getTschlegendmodeldefaultshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschlegendmodeldefaultstroke()) {
          if (!getTschlegendmodeldefaultstroke().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschlegendmodeldefaultfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschlegendmodeldefaultfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 1;</code>
       */
      public boolean hasTschlegendmodeldefaultfill() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 1;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschlegendmodeldefaultfill() {
        if (tschlegendmodeldefaultfillBuilder_ == null) {
          return tschlegendmodeldefaultfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschlegendmodeldefaultfill_;
        } else {
          return tschlegendmodeldefaultfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 1;</code>
       */
      public Builder setTschlegendmodeldefaultfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschlegendmodeldefaultfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschlegendmodeldefaultfill_ = value;
          onChanged();
        } else {
          tschlegendmodeldefaultfillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 1;</code>
       */
      public Builder setTschlegendmodeldefaultfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschlegendmodeldefaultfillBuilder_ == null) {
          tschlegendmodeldefaultfill_ = builderForValue.build();
          onChanged();
        } else {
          tschlegendmodeldefaultfillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 1;</code>
       */
      public Builder mergeTschlegendmodeldefaultfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschlegendmodeldefaultfillBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              tschlegendmodeldefaultfill_ != null &&
              tschlegendmodeldefaultfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschlegendmodeldefaultfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschlegendmodeldefaultfill_).mergeFrom(value).buildPartial();
          } else {
            tschlegendmodeldefaultfill_ = value;
          }
          onChanged();
        } else {
          tschlegendmodeldefaultfillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 1;</code>
       */
      public Builder clearTschlegendmodeldefaultfill() {
        if (tschlegendmodeldefaultfillBuilder_ == null) {
          tschlegendmodeldefaultfill_ = null;
          onChanged();
        } else {
          tschlegendmodeldefaultfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 1;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschlegendmodeldefaultfillBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTschlegendmodeldefaultfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 1;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschlegendmodeldefaultfillOrBuilder() {
        if (tschlegendmodeldefaultfillBuilder_ != null) {
          return tschlegendmodeldefaultfillBuilder_.getMessageOrBuilder();
        } else {
          return tschlegendmodeldefaultfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschlegendmodeldefaultfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschlegendmodeldefaultfillFieldBuilder() {
        if (tschlegendmodeldefaultfillBuilder_ == null) {
          tschlegendmodeldefaultfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschlegendmodeldefaultfill(),
                  getParentForChildren(),
                  isClean());
          tschlegendmodeldefaultfill_ = null;
        }
        return tschlegendmodeldefaultfillBuilder_;
      }

      private int tschlegendmodeldefaultlabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschlegendmodeldefaultlabelparagraphstyleindex = 2;</code>
       */
      public boolean hasTschlegendmodeldefaultlabelparagraphstyleindex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 tschlegendmodeldefaultlabelparagraphstyleindex = 2;</code>
       */
      public int getTschlegendmodeldefaultlabelparagraphstyleindex() {
        return tschlegendmodeldefaultlabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschlegendmodeldefaultlabelparagraphstyleindex = 2;</code>
       */
      public Builder setTschlegendmodeldefaultlabelparagraphstyleindex(int value) {
        bitField0_ |= 0x00000002;
        tschlegendmodeldefaultlabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschlegendmodeldefaultlabelparagraphstyleindex = 2;</code>
       */
      public Builder clearTschlegendmodeldefaultlabelparagraphstyleindex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tschlegendmodeldefaultlabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private float tschlegendmodeldefaultopacity_ ;
      /**
       * <code>optional float tschlegendmodeldefaultopacity = 3;</code>
       */
      public boolean hasTschlegendmodeldefaultopacity() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float tschlegendmodeldefaultopacity = 3;</code>
       */
      public float getTschlegendmodeldefaultopacity() {
        return tschlegendmodeldefaultopacity_;
      }
      /**
       * <code>optional float tschlegendmodeldefaultopacity = 3;</code>
       */
      public Builder setTschlegendmodeldefaultopacity(float value) {
        bitField0_ |= 0x00000004;
        tschlegendmodeldefaultopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschlegendmodeldefaultopacity = 3;</code>
       */
      public Builder clearTschlegendmodeldefaultopacity() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tschlegendmodeldefaultopacity_ = 0F;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschlegendmodeldefaultshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschlegendmodeldefaultshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 4;</code>
       */
      public boolean hasTschlegendmodeldefaultshadow() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 4;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschlegendmodeldefaultshadow() {
        if (tschlegendmodeldefaultshadowBuilder_ == null) {
          return tschlegendmodeldefaultshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschlegendmodeldefaultshadow_;
        } else {
          return tschlegendmodeldefaultshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 4;</code>
       */
      public Builder setTschlegendmodeldefaultshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschlegendmodeldefaultshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschlegendmodeldefaultshadow_ = value;
          onChanged();
        } else {
          tschlegendmodeldefaultshadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 4;</code>
       */
      public Builder setTschlegendmodeldefaultshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschlegendmodeldefaultshadowBuilder_ == null) {
          tschlegendmodeldefaultshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschlegendmodeldefaultshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 4;</code>
       */
      public Builder mergeTschlegendmodeldefaultshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschlegendmodeldefaultshadowBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              tschlegendmodeldefaultshadow_ != null &&
              tschlegendmodeldefaultshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschlegendmodeldefaultshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschlegendmodeldefaultshadow_).mergeFrom(value).buildPartial();
          } else {
            tschlegendmodeldefaultshadow_ = value;
          }
          onChanged();
        } else {
          tschlegendmodeldefaultshadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 4;</code>
       */
      public Builder clearTschlegendmodeldefaultshadow() {
        if (tschlegendmodeldefaultshadowBuilder_ == null) {
          tschlegendmodeldefaultshadow_ = null;
          onChanged();
        } else {
          tschlegendmodeldefaultshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 4;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschlegendmodeldefaultshadowBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getTschlegendmodeldefaultshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 4;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschlegendmodeldefaultshadowOrBuilder() {
        if (tschlegendmodeldefaultshadowBuilder_ != null) {
          return tschlegendmodeldefaultshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschlegendmodeldefaultshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschlegendmodeldefaultshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschlegendmodeldefaultshadowFieldBuilder() {
        if (tschlegendmodeldefaultshadowBuilder_ == null) {
          tschlegendmodeldefaultshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschlegendmodeldefaultshadow(),
                  getParentForChildren(),
                  isClean());
          tschlegendmodeldefaultshadow_ = null;
        }
        return tschlegendmodeldefaultshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschlegendmodeldefaultstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschlegendmodeldefaultstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 5;</code>
       */
      public boolean hasTschlegendmodeldefaultstroke() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 5;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschlegendmodeldefaultstroke() {
        if (tschlegendmodeldefaultstrokeBuilder_ == null) {
          return tschlegendmodeldefaultstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschlegendmodeldefaultstroke_;
        } else {
          return tschlegendmodeldefaultstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 5;</code>
       */
      public Builder setTschlegendmodeldefaultstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschlegendmodeldefaultstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschlegendmodeldefaultstroke_ = value;
          onChanged();
        } else {
          tschlegendmodeldefaultstrokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 5;</code>
       */
      public Builder setTschlegendmodeldefaultstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschlegendmodeldefaultstrokeBuilder_ == null) {
          tschlegendmodeldefaultstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschlegendmodeldefaultstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 5;</code>
       */
      public Builder mergeTschlegendmodeldefaultstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschlegendmodeldefaultstrokeBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              tschlegendmodeldefaultstroke_ != null &&
              tschlegendmodeldefaultstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschlegendmodeldefaultstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschlegendmodeldefaultstroke_).mergeFrom(value).buildPartial();
          } else {
            tschlegendmodeldefaultstroke_ = value;
          }
          onChanged();
        } else {
          tschlegendmodeldefaultstrokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 5;</code>
       */
      public Builder clearTschlegendmodeldefaultstroke() {
        if (tschlegendmodeldefaultstrokeBuilder_ == null) {
          tschlegendmodeldefaultstroke_ = null;
          onChanged();
        } else {
          tschlegendmodeldefaultstrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 5;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschlegendmodeldefaultstrokeBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getTschlegendmodeldefaultstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 5;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschlegendmodeldefaultstrokeOrBuilder() {
        if (tschlegendmodeldefaultstrokeBuilder_ != null) {
          return tschlegendmodeldefaultstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschlegendmodeldefaultstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschlegendmodeldefaultstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschlegendmodeldefaultstrokeFieldBuilder() {
        if (tschlegendmodeldefaultstrokeBuilder_ == null) {
          tschlegendmodeldefaultstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschlegendmodeldefaultstroke(),
                  getParentForChildren(),
                  isClean());
          tschlegendmodeldefaultstroke_ = null;
        }
        return tschlegendmodeldefaultstrokeBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TSCH.Generated.LegendStyleArchive)
    }

    // @@protoc_insertion_point(class_scope:TSCH.Generated.LegendStyleArchive)
    private static final org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive();
    }

    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<LegendStyleArchive>
        PARSER = new com.google.protobuf.AbstractParser<LegendStyleArchive>() {
      public LegendStyleArchive parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new LegendStyleArchive(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LegendStyleArchive> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LegendStyleArchive> getParserForType() {
      return PARSER;
    }

    public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    public static final int CURRENT_FIELD_NUMBER = 10000;
    /**
     * <code>extend .TSCH.LegendStyleArchive { ... }</code>
     */
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.LegendStyleArchive,
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive> current = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive.getDefaultInstance(),
          0,
          org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive.class,
          org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendStyleArchive.getDefaultInstance());
  }

  public interface LegendNonStyleArchiveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TSCH.Generated.LegendNonStyleArchive)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code TSCH.Generated.LegendNonStyleArchive}
   */
  public  static final class LegendNonStyleArchive extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TSCH.Generated.LegendNonStyleArchive)
      LegendNonStyleArchiveOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LegendNonStyleArchive.newBuilder() to construct.
    private LegendNonStyleArchive(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LegendNonStyleArchive() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LegendNonStyleArchive(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_LegendNonStyleArchive_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_LegendNonStyleArchive_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive.class, org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive)) {
        return super.equals(obj);
      }
      org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive other = (org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TSCH.Generated.LegendNonStyleArchive}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TSCH.Generated.LegendNonStyleArchive)
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchiveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_LegendNonStyleArchive_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_LegendNonStyleArchive_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive.class, org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive.Builder.class);
      }

      // Construct using TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_LegendNonStyleArchive_descriptor;
      }

      public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive getDefaultInstanceForType() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive.getDefaultInstance();
      }

      public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive build() {
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive buildPartial() {
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive result = new org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive) {
          return mergeFrom((org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive other) {
        if (other == org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TSCH.Generated.LegendNonStyleArchive)
    }

    // @@protoc_insertion_point(class_scope:TSCH.Generated.LegendNonStyleArchive)
    private static final org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive();
    }

    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<LegendNonStyleArchive>
        PARSER = new com.google.protobuf.AbstractParser<LegendNonStyleArchive>() {
      public LegendNonStyleArchive parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new LegendNonStyleArchive(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LegendNonStyleArchive> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LegendNonStyleArchive> getParserForType() {
      return PARSER;
    }

    public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    public static final int CURRENT_FIELD_NUMBER = 10000;
    /**
     * <code>extend .TSCH.LegendNonStyleArchive { ... }</code>
     */
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.LegendNonStyleArchive,
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive> current = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive.getDefaultInstance(),
          0,
          org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive.class,
          org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.LegendNonStyleArchive.getDefaultInstance());
  }

  public interface ChartAxisStyleArchiveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TSCH.Generated.ChartAxisStyleArchive)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional float tschchartaxiscategory3dgridlineopacity = 1;</code>
     */
    boolean hasTschchartaxiscategory3Dgridlineopacity();
    /**
     * <code>optional float tschchartaxiscategory3dgridlineopacity = 1;</code>
     */
    float getTschchartaxiscategory3Dgridlineopacity();

    /**
     * <code>optional float tschchartaxisvalue3dgridlineopacity = 2;</code>
     */
    boolean hasTschchartaxisvalue3Dgridlineopacity();
    /**
     * <code>optional float tschchartaxisvalue3dgridlineopacity = 2;</code>
     */
    float getTschchartaxisvalue3Dgridlineopacity();

    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 3;</code>
     */
    boolean hasTschchartaxiscategory3Dgridlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 3;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxiscategory3Dgridlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 3;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxiscategory3DgridlinestrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 4;</code>
     */
    boolean hasTschchartaxisvalue3Dgridlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 4;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxisvalue3Dgridlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 4;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxisvalue3DgridlinestrokeOrBuilder();

    /**
     * <code>optional int32 tschchartaxiscategoryhorizontalspacing = 5;</code>
     */
    boolean hasTschchartaxiscategoryhorizontalspacing();
    /**
     * <code>optional int32 tschchartaxiscategoryhorizontalspacing = 5;</code>
     */
    int getTschchartaxiscategoryhorizontalspacing();

    /**
     * <code>optional int32 tschchartaxiscategorylabelparagraphstyleindex = 6;</code>
     */
    boolean hasTschchartaxiscategorylabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartaxiscategorylabelparagraphstyleindex = 6;</code>
     */
    int getTschchartaxiscategorylabelparagraphstyleindex();

    /**
     * <code>optional int32 tschchartaxisdefaultlabelparagraphstyleindex = 7;</code>
     */
    boolean hasTschchartaxisdefaultlabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartaxisdefaultlabelparagraphstyleindex = 7;</code>
     */
    int getTschchartaxisdefaultlabelparagraphstyleindex();

    /**
     * <code>optional int32 tschchartaxisvaluelabelparagraphstyleindex = 8;</code>
     */
    boolean hasTschchartaxisvaluelabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartaxisvaluelabelparagraphstyleindex = 8;</code>
     */
    int getTschchartaxisvaluelabelparagraphstyleindex();

    /**
     * <code>optional float tschchartaxiscategorylabelsorientation = 9;</code>
     */
    boolean hasTschchartaxiscategorylabelsorientation();
    /**
     * <code>optional float tschchartaxiscategorylabelsorientation = 9;</code>
     */
    float getTschchartaxiscategorylabelsorientation();

    /**
     * <code>optional float tschchartaxisdefaultlabelsorientation = 10;</code>
     */
    boolean hasTschchartaxisdefaultlabelsorientation();
    /**
     * <code>optional float tschchartaxisdefaultlabelsorientation = 10;</code>
     */
    float getTschchartaxisdefaultlabelsorientation();

    /**
     * <code>optional float tschchartaxisvaluelabelsorientation = 11;</code>
     */
    boolean hasTschchartaxisvaluelabelsorientation();
    /**
     * <code>optional float tschchartaxisvaluelabelsorientation = 11;</code>
     */
    float getTschchartaxisvaluelabelsorientation();

    /**
     * <code>optional float tschchartaxiscategorymajorgridlineopacity = 12;</code>
     */
    boolean hasTschchartaxiscategorymajorgridlineopacity();
    /**
     * <code>optional float tschchartaxiscategorymajorgridlineopacity = 12;</code>
     */
    float getTschchartaxiscategorymajorgridlineopacity();

    /**
     * <code>optional float tschchartaxisvaluemajorgridlineopacity = 13;</code>
     */
    boolean hasTschchartaxisvaluemajorgridlineopacity();
    /**
     * <code>optional float tschchartaxisvaluemajorgridlineopacity = 13;</code>
     */
    float getTschchartaxisvaluemajorgridlineopacity();

    /**
     * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 14;</code>
     */
    boolean hasTschchartaxiscategorymajorgridlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 14;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartaxiscategorymajorgridlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 14;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartaxiscategorymajorgridlineshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 15;</code>
     */
    boolean hasTschchartaxisvaluemajorgridlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 15;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartaxisvaluemajorgridlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 15;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartaxisvaluemajorgridlineshadowOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 16;</code>
     */
    boolean hasTschchartaxiscategorymajorgridlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 16;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxiscategorymajorgridlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 16;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxiscategorymajorgridlinestrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 17;</code>
     */
    boolean hasTschchartaxisvaluemajorgridlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 17;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxisvaluemajorgridlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 17;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxisvaluemajorgridlinestrokeOrBuilder();

    /**
     * <code>optional float tschchartaxiscategoryminorgridlineopacity = 18;</code>
     */
    boolean hasTschchartaxiscategoryminorgridlineopacity();
    /**
     * <code>optional float tschchartaxiscategoryminorgridlineopacity = 18;</code>
     */
    float getTschchartaxiscategoryminorgridlineopacity();

    /**
     * <code>optional float tschchartaxisvalueminorgridlineopacity = 19;</code>
     */
    boolean hasTschchartaxisvalueminorgridlineopacity();
    /**
     * <code>optional float tschchartaxisvalueminorgridlineopacity = 19;</code>
     */
    float getTschchartaxisvalueminorgridlineopacity();

    /**
     * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 20;</code>
     */
    boolean hasTschchartaxiscategoryminorgridlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 20;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartaxiscategoryminorgridlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 20;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartaxiscategoryminorgridlineshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 21;</code>
     */
    boolean hasTschchartaxisvalueminorgridlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 21;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartaxisvalueminorgridlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 21;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartaxisvalueminorgridlineshadowOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 22;</code>
     */
    boolean hasTschchartaxiscategoryminorgridlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 22;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxiscategoryminorgridlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 22;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxiscategoryminorgridlinestrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 23;</code>
     */
    boolean hasTschchartaxisvalueminorgridlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 23;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxisvalueminorgridlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 23;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxisvalueminorgridlinestrokeOrBuilder();

    /**
     * <code>optional bool tschchartaxiscategoryshowaxis = 24;</code>
     */
    boolean hasTschchartaxiscategoryshowaxis();
    /**
     * <code>optional bool tschchartaxiscategoryshowaxis = 24;</code>
     */
    boolean getTschchartaxiscategoryshowaxis();

    /**
     * <code>optional bool tschchartaxisvalueshowaxis = 25;</code>
     */
    boolean hasTschchartaxisvalueshowaxis();
    /**
     * <code>optional bool tschchartaxisvalueshowaxis = 25;</code>
     */
    boolean getTschchartaxisvalueshowaxis();

    /**
     * <code>optional bool tschchartaxiscategoryshowlastlabel = 26;</code>
     */
    boolean hasTschchartaxiscategoryshowlastlabel();
    /**
     * <code>optional bool tschchartaxiscategoryshowlastlabel = 26;</code>
     */
    boolean getTschchartaxiscategoryshowlastlabel();

    /**
     * <code>optional bool tschchartaxiscategoryshowmajorgridlines = 27;</code>
     */
    boolean hasTschchartaxiscategoryshowmajorgridlines();
    /**
     * <code>optional bool tschchartaxiscategoryshowmajorgridlines = 27;</code>
     */
    boolean getTschchartaxiscategoryshowmajorgridlines();

    /**
     * <code>optional bool tschchartaxisvalueshowmajorgridlines = 28;</code>
     */
    boolean hasTschchartaxisvalueshowmajorgridlines();
    /**
     * <code>optional bool tschchartaxisvalueshowmajorgridlines = 28;</code>
     */
    boolean getTschchartaxisvalueshowmajorgridlines();

    /**
     * <code>optional bool tschchartaxiscategoryshowmajortickmarks = 29;</code>
     */
    boolean hasTschchartaxiscategoryshowmajortickmarks();
    /**
     * <code>optional bool tschchartaxiscategoryshowmajortickmarks = 29;</code>
     */
    boolean getTschchartaxiscategoryshowmajortickmarks();

    /**
     * <code>optional bool tschchartaxisvalueshowmajortickmarks = 30;</code>
     */
    boolean hasTschchartaxisvalueshowmajortickmarks();
    /**
     * <code>optional bool tschchartaxisvalueshowmajortickmarks = 30;</code>
     */
    boolean getTschchartaxisvalueshowmajortickmarks();

    /**
     * <code>optional bool tschchartaxisvalueshowminimumlabel = 31;</code>
     */
    boolean hasTschchartaxisvalueshowminimumlabel();
    /**
     * <code>optional bool tschchartaxisvalueshowminimumlabel = 31;</code>
     */
    boolean getTschchartaxisvalueshowminimumlabel();

    /**
     * <code>optional bool tschchartaxiscategoryshowminorgridlines = 32;</code>
     */
    boolean hasTschchartaxiscategoryshowminorgridlines();
    /**
     * <code>optional bool tschchartaxiscategoryshowminorgridlines = 32;</code>
     */
    boolean getTschchartaxiscategoryshowminorgridlines();

    /**
     * <code>optional bool tschchartaxisvalueshowminorgridlines = 33;</code>
     */
    boolean hasTschchartaxisvalueshowminorgridlines();
    /**
     * <code>optional bool tschchartaxisvalueshowminorgridlines = 33;</code>
     */
    boolean getTschchartaxisvalueshowminorgridlines();

    /**
     * <code>optional bool tschchartaxiscategoryshowminortickmarks = 34;</code>
     */
    boolean hasTschchartaxiscategoryshowminortickmarks();
    /**
     * <code>optional bool tschchartaxiscategoryshowminortickmarks = 34;</code>
     */
    boolean getTschchartaxiscategoryshowminortickmarks();

    /**
     * <code>optional bool tschchartaxisvalueshowminortickmarks = 35;</code>
     */
    boolean hasTschchartaxisvalueshowminortickmarks();
    /**
     * <code>optional bool tschchartaxisvalueshowminortickmarks = 35;</code>
     */
    boolean getTschchartaxisvalueshowminortickmarks();

    /**
     * <code>optional int32 tschchartaxiscategorytickmarklocation = 36;</code>
     */
    boolean hasTschchartaxiscategorytickmarklocation();
    /**
     * <code>optional int32 tschchartaxiscategorytickmarklocation = 36;</code>
     */
    int getTschchartaxiscategorytickmarklocation();

    /**
     * <code>optional int32 tschchartaxisvaluetickmarklocation = 37;</code>
     */
    boolean hasTschchartaxisvaluetickmarklocation();
    /**
     * <code>optional int32 tschchartaxisvaluetickmarklocation = 37;</code>
     */
    int getTschchartaxisvaluetickmarklocation();

    /**
     * <code>optional int32 tschchartaxiscategorytitleparagraphstyleindex = 38;</code>
     */
    boolean hasTschchartaxiscategorytitleparagraphstyleindex();
    /**
     * <code>optional int32 tschchartaxiscategorytitleparagraphstyleindex = 38;</code>
     */
    int getTschchartaxiscategorytitleparagraphstyleindex();

    /**
     * <code>optional int32 tschchartaxisdefaulttitleparagraphstyleindex = 39;</code>
     */
    boolean hasTschchartaxisdefaulttitleparagraphstyleindex();
    /**
     * <code>optional int32 tschchartaxisdefaulttitleparagraphstyleindex = 39;</code>
     */
    int getTschchartaxisdefaulttitleparagraphstyleindex();

    /**
     * <code>optional int32 tschchartaxisvaluetitleparagraphstyleindex = 40;</code>
     */
    boolean hasTschchartaxisvaluetitleparagraphstyleindex();
    /**
     * <code>optional int32 tschchartaxisvaluetitleparagraphstyleindex = 40;</code>
     */
    int getTschchartaxisvaluetitleparagraphstyleindex();

    /**
     * <code>optional int32 tschchartaxiscategoryverticalspacing = 41;</code>
     */
    boolean hasTschchartaxiscategoryverticalspacing();
    /**
     * <code>optional int32 tschchartaxiscategoryverticalspacing = 41;</code>
     */
    int getTschchartaxiscategoryverticalspacing();
  }
  /**
   * Protobuf type {@code TSCH.Generated.ChartAxisStyleArchive}
   */
  public  static final class ChartAxisStyleArchive extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TSCH.Generated.ChartAxisStyleArchive)
      ChartAxisStyleArchiveOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChartAxisStyleArchive.newBuilder() to construct.
    private ChartAxisStyleArchive(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChartAxisStyleArchive() {
      tschchartaxiscategory3Dgridlineopacity_ = 0F;
      tschchartaxisvalue3Dgridlineopacity_ = 0F;
      tschchartaxiscategoryhorizontalspacing_ = 0;
      tschchartaxiscategorylabelparagraphstyleindex_ = 0;
      tschchartaxisdefaultlabelparagraphstyleindex_ = 0;
      tschchartaxisvaluelabelparagraphstyleindex_ = 0;
      tschchartaxiscategorylabelsorientation_ = 0F;
      tschchartaxisdefaultlabelsorientation_ = 0F;
      tschchartaxisvaluelabelsorientation_ = 0F;
      tschchartaxiscategorymajorgridlineopacity_ = 0F;
      tschchartaxisvaluemajorgridlineopacity_ = 0F;
      tschchartaxiscategoryminorgridlineopacity_ = 0F;
      tschchartaxisvalueminorgridlineopacity_ = 0F;
      tschchartaxiscategoryshowaxis_ = false;
      tschchartaxisvalueshowaxis_ = false;
      tschchartaxiscategoryshowlastlabel_ = false;
      tschchartaxiscategoryshowmajorgridlines_ = false;
      tschchartaxisvalueshowmajorgridlines_ = false;
      tschchartaxiscategoryshowmajortickmarks_ = false;
      tschchartaxisvalueshowmajortickmarks_ = false;
      tschchartaxisvalueshowminimumlabel_ = false;
      tschchartaxiscategoryshowminorgridlines_ = false;
      tschchartaxisvalueshowminorgridlines_ = false;
      tschchartaxiscategoryshowminortickmarks_ = false;
      tschchartaxisvalueshowminortickmarks_ = false;
      tschchartaxiscategorytickmarklocation_ = 0;
      tschchartaxisvaluetickmarklocation_ = 0;
      tschchartaxiscategorytitleparagraphstyleindex_ = 0;
      tschchartaxisdefaulttitleparagraphstyleindex_ = 0;
      tschchartaxisvaluetitleparagraphstyleindex_ = 0;
      tschchartaxiscategoryverticalspacing_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChartAxisStyleArchive(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              tschchartaxiscategory3Dgridlineopacity_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              tschchartaxisvalue3Dgridlineopacity_ = input.readFloat();
              break;
            }
            case 26: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = tschchartaxiscategory3Dgridlinestroke_.toBuilder();
              }
              tschchartaxiscategory3Dgridlinestroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxiscategory3Dgridlinestroke_);
                tschchartaxiscategory3Dgridlinestroke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = tschchartaxisvalue3Dgridlinestroke_.toBuilder();
              }
              tschchartaxisvalue3Dgridlinestroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxisvalue3Dgridlinestroke_);
                tschchartaxisvalue3Dgridlinestroke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              tschchartaxiscategoryhorizontalspacing_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              tschchartaxiscategorylabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              tschchartaxisdefaultlabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              tschchartaxisvaluelabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              tschchartaxiscategorylabelsorientation_ = input.readFloat();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              tschchartaxisdefaultlabelsorientation_ = input.readFloat();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              tschchartaxisvaluelabelsorientation_ = input.readFloat();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000800;
              tschchartaxiscategorymajorgridlineopacity_ = input.readFloat();
              break;
            }
            case 109: {
              bitField0_ |= 0x00001000;
              tschchartaxisvaluemajorgridlineopacity_ = input.readFloat();
              break;
            }
            case 114: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00002000) == 0x00002000)) {
                subBuilder = tschchartaxiscategorymajorgridlineshadow_.toBuilder();
              }
              tschchartaxiscategorymajorgridlineshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxiscategorymajorgridlineshadow_);
                tschchartaxiscategorymajorgridlineshadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00002000;
              break;
            }
            case 122: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00004000) == 0x00004000)) {
                subBuilder = tschchartaxisvaluemajorgridlineshadow_.toBuilder();
              }
              tschchartaxisvaluemajorgridlineshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxisvaluemajorgridlineshadow_);
                tschchartaxisvaluemajorgridlineshadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00004000;
              break;
            }
            case 130: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00008000) == 0x00008000)) {
                subBuilder = tschchartaxiscategorymajorgridlinestroke_.toBuilder();
              }
              tschchartaxiscategorymajorgridlinestroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxiscategorymajorgridlinestroke_);
                tschchartaxiscategorymajorgridlinestroke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00008000;
              break;
            }
            case 138: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00010000) == 0x00010000)) {
                subBuilder = tschchartaxisvaluemajorgridlinestroke_.toBuilder();
              }
              tschchartaxisvaluemajorgridlinestroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxisvaluemajorgridlinestroke_);
                tschchartaxisvaluemajorgridlinestroke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00010000;
              break;
            }
            case 149: {
              bitField0_ |= 0x00020000;
              tschchartaxiscategoryminorgridlineopacity_ = input.readFloat();
              break;
            }
            case 157: {
              bitField0_ |= 0x00040000;
              tschchartaxisvalueminorgridlineopacity_ = input.readFloat();
              break;
            }
            case 162: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00080000) == 0x00080000)) {
                subBuilder = tschchartaxiscategoryminorgridlineshadow_.toBuilder();
              }
              tschchartaxiscategoryminorgridlineshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxiscategoryminorgridlineshadow_);
                tschchartaxiscategoryminorgridlineshadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00080000;
              break;
            }
            case 170: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00100000) == 0x00100000)) {
                subBuilder = tschchartaxisvalueminorgridlineshadow_.toBuilder();
              }
              tschchartaxisvalueminorgridlineshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxisvalueminorgridlineshadow_);
                tschchartaxisvalueminorgridlineshadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00100000;
              break;
            }
            case 178: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00200000) == 0x00200000)) {
                subBuilder = tschchartaxiscategoryminorgridlinestroke_.toBuilder();
              }
              tschchartaxiscategoryminorgridlinestroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxiscategoryminorgridlinestroke_);
                tschchartaxiscategoryminorgridlinestroke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00200000;
              break;
            }
            case 186: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00400000) == 0x00400000)) {
                subBuilder = tschchartaxisvalueminorgridlinestroke_.toBuilder();
              }
              tschchartaxisvalueminorgridlinestroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxisvalueminorgridlinestroke_);
                tschchartaxisvalueminorgridlinestroke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00400000;
              break;
            }
            case 192: {
              bitField0_ |= 0x00800000;
              tschchartaxiscategoryshowaxis_ = input.readBool();
              break;
            }
            case 200: {
              bitField0_ |= 0x01000000;
              tschchartaxisvalueshowaxis_ = input.readBool();
              break;
            }
            case 208: {
              bitField0_ |= 0x02000000;
              tschchartaxiscategoryshowlastlabel_ = input.readBool();
              break;
            }
            case 216: {
              bitField0_ |= 0x04000000;
              tschchartaxiscategoryshowmajorgridlines_ = input.readBool();
              break;
            }
            case 224: {
              bitField0_ |= 0x08000000;
              tschchartaxisvalueshowmajorgridlines_ = input.readBool();
              break;
            }
            case 232: {
              bitField0_ |= 0x10000000;
              tschchartaxiscategoryshowmajortickmarks_ = input.readBool();
              break;
            }
            case 240: {
              bitField0_ |= 0x20000000;
              tschchartaxisvalueshowmajortickmarks_ = input.readBool();
              break;
            }
            case 248: {
              bitField0_ |= 0x40000000;
              tschchartaxisvalueshowminimumlabel_ = input.readBool();
              break;
            }
            case 256: {
              bitField0_ |= 0x80000000;
              tschchartaxiscategoryshowminorgridlines_ = input.readBool();
              break;
            }
            case 264: {
              bitField1_ |= 0x00000001;
              tschchartaxisvalueshowminorgridlines_ = input.readBool();
              break;
            }
            case 272: {
              bitField1_ |= 0x00000002;
              tschchartaxiscategoryshowminortickmarks_ = input.readBool();
              break;
            }
            case 280: {
              bitField1_ |= 0x00000004;
              tschchartaxisvalueshowminortickmarks_ = input.readBool();
              break;
            }
            case 288: {
              bitField1_ |= 0x00000008;
              tschchartaxiscategorytickmarklocation_ = input.readInt32();
              break;
            }
            case 296: {
              bitField1_ |= 0x00000010;
              tschchartaxisvaluetickmarklocation_ = input.readInt32();
              break;
            }
            case 304: {
              bitField1_ |= 0x00000020;
              tschchartaxiscategorytitleparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 312: {
              bitField1_ |= 0x00000040;
              tschchartaxisdefaulttitleparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 320: {
              bitField1_ |= 0x00000080;
              tschchartaxisvaluetitleparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 328: {
              bitField1_ |= 0x00000100;
              tschchartaxiscategoryverticalspacing_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartAxisStyleArchive_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartAxisStyleArchive_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive.class, org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive.Builder.class);
    }

    private int bitField0_;
    private int bitField1_;
    public static final int TSCHCHARTAXISCATEGORY3DGRIDLINEOPACITY_FIELD_NUMBER = 1;
    private float tschchartaxiscategory3Dgridlineopacity_;
    /**
     * <code>optional float tschchartaxiscategory3dgridlineopacity = 1;</code>
     */
    public boolean hasTschchartaxiscategory3Dgridlineopacity() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional float tschchartaxiscategory3dgridlineopacity = 1;</code>
     */
    public float getTschchartaxiscategory3Dgridlineopacity() {
      return tschchartaxiscategory3Dgridlineopacity_;
    }

    public static final int TSCHCHARTAXISVALUE3DGRIDLINEOPACITY_FIELD_NUMBER = 2;
    private float tschchartaxisvalue3Dgridlineopacity_;
    /**
     * <code>optional float tschchartaxisvalue3dgridlineopacity = 2;</code>
     */
    public boolean hasTschchartaxisvalue3Dgridlineopacity() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float tschchartaxisvalue3dgridlineopacity = 2;</code>
     */
    public float getTschchartaxisvalue3Dgridlineopacity() {
      return tschchartaxisvalue3Dgridlineopacity_;
    }

    public static final int TSCHCHARTAXISCATEGORY3DGRIDLINESTROKE_FIELD_NUMBER = 3;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartaxiscategory3Dgridlinestroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 3;</code>
     */
    public boolean hasTschchartaxiscategory3Dgridlinestroke() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 3;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxiscategory3Dgridlinestroke() {
      return tschchartaxiscategory3Dgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxiscategory3Dgridlinestroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 3;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxiscategory3DgridlinestrokeOrBuilder() {
      return tschchartaxiscategory3Dgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxiscategory3Dgridlinestroke_;
    }

    public static final int TSCHCHARTAXISVALUE3DGRIDLINESTROKE_FIELD_NUMBER = 4;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartaxisvalue3Dgridlinestroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 4;</code>
     */
    public boolean hasTschchartaxisvalue3Dgridlinestroke() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 4;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxisvalue3Dgridlinestroke() {
      return tschchartaxisvalue3Dgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxisvalue3Dgridlinestroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 4;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxisvalue3DgridlinestrokeOrBuilder() {
      return tschchartaxisvalue3Dgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxisvalue3Dgridlinestroke_;
    }

    public static final int TSCHCHARTAXISCATEGORYHORIZONTALSPACING_FIELD_NUMBER = 5;
    private int tschchartaxiscategoryhorizontalspacing_;
    /**
     * <code>optional int32 tschchartaxiscategoryhorizontalspacing = 5;</code>
     */
    public boolean hasTschchartaxiscategoryhorizontalspacing() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 tschchartaxiscategoryhorizontalspacing = 5;</code>
     */
    public int getTschchartaxiscategoryhorizontalspacing() {
      return tschchartaxiscategoryhorizontalspacing_;
    }

    public static final int TSCHCHARTAXISCATEGORYLABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 6;
    private int tschchartaxiscategorylabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartaxiscategorylabelparagraphstyleindex = 6;</code>
     */
    public boolean hasTschchartaxiscategorylabelparagraphstyleindex() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 tschchartaxiscategorylabelparagraphstyleindex = 6;</code>
     */
    public int getTschchartaxiscategorylabelparagraphstyleindex() {
      return tschchartaxiscategorylabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTAXISDEFAULTLABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 7;
    private int tschchartaxisdefaultlabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartaxisdefaultlabelparagraphstyleindex = 7;</code>
     */
    public boolean hasTschchartaxisdefaultlabelparagraphstyleindex() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 tschchartaxisdefaultlabelparagraphstyleindex = 7;</code>
     */
    public int getTschchartaxisdefaultlabelparagraphstyleindex() {
      return tschchartaxisdefaultlabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTAXISVALUELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 8;
    private int tschchartaxisvaluelabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartaxisvaluelabelparagraphstyleindex = 8;</code>
     */
    public boolean hasTschchartaxisvaluelabelparagraphstyleindex() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 tschchartaxisvaluelabelparagraphstyleindex = 8;</code>
     */
    public int getTschchartaxisvaluelabelparagraphstyleindex() {
      return tschchartaxisvaluelabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTAXISCATEGORYLABELSORIENTATION_FIELD_NUMBER = 9;
    private float tschchartaxiscategorylabelsorientation_;
    /**
     * <code>optional float tschchartaxiscategorylabelsorientation = 9;</code>
     */
    public boolean hasTschchartaxiscategorylabelsorientation() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float tschchartaxiscategorylabelsorientation = 9;</code>
     */
    public float getTschchartaxiscategorylabelsorientation() {
      return tschchartaxiscategorylabelsorientation_;
    }

    public static final int TSCHCHARTAXISDEFAULTLABELSORIENTATION_FIELD_NUMBER = 10;
    private float tschchartaxisdefaultlabelsorientation_;
    /**
     * <code>optional float tschchartaxisdefaultlabelsorientation = 10;</code>
     */
    public boolean hasTschchartaxisdefaultlabelsorientation() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional float tschchartaxisdefaultlabelsorientation = 10;</code>
     */
    public float getTschchartaxisdefaultlabelsorientation() {
      return tschchartaxisdefaultlabelsorientation_;
    }

    public static final int TSCHCHARTAXISVALUELABELSORIENTATION_FIELD_NUMBER = 11;
    private float tschchartaxisvaluelabelsorientation_;
    /**
     * <code>optional float tschchartaxisvaluelabelsorientation = 11;</code>
     */
    public boolean hasTschchartaxisvaluelabelsorientation() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional float tschchartaxisvaluelabelsorientation = 11;</code>
     */
    public float getTschchartaxisvaluelabelsorientation() {
      return tschchartaxisvaluelabelsorientation_;
    }

    public static final int TSCHCHARTAXISCATEGORYMAJORGRIDLINEOPACITY_FIELD_NUMBER = 12;
    private float tschchartaxiscategorymajorgridlineopacity_;
    /**
     * <code>optional float tschchartaxiscategorymajorgridlineopacity = 12;</code>
     */
    public boolean hasTschchartaxiscategorymajorgridlineopacity() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional float tschchartaxiscategorymajorgridlineopacity = 12;</code>
     */
    public float getTschchartaxiscategorymajorgridlineopacity() {
      return tschchartaxiscategorymajorgridlineopacity_;
    }

    public static final int TSCHCHARTAXISVALUEMAJORGRIDLINEOPACITY_FIELD_NUMBER = 13;
    private float tschchartaxisvaluemajorgridlineopacity_;
    /**
     * <code>optional float tschchartaxisvaluemajorgridlineopacity = 13;</code>
     */
    public boolean hasTschchartaxisvaluemajorgridlineopacity() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional float tschchartaxisvaluemajorgridlineopacity = 13;</code>
     */
    public float getTschchartaxisvaluemajorgridlineopacity() {
      return tschchartaxisvaluemajorgridlineopacity_;
    }

    public static final int TSCHCHARTAXISCATEGORYMAJORGRIDLINESHADOW_FIELD_NUMBER = 14;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartaxiscategorymajorgridlineshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 14;</code>
     */
    public boolean hasTschchartaxiscategorymajorgridlineshadow() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 14;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartaxiscategorymajorgridlineshadow() {
      return tschchartaxiscategorymajorgridlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxiscategorymajorgridlineshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 14;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartaxiscategorymajorgridlineshadowOrBuilder() {
      return tschchartaxiscategorymajorgridlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxiscategorymajorgridlineshadow_;
    }

    public static final int TSCHCHARTAXISVALUEMAJORGRIDLINESHADOW_FIELD_NUMBER = 15;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartaxisvaluemajorgridlineshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 15;</code>
     */
    public boolean hasTschchartaxisvaluemajorgridlineshadow() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 15;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartaxisvaluemajorgridlineshadow() {
      return tschchartaxisvaluemajorgridlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxisvaluemajorgridlineshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 15;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartaxisvaluemajorgridlineshadowOrBuilder() {
      return tschchartaxisvaluemajorgridlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxisvaluemajorgridlineshadow_;
    }

    public static final int TSCHCHARTAXISCATEGORYMAJORGRIDLINESTROKE_FIELD_NUMBER = 16;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartaxiscategorymajorgridlinestroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 16;</code>
     */
    public boolean hasTschchartaxiscategorymajorgridlinestroke() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 16;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxiscategorymajorgridlinestroke() {
      return tschchartaxiscategorymajorgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxiscategorymajorgridlinestroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 16;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxiscategorymajorgridlinestrokeOrBuilder() {
      return tschchartaxiscategorymajorgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxiscategorymajorgridlinestroke_;
    }

    public static final int TSCHCHARTAXISVALUEMAJORGRIDLINESTROKE_FIELD_NUMBER = 17;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartaxisvaluemajorgridlinestroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 17;</code>
     */
    public boolean hasTschchartaxisvaluemajorgridlinestroke() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 17;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxisvaluemajorgridlinestroke() {
      return tschchartaxisvaluemajorgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxisvaluemajorgridlinestroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 17;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxisvaluemajorgridlinestrokeOrBuilder() {
      return tschchartaxisvaluemajorgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxisvaluemajorgridlinestroke_;
    }

    public static final int TSCHCHARTAXISCATEGORYMINORGRIDLINEOPACITY_FIELD_NUMBER = 18;
    private float tschchartaxiscategoryminorgridlineopacity_;
    /**
     * <code>optional float tschchartaxiscategoryminorgridlineopacity = 18;</code>
     */
    public boolean hasTschchartaxiscategoryminorgridlineopacity() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional float tschchartaxiscategoryminorgridlineopacity = 18;</code>
     */
    public float getTschchartaxiscategoryminorgridlineopacity() {
      return tschchartaxiscategoryminorgridlineopacity_;
    }

    public static final int TSCHCHARTAXISVALUEMINORGRIDLINEOPACITY_FIELD_NUMBER = 19;
    private float tschchartaxisvalueminorgridlineopacity_;
    /**
     * <code>optional float tschchartaxisvalueminorgridlineopacity = 19;</code>
     */
    public boolean hasTschchartaxisvalueminorgridlineopacity() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional float tschchartaxisvalueminorgridlineopacity = 19;</code>
     */
    public float getTschchartaxisvalueminorgridlineopacity() {
      return tschchartaxisvalueminorgridlineopacity_;
    }

    public static final int TSCHCHARTAXISCATEGORYMINORGRIDLINESHADOW_FIELD_NUMBER = 20;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartaxiscategoryminorgridlineshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 20;</code>
     */
    public boolean hasTschchartaxiscategoryminorgridlineshadow() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 20;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartaxiscategoryminorgridlineshadow() {
      return tschchartaxiscategoryminorgridlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxiscategoryminorgridlineshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 20;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartaxiscategoryminorgridlineshadowOrBuilder() {
      return tschchartaxiscategoryminorgridlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxiscategoryminorgridlineshadow_;
    }

    public static final int TSCHCHARTAXISVALUEMINORGRIDLINESHADOW_FIELD_NUMBER = 21;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartaxisvalueminorgridlineshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 21;</code>
     */
    public boolean hasTschchartaxisvalueminorgridlineshadow() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 21;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartaxisvalueminorgridlineshadow() {
      return tschchartaxisvalueminorgridlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxisvalueminorgridlineshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 21;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartaxisvalueminorgridlineshadowOrBuilder() {
      return tschchartaxisvalueminorgridlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxisvalueminorgridlineshadow_;
    }

    public static final int TSCHCHARTAXISCATEGORYMINORGRIDLINESTROKE_FIELD_NUMBER = 22;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartaxiscategoryminorgridlinestroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 22;</code>
     */
    public boolean hasTschchartaxiscategoryminorgridlinestroke() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 22;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxiscategoryminorgridlinestroke() {
      return tschchartaxiscategoryminorgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxiscategoryminorgridlinestroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 22;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxiscategoryminorgridlinestrokeOrBuilder() {
      return tschchartaxiscategoryminorgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxiscategoryminorgridlinestroke_;
    }

    public static final int TSCHCHARTAXISVALUEMINORGRIDLINESTROKE_FIELD_NUMBER = 23;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartaxisvalueminorgridlinestroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 23;</code>
     */
    public boolean hasTschchartaxisvalueminorgridlinestroke() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 23;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxisvalueminorgridlinestroke() {
      return tschchartaxisvalueminorgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxisvalueminorgridlinestroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 23;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxisvalueminorgridlinestrokeOrBuilder() {
      return tschchartaxisvalueminorgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxisvalueminorgridlinestroke_;
    }

    public static final int TSCHCHARTAXISCATEGORYSHOWAXIS_FIELD_NUMBER = 24;
    private boolean tschchartaxiscategoryshowaxis_;
    /**
     * <code>optional bool tschchartaxiscategoryshowaxis = 24;</code>
     */
    public boolean hasTschchartaxiscategoryshowaxis() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional bool tschchartaxiscategoryshowaxis = 24;</code>
     */
    public boolean getTschchartaxiscategoryshowaxis() {
      return tschchartaxiscategoryshowaxis_;
    }

    public static final int TSCHCHARTAXISVALUESHOWAXIS_FIELD_NUMBER = 25;
    private boolean tschchartaxisvalueshowaxis_;
    /**
     * <code>optional bool tschchartaxisvalueshowaxis = 25;</code>
     */
    public boolean hasTschchartaxisvalueshowaxis() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional bool tschchartaxisvalueshowaxis = 25;</code>
     */
    public boolean getTschchartaxisvalueshowaxis() {
      return tschchartaxisvalueshowaxis_;
    }

    public static final int TSCHCHARTAXISCATEGORYSHOWLASTLABEL_FIELD_NUMBER = 26;
    private boolean tschchartaxiscategoryshowlastlabel_;
    /**
     * <code>optional bool tschchartaxiscategoryshowlastlabel = 26;</code>
     */
    public boolean hasTschchartaxiscategoryshowlastlabel() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional bool tschchartaxiscategoryshowlastlabel = 26;</code>
     */
    public boolean getTschchartaxiscategoryshowlastlabel() {
      return tschchartaxiscategoryshowlastlabel_;
    }

    public static final int TSCHCHARTAXISCATEGORYSHOWMAJORGRIDLINES_FIELD_NUMBER = 27;
    private boolean tschchartaxiscategoryshowmajorgridlines_;
    /**
     * <code>optional bool tschchartaxiscategoryshowmajorgridlines = 27;</code>
     */
    public boolean hasTschchartaxiscategoryshowmajorgridlines() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional bool tschchartaxiscategoryshowmajorgridlines = 27;</code>
     */
    public boolean getTschchartaxiscategoryshowmajorgridlines() {
      return tschchartaxiscategoryshowmajorgridlines_;
    }

    public static final int TSCHCHARTAXISVALUESHOWMAJORGRIDLINES_FIELD_NUMBER = 28;
    private boolean tschchartaxisvalueshowmajorgridlines_;
    /**
     * <code>optional bool tschchartaxisvalueshowmajorgridlines = 28;</code>
     */
    public boolean hasTschchartaxisvalueshowmajorgridlines() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional bool tschchartaxisvalueshowmajorgridlines = 28;</code>
     */
    public boolean getTschchartaxisvalueshowmajorgridlines() {
      return tschchartaxisvalueshowmajorgridlines_;
    }

    public static final int TSCHCHARTAXISCATEGORYSHOWMAJORTICKMARKS_FIELD_NUMBER = 29;
    private boolean tschchartaxiscategoryshowmajortickmarks_;
    /**
     * <code>optional bool tschchartaxiscategoryshowmajortickmarks = 29;</code>
     */
    public boolean hasTschchartaxiscategoryshowmajortickmarks() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional bool tschchartaxiscategoryshowmajortickmarks = 29;</code>
     */
    public boolean getTschchartaxiscategoryshowmajortickmarks() {
      return tschchartaxiscategoryshowmajortickmarks_;
    }

    public static final int TSCHCHARTAXISVALUESHOWMAJORTICKMARKS_FIELD_NUMBER = 30;
    private boolean tschchartaxisvalueshowmajortickmarks_;
    /**
     * <code>optional bool tschchartaxisvalueshowmajortickmarks = 30;</code>
     */
    public boolean hasTschchartaxisvalueshowmajortickmarks() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional bool tschchartaxisvalueshowmajortickmarks = 30;</code>
     */
    public boolean getTschchartaxisvalueshowmajortickmarks() {
      return tschchartaxisvalueshowmajortickmarks_;
    }

    public static final int TSCHCHARTAXISVALUESHOWMINIMUMLABEL_FIELD_NUMBER = 31;
    private boolean tschchartaxisvalueshowminimumlabel_;
    /**
     * <code>optional bool tschchartaxisvalueshowminimumlabel = 31;</code>
     */
    public boolean hasTschchartaxisvalueshowminimumlabel() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional bool tschchartaxisvalueshowminimumlabel = 31;</code>
     */
    public boolean getTschchartaxisvalueshowminimumlabel() {
      return tschchartaxisvalueshowminimumlabel_;
    }

    public static final int TSCHCHARTAXISCATEGORYSHOWMINORGRIDLINES_FIELD_NUMBER = 32;
    private boolean tschchartaxiscategoryshowminorgridlines_;
    /**
     * <code>optional bool tschchartaxiscategoryshowminorgridlines = 32;</code>
     */
    public boolean hasTschchartaxiscategoryshowminorgridlines() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional bool tschchartaxiscategoryshowminorgridlines = 32;</code>
     */
    public boolean getTschchartaxiscategoryshowminorgridlines() {
      return tschchartaxiscategoryshowminorgridlines_;
    }

    public static final int TSCHCHARTAXISVALUESHOWMINORGRIDLINES_FIELD_NUMBER = 33;
    private boolean tschchartaxisvalueshowminorgridlines_;
    /**
     * <code>optional bool tschchartaxisvalueshowminorgridlines = 33;</code>
     */
    public boolean hasTschchartaxisvalueshowminorgridlines() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool tschchartaxisvalueshowminorgridlines = 33;</code>
     */
    public boolean getTschchartaxisvalueshowminorgridlines() {
      return tschchartaxisvalueshowminorgridlines_;
    }

    public static final int TSCHCHARTAXISCATEGORYSHOWMINORTICKMARKS_FIELD_NUMBER = 34;
    private boolean tschchartaxiscategoryshowminortickmarks_;
    /**
     * <code>optional bool tschchartaxiscategoryshowminortickmarks = 34;</code>
     */
    public boolean hasTschchartaxiscategoryshowminortickmarks() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool tschchartaxiscategoryshowminortickmarks = 34;</code>
     */
    public boolean getTschchartaxiscategoryshowminortickmarks() {
      return tschchartaxiscategoryshowminortickmarks_;
    }

    public static final int TSCHCHARTAXISVALUESHOWMINORTICKMARKS_FIELD_NUMBER = 35;
    private boolean tschchartaxisvalueshowminortickmarks_;
    /**
     * <code>optional bool tschchartaxisvalueshowminortickmarks = 35;</code>
     */
    public boolean hasTschchartaxisvalueshowminortickmarks() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool tschchartaxisvalueshowminortickmarks = 35;</code>
     */
    public boolean getTschchartaxisvalueshowminortickmarks() {
      return tschchartaxisvalueshowminortickmarks_;
    }

    public static final int TSCHCHARTAXISCATEGORYTICKMARKLOCATION_FIELD_NUMBER = 36;
    private int tschchartaxiscategorytickmarklocation_;
    /**
     * <code>optional int32 tschchartaxiscategorytickmarklocation = 36;</code>
     */
    public boolean hasTschchartaxiscategorytickmarklocation() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 tschchartaxiscategorytickmarklocation = 36;</code>
     */
    public int getTschchartaxiscategorytickmarklocation() {
      return tschchartaxiscategorytickmarklocation_;
    }

    public static final int TSCHCHARTAXISVALUETICKMARKLOCATION_FIELD_NUMBER = 37;
    private int tschchartaxisvaluetickmarklocation_;
    /**
     * <code>optional int32 tschchartaxisvaluetickmarklocation = 37;</code>
     */
    public boolean hasTschchartaxisvaluetickmarklocation() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 tschchartaxisvaluetickmarklocation = 37;</code>
     */
    public int getTschchartaxisvaluetickmarklocation() {
      return tschchartaxisvaluetickmarklocation_;
    }

    public static final int TSCHCHARTAXISCATEGORYTITLEPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 38;
    private int tschchartaxiscategorytitleparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartaxiscategorytitleparagraphstyleindex = 38;</code>
     */
    public boolean hasTschchartaxiscategorytitleparagraphstyleindex() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 tschchartaxiscategorytitleparagraphstyleindex = 38;</code>
     */
    public int getTschchartaxiscategorytitleparagraphstyleindex() {
      return tschchartaxiscategorytitleparagraphstyleindex_;
    }

    public static final int TSCHCHARTAXISDEFAULTTITLEPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 39;
    private int tschchartaxisdefaulttitleparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartaxisdefaulttitleparagraphstyleindex = 39;</code>
     */
    public boolean hasTschchartaxisdefaulttitleparagraphstyleindex() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 tschchartaxisdefaulttitleparagraphstyleindex = 39;</code>
     */
    public int getTschchartaxisdefaulttitleparagraphstyleindex() {
      return tschchartaxisdefaulttitleparagraphstyleindex_;
    }

    public static final int TSCHCHARTAXISVALUETITLEPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 40;
    private int tschchartaxisvaluetitleparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartaxisvaluetitleparagraphstyleindex = 40;</code>
     */
    public boolean hasTschchartaxisvaluetitleparagraphstyleindex() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 tschchartaxisvaluetitleparagraphstyleindex = 40;</code>
     */
    public int getTschchartaxisvaluetitleparagraphstyleindex() {
      return tschchartaxisvaluetitleparagraphstyleindex_;
    }

    public static final int TSCHCHARTAXISCATEGORYVERTICALSPACING_FIELD_NUMBER = 41;
    private int tschchartaxiscategoryverticalspacing_;
    /**
     * <code>optional int32 tschchartaxiscategoryverticalspacing = 41;</code>
     */
    public boolean hasTschchartaxiscategoryverticalspacing() {
      return ((bitField1_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 tschchartaxiscategoryverticalspacing = 41;</code>
     */
    public int getTschchartaxiscategoryverticalspacing() {
      return tschchartaxiscategoryverticalspacing_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasTschchartaxiscategory3Dgridlinestroke()) {
        if (!getTschchartaxiscategory3Dgridlinestroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartaxisvalue3Dgridlinestroke()) {
        if (!getTschchartaxisvalue3Dgridlinestroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartaxiscategorymajorgridlineshadow()) {
        if (!getTschchartaxiscategorymajorgridlineshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartaxisvaluemajorgridlineshadow()) {
        if (!getTschchartaxisvaluemajorgridlineshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartaxiscategorymajorgridlinestroke()) {
        if (!getTschchartaxiscategorymajorgridlinestroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartaxisvaluemajorgridlinestroke()) {
        if (!getTschchartaxisvaluemajorgridlinestroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartaxiscategoryminorgridlineshadow()) {
        if (!getTschchartaxiscategoryminorgridlineshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartaxisvalueminorgridlineshadow()) {
        if (!getTschchartaxisvalueminorgridlineshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartaxiscategoryminorgridlinestroke()) {
        if (!getTschchartaxiscategoryminorgridlinestroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartaxisvalueminorgridlinestroke()) {
        if (!getTschchartaxisvalueminorgridlinestroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, tschchartaxiscategory3Dgridlineopacity_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, tschchartaxisvalue3Dgridlineopacity_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getTschchartaxiscategory3Dgridlinestroke());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getTschchartaxisvalue3Dgridlinestroke());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, tschchartaxiscategoryhorizontalspacing_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, tschchartaxiscategorylabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, tschchartaxisdefaultlabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, tschchartaxisvaluelabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, tschchartaxiscategorylabelsorientation_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, tschchartaxisdefaultlabelsorientation_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, tschchartaxisvaluelabelsorientation_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(12, tschchartaxiscategorymajorgridlineopacity_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeFloat(13, tschchartaxisvaluemajorgridlineopacity_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(14, getTschchartaxiscategorymajorgridlineshadow());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(15, getTschchartaxisvaluemajorgridlineshadow());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(16, getTschchartaxiscategorymajorgridlinestroke());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(17, getTschchartaxisvaluemajorgridlinestroke());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeFloat(18, tschchartaxiscategoryminorgridlineopacity_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeFloat(19, tschchartaxisvalueminorgridlineopacity_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeMessage(20, getTschchartaxiscategoryminorgridlineshadow());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeMessage(21, getTschchartaxisvalueminorgridlineshadow());
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeMessage(22, getTschchartaxiscategoryminorgridlinestroke());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeMessage(23, getTschchartaxisvalueminorgridlinestroke());
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeBool(24, tschchartaxiscategoryshowaxis_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeBool(25, tschchartaxisvalueshowaxis_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeBool(26, tschchartaxiscategoryshowlastlabel_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeBool(27, tschchartaxiscategoryshowmajorgridlines_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeBool(28, tschchartaxisvalueshowmajorgridlines_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeBool(29, tschchartaxiscategoryshowmajortickmarks_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeBool(30, tschchartaxisvalueshowmajortickmarks_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeBool(31, tschchartaxisvalueshowminimumlabel_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeBool(32, tschchartaxiscategoryshowminorgridlines_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeBool(33, tschchartaxisvalueshowminorgridlines_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeBool(34, tschchartaxiscategoryshowminortickmarks_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeBool(35, tschchartaxisvalueshowminortickmarks_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(36, tschchartaxiscategorytickmarklocation_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(37, tschchartaxisvaluetickmarklocation_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(38, tschchartaxiscategorytitleparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(39, tschchartaxisdefaulttitleparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(40, tschchartaxisvaluetitleparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(41, tschchartaxiscategoryverticalspacing_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, tschchartaxiscategory3Dgridlineopacity_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, tschchartaxisvalue3Dgridlineopacity_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTschchartaxiscategory3Dgridlinestroke());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTschchartaxisvalue3Dgridlinestroke());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, tschchartaxiscategoryhorizontalspacing_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, tschchartaxiscategorylabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, tschchartaxisdefaultlabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, tschchartaxisvaluelabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, tschchartaxiscategorylabelsorientation_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, tschchartaxisdefaultlabelsorientation_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, tschchartaxisvaluelabelsorientation_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, tschchartaxiscategorymajorgridlineopacity_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, tschchartaxisvaluemajorgridlineopacity_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getTschchartaxiscategorymajorgridlineshadow());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getTschchartaxisvaluemajorgridlineshadow());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getTschchartaxiscategorymajorgridlinestroke());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, getTschchartaxisvaluemajorgridlinestroke());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(18, tschchartaxiscategoryminorgridlineopacity_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(19, tschchartaxisvalueminorgridlineopacity_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, getTschchartaxiscategoryminorgridlineshadow());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, getTschchartaxisvalueminorgridlineshadow());
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, getTschchartaxiscategoryminorgridlinestroke());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, getTschchartaxisvalueminorgridlinestroke());
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(24, tschchartaxiscategoryshowaxis_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(25, tschchartaxisvalueshowaxis_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(26, tschchartaxiscategoryshowlastlabel_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(27, tschchartaxiscategoryshowmajorgridlines_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(28, tschchartaxisvalueshowmajorgridlines_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(29, tschchartaxiscategoryshowmajortickmarks_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(30, tschchartaxisvalueshowmajortickmarks_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(31, tschchartaxisvalueshowminimumlabel_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(32, tschchartaxiscategoryshowminorgridlines_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(33, tschchartaxisvalueshowminorgridlines_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(34, tschchartaxiscategoryshowminortickmarks_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(35, tschchartaxisvalueshowminortickmarks_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(36, tschchartaxiscategorytickmarklocation_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(37, tschchartaxisvaluetickmarklocation_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(38, tschchartaxiscategorytitleparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(39, tschchartaxisdefaulttitleparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(40, tschchartaxisvaluetitleparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(41, tschchartaxiscategoryverticalspacing_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive)) {
        return super.equals(obj);
      }
      org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive other = (org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive) obj;

      boolean result = true;
      result = result && (hasTschchartaxiscategory3Dgridlineopacity() == other.hasTschchartaxiscategory3Dgridlineopacity());
      if (hasTschchartaxiscategory3Dgridlineopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartaxiscategory3Dgridlineopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartaxiscategory3Dgridlineopacity()));
      }
      result = result && (hasTschchartaxisvalue3Dgridlineopacity() == other.hasTschchartaxisvalue3Dgridlineopacity());
      if (hasTschchartaxisvalue3Dgridlineopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartaxisvalue3Dgridlineopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartaxisvalue3Dgridlineopacity()));
      }
      result = result && (hasTschchartaxiscategory3Dgridlinestroke() == other.hasTschchartaxiscategory3Dgridlinestroke());
      if (hasTschchartaxiscategory3Dgridlinestroke()) {
        result = result && getTschchartaxiscategory3Dgridlinestroke()
            .equals(other.getTschchartaxiscategory3Dgridlinestroke());
      }
      result = result && (hasTschchartaxisvalue3Dgridlinestroke() == other.hasTschchartaxisvalue3Dgridlinestroke());
      if (hasTschchartaxisvalue3Dgridlinestroke()) {
        result = result && getTschchartaxisvalue3Dgridlinestroke()
            .equals(other.getTschchartaxisvalue3Dgridlinestroke());
      }
      result = result && (hasTschchartaxiscategoryhorizontalspacing() == other.hasTschchartaxiscategoryhorizontalspacing());
      if (hasTschchartaxiscategoryhorizontalspacing()) {
        result = result && (getTschchartaxiscategoryhorizontalspacing()
            == other.getTschchartaxiscategoryhorizontalspacing());
      }
      result = result && (hasTschchartaxiscategorylabelparagraphstyleindex() == other.hasTschchartaxiscategorylabelparagraphstyleindex());
      if (hasTschchartaxiscategorylabelparagraphstyleindex()) {
        result = result && (getTschchartaxiscategorylabelparagraphstyleindex()
            == other.getTschchartaxiscategorylabelparagraphstyleindex());
      }
      result = result && (hasTschchartaxisdefaultlabelparagraphstyleindex() == other.hasTschchartaxisdefaultlabelparagraphstyleindex());
      if (hasTschchartaxisdefaultlabelparagraphstyleindex()) {
        result = result && (getTschchartaxisdefaultlabelparagraphstyleindex()
            == other.getTschchartaxisdefaultlabelparagraphstyleindex());
      }
      result = result && (hasTschchartaxisvaluelabelparagraphstyleindex() == other.hasTschchartaxisvaluelabelparagraphstyleindex());
      if (hasTschchartaxisvaluelabelparagraphstyleindex()) {
        result = result && (getTschchartaxisvaluelabelparagraphstyleindex()
            == other.getTschchartaxisvaluelabelparagraphstyleindex());
      }
      result = result && (hasTschchartaxiscategorylabelsorientation() == other.hasTschchartaxiscategorylabelsorientation());
      if (hasTschchartaxiscategorylabelsorientation()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartaxiscategorylabelsorientation())
            == java.lang.Float.floatToIntBits(
                other.getTschchartaxiscategorylabelsorientation()));
      }
      result = result && (hasTschchartaxisdefaultlabelsorientation() == other.hasTschchartaxisdefaultlabelsorientation());
      if (hasTschchartaxisdefaultlabelsorientation()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartaxisdefaultlabelsorientation())
            == java.lang.Float.floatToIntBits(
                other.getTschchartaxisdefaultlabelsorientation()));
      }
      result = result && (hasTschchartaxisvaluelabelsorientation() == other.hasTschchartaxisvaluelabelsorientation());
      if (hasTschchartaxisvaluelabelsorientation()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartaxisvaluelabelsorientation())
            == java.lang.Float.floatToIntBits(
                other.getTschchartaxisvaluelabelsorientation()));
      }
      result = result && (hasTschchartaxiscategorymajorgridlineopacity() == other.hasTschchartaxiscategorymajorgridlineopacity());
      if (hasTschchartaxiscategorymajorgridlineopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartaxiscategorymajorgridlineopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartaxiscategorymajorgridlineopacity()));
      }
      result = result && (hasTschchartaxisvaluemajorgridlineopacity() == other.hasTschchartaxisvaluemajorgridlineopacity());
      if (hasTschchartaxisvaluemajorgridlineopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartaxisvaluemajorgridlineopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartaxisvaluemajorgridlineopacity()));
      }
      result = result && (hasTschchartaxiscategorymajorgridlineshadow() == other.hasTschchartaxiscategorymajorgridlineshadow());
      if (hasTschchartaxiscategorymajorgridlineshadow()) {
        result = result && getTschchartaxiscategorymajorgridlineshadow()
            .equals(other.getTschchartaxiscategorymajorgridlineshadow());
      }
      result = result && (hasTschchartaxisvaluemajorgridlineshadow() == other.hasTschchartaxisvaluemajorgridlineshadow());
      if (hasTschchartaxisvaluemajorgridlineshadow()) {
        result = result && getTschchartaxisvaluemajorgridlineshadow()
            .equals(other.getTschchartaxisvaluemajorgridlineshadow());
      }
      result = result && (hasTschchartaxiscategorymajorgridlinestroke() == other.hasTschchartaxiscategorymajorgridlinestroke());
      if (hasTschchartaxiscategorymajorgridlinestroke()) {
        result = result && getTschchartaxiscategorymajorgridlinestroke()
            .equals(other.getTschchartaxiscategorymajorgridlinestroke());
      }
      result = result && (hasTschchartaxisvaluemajorgridlinestroke() == other.hasTschchartaxisvaluemajorgridlinestroke());
      if (hasTschchartaxisvaluemajorgridlinestroke()) {
        result = result && getTschchartaxisvaluemajorgridlinestroke()
            .equals(other.getTschchartaxisvaluemajorgridlinestroke());
      }
      result = result && (hasTschchartaxiscategoryminorgridlineopacity() == other.hasTschchartaxiscategoryminorgridlineopacity());
      if (hasTschchartaxiscategoryminorgridlineopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartaxiscategoryminorgridlineopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartaxiscategoryminorgridlineopacity()));
      }
      result = result && (hasTschchartaxisvalueminorgridlineopacity() == other.hasTschchartaxisvalueminorgridlineopacity());
      if (hasTschchartaxisvalueminorgridlineopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartaxisvalueminorgridlineopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartaxisvalueminorgridlineopacity()));
      }
      result = result && (hasTschchartaxiscategoryminorgridlineshadow() == other.hasTschchartaxiscategoryminorgridlineshadow());
      if (hasTschchartaxiscategoryminorgridlineshadow()) {
        result = result && getTschchartaxiscategoryminorgridlineshadow()
            .equals(other.getTschchartaxiscategoryminorgridlineshadow());
      }
      result = result && (hasTschchartaxisvalueminorgridlineshadow() == other.hasTschchartaxisvalueminorgridlineshadow());
      if (hasTschchartaxisvalueminorgridlineshadow()) {
        result = result && getTschchartaxisvalueminorgridlineshadow()
            .equals(other.getTschchartaxisvalueminorgridlineshadow());
      }
      result = result && (hasTschchartaxiscategoryminorgridlinestroke() == other.hasTschchartaxiscategoryminorgridlinestroke());
      if (hasTschchartaxiscategoryminorgridlinestroke()) {
        result = result && getTschchartaxiscategoryminorgridlinestroke()
            .equals(other.getTschchartaxiscategoryminorgridlinestroke());
      }
      result = result && (hasTschchartaxisvalueminorgridlinestroke() == other.hasTschchartaxisvalueminorgridlinestroke());
      if (hasTschchartaxisvalueminorgridlinestroke()) {
        result = result && getTschchartaxisvalueminorgridlinestroke()
            .equals(other.getTschchartaxisvalueminorgridlinestroke());
      }
      result = result && (hasTschchartaxiscategoryshowaxis() == other.hasTschchartaxiscategoryshowaxis());
      if (hasTschchartaxiscategoryshowaxis()) {
        result = result && (getTschchartaxiscategoryshowaxis()
            == other.getTschchartaxiscategoryshowaxis());
      }
      result = result && (hasTschchartaxisvalueshowaxis() == other.hasTschchartaxisvalueshowaxis());
      if (hasTschchartaxisvalueshowaxis()) {
        result = result && (getTschchartaxisvalueshowaxis()
            == other.getTschchartaxisvalueshowaxis());
      }
      result = result && (hasTschchartaxiscategoryshowlastlabel() == other.hasTschchartaxiscategoryshowlastlabel());
      if (hasTschchartaxiscategoryshowlastlabel()) {
        result = result && (getTschchartaxiscategoryshowlastlabel()
            == other.getTschchartaxiscategoryshowlastlabel());
      }
      result = result && (hasTschchartaxiscategoryshowmajorgridlines() == other.hasTschchartaxiscategoryshowmajorgridlines());
      if (hasTschchartaxiscategoryshowmajorgridlines()) {
        result = result && (getTschchartaxiscategoryshowmajorgridlines()
            == other.getTschchartaxiscategoryshowmajorgridlines());
      }
      result = result && (hasTschchartaxisvalueshowmajorgridlines() == other.hasTschchartaxisvalueshowmajorgridlines());
      if (hasTschchartaxisvalueshowmajorgridlines()) {
        result = result && (getTschchartaxisvalueshowmajorgridlines()
            == other.getTschchartaxisvalueshowmajorgridlines());
      }
      result = result && (hasTschchartaxiscategoryshowmajortickmarks() == other.hasTschchartaxiscategoryshowmajortickmarks());
      if (hasTschchartaxiscategoryshowmajortickmarks()) {
        result = result && (getTschchartaxiscategoryshowmajortickmarks()
            == other.getTschchartaxiscategoryshowmajortickmarks());
      }
      result = result && (hasTschchartaxisvalueshowmajortickmarks() == other.hasTschchartaxisvalueshowmajortickmarks());
      if (hasTschchartaxisvalueshowmajortickmarks()) {
        result = result && (getTschchartaxisvalueshowmajortickmarks()
            == other.getTschchartaxisvalueshowmajortickmarks());
      }
      result = result && (hasTschchartaxisvalueshowminimumlabel() == other.hasTschchartaxisvalueshowminimumlabel());
      if (hasTschchartaxisvalueshowminimumlabel()) {
        result = result && (getTschchartaxisvalueshowminimumlabel()
            == other.getTschchartaxisvalueshowminimumlabel());
      }
      result = result && (hasTschchartaxiscategoryshowminorgridlines() == other.hasTschchartaxiscategoryshowminorgridlines());
      if (hasTschchartaxiscategoryshowminorgridlines()) {
        result = result && (getTschchartaxiscategoryshowminorgridlines()
            == other.getTschchartaxiscategoryshowminorgridlines());
      }
      result = result && (hasTschchartaxisvalueshowminorgridlines() == other.hasTschchartaxisvalueshowminorgridlines());
      if (hasTschchartaxisvalueshowminorgridlines()) {
        result = result && (getTschchartaxisvalueshowminorgridlines()
            == other.getTschchartaxisvalueshowminorgridlines());
      }
      result = result && (hasTschchartaxiscategoryshowminortickmarks() == other.hasTschchartaxiscategoryshowminortickmarks());
      if (hasTschchartaxiscategoryshowminortickmarks()) {
        result = result && (getTschchartaxiscategoryshowminortickmarks()
            == other.getTschchartaxiscategoryshowminortickmarks());
      }
      result = result && (hasTschchartaxisvalueshowminortickmarks() == other.hasTschchartaxisvalueshowminortickmarks());
      if (hasTschchartaxisvalueshowminortickmarks()) {
        result = result && (getTschchartaxisvalueshowminortickmarks()
            == other.getTschchartaxisvalueshowminortickmarks());
      }
      result = result && (hasTschchartaxiscategorytickmarklocation() == other.hasTschchartaxiscategorytickmarklocation());
      if (hasTschchartaxiscategorytickmarklocation()) {
        result = result && (getTschchartaxiscategorytickmarklocation()
            == other.getTschchartaxiscategorytickmarklocation());
      }
      result = result && (hasTschchartaxisvaluetickmarklocation() == other.hasTschchartaxisvaluetickmarklocation());
      if (hasTschchartaxisvaluetickmarklocation()) {
        result = result && (getTschchartaxisvaluetickmarklocation()
            == other.getTschchartaxisvaluetickmarklocation());
      }
      result = result && (hasTschchartaxiscategorytitleparagraphstyleindex() == other.hasTschchartaxiscategorytitleparagraphstyleindex());
      if (hasTschchartaxiscategorytitleparagraphstyleindex()) {
        result = result && (getTschchartaxiscategorytitleparagraphstyleindex()
            == other.getTschchartaxiscategorytitleparagraphstyleindex());
      }
      result = result && (hasTschchartaxisdefaulttitleparagraphstyleindex() == other.hasTschchartaxisdefaulttitleparagraphstyleindex());
      if (hasTschchartaxisdefaulttitleparagraphstyleindex()) {
        result = result && (getTschchartaxisdefaulttitleparagraphstyleindex()
            == other.getTschchartaxisdefaulttitleparagraphstyleindex());
      }
      result = result && (hasTschchartaxisvaluetitleparagraphstyleindex() == other.hasTschchartaxisvaluetitleparagraphstyleindex());
      if (hasTschchartaxisvaluetitleparagraphstyleindex()) {
        result = result && (getTschchartaxisvaluetitleparagraphstyleindex()
            == other.getTschchartaxisvaluetitleparagraphstyleindex());
      }
      result = result && (hasTschchartaxiscategoryverticalspacing() == other.hasTschchartaxiscategoryverticalspacing());
      if (hasTschchartaxiscategoryverticalspacing()) {
        result = result && (getTschchartaxiscategoryverticalspacing()
            == other.getTschchartaxiscategoryverticalspacing());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTschchartaxiscategory3Dgridlineopacity()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORY3DGRIDLINEOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartaxiscategory3Dgridlineopacity());
      }
      if (hasTschchartaxisvalue3Dgridlineopacity()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUE3DGRIDLINEOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartaxisvalue3Dgridlineopacity());
      }
      if (hasTschchartaxiscategory3Dgridlinestroke()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORY3DGRIDLINESTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxiscategory3Dgridlinestroke().hashCode();
      }
      if (hasTschchartaxisvalue3Dgridlinestroke()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUE3DGRIDLINESTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvalue3Dgridlinestroke().hashCode();
      }
      if (hasTschchartaxiscategoryhorizontalspacing()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYHORIZONTALSPACING_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxiscategoryhorizontalspacing();
      }
      if (hasTschchartaxiscategorylabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYLABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxiscategorylabelparagraphstyleindex();
      }
      if (hasTschchartaxisdefaultlabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTAXISDEFAULTLABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisdefaultlabelparagraphstyleindex();
      }
      if (hasTschchartaxisvaluelabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvaluelabelparagraphstyleindex();
      }
      if (hasTschchartaxiscategorylabelsorientation()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYLABELSORIENTATION_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartaxiscategorylabelsorientation());
      }
      if (hasTschchartaxisdefaultlabelsorientation()) {
        hash = (37 * hash) + TSCHCHARTAXISDEFAULTLABELSORIENTATION_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartaxisdefaultlabelsorientation());
      }
      if (hasTschchartaxisvaluelabelsorientation()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUELABELSORIENTATION_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartaxisvaluelabelsorientation());
      }
      if (hasTschchartaxiscategorymajorgridlineopacity()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYMAJORGRIDLINEOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartaxiscategorymajorgridlineopacity());
      }
      if (hasTschchartaxisvaluemajorgridlineopacity()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUEMAJORGRIDLINEOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartaxisvaluemajorgridlineopacity());
      }
      if (hasTschchartaxiscategorymajorgridlineshadow()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYMAJORGRIDLINESHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxiscategorymajorgridlineshadow().hashCode();
      }
      if (hasTschchartaxisvaluemajorgridlineshadow()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUEMAJORGRIDLINESHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvaluemajorgridlineshadow().hashCode();
      }
      if (hasTschchartaxiscategorymajorgridlinestroke()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYMAJORGRIDLINESTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxiscategorymajorgridlinestroke().hashCode();
      }
      if (hasTschchartaxisvaluemajorgridlinestroke()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUEMAJORGRIDLINESTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvaluemajorgridlinestroke().hashCode();
      }
      if (hasTschchartaxiscategoryminorgridlineopacity()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYMINORGRIDLINEOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartaxiscategoryminorgridlineopacity());
      }
      if (hasTschchartaxisvalueminorgridlineopacity()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUEMINORGRIDLINEOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartaxisvalueminorgridlineopacity());
      }
      if (hasTschchartaxiscategoryminorgridlineshadow()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYMINORGRIDLINESHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxiscategoryminorgridlineshadow().hashCode();
      }
      if (hasTschchartaxisvalueminorgridlineshadow()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUEMINORGRIDLINESHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvalueminorgridlineshadow().hashCode();
      }
      if (hasTschchartaxiscategoryminorgridlinestroke()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYMINORGRIDLINESTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxiscategoryminorgridlinestroke().hashCode();
      }
      if (hasTschchartaxisvalueminorgridlinestroke()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUEMINORGRIDLINESTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvalueminorgridlinestroke().hashCode();
      }
      if (hasTschchartaxiscategoryshowaxis()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYSHOWAXIS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxiscategoryshowaxis());
      }
      if (hasTschchartaxisvalueshowaxis()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUESHOWAXIS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxisvalueshowaxis());
      }
      if (hasTschchartaxiscategoryshowlastlabel()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYSHOWLASTLABEL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxiscategoryshowlastlabel());
      }
      if (hasTschchartaxiscategoryshowmajorgridlines()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYSHOWMAJORGRIDLINES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxiscategoryshowmajorgridlines());
      }
      if (hasTschchartaxisvalueshowmajorgridlines()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUESHOWMAJORGRIDLINES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxisvalueshowmajorgridlines());
      }
      if (hasTschchartaxiscategoryshowmajortickmarks()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYSHOWMAJORTICKMARKS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxiscategoryshowmajortickmarks());
      }
      if (hasTschchartaxisvalueshowmajortickmarks()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUESHOWMAJORTICKMARKS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxisvalueshowmajortickmarks());
      }
      if (hasTschchartaxisvalueshowminimumlabel()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUESHOWMINIMUMLABEL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxisvalueshowminimumlabel());
      }
      if (hasTschchartaxiscategoryshowminorgridlines()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYSHOWMINORGRIDLINES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxiscategoryshowminorgridlines());
      }
      if (hasTschchartaxisvalueshowminorgridlines()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUESHOWMINORGRIDLINES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxisvalueshowminorgridlines());
      }
      if (hasTschchartaxiscategoryshowminortickmarks()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYSHOWMINORTICKMARKS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxiscategoryshowminortickmarks());
      }
      if (hasTschchartaxisvalueshowminortickmarks()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUESHOWMINORTICKMARKS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxisvalueshowminortickmarks());
      }
      if (hasTschchartaxiscategorytickmarklocation()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYTICKMARKLOCATION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxiscategorytickmarklocation();
      }
      if (hasTschchartaxisvaluetickmarklocation()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUETICKMARKLOCATION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvaluetickmarklocation();
      }
      if (hasTschchartaxiscategorytitleparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYTITLEPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxiscategorytitleparagraphstyleindex();
      }
      if (hasTschchartaxisdefaulttitleparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTAXISDEFAULTTITLEPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisdefaulttitleparagraphstyleindex();
      }
      if (hasTschchartaxisvaluetitleparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUETITLEPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvaluetitleparagraphstyleindex();
      }
      if (hasTschchartaxiscategoryverticalspacing()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYVERTICALSPACING_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxiscategoryverticalspacing();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TSCH.Generated.ChartAxisStyleArchive}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TSCH.Generated.ChartAxisStyleArchive)
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchiveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartAxisStyleArchive_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartAxisStyleArchive_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive.class, org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive.Builder.class);
      }

      // Construct using TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTschchartaxiscategory3DgridlinestrokeFieldBuilder();
          getTschchartaxisvalue3DgridlinestrokeFieldBuilder();
          getTschchartaxiscategorymajorgridlineshadowFieldBuilder();
          getTschchartaxisvaluemajorgridlineshadowFieldBuilder();
          getTschchartaxiscategorymajorgridlinestrokeFieldBuilder();
          getTschchartaxisvaluemajorgridlinestrokeFieldBuilder();
          getTschchartaxiscategoryminorgridlineshadowFieldBuilder();
          getTschchartaxisvalueminorgridlineshadowFieldBuilder();
          getTschchartaxiscategoryminorgridlinestrokeFieldBuilder();
          getTschchartaxisvalueminorgridlinestrokeFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        tschchartaxiscategory3Dgridlineopacity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        tschchartaxisvalue3Dgridlineopacity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (tschchartaxiscategory3DgridlinestrokeBuilder_ == null) {
          tschchartaxiscategory3Dgridlinestroke_ = null;
        } else {
          tschchartaxiscategory3DgridlinestrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (tschchartaxisvalue3DgridlinestrokeBuilder_ == null) {
          tschchartaxisvalue3Dgridlinestroke_ = null;
        } else {
          tschchartaxisvalue3DgridlinestrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        tschchartaxiscategoryhorizontalspacing_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        tschchartaxiscategorylabelparagraphstyleindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        tschchartaxisdefaultlabelparagraphstyleindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        tschchartaxisvaluelabelparagraphstyleindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        tschchartaxiscategorylabelsorientation_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        tschchartaxisdefaultlabelsorientation_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        tschchartaxisvaluelabelsorientation_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000400);
        tschchartaxiscategorymajorgridlineopacity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000800);
        tschchartaxisvaluemajorgridlineopacity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00001000);
        if (tschchartaxiscategorymajorgridlineshadowBuilder_ == null) {
          tschchartaxiscategorymajorgridlineshadow_ = null;
        } else {
          tschchartaxiscategorymajorgridlineshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        if (tschchartaxisvaluemajorgridlineshadowBuilder_ == null) {
          tschchartaxisvaluemajorgridlineshadow_ = null;
        } else {
          tschchartaxisvaluemajorgridlineshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        if (tschchartaxiscategorymajorgridlinestrokeBuilder_ == null) {
          tschchartaxiscategorymajorgridlinestroke_ = null;
        } else {
          tschchartaxiscategorymajorgridlinestrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        if (tschchartaxisvaluemajorgridlinestrokeBuilder_ == null) {
          tschchartaxisvaluemajorgridlinestroke_ = null;
        } else {
          tschchartaxisvaluemajorgridlinestrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        tschchartaxiscategoryminorgridlineopacity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00020000);
        tschchartaxisvalueminorgridlineopacity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00040000);
        if (tschchartaxiscategoryminorgridlineshadowBuilder_ == null) {
          tschchartaxiscategoryminorgridlineshadow_ = null;
        } else {
          tschchartaxiscategoryminorgridlineshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        if (tschchartaxisvalueminorgridlineshadowBuilder_ == null) {
          tschchartaxisvalueminorgridlineshadow_ = null;
        } else {
          tschchartaxisvalueminorgridlineshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00100000);
        if (tschchartaxiscategoryminorgridlinestrokeBuilder_ == null) {
          tschchartaxiscategoryminorgridlinestroke_ = null;
        } else {
          tschchartaxiscategoryminorgridlinestrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00200000);
        if (tschchartaxisvalueminorgridlinestrokeBuilder_ == null) {
          tschchartaxisvalueminorgridlinestroke_ = null;
        } else {
          tschchartaxisvalueminorgridlinestrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00400000);
        tschchartaxiscategoryshowaxis_ = false;
        bitField0_ = (bitField0_ & ~0x00800000);
        tschchartaxisvalueshowaxis_ = false;
        bitField0_ = (bitField0_ & ~0x01000000);
        tschchartaxiscategoryshowlastlabel_ = false;
        bitField0_ = (bitField0_ & ~0x02000000);
        tschchartaxiscategoryshowmajorgridlines_ = false;
        bitField0_ = (bitField0_ & ~0x04000000);
        tschchartaxisvalueshowmajorgridlines_ = false;
        bitField0_ = (bitField0_ & ~0x08000000);
        tschchartaxiscategoryshowmajortickmarks_ = false;
        bitField0_ = (bitField0_ & ~0x10000000);
        tschchartaxisvalueshowmajortickmarks_ = false;
        bitField0_ = (bitField0_ & ~0x20000000);
        tschchartaxisvalueshowminimumlabel_ = false;
        bitField0_ = (bitField0_ & ~0x40000000);
        tschchartaxiscategoryshowminorgridlines_ = false;
        bitField0_ = (bitField0_ & ~0x80000000);
        tschchartaxisvalueshowminorgridlines_ = false;
        bitField1_ = (bitField1_ & ~0x00000001);
        tschchartaxiscategoryshowminortickmarks_ = false;
        bitField1_ = (bitField1_ & ~0x00000002);
        tschchartaxisvalueshowminortickmarks_ = false;
        bitField1_ = (bitField1_ & ~0x00000004);
        tschchartaxiscategorytickmarklocation_ = 0;
        bitField1_ = (bitField1_ & ~0x00000008);
        tschchartaxisvaluetickmarklocation_ = 0;
        bitField1_ = (bitField1_ & ~0x00000010);
        tschchartaxiscategorytitleparagraphstyleindex_ = 0;
        bitField1_ = (bitField1_ & ~0x00000020);
        tschchartaxisdefaulttitleparagraphstyleindex_ = 0;
        bitField1_ = (bitField1_ & ~0x00000040);
        tschchartaxisvaluetitleparagraphstyleindex_ = 0;
        bitField1_ = (bitField1_ & ~0x00000080);
        tschchartaxiscategoryverticalspacing_ = 0;
        bitField1_ = (bitField1_ & ~0x00000100);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartAxisStyleArchive_descriptor;
      }

      public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive getDefaultInstanceForType() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive.getDefaultInstance();
      }

      public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive build() {
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive buildPartial() {
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive result = new org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tschchartaxiscategory3Dgridlineopacity_ = tschchartaxiscategory3Dgridlineopacity_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tschchartaxisvalue3Dgridlineopacity_ = tschchartaxisvalue3Dgridlineopacity_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (tschchartaxiscategory3DgridlinestrokeBuilder_ == null) {
          result.tschchartaxiscategory3Dgridlinestroke_ = tschchartaxiscategory3Dgridlinestroke_;
        } else {
          result.tschchartaxiscategory3Dgridlinestroke_ = tschchartaxiscategory3DgridlinestrokeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (tschchartaxisvalue3DgridlinestrokeBuilder_ == null) {
          result.tschchartaxisvalue3Dgridlinestroke_ = tschchartaxisvalue3Dgridlinestroke_;
        } else {
          result.tschchartaxisvalue3Dgridlinestroke_ = tschchartaxisvalue3DgridlinestrokeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.tschchartaxiscategoryhorizontalspacing_ = tschchartaxiscategoryhorizontalspacing_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.tschchartaxiscategorylabelparagraphstyleindex_ = tschchartaxiscategorylabelparagraphstyleindex_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.tschchartaxisdefaultlabelparagraphstyleindex_ = tschchartaxisdefaultlabelparagraphstyleindex_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.tschchartaxisvaluelabelparagraphstyleindex_ = tschchartaxisvaluelabelparagraphstyleindex_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.tschchartaxiscategorylabelsorientation_ = tschchartaxiscategorylabelsorientation_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.tschchartaxisdefaultlabelsorientation_ = tschchartaxisdefaultlabelsorientation_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.tschchartaxisvaluelabelsorientation_ = tschchartaxisvaluelabelsorientation_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.tschchartaxiscategorymajorgridlineopacity_ = tschchartaxiscategorymajorgridlineopacity_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.tschchartaxisvaluemajorgridlineopacity_ = tschchartaxisvaluemajorgridlineopacity_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        if (tschchartaxiscategorymajorgridlineshadowBuilder_ == null) {
          result.tschchartaxiscategorymajorgridlineshadow_ = tschchartaxiscategorymajorgridlineshadow_;
        } else {
          result.tschchartaxiscategorymajorgridlineshadow_ = tschchartaxiscategorymajorgridlineshadowBuilder_.build();
        }
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        if (tschchartaxisvaluemajorgridlineshadowBuilder_ == null) {
          result.tschchartaxisvaluemajorgridlineshadow_ = tschchartaxisvaluemajorgridlineshadow_;
        } else {
          result.tschchartaxisvaluemajorgridlineshadow_ = tschchartaxisvaluemajorgridlineshadowBuilder_.build();
        }
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        if (tschchartaxiscategorymajorgridlinestrokeBuilder_ == null) {
          result.tschchartaxiscategorymajorgridlinestroke_ = tschchartaxiscategorymajorgridlinestroke_;
        } else {
          result.tschchartaxiscategorymajorgridlinestroke_ = tschchartaxiscategorymajorgridlinestrokeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        if (tschchartaxisvaluemajorgridlinestrokeBuilder_ == null) {
          result.tschchartaxisvaluemajorgridlinestroke_ = tschchartaxisvaluemajorgridlinestroke_;
        } else {
          result.tschchartaxisvaluemajorgridlinestroke_ = tschchartaxisvaluemajorgridlinestrokeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.tschchartaxiscategoryminorgridlineopacity_ = tschchartaxiscategoryminorgridlineopacity_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.tschchartaxisvalueminorgridlineopacity_ = tschchartaxisvalueminorgridlineopacity_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        if (tschchartaxiscategoryminorgridlineshadowBuilder_ == null) {
          result.tschchartaxiscategoryminorgridlineshadow_ = tschchartaxiscategoryminorgridlineshadow_;
        } else {
          result.tschchartaxiscategoryminorgridlineshadow_ = tschchartaxiscategoryminorgridlineshadowBuilder_.build();
        }
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        if (tschchartaxisvalueminorgridlineshadowBuilder_ == null) {
          result.tschchartaxisvalueminorgridlineshadow_ = tschchartaxisvalueminorgridlineshadow_;
        } else {
          result.tschchartaxisvalueminorgridlineshadow_ = tschchartaxisvalueminorgridlineshadowBuilder_.build();
        }
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        if (tschchartaxiscategoryminorgridlinestrokeBuilder_ == null) {
          result.tschchartaxiscategoryminorgridlinestroke_ = tschchartaxiscategoryminorgridlinestroke_;
        } else {
          result.tschchartaxiscategoryminorgridlinestroke_ = tschchartaxiscategoryminorgridlinestrokeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        if (tschchartaxisvalueminorgridlinestrokeBuilder_ == null) {
          result.tschchartaxisvalueminorgridlinestroke_ = tschchartaxisvalueminorgridlinestroke_;
        } else {
          result.tschchartaxisvalueminorgridlinestroke_ = tschchartaxisvalueminorgridlinestrokeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.tschchartaxiscategoryshowaxis_ = tschchartaxiscategoryshowaxis_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.tschchartaxisvalueshowaxis_ = tschchartaxisvalueshowaxis_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.tschchartaxiscategoryshowlastlabel_ = tschchartaxiscategoryshowlastlabel_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.tschchartaxiscategoryshowmajorgridlines_ = tschchartaxiscategoryshowmajorgridlines_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.tschchartaxisvalueshowmajorgridlines_ = tschchartaxisvalueshowmajorgridlines_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.tschchartaxiscategoryshowmajortickmarks_ = tschchartaxiscategoryshowmajortickmarks_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.tschchartaxisvalueshowmajortickmarks_ = tschchartaxisvalueshowmajortickmarks_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.tschchartaxisvalueshowminimumlabel_ = tschchartaxisvalueshowminimumlabel_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        result.tschchartaxiscategoryshowminorgridlines_ = tschchartaxiscategoryshowminorgridlines_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        result.tschchartaxisvalueshowminorgridlines_ = tschchartaxisvalueshowminorgridlines_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000002;
        }
        result.tschchartaxiscategoryshowminortickmarks_ = tschchartaxiscategoryshowminortickmarks_;
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000004;
        }
        result.tschchartaxisvalueshowminortickmarks_ = tschchartaxisvalueshowminortickmarks_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000008;
        }
        result.tschchartaxiscategorytickmarklocation_ = tschchartaxiscategorytickmarklocation_;
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000010;
        }
        result.tschchartaxisvaluetickmarklocation_ = tschchartaxisvaluetickmarklocation_;
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000020;
        }
        result.tschchartaxiscategorytitleparagraphstyleindex_ = tschchartaxiscategorytitleparagraphstyleindex_;
        if (((from_bitField1_ & 0x00000040) == 0x00000040)) {
          to_bitField1_ |= 0x00000040;
        }
        result.tschchartaxisdefaulttitleparagraphstyleindex_ = tschchartaxisdefaulttitleparagraphstyleindex_;
        if (((from_bitField1_ & 0x00000080) == 0x00000080)) {
          to_bitField1_ |= 0x00000080;
        }
        result.tschchartaxisvaluetitleparagraphstyleindex_ = tschchartaxisvaluetitleparagraphstyleindex_;
        if (((from_bitField1_ & 0x00000100) == 0x00000100)) {
          to_bitField1_ |= 0x00000100;
        }
        result.tschchartaxiscategoryverticalspacing_ = tschchartaxiscategoryverticalspacing_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive) {
          return mergeFrom((org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive other) {
        if (other == org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive.getDefaultInstance()) return this;
        if (other.hasTschchartaxiscategory3Dgridlineopacity()) {
          setTschchartaxiscategory3Dgridlineopacity(other.getTschchartaxiscategory3Dgridlineopacity());
        }
        if (other.hasTschchartaxisvalue3Dgridlineopacity()) {
          setTschchartaxisvalue3Dgridlineopacity(other.getTschchartaxisvalue3Dgridlineopacity());
        }
        if (other.hasTschchartaxiscategory3Dgridlinestroke()) {
          mergeTschchartaxiscategory3Dgridlinestroke(other.getTschchartaxiscategory3Dgridlinestroke());
        }
        if (other.hasTschchartaxisvalue3Dgridlinestroke()) {
          mergeTschchartaxisvalue3Dgridlinestroke(other.getTschchartaxisvalue3Dgridlinestroke());
        }
        if (other.hasTschchartaxiscategoryhorizontalspacing()) {
          setTschchartaxiscategoryhorizontalspacing(other.getTschchartaxiscategoryhorizontalspacing());
        }
        if (other.hasTschchartaxiscategorylabelparagraphstyleindex()) {
          setTschchartaxiscategorylabelparagraphstyleindex(other.getTschchartaxiscategorylabelparagraphstyleindex());
        }
        if (other.hasTschchartaxisdefaultlabelparagraphstyleindex()) {
          setTschchartaxisdefaultlabelparagraphstyleindex(other.getTschchartaxisdefaultlabelparagraphstyleindex());
        }
        if (other.hasTschchartaxisvaluelabelparagraphstyleindex()) {
          setTschchartaxisvaluelabelparagraphstyleindex(other.getTschchartaxisvaluelabelparagraphstyleindex());
        }
        if (other.hasTschchartaxiscategorylabelsorientation()) {
          setTschchartaxiscategorylabelsorientation(other.getTschchartaxiscategorylabelsorientation());
        }
        if (other.hasTschchartaxisdefaultlabelsorientation()) {
          setTschchartaxisdefaultlabelsorientation(other.getTschchartaxisdefaultlabelsorientation());
        }
        if (other.hasTschchartaxisvaluelabelsorientation()) {
          setTschchartaxisvaluelabelsorientation(other.getTschchartaxisvaluelabelsorientation());
        }
        if (other.hasTschchartaxiscategorymajorgridlineopacity()) {
          setTschchartaxiscategorymajorgridlineopacity(other.getTschchartaxiscategorymajorgridlineopacity());
        }
        if (other.hasTschchartaxisvaluemajorgridlineopacity()) {
          setTschchartaxisvaluemajorgridlineopacity(other.getTschchartaxisvaluemajorgridlineopacity());
        }
        if (other.hasTschchartaxiscategorymajorgridlineshadow()) {
          mergeTschchartaxiscategorymajorgridlineshadow(other.getTschchartaxiscategorymajorgridlineshadow());
        }
        if (other.hasTschchartaxisvaluemajorgridlineshadow()) {
          mergeTschchartaxisvaluemajorgridlineshadow(other.getTschchartaxisvaluemajorgridlineshadow());
        }
        if (other.hasTschchartaxiscategorymajorgridlinestroke()) {
          mergeTschchartaxiscategorymajorgridlinestroke(other.getTschchartaxiscategorymajorgridlinestroke());
        }
        if (other.hasTschchartaxisvaluemajorgridlinestroke()) {
          mergeTschchartaxisvaluemajorgridlinestroke(other.getTschchartaxisvaluemajorgridlinestroke());
        }
        if (other.hasTschchartaxiscategoryminorgridlineopacity()) {
          setTschchartaxiscategoryminorgridlineopacity(other.getTschchartaxiscategoryminorgridlineopacity());
        }
        if (other.hasTschchartaxisvalueminorgridlineopacity()) {
          setTschchartaxisvalueminorgridlineopacity(other.getTschchartaxisvalueminorgridlineopacity());
        }
        if (other.hasTschchartaxiscategoryminorgridlineshadow()) {
          mergeTschchartaxiscategoryminorgridlineshadow(other.getTschchartaxiscategoryminorgridlineshadow());
        }
        if (other.hasTschchartaxisvalueminorgridlineshadow()) {
          mergeTschchartaxisvalueminorgridlineshadow(other.getTschchartaxisvalueminorgridlineshadow());
        }
        if (other.hasTschchartaxiscategoryminorgridlinestroke()) {
          mergeTschchartaxiscategoryminorgridlinestroke(other.getTschchartaxiscategoryminorgridlinestroke());
        }
        if (other.hasTschchartaxisvalueminorgridlinestroke()) {
          mergeTschchartaxisvalueminorgridlinestroke(other.getTschchartaxisvalueminorgridlinestroke());
        }
        if (other.hasTschchartaxiscategoryshowaxis()) {
          setTschchartaxiscategoryshowaxis(other.getTschchartaxiscategoryshowaxis());
        }
        if (other.hasTschchartaxisvalueshowaxis()) {
          setTschchartaxisvalueshowaxis(other.getTschchartaxisvalueshowaxis());
        }
        if (other.hasTschchartaxiscategoryshowlastlabel()) {
          setTschchartaxiscategoryshowlastlabel(other.getTschchartaxiscategoryshowlastlabel());
        }
        if (other.hasTschchartaxiscategoryshowmajorgridlines()) {
          setTschchartaxiscategoryshowmajorgridlines(other.getTschchartaxiscategoryshowmajorgridlines());
        }
        if (other.hasTschchartaxisvalueshowmajorgridlines()) {
          setTschchartaxisvalueshowmajorgridlines(other.getTschchartaxisvalueshowmajorgridlines());
        }
        if (other.hasTschchartaxiscategoryshowmajortickmarks()) {
          setTschchartaxiscategoryshowmajortickmarks(other.getTschchartaxiscategoryshowmajortickmarks());
        }
        if (other.hasTschchartaxisvalueshowmajortickmarks()) {
          setTschchartaxisvalueshowmajortickmarks(other.getTschchartaxisvalueshowmajortickmarks());
        }
        if (other.hasTschchartaxisvalueshowminimumlabel()) {
          setTschchartaxisvalueshowminimumlabel(other.getTschchartaxisvalueshowminimumlabel());
        }
        if (other.hasTschchartaxiscategoryshowminorgridlines()) {
          setTschchartaxiscategoryshowminorgridlines(other.getTschchartaxiscategoryshowminorgridlines());
        }
        if (other.hasTschchartaxisvalueshowminorgridlines()) {
          setTschchartaxisvalueshowminorgridlines(other.getTschchartaxisvalueshowminorgridlines());
        }
        if (other.hasTschchartaxiscategoryshowminortickmarks()) {
          setTschchartaxiscategoryshowminortickmarks(other.getTschchartaxiscategoryshowminortickmarks());
        }
        if (other.hasTschchartaxisvalueshowminortickmarks()) {
          setTschchartaxisvalueshowminortickmarks(other.getTschchartaxisvalueshowminortickmarks());
        }
        if (other.hasTschchartaxiscategorytickmarklocation()) {
          setTschchartaxiscategorytickmarklocation(other.getTschchartaxiscategorytickmarklocation());
        }
        if (other.hasTschchartaxisvaluetickmarklocation()) {
          setTschchartaxisvaluetickmarklocation(other.getTschchartaxisvaluetickmarklocation());
        }
        if (other.hasTschchartaxiscategorytitleparagraphstyleindex()) {
          setTschchartaxiscategorytitleparagraphstyleindex(other.getTschchartaxiscategorytitleparagraphstyleindex());
        }
        if (other.hasTschchartaxisdefaulttitleparagraphstyleindex()) {
          setTschchartaxisdefaulttitleparagraphstyleindex(other.getTschchartaxisdefaulttitleparagraphstyleindex());
        }
        if (other.hasTschchartaxisvaluetitleparagraphstyleindex()) {
          setTschchartaxisvaluetitleparagraphstyleindex(other.getTschchartaxisvaluetitleparagraphstyleindex());
        }
        if (other.hasTschchartaxiscategoryverticalspacing()) {
          setTschchartaxiscategoryverticalspacing(other.getTschchartaxiscategoryverticalspacing());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (hasTschchartaxiscategory3Dgridlinestroke()) {
          if (!getTschchartaxiscategory3Dgridlinestroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartaxisvalue3Dgridlinestroke()) {
          if (!getTschchartaxisvalue3Dgridlinestroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartaxiscategorymajorgridlineshadow()) {
          if (!getTschchartaxiscategorymajorgridlineshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartaxisvaluemajorgridlineshadow()) {
          if (!getTschchartaxisvaluemajorgridlineshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartaxiscategorymajorgridlinestroke()) {
          if (!getTschchartaxiscategorymajorgridlinestroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartaxisvaluemajorgridlinestroke()) {
          if (!getTschchartaxisvaluemajorgridlinestroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartaxiscategoryminorgridlineshadow()) {
          if (!getTschchartaxiscategoryminorgridlineshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartaxisvalueminorgridlineshadow()) {
          if (!getTschchartaxisvalueminorgridlineshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartaxiscategoryminorgridlinestroke()) {
          if (!getTschchartaxiscategoryminorgridlinestroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartaxisvalueminorgridlinestroke()) {
          if (!getTschchartaxisvalueminorgridlinestroke().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      private float tschchartaxiscategory3Dgridlineopacity_ ;
      /**
       * <code>optional float tschchartaxiscategory3dgridlineopacity = 1;</code>
       */
      public boolean hasTschchartaxiscategory3Dgridlineopacity() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional float tschchartaxiscategory3dgridlineopacity = 1;</code>
       */
      public float getTschchartaxiscategory3Dgridlineopacity() {
        return tschchartaxiscategory3Dgridlineopacity_;
      }
      /**
       * <code>optional float tschchartaxiscategory3dgridlineopacity = 1;</code>
       */
      public Builder setTschchartaxiscategory3Dgridlineopacity(float value) {
        bitField0_ |= 0x00000001;
        tschchartaxiscategory3Dgridlineopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartaxiscategory3dgridlineopacity = 1;</code>
       */
      public Builder clearTschchartaxiscategory3Dgridlineopacity() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tschchartaxiscategory3Dgridlineopacity_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartaxisvalue3Dgridlineopacity_ ;
      /**
       * <code>optional float tschchartaxisvalue3dgridlineopacity = 2;</code>
       */
      public boolean hasTschchartaxisvalue3Dgridlineopacity() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float tschchartaxisvalue3dgridlineopacity = 2;</code>
       */
      public float getTschchartaxisvalue3Dgridlineopacity() {
        return tschchartaxisvalue3Dgridlineopacity_;
      }
      /**
       * <code>optional float tschchartaxisvalue3dgridlineopacity = 2;</code>
       */
      public Builder setTschchartaxisvalue3Dgridlineopacity(float value) {
        bitField0_ |= 0x00000002;
        tschchartaxisvalue3Dgridlineopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartaxisvalue3dgridlineopacity = 2;</code>
       */
      public Builder clearTschchartaxisvalue3Dgridlineopacity() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tschchartaxisvalue3Dgridlineopacity_ = 0F;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartaxiscategory3Dgridlinestroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartaxiscategory3DgridlinestrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 3;</code>
       */
      public boolean hasTschchartaxiscategory3Dgridlinestroke() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 3;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxiscategory3Dgridlinestroke() {
        if (tschchartaxiscategory3DgridlinestrokeBuilder_ == null) {
          return tschchartaxiscategory3Dgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxiscategory3Dgridlinestroke_;
        } else {
          return tschchartaxiscategory3DgridlinestrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 3;</code>
       */
      public Builder setTschchartaxiscategory3Dgridlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartaxiscategory3DgridlinestrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxiscategory3Dgridlinestroke_ = value;
          onChanged();
        } else {
          tschchartaxiscategory3DgridlinestrokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 3;</code>
       */
      public Builder setTschchartaxiscategory3Dgridlinestroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartaxiscategory3DgridlinestrokeBuilder_ == null) {
          tschchartaxiscategory3Dgridlinestroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxiscategory3DgridlinestrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 3;</code>
       */
      public Builder mergeTschchartaxiscategory3Dgridlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartaxiscategory3DgridlinestrokeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              tschchartaxiscategory3Dgridlinestroke_ != null &&
              tschchartaxiscategory3Dgridlinestroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartaxiscategory3Dgridlinestroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartaxiscategory3Dgridlinestroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxiscategory3Dgridlinestroke_ = value;
          }
          onChanged();
        } else {
          tschchartaxiscategory3DgridlinestrokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 3;</code>
       */
      public Builder clearTschchartaxiscategory3Dgridlinestroke() {
        if (tschchartaxiscategory3DgridlinestrokeBuilder_ == null) {
          tschchartaxiscategory3Dgridlinestroke_ = null;
          onChanged();
        } else {
          tschchartaxiscategory3DgridlinestrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 3;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartaxiscategory3DgridlinestrokeBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getTschchartaxiscategory3DgridlinestrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 3;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxiscategory3DgridlinestrokeOrBuilder() {
        if (tschchartaxiscategory3DgridlinestrokeBuilder_ != null) {
          return tschchartaxiscategory3DgridlinestrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxiscategory3Dgridlinestroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxiscategory3Dgridlinestroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartaxiscategory3DgridlinestrokeFieldBuilder() {
        if (tschchartaxiscategory3DgridlinestrokeBuilder_ == null) {
          tschchartaxiscategory3DgridlinestrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartaxiscategory3Dgridlinestroke(),
                  getParentForChildren(),
                  isClean());
          tschchartaxiscategory3Dgridlinestroke_ = null;
        }
        return tschchartaxiscategory3DgridlinestrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartaxisvalue3Dgridlinestroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartaxisvalue3DgridlinestrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 4;</code>
       */
      public boolean hasTschchartaxisvalue3Dgridlinestroke() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 4;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxisvalue3Dgridlinestroke() {
        if (tschchartaxisvalue3DgridlinestrokeBuilder_ == null) {
          return tschchartaxisvalue3Dgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxisvalue3Dgridlinestroke_;
        } else {
          return tschchartaxisvalue3DgridlinestrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 4;</code>
       */
      public Builder setTschchartaxisvalue3Dgridlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartaxisvalue3DgridlinestrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxisvalue3Dgridlinestroke_ = value;
          onChanged();
        } else {
          tschchartaxisvalue3DgridlinestrokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 4;</code>
       */
      public Builder setTschchartaxisvalue3Dgridlinestroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartaxisvalue3DgridlinestrokeBuilder_ == null) {
          tschchartaxisvalue3Dgridlinestroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxisvalue3DgridlinestrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 4;</code>
       */
      public Builder mergeTschchartaxisvalue3Dgridlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartaxisvalue3DgridlinestrokeBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              tschchartaxisvalue3Dgridlinestroke_ != null &&
              tschchartaxisvalue3Dgridlinestroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartaxisvalue3Dgridlinestroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartaxisvalue3Dgridlinestroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxisvalue3Dgridlinestroke_ = value;
          }
          onChanged();
        } else {
          tschchartaxisvalue3DgridlinestrokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 4;</code>
       */
      public Builder clearTschchartaxisvalue3Dgridlinestroke() {
        if (tschchartaxisvalue3DgridlinestrokeBuilder_ == null) {
          tschchartaxisvalue3Dgridlinestroke_ = null;
          onChanged();
        } else {
          tschchartaxisvalue3DgridlinestrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 4;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartaxisvalue3DgridlinestrokeBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getTschchartaxisvalue3DgridlinestrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 4;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxisvalue3DgridlinestrokeOrBuilder() {
        if (tschchartaxisvalue3DgridlinestrokeBuilder_ != null) {
          return tschchartaxisvalue3DgridlinestrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxisvalue3Dgridlinestroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxisvalue3Dgridlinestroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartaxisvalue3DgridlinestrokeFieldBuilder() {
        if (tschchartaxisvalue3DgridlinestrokeBuilder_ == null) {
          tschchartaxisvalue3DgridlinestrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartaxisvalue3Dgridlinestroke(),
                  getParentForChildren(),
                  isClean());
          tschchartaxisvalue3Dgridlinestroke_ = null;
        }
        return tschchartaxisvalue3DgridlinestrokeBuilder_;
      }

      private int tschchartaxiscategoryhorizontalspacing_ ;
      /**
       * <code>optional int32 tschchartaxiscategoryhorizontalspacing = 5;</code>
       */
      public boolean hasTschchartaxiscategoryhorizontalspacing() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 tschchartaxiscategoryhorizontalspacing = 5;</code>
       */
      public int getTschchartaxiscategoryhorizontalspacing() {
        return tschchartaxiscategoryhorizontalspacing_;
      }
      /**
       * <code>optional int32 tschchartaxiscategoryhorizontalspacing = 5;</code>
       */
      public Builder setTschchartaxiscategoryhorizontalspacing(int value) {
        bitField0_ |= 0x00000010;
        tschchartaxiscategoryhorizontalspacing_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxiscategoryhorizontalspacing = 5;</code>
       */
      public Builder clearTschchartaxiscategoryhorizontalspacing() {
        bitField0_ = (bitField0_ & ~0x00000010);
        tschchartaxiscategoryhorizontalspacing_ = 0;
        onChanged();
        return this;
      }

      private int tschchartaxiscategorylabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartaxiscategorylabelparagraphstyleindex = 6;</code>
       */
      public boolean hasTschchartaxiscategorylabelparagraphstyleindex() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 tschchartaxiscategorylabelparagraphstyleindex = 6;</code>
       */
      public int getTschchartaxiscategorylabelparagraphstyleindex() {
        return tschchartaxiscategorylabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartaxiscategorylabelparagraphstyleindex = 6;</code>
       */
      public Builder setTschchartaxiscategorylabelparagraphstyleindex(int value) {
        bitField0_ |= 0x00000020;
        tschchartaxiscategorylabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxiscategorylabelparagraphstyleindex = 6;</code>
       */
      public Builder clearTschchartaxiscategorylabelparagraphstyleindex() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tschchartaxiscategorylabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartaxisdefaultlabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartaxisdefaultlabelparagraphstyleindex = 7;</code>
       */
      public boolean hasTschchartaxisdefaultlabelparagraphstyleindex() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 tschchartaxisdefaultlabelparagraphstyleindex = 7;</code>
       */
      public int getTschchartaxisdefaultlabelparagraphstyleindex() {
        return tschchartaxisdefaultlabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartaxisdefaultlabelparagraphstyleindex = 7;</code>
       */
      public Builder setTschchartaxisdefaultlabelparagraphstyleindex(int value) {
        bitField0_ |= 0x00000040;
        tschchartaxisdefaultlabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxisdefaultlabelparagraphstyleindex = 7;</code>
       */
      public Builder clearTschchartaxisdefaultlabelparagraphstyleindex() {
        bitField0_ = (bitField0_ & ~0x00000040);
        tschchartaxisdefaultlabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartaxisvaluelabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartaxisvaluelabelparagraphstyleindex = 8;</code>
       */
      public boolean hasTschchartaxisvaluelabelparagraphstyleindex() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 tschchartaxisvaluelabelparagraphstyleindex = 8;</code>
       */
      public int getTschchartaxisvaluelabelparagraphstyleindex() {
        return tschchartaxisvaluelabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartaxisvaluelabelparagraphstyleindex = 8;</code>
       */
      public Builder setTschchartaxisvaluelabelparagraphstyleindex(int value) {
        bitField0_ |= 0x00000080;
        tschchartaxisvaluelabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxisvaluelabelparagraphstyleindex = 8;</code>
       */
      public Builder clearTschchartaxisvaluelabelparagraphstyleindex() {
        bitField0_ = (bitField0_ & ~0x00000080);
        tschchartaxisvaluelabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private float tschchartaxiscategorylabelsorientation_ ;
      /**
       * <code>optional float tschchartaxiscategorylabelsorientation = 9;</code>
       */
      public boolean hasTschchartaxiscategorylabelsorientation() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float tschchartaxiscategorylabelsorientation = 9;</code>
       */
      public float getTschchartaxiscategorylabelsorientation() {
        return tschchartaxiscategorylabelsorientation_;
      }
      /**
       * <code>optional float tschchartaxiscategorylabelsorientation = 9;</code>
       */
      public Builder setTschchartaxiscategorylabelsorientation(float value) {
        bitField0_ |= 0x00000100;
        tschchartaxiscategorylabelsorientation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartaxiscategorylabelsorientation = 9;</code>
       */
      public Builder clearTschchartaxiscategorylabelsorientation() {
        bitField0_ = (bitField0_ & ~0x00000100);
        tschchartaxiscategorylabelsorientation_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartaxisdefaultlabelsorientation_ ;
      /**
       * <code>optional float tschchartaxisdefaultlabelsorientation = 10;</code>
       */
      public boolean hasTschchartaxisdefaultlabelsorientation() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float tschchartaxisdefaultlabelsorientation = 10;</code>
       */
      public float getTschchartaxisdefaultlabelsorientation() {
        return tschchartaxisdefaultlabelsorientation_;
      }
      /**
       * <code>optional float tschchartaxisdefaultlabelsorientation = 10;</code>
       */
      public Builder setTschchartaxisdefaultlabelsorientation(float value) {
        bitField0_ |= 0x00000200;
        tschchartaxisdefaultlabelsorientation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartaxisdefaultlabelsorientation = 10;</code>
       */
      public Builder clearTschchartaxisdefaultlabelsorientation() {
        bitField0_ = (bitField0_ & ~0x00000200);
        tschchartaxisdefaultlabelsorientation_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartaxisvaluelabelsorientation_ ;
      /**
       * <code>optional float tschchartaxisvaluelabelsorientation = 11;</code>
       */
      public boolean hasTschchartaxisvaluelabelsorientation() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional float tschchartaxisvaluelabelsorientation = 11;</code>
       */
      public float getTschchartaxisvaluelabelsorientation() {
        return tschchartaxisvaluelabelsorientation_;
      }
      /**
       * <code>optional float tschchartaxisvaluelabelsorientation = 11;</code>
       */
      public Builder setTschchartaxisvaluelabelsorientation(float value) {
        bitField0_ |= 0x00000400;
        tschchartaxisvaluelabelsorientation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartaxisvaluelabelsorientation = 11;</code>
       */
      public Builder clearTschchartaxisvaluelabelsorientation() {
        bitField0_ = (bitField0_ & ~0x00000400);
        tschchartaxisvaluelabelsorientation_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartaxiscategorymajorgridlineopacity_ ;
      /**
       * <code>optional float tschchartaxiscategorymajorgridlineopacity = 12;</code>
       */
      public boolean hasTschchartaxiscategorymajorgridlineopacity() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional float tschchartaxiscategorymajorgridlineopacity = 12;</code>
       */
      public float getTschchartaxiscategorymajorgridlineopacity() {
        return tschchartaxiscategorymajorgridlineopacity_;
      }
      /**
       * <code>optional float tschchartaxiscategorymajorgridlineopacity = 12;</code>
       */
      public Builder setTschchartaxiscategorymajorgridlineopacity(float value) {
        bitField0_ |= 0x00000800;
        tschchartaxiscategorymajorgridlineopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartaxiscategorymajorgridlineopacity = 12;</code>
       */
      public Builder clearTschchartaxiscategorymajorgridlineopacity() {
        bitField0_ = (bitField0_ & ~0x00000800);
        tschchartaxiscategorymajorgridlineopacity_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartaxisvaluemajorgridlineopacity_ ;
      /**
       * <code>optional float tschchartaxisvaluemajorgridlineopacity = 13;</code>
       */
      public boolean hasTschchartaxisvaluemajorgridlineopacity() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional float tschchartaxisvaluemajorgridlineopacity = 13;</code>
       */
      public float getTschchartaxisvaluemajorgridlineopacity() {
        return tschchartaxisvaluemajorgridlineopacity_;
      }
      /**
       * <code>optional float tschchartaxisvaluemajorgridlineopacity = 13;</code>
       */
      public Builder setTschchartaxisvaluemajorgridlineopacity(float value) {
        bitField0_ |= 0x00001000;
        tschchartaxisvaluemajorgridlineopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartaxisvaluemajorgridlineopacity = 13;</code>
       */
      public Builder clearTschchartaxisvaluemajorgridlineopacity() {
        bitField0_ = (bitField0_ & ~0x00001000);
        tschchartaxisvaluemajorgridlineopacity_ = 0F;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartaxiscategorymajorgridlineshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartaxiscategorymajorgridlineshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 14;</code>
       */
      public boolean hasTschchartaxiscategorymajorgridlineshadow() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 14;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartaxiscategorymajorgridlineshadow() {
        if (tschchartaxiscategorymajorgridlineshadowBuilder_ == null) {
          return tschchartaxiscategorymajorgridlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxiscategorymajorgridlineshadow_;
        } else {
          return tschchartaxiscategorymajorgridlineshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 14;</code>
       */
      public Builder setTschchartaxiscategorymajorgridlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartaxiscategorymajorgridlineshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxiscategorymajorgridlineshadow_ = value;
          onChanged();
        } else {
          tschchartaxiscategorymajorgridlineshadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 14;</code>
       */
      public Builder setTschchartaxiscategorymajorgridlineshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartaxiscategorymajorgridlineshadowBuilder_ == null) {
          tschchartaxiscategorymajorgridlineshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxiscategorymajorgridlineshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 14;</code>
       */
      public Builder mergeTschchartaxiscategorymajorgridlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartaxiscategorymajorgridlineshadowBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
              tschchartaxiscategorymajorgridlineshadow_ != null &&
              tschchartaxiscategorymajorgridlineshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartaxiscategorymajorgridlineshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartaxiscategorymajorgridlineshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxiscategorymajorgridlineshadow_ = value;
          }
          onChanged();
        } else {
          tschchartaxiscategorymajorgridlineshadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 14;</code>
       */
      public Builder clearTschchartaxiscategorymajorgridlineshadow() {
        if (tschchartaxiscategorymajorgridlineshadowBuilder_ == null) {
          tschchartaxiscategorymajorgridlineshadow_ = null;
          onChanged();
        } else {
          tschchartaxiscategorymajorgridlineshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 14;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartaxiscategorymajorgridlineshadowBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getTschchartaxiscategorymajorgridlineshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 14;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartaxiscategorymajorgridlineshadowOrBuilder() {
        if (tschchartaxiscategorymajorgridlineshadowBuilder_ != null) {
          return tschchartaxiscategorymajorgridlineshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxiscategorymajorgridlineshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxiscategorymajorgridlineshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartaxiscategorymajorgridlineshadowFieldBuilder() {
        if (tschchartaxiscategorymajorgridlineshadowBuilder_ == null) {
          tschchartaxiscategorymajorgridlineshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartaxiscategorymajorgridlineshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartaxiscategorymajorgridlineshadow_ = null;
        }
        return tschchartaxiscategorymajorgridlineshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartaxisvaluemajorgridlineshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartaxisvaluemajorgridlineshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 15;</code>
       */
      public boolean hasTschchartaxisvaluemajorgridlineshadow() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 15;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartaxisvaluemajorgridlineshadow() {
        if (tschchartaxisvaluemajorgridlineshadowBuilder_ == null) {
          return tschchartaxisvaluemajorgridlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxisvaluemajorgridlineshadow_;
        } else {
          return tschchartaxisvaluemajorgridlineshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 15;</code>
       */
      public Builder setTschchartaxisvaluemajorgridlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartaxisvaluemajorgridlineshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxisvaluemajorgridlineshadow_ = value;
          onChanged();
        } else {
          tschchartaxisvaluemajorgridlineshadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 15;</code>
       */
      public Builder setTschchartaxisvaluemajorgridlineshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartaxisvaluemajorgridlineshadowBuilder_ == null) {
          tschchartaxisvaluemajorgridlineshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxisvaluemajorgridlineshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 15;</code>
       */
      public Builder mergeTschchartaxisvaluemajorgridlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartaxisvaluemajorgridlineshadowBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000) &&
              tschchartaxisvaluemajorgridlineshadow_ != null &&
              tschchartaxisvaluemajorgridlineshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartaxisvaluemajorgridlineshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartaxisvaluemajorgridlineshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxisvaluemajorgridlineshadow_ = value;
          }
          onChanged();
        } else {
          tschchartaxisvaluemajorgridlineshadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 15;</code>
       */
      public Builder clearTschchartaxisvaluemajorgridlineshadow() {
        if (tschchartaxisvaluemajorgridlineshadowBuilder_ == null) {
          tschchartaxisvaluemajorgridlineshadow_ = null;
          onChanged();
        } else {
          tschchartaxisvaluemajorgridlineshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 15;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartaxisvaluemajorgridlineshadowBuilder() {
        bitField0_ |= 0x00004000;
        onChanged();
        return getTschchartaxisvaluemajorgridlineshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 15;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartaxisvaluemajorgridlineshadowOrBuilder() {
        if (tschchartaxisvaluemajorgridlineshadowBuilder_ != null) {
          return tschchartaxisvaluemajorgridlineshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxisvaluemajorgridlineshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxisvaluemajorgridlineshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartaxisvaluemajorgridlineshadowFieldBuilder() {
        if (tschchartaxisvaluemajorgridlineshadowBuilder_ == null) {
          tschchartaxisvaluemajorgridlineshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartaxisvaluemajorgridlineshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartaxisvaluemajorgridlineshadow_ = null;
        }
        return tschchartaxisvaluemajorgridlineshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartaxiscategorymajorgridlinestroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartaxiscategorymajorgridlinestrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 16;</code>
       */
      public boolean hasTschchartaxiscategorymajorgridlinestroke() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 16;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxiscategorymajorgridlinestroke() {
        if (tschchartaxiscategorymajorgridlinestrokeBuilder_ == null) {
          return tschchartaxiscategorymajorgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxiscategorymajorgridlinestroke_;
        } else {
          return tschchartaxiscategorymajorgridlinestrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 16;</code>
       */
      public Builder setTschchartaxiscategorymajorgridlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartaxiscategorymajorgridlinestrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxiscategorymajorgridlinestroke_ = value;
          onChanged();
        } else {
          tschchartaxiscategorymajorgridlinestrokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 16;</code>
       */
      public Builder setTschchartaxiscategorymajorgridlinestroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartaxiscategorymajorgridlinestrokeBuilder_ == null) {
          tschchartaxiscategorymajorgridlinestroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxiscategorymajorgridlinestrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 16;</code>
       */
      public Builder mergeTschchartaxiscategorymajorgridlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartaxiscategorymajorgridlinestrokeBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000) &&
              tschchartaxiscategorymajorgridlinestroke_ != null &&
              tschchartaxiscategorymajorgridlinestroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartaxiscategorymajorgridlinestroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartaxiscategorymajorgridlinestroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxiscategorymajorgridlinestroke_ = value;
          }
          onChanged();
        } else {
          tschchartaxiscategorymajorgridlinestrokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 16;</code>
       */
      public Builder clearTschchartaxiscategorymajorgridlinestroke() {
        if (tschchartaxiscategorymajorgridlinestrokeBuilder_ == null) {
          tschchartaxiscategorymajorgridlinestroke_ = null;
          onChanged();
        } else {
          tschchartaxiscategorymajorgridlinestrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 16;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartaxiscategorymajorgridlinestrokeBuilder() {
        bitField0_ |= 0x00008000;
        onChanged();
        return getTschchartaxiscategorymajorgridlinestrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 16;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxiscategorymajorgridlinestrokeOrBuilder() {
        if (tschchartaxiscategorymajorgridlinestrokeBuilder_ != null) {
          return tschchartaxiscategorymajorgridlinestrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxiscategorymajorgridlinestroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxiscategorymajorgridlinestroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartaxiscategorymajorgridlinestrokeFieldBuilder() {
        if (tschchartaxiscategorymajorgridlinestrokeBuilder_ == null) {
          tschchartaxiscategorymajorgridlinestrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartaxiscategorymajorgridlinestroke(),
                  getParentForChildren(),
                  isClean());
          tschchartaxiscategorymajorgridlinestroke_ = null;
        }
        return tschchartaxiscategorymajorgridlinestrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartaxisvaluemajorgridlinestroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartaxisvaluemajorgridlinestrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 17;</code>
       */
      public boolean hasTschchartaxisvaluemajorgridlinestroke() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 17;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxisvaluemajorgridlinestroke() {
        if (tschchartaxisvaluemajorgridlinestrokeBuilder_ == null) {
          return tschchartaxisvaluemajorgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxisvaluemajorgridlinestroke_;
        } else {
          return tschchartaxisvaluemajorgridlinestrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 17;</code>
       */
      public Builder setTschchartaxisvaluemajorgridlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartaxisvaluemajorgridlinestrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxisvaluemajorgridlinestroke_ = value;
          onChanged();
        } else {
          tschchartaxisvaluemajorgridlinestrokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 17;</code>
       */
      public Builder setTschchartaxisvaluemajorgridlinestroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartaxisvaluemajorgridlinestrokeBuilder_ == null) {
          tschchartaxisvaluemajorgridlinestroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxisvaluemajorgridlinestrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 17;</code>
       */
      public Builder mergeTschchartaxisvaluemajorgridlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartaxisvaluemajorgridlinestrokeBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000) &&
              tschchartaxisvaluemajorgridlinestroke_ != null &&
              tschchartaxisvaluemajorgridlinestroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartaxisvaluemajorgridlinestroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartaxisvaluemajorgridlinestroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxisvaluemajorgridlinestroke_ = value;
          }
          onChanged();
        } else {
          tschchartaxisvaluemajorgridlinestrokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 17;</code>
       */
      public Builder clearTschchartaxisvaluemajorgridlinestroke() {
        if (tschchartaxisvaluemajorgridlinestrokeBuilder_ == null) {
          tschchartaxisvaluemajorgridlinestroke_ = null;
          onChanged();
        } else {
          tschchartaxisvaluemajorgridlinestrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 17;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartaxisvaluemajorgridlinestrokeBuilder() {
        bitField0_ |= 0x00010000;
        onChanged();
        return getTschchartaxisvaluemajorgridlinestrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 17;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxisvaluemajorgridlinestrokeOrBuilder() {
        if (tschchartaxisvaluemajorgridlinestrokeBuilder_ != null) {
          return tschchartaxisvaluemajorgridlinestrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxisvaluemajorgridlinestroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxisvaluemajorgridlinestroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartaxisvaluemajorgridlinestrokeFieldBuilder() {
        if (tschchartaxisvaluemajorgridlinestrokeBuilder_ == null) {
          tschchartaxisvaluemajorgridlinestrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartaxisvaluemajorgridlinestroke(),
                  getParentForChildren(),
                  isClean());
          tschchartaxisvaluemajorgridlinestroke_ = null;
        }
        return tschchartaxisvaluemajorgridlinestrokeBuilder_;
      }

      private float tschchartaxiscategoryminorgridlineopacity_ ;
      /**
       * <code>optional float tschchartaxiscategoryminorgridlineopacity = 18;</code>
       */
      public boolean hasTschchartaxiscategoryminorgridlineopacity() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional float tschchartaxiscategoryminorgridlineopacity = 18;</code>
       */
      public float getTschchartaxiscategoryminorgridlineopacity() {
        return tschchartaxiscategoryminorgridlineopacity_;
      }
      /**
       * <code>optional float tschchartaxiscategoryminorgridlineopacity = 18;</code>
       */
      public Builder setTschchartaxiscategoryminorgridlineopacity(float value) {
        bitField0_ |= 0x00020000;
        tschchartaxiscategoryminorgridlineopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartaxiscategoryminorgridlineopacity = 18;</code>
       */
      public Builder clearTschchartaxiscategoryminorgridlineopacity() {
        bitField0_ = (bitField0_ & ~0x00020000);
        tschchartaxiscategoryminorgridlineopacity_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartaxisvalueminorgridlineopacity_ ;
      /**
       * <code>optional float tschchartaxisvalueminorgridlineopacity = 19;</code>
       */
      public boolean hasTschchartaxisvalueminorgridlineopacity() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional float tschchartaxisvalueminorgridlineopacity = 19;</code>
       */
      public float getTschchartaxisvalueminorgridlineopacity() {
        return tschchartaxisvalueminorgridlineopacity_;
      }
      /**
       * <code>optional float tschchartaxisvalueminorgridlineopacity = 19;</code>
       */
      public Builder setTschchartaxisvalueminorgridlineopacity(float value) {
        bitField0_ |= 0x00040000;
        tschchartaxisvalueminorgridlineopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartaxisvalueminorgridlineopacity = 19;</code>
       */
      public Builder clearTschchartaxisvalueminorgridlineopacity() {
        bitField0_ = (bitField0_ & ~0x00040000);
        tschchartaxisvalueminorgridlineopacity_ = 0F;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartaxiscategoryminorgridlineshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartaxiscategoryminorgridlineshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 20;</code>
       */
      public boolean hasTschchartaxiscategoryminorgridlineshadow() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 20;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartaxiscategoryminorgridlineshadow() {
        if (tschchartaxiscategoryminorgridlineshadowBuilder_ == null) {
          return tschchartaxiscategoryminorgridlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxiscategoryminorgridlineshadow_;
        } else {
          return tschchartaxiscategoryminorgridlineshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 20;</code>
       */
      public Builder setTschchartaxiscategoryminorgridlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartaxiscategoryminorgridlineshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxiscategoryminorgridlineshadow_ = value;
          onChanged();
        } else {
          tschchartaxiscategoryminorgridlineshadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 20;</code>
       */
      public Builder setTschchartaxiscategoryminorgridlineshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartaxiscategoryminorgridlineshadowBuilder_ == null) {
          tschchartaxiscategoryminorgridlineshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxiscategoryminorgridlineshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 20;</code>
       */
      public Builder mergeTschchartaxiscategoryminorgridlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartaxiscategoryminorgridlineshadowBuilder_ == null) {
          if (((bitField0_ & 0x00080000) == 0x00080000) &&
              tschchartaxiscategoryminorgridlineshadow_ != null &&
              tschchartaxiscategoryminorgridlineshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartaxiscategoryminorgridlineshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartaxiscategoryminorgridlineshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxiscategoryminorgridlineshadow_ = value;
          }
          onChanged();
        } else {
          tschchartaxiscategoryminorgridlineshadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 20;</code>
       */
      public Builder clearTschchartaxiscategoryminorgridlineshadow() {
        if (tschchartaxiscategoryminorgridlineshadowBuilder_ == null) {
          tschchartaxiscategoryminorgridlineshadow_ = null;
          onChanged();
        } else {
          tschchartaxiscategoryminorgridlineshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 20;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartaxiscategoryminorgridlineshadowBuilder() {
        bitField0_ |= 0x00080000;
        onChanged();
        return getTschchartaxiscategoryminorgridlineshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 20;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartaxiscategoryminorgridlineshadowOrBuilder() {
        if (tschchartaxiscategoryminorgridlineshadowBuilder_ != null) {
          return tschchartaxiscategoryminorgridlineshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxiscategoryminorgridlineshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxiscategoryminorgridlineshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 20;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartaxiscategoryminorgridlineshadowFieldBuilder() {
        if (tschchartaxiscategoryminorgridlineshadowBuilder_ == null) {
          tschchartaxiscategoryminorgridlineshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartaxiscategoryminorgridlineshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartaxiscategoryminorgridlineshadow_ = null;
        }
        return tschchartaxiscategoryminorgridlineshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartaxisvalueminorgridlineshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartaxisvalueminorgridlineshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 21;</code>
       */
      public boolean hasTschchartaxisvalueminorgridlineshadow() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 21;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartaxisvalueminorgridlineshadow() {
        if (tschchartaxisvalueminorgridlineshadowBuilder_ == null) {
          return tschchartaxisvalueminorgridlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxisvalueminorgridlineshadow_;
        } else {
          return tschchartaxisvalueminorgridlineshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 21;</code>
       */
      public Builder setTschchartaxisvalueminorgridlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartaxisvalueminorgridlineshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxisvalueminorgridlineshadow_ = value;
          onChanged();
        } else {
          tschchartaxisvalueminorgridlineshadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 21;</code>
       */
      public Builder setTschchartaxisvalueminorgridlineshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartaxisvalueminorgridlineshadowBuilder_ == null) {
          tschchartaxisvalueminorgridlineshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxisvalueminorgridlineshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 21;</code>
       */
      public Builder mergeTschchartaxisvalueminorgridlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartaxisvalueminorgridlineshadowBuilder_ == null) {
          if (((bitField0_ & 0x00100000) == 0x00100000) &&
              tschchartaxisvalueminorgridlineshadow_ != null &&
              tschchartaxisvalueminorgridlineshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartaxisvalueminorgridlineshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartaxisvalueminorgridlineshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxisvalueminorgridlineshadow_ = value;
          }
          onChanged();
        } else {
          tschchartaxisvalueminorgridlineshadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 21;</code>
       */
      public Builder clearTschchartaxisvalueminorgridlineshadow() {
        if (tschchartaxisvalueminorgridlineshadowBuilder_ == null) {
          tschchartaxisvalueminorgridlineshadow_ = null;
          onChanged();
        } else {
          tschchartaxisvalueminorgridlineshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00100000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 21;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartaxisvalueminorgridlineshadowBuilder() {
        bitField0_ |= 0x00100000;
        onChanged();
        return getTschchartaxisvalueminorgridlineshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 21;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartaxisvalueminorgridlineshadowOrBuilder() {
        if (tschchartaxisvalueminorgridlineshadowBuilder_ != null) {
          return tschchartaxisvalueminorgridlineshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxisvalueminorgridlineshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxisvalueminorgridlineshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 21;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartaxisvalueminorgridlineshadowFieldBuilder() {
        if (tschchartaxisvalueminorgridlineshadowBuilder_ == null) {
          tschchartaxisvalueminorgridlineshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartaxisvalueminorgridlineshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartaxisvalueminorgridlineshadow_ = null;
        }
        return tschchartaxisvalueminorgridlineshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartaxiscategoryminorgridlinestroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartaxiscategoryminorgridlinestrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 22;</code>
       */
      public boolean hasTschchartaxiscategoryminorgridlinestroke() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 22;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxiscategoryminorgridlinestroke() {
        if (tschchartaxiscategoryminorgridlinestrokeBuilder_ == null) {
          return tschchartaxiscategoryminorgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxiscategoryminorgridlinestroke_;
        } else {
          return tschchartaxiscategoryminorgridlinestrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 22;</code>
       */
      public Builder setTschchartaxiscategoryminorgridlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartaxiscategoryminorgridlinestrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxiscategoryminorgridlinestroke_ = value;
          onChanged();
        } else {
          tschchartaxiscategoryminorgridlinestrokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 22;</code>
       */
      public Builder setTschchartaxiscategoryminorgridlinestroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartaxiscategoryminorgridlinestrokeBuilder_ == null) {
          tschchartaxiscategoryminorgridlinestroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxiscategoryminorgridlinestrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 22;</code>
       */
      public Builder mergeTschchartaxiscategoryminorgridlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartaxiscategoryminorgridlinestrokeBuilder_ == null) {
          if (((bitField0_ & 0x00200000) == 0x00200000) &&
              tschchartaxiscategoryminorgridlinestroke_ != null &&
              tschchartaxiscategoryminorgridlinestroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartaxiscategoryminorgridlinestroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartaxiscategoryminorgridlinestroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxiscategoryminorgridlinestroke_ = value;
          }
          onChanged();
        } else {
          tschchartaxiscategoryminorgridlinestrokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 22;</code>
       */
      public Builder clearTschchartaxiscategoryminorgridlinestroke() {
        if (tschchartaxiscategoryminorgridlinestrokeBuilder_ == null) {
          tschchartaxiscategoryminorgridlinestroke_ = null;
          onChanged();
        } else {
          tschchartaxiscategoryminorgridlinestrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 22;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartaxiscategoryminorgridlinestrokeBuilder() {
        bitField0_ |= 0x00200000;
        onChanged();
        return getTschchartaxiscategoryminorgridlinestrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 22;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxiscategoryminorgridlinestrokeOrBuilder() {
        if (tschchartaxiscategoryminorgridlinestrokeBuilder_ != null) {
          return tschchartaxiscategoryminorgridlinestrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxiscategoryminorgridlinestroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxiscategoryminorgridlinestroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 22;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartaxiscategoryminorgridlinestrokeFieldBuilder() {
        if (tschchartaxiscategoryminorgridlinestrokeBuilder_ == null) {
          tschchartaxiscategoryminorgridlinestrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartaxiscategoryminorgridlinestroke(),
                  getParentForChildren(),
                  isClean());
          tschchartaxiscategoryminorgridlinestroke_ = null;
        }
        return tschchartaxiscategoryminorgridlinestrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartaxisvalueminorgridlinestroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartaxisvalueminorgridlinestrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 23;</code>
       */
      public boolean hasTschchartaxisvalueminorgridlinestroke() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 23;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxisvalueminorgridlinestroke() {
        if (tschchartaxisvalueminorgridlinestrokeBuilder_ == null) {
          return tschchartaxisvalueminorgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxisvalueminorgridlinestroke_;
        } else {
          return tschchartaxisvalueminorgridlinestrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 23;</code>
       */
      public Builder setTschchartaxisvalueminorgridlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartaxisvalueminorgridlinestrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxisvalueminorgridlinestroke_ = value;
          onChanged();
        } else {
          tschchartaxisvalueminorgridlinestrokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 23;</code>
       */
      public Builder setTschchartaxisvalueminorgridlinestroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartaxisvalueminorgridlinestrokeBuilder_ == null) {
          tschchartaxisvalueminorgridlinestroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxisvalueminorgridlinestrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 23;</code>
       */
      public Builder mergeTschchartaxisvalueminorgridlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartaxisvalueminorgridlinestrokeBuilder_ == null) {
          if (((bitField0_ & 0x00400000) == 0x00400000) &&
              tschchartaxisvalueminorgridlinestroke_ != null &&
              tschchartaxisvalueminorgridlinestroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartaxisvalueminorgridlinestroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartaxisvalueminorgridlinestroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxisvalueminorgridlinestroke_ = value;
          }
          onChanged();
        } else {
          tschchartaxisvalueminorgridlinestrokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 23;</code>
       */
      public Builder clearTschchartaxisvalueminorgridlinestroke() {
        if (tschchartaxisvalueminorgridlinestrokeBuilder_ == null) {
          tschchartaxisvalueminorgridlinestroke_ = null;
          onChanged();
        } else {
          tschchartaxisvalueminorgridlinestrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00400000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 23;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartaxisvalueminorgridlinestrokeBuilder() {
        bitField0_ |= 0x00400000;
        onChanged();
        return getTschchartaxisvalueminorgridlinestrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 23;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxisvalueminorgridlinestrokeOrBuilder() {
        if (tschchartaxisvalueminorgridlinestrokeBuilder_ != null) {
          return tschchartaxisvalueminorgridlinestrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxisvalueminorgridlinestroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxisvalueminorgridlinestroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 23;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartaxisvalueminorgridlinestrokeFieldBuilder() {
        if (tschchartaxisvalueminorgridlinestrokeBuilder_ == null) {
          tschchartaxisvalueminorgridlinestrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartaxisvalueminorgridlinestroke(),
                  getParentForChildren(),
                  isClean());
          tschchartaxisvalueminorgridlinestroke_ = null;
        }
        return tschchartaxisvalueminorgridlinestrokeBuilder_;
      }

      private boolean tschchartaxiscategoryshowaxis_ ;
      /**
       * <code>optional bool tschchartaxiscategoryshowaxis = 24;</code>
       */
      public boolean hasTschchartaxiscategoryshowaxis() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowaxis = 24;</code>
       */
      public boolean getTschchartaxiscategoryshowaxis() {
        return tschchartaxiscategoryshowaxis_;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowaxis = 24;</code>
       */
      public Builder setTschchartaxiscategoryshowaxis(boolean value) {
        bitField0_ |= 0x00800000;
        tschchartaxiscategoryshowaxis_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowaxis = 24;</code>
       */
      public Builder clearTschchartaxiscategoryshowaxis() {
        bitField0_ = (bitField0_ & ~0x00800000);
        tschchartaxiscategoryshowaxis_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartaxisvalueshowaxis_ ;
      /**
       * <code>optional bool tschchartaxisvalueshowaxis = 25;</code>
       */
      public boolean hasTschchartaxisvalueshowaxis() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional bool tschchartaxisvalueshowaxis = 25;</code>
       */
      public boolean getTschchartaxisvalueshowaxis() {
        return tschchartaxisvalueshowaxis_;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowaxis = 25;</code>
       */
      public Builder setTschchartaxisvalueshowaxis(boolean value) {
        bitField0_ |= 0x01000000;
        tschchartaxisvalueshowaxis_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowaxis = 25;</code>
       */
      public Builder clearTschchartaxisvalueshowaxis() {
        bitField0_ = (bitField0_ & ~0x01000000);
        tschchartaxisvalueshowaxis_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartaxiscategoryshowlastlabel_ ;
      /**
       * <code>optional bool tschchartaxiscategoryshowlastlabel = 26;</code>
       */
      public boolean hasTschchartaxiscategoryshowlastlabel() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowlastlabel = 26;</code>
       */
      public boolean getTschchartaxiscategoryshowlastlabel() {
        return tschchartaxiscategoryshowlastlabel_;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowlastlabel = 26;</code>
       */
      public Builder setTschchartaxiscategoryshowlastlabel(boolean value) {
        bitField0_ |= 0x02000000;
        tschchartaxiscategoryshowlastlabel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowlastlabel = 26;</code>
       */
      public Builder clearTschchartaxiscategoryshowlastlabel() {
        bitField0_ = (bitField0_ & ~0x02000000);
        tschchartaxiscategoryshowlastlabel_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartaxiscategoryshowmajorgridlines_ ;
      /**
       * <code>optional bool tschchartaxiscategoryshowmajorgridlines = 27;</code>
       */
      public boolean hasTschchartaxiscategoryshowmajorgridlines() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowmajorgridlines = 27;</code>
       */
      public boolean getTschchartaxiscategoryshowmajorgridlines() {
        return tschchartaxiscategoryshowmajorgridlines_;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowmajorgridlines = 27;</code>
       */
      public Builder setTschchartaxiscategoryshowmajorgridlines(boolean value) {
        bitField0_ |= 0x04000000;
        tschchartaxiscategoryshowmajorgridlines_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowmajorgridlines = 27;</code>
       */
      public Builder clearTschchartaxiscategoryshowmajorgridlines() {
        bitField0_ = (bitField0_ & ~0x04000000);
        tschchartaxiscategoryshowmajorgridlines_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartaxisvalueshowmajorgridlines_ ;
      /**
       * <code>optional bool tschchartaxisvalueshowmajorgridlines = 28;</code>
       */
      public boolean hasTschchartaxisvalueshowmajorgridlines() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional bool tschchartaxisvalueshowmajorgridlines = 28;</code>
       */
      public boolean getTschchartaxisvalueshowmajorgridlines() {
        return tschchartaxisvalueshowmajorgridlines_;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowmajorgridlines = 28;</code>
       */
      public Builder setTschchartaxisvalueshowmajorgridlines(boolean value) {
        bitField0_ |= 0x08000000;
        tschchartaxisvalueshowmajorgridlines_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowmajorgridlines = 28;</code>
       */
      public Builder clearTschchartaxisvalueshowmajorgridlines() {
        bitField0_ = (bitField0_ & ~0x08000000);
        tschchartaxisvalueshowmajorgridlines_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartaxiscategoryshowmajortickmarks_ ;
      /**
       * <code>optional bool tschchartaxiscategoryshowmajortickmarks = 29;</code>
       */
      public boolean hasTschchartaxiscategoryshowmajortickmarks() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowmajortickmarks = 29;</code>
       */
      public boolean getTschchartaxiscategoryshowmajortickmarks() {
        return tschchartaxiscategoryshowmajortickmarks_;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowmajortickmarks = 29;</code>
       */
      public Builder setTschchartaxiscategoryshowmajortickmarks(boolean value) {
        bitField0_ |= 0x10000000;
        tschchartaxiscategoryshowmajortickmarks_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowmajortickmarks = 29;</code>
       */
      public Builder clearTschchartaxiscategoryshowmajortickmarks() {
        bitField0_ = (bitField0_ & ~0x10000000);
        tschchartaxiscategoryshowmajortickmarks_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartaxisvalueshowmajortickmarks_ ;
      /**
       * <code>optional bool tschchartaxisvalueshowmajortickmarks = 30;</code>
       */
      public boolean hasTschchartaxisvalueshowmajortickmarks() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional bool tschchartaxisvalueshowmajortickmarks = 30;</code>
       */
      public boolean getTschchartaxisvalueshowmajortickmarks() {
        return tschchartaxisvalueshowmajortickmarks_;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowmajortickmarks = 30;</code>
       */
      public Builder setTschchartaxisvalueshowmajortickmarks(boolean value) {
        bitField0_ |= 0x20000000;
        tschchartaxisvalueshowmajortickmarks_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowmajortickmarks = 30;</code>
       */
      public Builder clearTschchartaxisvalueshowmajortickmarks() {
        bitField0_ = (bitField0_ & ~0x20000000);
        tschchartaxisvalueshowmajortickmarks_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartaxisvalueshowminimumlabel_ ;
      /**
       * <code>optional bool tschchartaxisvalueshowminimumlabel = 31;</code>
       */
      public boolean hasTschchartaxisvalueshowminimumlabel() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional bool tschchartaxisvalueshowminimumlabel = 31;</code>
       */
      public boolean getTschchartaxisvalueshowminimumlabel() {
        return tschchartaxisvalueshowminimumlabel_;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowminimumlabel = 31;</code>
       */
      public Builder setTschchartaxisvalueshowminimumlabel(boolean value) {
        bitField0_ |= 0x40000000;
        tschchartaxisvalueshowminimumlabel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowminimumlabel = 31;</code>
       */
      public Builder clearTschchartaxisvalueshowminimumlabel() {
        bitField0_ = (bitField0_ & ~0x40000000);
        tschchartaxisvalueshowminimumlabel_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartaxiscategoryshowminorgridlines_ ;
      /**
       * <code>optional bool tschchartaxiscategoryshowminorgridlines = 32;</code>
       */
      public boolean hasTschchartaxiscategoryshowminorgridlines() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowminorgridlines = 32;</code>
       */
      public boolean getTschchartaxiscategoryshowminorgridlines() {
        return tschchartaxiscategoryshowminorgridlines_;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowminorgridlines = 32;</code>
       */
      public Builder setTschchartaxiscategoryshowminorgridlines(boolean value) {
        bitField0_ |= 0x80000000;
        tschchartaxiscategoryshowminorgridlines_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowminorgridlines = 32;</code>
       */
      public Builder clearTschchartaxiscategoryshowminorgridlines() {
        bitField0_ = (bitField0_ & ~0x80000000);
        tschchartaxiscategoryshowminorgridlines_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartaxisvalueshowminorgridlines_ ;
      /**
       * <code>optional bool tschchartaxisvalueshowminorgridlines = 33;</code>
       */
      public boolean hasTschchartaxisvalueshowminorgridlines() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool tschchartaxisvalueshowminorgridlines = 33;</code>
       */
      public boolean getTschchartaxisvalueshowminorgridlines() {
        return tschchartaxisvalueshowminorgridlines_;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowminorgridlines = 33;</code>
       */
      public Builder setTschchartaxisvalueshowminorgridlines(boolean value) {
        bitField1_ |= 0x00000001;
        tschchartaxisvalueshowminorgridlines_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowminorgridlines = 33;</code>
       */
      public Builder clearTschchartaxisvalueshowminorgridlines() {
        bitField1_ = (bitField1_ & ~0x00000001);
        tschchartaxisvalueshowminorgridlines_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartaxiscategoryshowminortickmarks_ ;
      /**
       * <code>optional bool tschchartaxiscategoryshowminortickmarks = 34;</code>
       */
      public boolean hasTschchartaxiscategoryshowminortickmarks() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowminortickmarks = 34;</code>
       */
      public boolean getTschchartaxiscategoryshowminortickmarks() {
        return tschchartaxiscategoryshowminortickmarks_;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowminortickmarks = 34;</code>
       */
      public Builder setTschchartaxiscategoryshowminortickmarks(boolean value) {
        bitField1_ |= 0x00000002;
        tschchartaxiscategoryshowminortickmarks_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowminortickmarks = 34;</code>
       */
      public Builder clearTschchartaxiscategoryshowminortickmarks() {
        bitField1_ = (bitField1_ & ~0x00000002);
        tschchartaxiscategoryshowminortickmarks_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartaxisvalueshowminortickmarks_ ;
      /**
       * <code>optional bool tschchartaxisvalueshowminortickmarks = 35;</code>
       */
      public boolean hasTschchartaxisvalueshowminortickmarks() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool tschchartaxisvalueshowminortickmarks = 35;</code>
       */
      public boolean getTschchartaxisvalueshowminortickmarks() {
        return tschchartaxisvalueshowminortickmarks_;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowminortickmarks = 35;</code>
       */
      public Builder setTschchartaxisvalueshowminortickmarks(boolean value) {
        bitField1_ |= 0x00000004;
        tschchartaxisvalueshowminortickmarks_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowminortickmarks = 35;</code>
       */
      public Builder clearTschchartaxisvalueshowminortickmarks() {
        bitField1_ = (bitField1_ & ~0x00000004);
        tschchartaxisvalueshowminortickmarks_ = false;
        onChanged();
        return this;
      }

      private int tschchartaxiscategorytickmarklocation_ ;
      /**
       * <code>optional int32 tschchartaxiscategorytickmarklocation = 36;</code>
       */
      public boolean hasTschchartaxiscategorytickmarklocation() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 tschchartaxiscategorytickmarklocation = 36;</code>
       */
      public int getTschchartaxiscategorytickmarklocation() {
        return tschchartaxiscategorytickmarklocation_;
      }
      /**
       * <code>optional int32 tschchartaxiscategorytickmarklocation = 36;</code>
       */
      public Builder setTschchartaxiscategorytickmarklocation(int value) {
        bitField1_ |= 0x00000008;
        tschchartaxiscategorytickmarklocation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxiscategorytickmarklocation = 36;</code>
       */
      public Builder clearTschchartaxiscategorytickmarklocation() {
        bitField1_ = (bitField1_ & ~0x00000008);
        tschchartaxiscategorytickmarklocation_ = 0;
        onChanged();
        return this;
      }

      private int tschchartaxisvaluetickmarklocation_ ;
      /**
       * <code>optional int32 tschchartaxisvaluetickmarklocation = 37;</code>
       */
      public boolean hasTschchartaxisvaluetickmarklocation() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 tschchartaxisvaluetickmarklocation = 37;</code>
       */
      public int getTschchartaxisvaluetickmarklocation() {
        return tschchartaxisvaluetickmarklocation_;
      }
      /**
       * <code>optional int32 tschchartaxisvaluetickmarklocation = 37;</code>
       */
      public Builder setTschchartaxisvaluetickmarklocation(int value) {
        bitField1_ |= 0x00000010;
        tschchartaxisvaluetickmarklocation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxisvaluetickmarklocation = 37;</code>
       */
      public Builder clearTschchartaxisvaluetickmarklocation() {
        bitField1_ = (bitField1_ & ~0x00000010);
        tschchartaxisvaluetickmarklocation_ = 0;
        onChanged();
        return this;
      }

      private int tschchartaxiscategorytitleparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartaxiscategorytitleparagraphstyleindex = 38;</code>
       */
      public boolean hasTschchartaxiscategorytitleparagraphstyleindex() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 tschchartaxiscategorytitleparagraphstyleindex = 38;</code>
       */
      public int getTschchartaxiscategorytitleparagraphstyleindex() {
        return tschchartaxiscategorytitleparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartaxiscategorytitleparagraphstyleindex = 38;</code>
       */
      public Builder setTschchartaxiscategorytitleparagraphstyleindex(int value) {
        bitField1_ |= 0x00000020;
        tschchartaxiscategorytitleparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxiscategorytitleparagraphstyleindex = 38;</code>
       */
      public Builder clearTschchartaxiscategorytitleparagraphstyleindex() {
        bitField1_ = (bitField1_ & ~0x00000020);
        tschchartaxiscategorytitleparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartaxisdefaulttitleparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartaxisdefaulttitleparagraphstyleindex = 39;</code>
       */
      public boolean hasTschchartaxisdefaulttitleparagraphstyleindex() {
        return ((bitField1_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 tschchartaxisdefaulttitleparagraphstyleindex = 39;</code>
       */
      public int getTschchartaxisdefaulttitleparagraphstyleindex() {
        return tschchartaxisdefaulttitleparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartaxisdefaulttitleparagraphstyleindex = 39;</code>
       */
      public Builder setTschchartaxisdefaulttitleparagraphstyleindex(int value) {
        bitField1_ |= 0x00000040;
        tschchartaxisdefaulttitleparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxisdefaulttitleparagraphstyleindex = 39;</code>
       */
      public Builder clearTschchartaxisdefaulttitleparagraphstyleindex() {
        bitField1_ = (bitField1_ & ~0x00000040);
        tschchartaxisdefaulttitleparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartaxisvaluetitleparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartaxisvaluetitleparagraphstyleindex = 40;</code>
       */
      public boolean hasTschchartaxisvaluetitleparagraphstyleindex() {
        return ((bitField1_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 tschchartaxisvaluetitleparagraphstyleindex = 40;</code>
       */
      public int getTschchartaxisvaluetitleparagraphstyleindex() {
        return tschchartaxisvaluetitleparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartaxisvaluetitleparagraphstyleindex = 40;</code>
       */
      public Builder setTschchartaxisvaluetitleparagraphstyleindex(int value) {
        bitField1_ |= 0x00000080;
        tschchartaxisvaluetitleparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxisvaluetitleparagraphstyleindex = 40;</code>
       */
      public Builder clearTschchartaxisvaluetitleparagraphstyleindex() {
        bitField1_ = (bitField1_ & ~0x00000080);
        tschchartaxisvaluetitleparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartaxiscategoryverticalspacing_ ;
      /**
       * <code>optional int32 tschchartaxiscategoryverticalspacing = 41;</code>
       */
      public boolean hasTschchartaxiscategoryverticalspacing() {
        return ((bitField1_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 tschchartaxiscategoryverticalspacing = 41;</code>
       */
      public int getTschchartaxiscategoryverticalspacing() {
        return tschchartaxiscategoryverticalspacing_;
      }
      /**
       * <code>optional int32 tschchartaxiscategoryverticalspacing = 41;</code>
       */
      public Builder setTschchartaxiscategoryverticalspacing(int value) {
        bitField1_ |= 0x00000100;
        tschchartaxiscategoryverticalspacing_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxiscategoryverticalspacing = 41;</code>
       */
      public Builder clearTschchartaxiscategoryverticalspacing() {
        bitField1_ = (bitField1_ & ~0x00000100);
        tschchartaxiscategoryverticalspacing_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TSCH.Generated.ChartAxisStyleArchive)
    }

    // @@protoc_insertion_point(class_scope:TSCH.Generated.ChartAxisStyleArchive)
    private static final org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive();
    }

    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ChartAxisStyleArchive>
        PARSER = new com.google.protobuf.AbstractParser<ChartAxisStyleArchive>() {
      public ChartAxisStyleArchive parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ChartAxisStyleArchive(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChartAxisStyleArchive> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChartAxisStyleArchive> getParserForType() {
      return PARSER;
    }

    public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    public static final int CURRENT_FIELD_NUMBER = 10000;
    /**
     * <code>extend .TSCH.ChartAxisStyleArchive { ... }</code>
     */
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartAxisStyleArchive,
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive> current = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive.getDefaultInstance(),
          0,
          org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive.class,
          org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisStyleArchive.getDefaultInstance());
  }

  public interface ChartAxisNonStyleArchiveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TSCH.Generated.ChartAxisNonStyleArchive)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 tschchartaxisdefault3dlabelposition = 1;</code>
     */
    boolean hasTschchartaxisdefault3Dlabelposition();
    /**
     * <code>optional int32 tschchartaxisdefault3dlabelposition = 1;</code>
     */
    int getTschchartaxisdefault3Dlabelposition();

    /**
     * <code>optional .TSK.FormatStructArchive tschchartaxisdefaultnumberformat = 2;</code>
     */
    boolean hasTschchartaxisdefaultnumberformat();
    /**
     * <code>optional .TSK.FormatStructArchive tschchartaxisdefaultnumberformat = 2;</code>
     */
    org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive getTschchartaxisdefaultnumberformat();
    /**
     * <code>optional .TSK.FormatStructArchive tschchartaxisdefaultnumberformat = 2;</code>
     */
    org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchiveOrBuilder getTschchartaxisdefaultnumberformatOrBuilder();

    /**
     * <code>optional int32 tschchartaxisdefaultnumberformattype = 3;</code>
     */
    boolean hasTschchartaxisdefaultnumberformattype();
    /**
     * <code>optional int32 tschchartaxisdefaultnumberformattype = 3;</code>
     */
    int getTschchartaxisdefaultnumberformattype();

    /**
     * <code>optional int32 tschchartaxisvaluenumberofdecades = 4;</code>
     */
    boolean hasTschchartaxisvaluenumberofdecades();
    /**
     * <code>optional int32 tschchartaxisvaluenumberofdecades = 4;</code>
     */
    int getTschchartaxisvaluenumberofdecades();

    /**
     * <code>optional int32 tschchartaxisvaluenumberofmajorgridlines = 5;</code>
     */
    boolean hasTschchartaxisvaluenumberofmajorgridlines();
    /**
     * <code>optional int32 tschchartaxisvaluenumberofmajorgridlines = 5;</code>
     */
    int getTschchartaxisvaluenumberofmajorgridlines();

    /**
     * <code>optional int32 tschchartaxisvaluenumberofminorgridlines = 6;</code>
     */
    boolean hasTschchartaxisvaluenumberofminorgridlines();
    /**
     * <code>optional int32 tschchartaxisvaluenumberofminorgridlines = 6;</code>
     */
    int getTschchartaxisvaluenumberofminorgridlines();

    /**
     * <code>optional bool tschchartaxiscategoryplottoedges = 7;</code>
     */
    boolean hasTschchartaxiscategoryplottoedges();
    /**
     * <code>optional bool tschchartaxiscategoryplottoedges = 7;</code>
     */
    boolean getTschchartaxiscategoryplottoedges();

    /**
     * <code>optional int32 tschchartaxisvaluescale = 8;</code>
     */
    boolean hasTschchartaxisvaluescale();
    /**
     * <code>optional int32 tschchartaxisvaluescale = 8;</code>
     */
    int getTschchartaxisvaluescale();

    /**
     * <code>optional bool tschchartaxiscategoryshowlabels = 9;</code>
     */
    boolean hasTschchartaxiscategoryshowlabels();
    /**
     * <code>optional bool tschchartaxiscategoryshowlabels = 9;</code>
     */
    boolean getTschchartaxiscategoryshowlabels();

    /**
     * <code>optional bool tschchartaxisdefaultshowlabels = 10;</code>
     */
    boolean hasTschchartaxisdefaultshowlabels();
    /**
     * <code>optional bool tschchartaxisdefaultshowlabels = 10;</code>
     */
    boolean getTschchartaxisdefaultshowlabels();

    /**
     * <code>optional bool tschchartaxisvalueshowlabels = 11;</code>
     */
    boolean hasTschchartaxisvalueshowlabels();
    /**
     * <code>optional bool tschchartaxisvalueshowlabels = 11;</code>
     */
    boolean getTschchartaxisvalueshowlabels();

    /**
     * <code>optional bool tschchartaxiscategoryshowserieslabels = 12;</code>
     */
    boolean hasTschchartaxiscategoryshowserieslabels();
    /**
     * <code>optional bool tschchartaxiscategoryshowserieslabels = 12;</code>
     */
    boolean getTschchartaxiscategoryshowserieslabels();

    /**
     * <code>optional bool tschchartaxismultidatashowserieslabels = 19;</code>
     */
    boolean hasTschchartaxismultidatashowserieslabels();
    /**
     * <code>optional bool tschchartaxismultidatashowserieslabels = 19;</code>
     */
    boolean getTschchartaxismultidatashowserieslabels();

    /**
     * <code>optional bool tschchartaxiscategoryshowtitle = 13;</code>
     */
    boolean hasTschchartaxiscategoryshowtitle();
    /**
     * <code>optional bool tschchartaxiscategoryshowtitle = 13;</code>
     */
    boolean getTschchartaxiscategoryshowtitle();

    /**
     * <code>optional bool tschchartaxisvalueshowtitle = 14;</code>
     */
    boolean hasTschchartaxisvalueshowtitle();
    /**
     * <code>optional bool tschchartaxisvalueshowtitle = 14;</code>
     */
    boolean getTschchartaxisvalueshowtitle();

    /**
     * <code>optional string tschchartaxiscategorytitle = 15;</code>
     */
    boolean hasTschchartaxiscategorytitle();
    /**
     * <code>optional string tschchartaxiscategorytitle = 15;</code>
     */
    java.lang.String getTschchartaxiscategorytitle();
    /**
     * <code>optional string tschchartaxiscategorytitle = 15;</code>
     */
    com.google.protobuf.ByteString
        getTschchartaxiscategorytitleBytes();

    /**
     * <code>optional string tschchartaxisvaluetitle = 16;</code>
     */
    boolean hasTschchartaxisvaluetitle();
    /**
     * <code>optional string tschchartaxisvaluetitle = 16;</code>
     */
    java.lang.String getTschchartaxisvaluetitle();
    /**
     * <code>optional string tschchartaxisvaluetitle = 16;</code>
     */
    com.google.protobuf.ByteString
        getTschchartaxisvaluetitleBytes();

    /**
     * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 17;</code>
     */
    boolean hasTschchartaxisdefaultusermax();
    /**
     * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 17;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive getTschchartaxisdefaultusermax();
    /**
     * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 17;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchiveOrBuilder getTschchartaxisdefaultusermaxOrBuilder();

    /**
     * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 18;</code>
     */
    boolean hasTschchartaxisdefaultusermin();
    /**
     * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 18;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive getTschchartaxisdefaultusermin();
    /**
     * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 18;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchiveOrBuilder getTschchartaxisdefaultuserminOrBuilder();
  }
  /**
   * Protobuf type {@code TSCH.Generated.ChartAxisNonStyleArchive}
   */
  public  static final class ChartAxisNonStyleArchive extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TSCH.Generated.ChartAxisNonStyleArchive)
      ChartAxisNonStyleArchiveOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChartAxisNonStyleArchive.newBuilder() to construct.
    private ChartAxisNonStyleArchive(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChartAxisNonStyleArchive() {
      tschchartaxisdefault3Dlabelposition_ = 0;
      tschchartaxisdefaultnumberformattype_ = 0;
      tschchartaxisvaluenumberofdecades_ = 0;
      tschchartaxisvaluenumberofmajorgridlines_ = 0;
      tschchartaxisvaluenumberofminorgridlines_ = 0;
      tschchartaxiscategoryplottoedges_ = false;
      tschchartaxisvaluescale_ = 0;
      tschchartaxiscategoryshowlabels_ = false;
      tschchartaxisdefaultshowlabels_ = false;
      tschchartaxisvalueshowlabels_ = false;
      tschchartaxiscategoryshowserieslabels_ = false;
      tschchartaxismultidatashowserieslabels_ = false;
      tschchartaxiscategoryshowtitle_ = false;
      tschchartaxisvalueshowtitle_ = false;
      tschchartaxiscategorytitle_ = "";
      tschchartaxisvaluetitle_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChartAxisNonStyleArchive(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tschchartaxisdefault3Dlabelposition_ = input.readInt32();
              break;
            }
            case 18: {
              org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = tschchartaxisdefaultnumberformat_.toBuilder();
              }
              tschchartaxisdefaultnumberformat_ = input.readMessage(org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxisdefaultnumberformat_);
                tschchartaxisdefaultnumberformat_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              tschchartaxisdefaultnumberformattype_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              tschchartaxisvaluenumberofdecades_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              tschchartaxisvaluenumberofmajorgridlines_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              tschchartaxisvaluenumberofminorgridlines_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              tschchartaxiscategoryplottoedges_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              tschchartaxisvaluescale_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              tschchartaxiscategoryshowlabels_ = input.readBool();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              tschchartaxisdefaultshowlabels_ = input.readBool();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              tschchartaxisvalueshowlabels_ = input.readBool();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              tschchartaxiscategoryshowserieslabels_ = input.readBool();
              break;
            }
            case 104: {
              bitField0_ |= 0x00002000;
              tschchartaxiscategoryshowtitle_ = input.readBool();
              break;
            }
            case 112: {
              bitField0_ |= 0x00004000;
              tschchartaxisvalueshowtitle_ = input.readBool();
              break;
            }
            case 122: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00008000;
              tschchartaxiscategorytitle_ = bs;
              break;
            }
            case 130: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00010000;
              tschchartaxisvaluetitle_ = bs;
              break;
            }
            case 138: {
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00020000) == 0x00020000)) {
                subBuilder = tschchartaxisdefaultusermax_.toBuilder();
              }
              tschchartaxisdefaultusermax_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxisdefaultusermax_);
                tschchartaxisdefaultusermax_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00020000;
              break;
            }
            case 146: {
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00040000) == 0x00040000)) {
                subBuilder = tschchartaxisdefaultusermin_.toBuilder();
              }
              tschchartaxisdefaultusermin_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxisdefaultusermin_);
                tschchartaxisdefaultusermin_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00040000;
              break;
            }
            case 152: {
              bitField0_ |= 0x00001000;
              tschchartaxismultidatashowserieslabels_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartAxisNonStyleArchive_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartAxisNonStyleArchive_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive.class, org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive.Builder.class);
    }

    private int bitField0_;
    public static final int TSCHCHARTAXISDEFAULT3DLABELPOSITION_FIELD_NUMBER = 1;
    private int tschchartaxisdefault3Dlabelposition_;
    /**
     * <code>optional int32 tschchartaxisdefault3dlabelposition = 1;</code>
     */
    public boolean hasTschchartaxisdefault3Dlabelposition() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 tschchartaxisdefault3dlabelposition = 1;</code>
     */
    public int getTschchartaxisdefault3Dlabelposition() {
      return tschchartaxisdefault3Dlabelposition_;
    }

    public static final int TSCHCHARTAXISDEFAULTNUMBERFORMAT_FIELD_NUMBER = 2;
    private org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive tschchartaxisdefaultnumberformat_;
    /**
     * <code>optional .TSK.FormatStructArchive tschchartaxisdefaultnumberformat = 2;</code>
     */
    public boolean hasTschchartaxisdefaultnumberformat() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .TSK.FormatStructArchive tschchartaxisdefaultnumberformat = 2;</code>
     */
    public org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive getTschchartaxisdefaultnumberformat() {
      return tschchartaxisdefaultnumberformat_ == null ? org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.getDefaultInstance() : tschchartaxisdefaultnumberformat_;
    }
    /**
     * <code>optional .TSK.FormatStructArchive tschchartaxisdefaultnumberformat = 2;</code>
     */
    public org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchiveOrBuilder getTschchartaxisdefaultnumberformatOrBuilder() {
      return tschchartaxisdefaultnumberformat_ == null ? org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.getDefaultInstance() : tschchartaxisdefaultnumberformat_;
    }

    public static final int TSCHCHARTAXISDEFAULTNUMBERFORMATTYPE_FIELD_NUMBER = 3;
    private int tschchartaxisdefaultnumberformattype_;
    /**
     * <code>optional int32 tschchartaxisdefaultnumberformattype = 3;</code>
     */
    public boolean hasTschchartaxisdefaultnumberformattype() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 tschchartaxisdefaultnumberformattype = 3;</code>
     */
    public int getTschchartaxisdefaultnumberformattype() {
      return tschchartaxisdefaultnumberformattype_;
    }

    public static final int TSCHCHARTAXISVALUENUMBEROFDECADES_FIELD_NUMBER = 4;
    private int tschchartaxisvaluenumberofdecades_;
    /**
     * <code>optional int32 tschchartaxisvaluenumberofdecades = 4;</code>
     */
    public boolean hasTschchartaxisvaluenumberofdecades() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 tschchartaxisvaluenumberofdecades = 4;</code>
     */
    public int getTschchartaxisvaluenumberofdecades() {
      return tschchartaxisvaluenumberofdecades_;
    }

    public static final int TSCHCHARTAXISVALUENUMBEROFMAJORGRIDLINES_FIELD_NUMBER = 5;
    private int tschchartaxisvaluenumberofmajorgridlines_;
    /**
     * <code>optional int32 tschchartaxisvaluenumberofmajorgridlines = 5;</code>
     */
    public boolean hasTschchartaxisvaluenumberofmajorgridlines() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 tschchartaxisvaluenumberofmajorgridlines = 5;</code>
     */
    public int getTschchartaxisvaluenumberofmajorgridlines() {
      return tschchartaxisvaluenumberofmajorgridlines_;
    }

    public static final int TSCHCHARTAXISVALUENUMBEROFMINORGRIDLINES_FIELD_NUMBER = 6;
    private int tschchartaxisvaluenumberofminorgridlines_;
    /**
     * <code>optional int32 tschchartaxisvaluenumberofminorgridlines = 6;</code>
     */
    public boolean hasTschchartaxisvaluenumberofminorgridlines() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 tschchartaxisvaluenumberofminorgridlines = 6;</code>
     */
    public int getTschchartaxisvaluenumberofminorgridlines() {
      return tschchartaxisvaluenumberofminorgridlines_;
    }

    public static final int TSCHCHARTAXISCATEGORYPLOTTOEDGES_FIELD_NUMBER = 7;
    private boolean tschchartaxiscategoryplottoedges_;
    /**
     * <code>optional bool tschchartaxiscategoryplottoedges = 7;</code>
     */
    public boolean hasTschchartaxiscategoryplottoedges() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool tschchartaxiscategoryplottoedges = 7;</code>
     */
    public boolean getTschchartaxiscategoryplottoedges() {
      return tschchartaxiscategoryplottoedges_;
    }

    public static final int TSCHCHARTAXISVALUESCALE_FIELD_NUMBER = 8;
    private int tschchartaxisvaluescale_;
    /**
     * <code>optional int32 tschchartaxisvaluescale = 8;</code>
     */
    public boolean hasTschchartaxisvaluescale() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 tschchartaxisvaluescale = 8;</code>
     */
    public int getTschchartaxisvaluescale() {
      return tschchartaxisvaluescale_;
    }

    public static final int TSCHCHARTAXISCATEGORYSHOWLABELS_FIELD_NUMBER = 9;
    private boolean tschchartaxiscategoryshowlabels_;
    /**
     * <code>optional bool tschchartaxiscategoryshowlabels = 9;</code>
     */
    public boolean hasTschchartaxiscategoryshowlabels() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool tschchartaxiscategoryshowlabels = 9;</code>
     */
    public boolean getTschchartaxiscategoryshowlabels() {
      return tschchartaxiscategoryshowlabels_;
    }

    public static final int TSCHCHARTAXISDEFAULTSHOWLABELS_FIELD_NUMBER = 10;
    private boolean tschchartaxisdefaultshowlabels_;
    /**
     * <code>optional bool tschchartaxisdefaultshowlabels = 10;</code>
     */
    public boolean hasTschchartaxisdefaultshowlabels() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool tschchartaxisdefaultshowlabels = 10;</code>
     */
    public boolean getTschchartaxisdefaultshowlabels() {
      return tschchartaxisdefaultshowlabels_;
    }

    public static final int TSCHCHARTAXISVALUESHOWLABELS_FIELD_NUMBER = 11;
    private boolean tschchartaxisvalueshowlabels_;
    /**
     * <code>optional bool tschchartaxisvalueshowlabels = 11;</code>
     */
    public boolean hasTschchartaxisvalueshowlabels() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool tschchartaxisvalueshowlabels = 11;</code>
     */
    public boolean getTschchartaxisvalueshowlabels() {
      return tschchartaxisvalueshowlabels_;
    }

    public static final int TSCHCHARTAXISCATEGORYSHOWSERIESLABELS_FIELD_NUMBER = 12;
    private boolean tschchartaxiscategoryshowserieslabels_;
    /**
     * <code>optional bool tschchartaxiscategoryshowserieslabels = 12;</code>
     */
    public boolean hasTschchartaxiscategoryshowserieslabels() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool tschchartaxiscategoryshowserieslabels = 12;</code>
     */
    public boolean getTschchartaxiscategoryshowserieslabels() {
      return tschchartaxiscategoryshowserieslabels_;
    }

    public static final int TSCHCHARTAXISMULTIDATASHOWSERIESLABELS_FIELD_NUMBER = 19;
    private boolean tschchartaxismultidatashowserieslabels_;
    /**
     * <code>optional bool tschchartaxismultidatashowserieslabels = 19;</code>
     */
    public boolean hasTschchartaxismultidatashowserieslabels() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional bool tschchartaxismultidatashowserieslabels = 19;</code>
     */
    public boolean getTschchartaxismultidatashowserieslabels() {
      return tschchartaxismultidatashowserieslabels_;
    }

    public static final int TSCHCHARTAXISCATEGORYSHOWTITLE_FIELD_NUMBER = 13;
    private boolean tschchartaxiscategoryshowtitle_;
    /**
     * <code>optional bool tschchartaxiscategoryshowtitle = 13;</code>
     */
    public boolean hasTschchartaxiscategoryshowtitle() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional bool tschchartaxiscategoryshowtitle = 13;</code>
     */
    public boolean getTschchartaxiscategoryshowtitle() {
      return tschchartaxiscategoryshowtitle_;
    }

    public static final int TSCHCHARTAXISVALUESHOWTITLE_FIELD_NUMBER = 14;
    private boolean tschchartaxisvalueshowtitle_;
    /**
     * <code>optional bool tschchartaxisvalueshowtitle = 14;</code>
     */
    public boolean hasTschchartaxisvalueshowtitle() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional bool tschchartaxisvalueshowtitle = 14;</code>
     */
    public boolean getTschchartaxisvalueshowtitle() {
      return tschchartaxisvalueshowtitle_;
    }

    public static final int TSCHCHARTAXISCATEGORYTITLE_FIELD_NUMBER = 15;
    private volatile java.lang.Object tschchartaxiscategorytitle_;
    /**
     * <code>optional string tschchartaxiscategorytitle = 15;</code>
     */
    public boolean hasTschchartaxiscategorytitle() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional string tschchartaxiscategorytitle = 15;</code>
     */
    public java.lang.String getTschchartaxiscategorytitle() {
      java.lang.Object ref = tschchartaxiscategorytitle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tschchartaxiscategorytitle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string tschchartaxiscategorytitle = 15;</code>
     */
    public com.google.protobuf.ByteString
        getTschchartaxiscategorytitleBytes() {
      java.lang.Object ref = tschchartaxiscategorytitle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tschchartaxiscategorytitle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TSCHCHARTAXISVALUETITLE_FIELD_NUMBER = 16;
    private volatile java.lang.Object tschchartaxisvaluetitle_;
    /**
     * <code>optional string tschchartaxisvaluetitle = 16;</code>
     */
    public boolean hasTschchartaxisvaluetitle() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional string tschchartaxisvaluetitle = 16;</code>
     */
    public java.lang.String getTschchartaxisvaluetitle() {
      java.lang.Object ref = tschchartaxisvaluetitle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tschchartaxisvaluetitle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string tschchartaxisvaluetitle = 16;</code>
     */
    public com.google.protobuf.ByteString
        getTschchartaxisvaluetitleBytes() {
      java.lang.Object ref = tschchartaxisvaluetitle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tschchartaxisvaluetitle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TSCHCHARTAXISDEFAULTUSERMAX_FIELD_NUMBER = 17;
    private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax_;
    /**
     * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 17;</code>
     */
    public boolean hasTschchartaxisdefaultusermax() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 17;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive getTschchartaxisdefaultusermax() {
      return tschchartaxisdefaultusermax_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.getDefaultInstance() : tschchartaxisdefaultusermax_;
    }
    /**
     * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 17;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchiveOrBuilder getTschchartaxisdefaultusermaxOrBuilder() {
      return tschchartaxisdefaultusermax_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.getDefaultInstance() : tschchartaxisdefaultusermax_;
    }

    public static final int TSCHCHARTAXISDEFAULTUSERMIN_FIELD_NUMBER = 18;
    private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin_;
    /**
     * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 18;</code>
     */
    public boolean hasTschchartaxisdefaultusermin() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 18;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive getTschchartaxisdefaultusermin() {
      return tschchartaxisdefaultusermin_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.getDefaultInstance() : tschchartaxisdefaultusermin_;
    }
    /**
     * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 18;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchiveOrBuilder getTschchartaxisdefaultuserminOrBuilder() {
      return tschchartaxisdefaultusermin_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.getDefaultInstance() : tschchartaxisdefaultusermin_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasTschchartaxisdefaultnumberformat()) {
        if (!getTschchartaxisdefaultnumberformat().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, tschchartaxisdefault3Dlabelposition_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getTschchartaxisdefaultnumberformat());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, tschchartaxisdefaultnumberformattype_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, tschchartaxisvaluenumberofdecades_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, tschchartaxisvaluenumberofmajorgridlines_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, tschchartaxisvaluenumberofminorgridlines_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, tschchartaxiscategoryplottoedges_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, tschchartaxisvaluescale_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(9, tschchartaxiscategoryshowlabels_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(10, tschchartaxisdefaultshowlabels_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(11, tschchartaxisvalueshowlabels_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(12, tschchartaxiscategoryshowserieslabels_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBool(13, tschchartaxiscategoryshowtitle_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBool(14, tschchartaxisvalueshowtitle_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 15, tschchartaxiscategorytitle_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 16, tschchartaxisvaluetitle_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(17, getTschchartaxisdefaultusermax());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeMessage(18, getTschchartaxisdefaultusermin());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBool(19, tschchartaxismultidatashowserieslabels_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, tschchartaxisdefault3Dlabelposition_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTschchartaxisdefaultnumberformat());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, tschchartaxisdefaultnumberformattype_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, tschchartaxisvaluenumberofdecades_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, tschchartaxisvaluenumberofmajorgridlines_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, tschchartaxisvaluenumberofminorgridlines_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, tschchartaxiscategoryplottoedges_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, tschchartaxisvaluescale_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, tschchartaxiscategoryshowlabels_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, tschchartaxisdefaultshowlabels_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, tschchartaxisvalueshowlabels_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, tschchartaxiscategoryshowserieslabels_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, tschchartaxiscategoryshowtitle_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, tschchartaxisvalueshowtitle_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, tschchartaxiscategorytitle_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, tschchartaxisvaluetitle_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, getTschchartaxisdefaultusermax());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, getTschchartaxisdefaultusermin());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(19, tschchartaxismultidatashowserieslabels_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive)) {
        return super.equals(obj);
      }
      org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive other = (org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive) obj;

      boolean result = true;
      result = result && (hasTschchartaxisdefault3Dlabelposition() == other.hasTschchartaxisdefault3Dlabelposition());
      if (hasTschchartaxisdefault3Dlabelposition()) {
        result = result && (getTschchartaxisdefault3Dlabelposition()
            == other.getTschchartaxisdefault3Dlabelposition());
      }
      result = result && (hasTschchartaxisdefaultnumberformat() == other.hasTschchartaxisdefaultnumberformat());
      if (hasTschchartaxisdefaultnumberformat()) {
        result = result && getTschchartaxisdefaultnumberformat()
            .equals(other.getTschchartaxisdefaultnumberformat());
      }
      result = result && (hasTschchartaxisdefaultnumberformattype() == other.hasTschchartaxisdefaultnumberformattype());
      if (hasTschchartaxisdefaultnumberformattype()) {
        result = result && (getTschchartaxisdefaultnumberformattype()
            == other.getTschchartaxisdefaultnumberformattype());
      }
      result = result && (hasTschchartaxisvaluenumberofdecades() == other.hasTschchartaxisvaluenumberofdecades());
      if (hasTschchartaxisvaluenumberofdecades()) {
        result = result && (getTschchartaxisvaluenumberofdecades()
            == other.getTschchartaxisvaluenumberofdecades());
      }
      result = result && (hasTschchartaxisvaluenumberofmajorgridlines() == other.hasTschchartaxisvaluenumberofmajorgridlines());
      if (hasTschchartaxisvaluenumberofmajorgridlines()) {
        result = result && (getTschchartaxisvaluenumberofmajorgridlines()
            == other.getTschchartaxisvaluenumberofmajorgridlines());
      }
      result = result && (hasTschchartaxisvaluenumberofminorgridlines() == other.hasTschchartaxisvaluenumberofminorgridlines());
      if (hasTschchartaxisvaluenumberofminorgridlines()) {
        result = result && (getTschchartaxisvaluenumberofminorgridlines()
            == other.getTschchartaxisvaluenumberofminorgridlines());
      }
      result = result && (hasTschchartaxiscategoryplottoedges() == other.hasTschchartaxiscategoryplottoedges());
      if (hasTschchartaxiscategoryplottoedges()) {
        result = result && (getTschchartaxiscategoryplottoedges()
            == other.getTschchartaxiscategoryplottoedges());
      }
      result = result && (hasTschchartaxisvaluescale() == other.hasTschchartaxisvaluescale());
      if (hasTschchartaxisvaluescale()) {
        result = result && (getTschchartaxisvaluescale()
            == other.getTschchartaxisvaluescale());
      }
      result = result && (hasTschchartaxiscategoryshowlabels() == other.hasTschchartaxiscategoryshowlabels());
      if (hasTschchartaxiscategoryshowlabels()) {
        result = result && (getTschchartaxiscategoryshowlabels()
            == other.getTschchartaxiscategoryshowlabels());
      }
      result = result && (hasTschchartaxisdefaultshowlabels() == other.hasTschchartaxisdefaultshowlabels());
      if (hasTschchartaxisdefaultshowlabels()) {
        result = result && (getTschchartaxisdefaultshowlabels()
            == other.getTschchartaxisdefaultshowlabels());
      }
      result = result && (hasTschchartaxisvalueshowlabels() == other.hasTschchartaxisvalueshowlabels());
      if (hasTschchartaxisvalueshowlabels()) {
        result = result && (getTschchartaxisvalueshowlabels()
            == other.getTschchartaxisvalueshowlabels());
      }
      result = result && (hasTschchartaxiscategoryshowserieslabels() == other.hasTschchartaxiscategoryshowserieslabels());
      if (hasTschchartaxiscategoryshowserieslabels()) {
        result = result && (getTschchartaxiscategoryshowserieslabels()
            == other.getTschchartaxiscategoryshowserieslabels());
      }
      result = result && (hasTschchartaxismultidatashowserieslabels() == other.hasTschchartaxismultidatashowserieslabels());
      if (hasTschchartaxismultidatashowserieslabels()) {
        result = result && (getTschchartaxismultidatashowserieslabels()
            == other.getTschchartaxismultidatashowserieslabels());
      }
      result = result && (hasTschchartaxiscategoryshowtitle() == other.hasTschchartaxiscategoryshowtitle());
      if (hasTschchartaxiscategoryshowtitle()) {
        result = result && (getTschchartaxiscategoryshowtitle()
            == other.getTschchartaxiscategoryshowtitle());
      }
      result = result && (hasTschchartaxisvalueshowtitle() == other.hasTschchartaxisvalueshowtitle());
      if (hasTschchartaxisvalueshowtitle()) {
        result = result && (getTschchartaxisvalueshowtitle()
            == other.getTschchartaxisvalueshowtitle());
      }
      result = result && (hasTschchartaxiscategorytitle() == other.hasTschchartaxiscategorytitle());
      if (hasTschchartaxiscategorytitle()) {
        result = result && getTschchartaxiscategorytitle()
            .equals(other.getTschchartaxiscategorytitle());
      }
      result = result && (hasTschchartaxisvaluetitle() == other.hasTschchartaxisvaluetitle());
      if (hasTschchartaxisvaluetitle()) {
        result = result && getTschchartaxisvaluetitle()
            .equals(other.getTschchartaxisvaluetitle());
      }
      result = result && (hasTschchartaxisdefaultusermax() == other.hasTschchartaxisdefaultusermax());
      if (hasTschchartaxisdefaultusermax()) {
        result = result && getTschchartaxisdefaultusermax()
            .equals(other.getTschchartaxisdefaultusermax());
      }
      result = result && (hasTschchartaxisdefaultusermin() == other.hasTschchartaxisdefaultusermin());
      if (hasTschchartaxisdefaultusermin()) {
        result = result && getTschchartaxisdefaultusermin()
            .equals(other.getTschchartaxisdefaultusermin());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTschchartaxisdefault3Dlabelposition()) {
        hash = (37 * hash) + TSCHCHARTAXISDEFAULT3DLABELPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisdefault3Dlabelposition();
      }
      if (hasTschchartaxisdefaultnumberformat()) {
        hash = (37 * hash) + TSCHCHARTAXISDEFAULTNUMBERFORMAT_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisdefaultnumberformat().hashCode();
      }
      if (hasTschchartaxisdefaultnumberformattype()) {
        hash = (37 * hash) + TSCHCHARTAXISDEFAULTNUMBERFORMATTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisdefaultnumberformattype();
      }
      if (hasTschchartaxisvaluenumberofdecades()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUENUMBEROFDECADES_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvaluenumberofdecades();
      }
      if (hasTschchartaxisvaluenumberofmajorgridlines()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUENUMBEROFMAJORGRIDLINES_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvaluenumberofmajorgridlines();
      }
      if (hasTschchartaxisvaluenumberofminorgridlines()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUENUMBEROFMINORGRIDLINES_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvaluenumberofminorgridlines();
      }
      if (hasTschchartaxiscategoryplottoedges()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYPLOTTOEDGES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxiscategoryplottoedges());
      }
      if (hasTschchartaxisvaluescale()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUESCALE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvaluescale();
      }
      if (hasTschchartaxiscategoryshowlabels()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYSHOWLABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxiscategoryshowlabels());
      }
      if (hasTschchartaxisdefaultshowlabels()) {
        hash = (37 * hash) + TSCHCHARTAXISDEFAULTSHOWLABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxisdefaultshowlabels());
      }
      if (hasTschchartaxisvalueshowlabels()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUESHOWLABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxisvalueshowlabels());
      }
      if (hasTschchartaxiscategoryshowserieslabels()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYSHOWSERIESLABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxiscategoryshowserieslabels());
      }
      if (hasTschchartaxismultidatashowserieslabels()) {
        hash = (37 * hash) + TSCHCHARTAXISMULTIDATASHOWSERIESLABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxismultidatashowserieslabels());
      }
      if (hasTschchartaxiscategoryshowtitle()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYSHOWTITLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxiscategoryshowtitle());
      }
      if (hasTschchartaxisvalueshowtitle()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUESHOWTITLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxisvalueshowtitle());
      }
      if (hasTschchartaxiscategorytitle()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYTITLE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxiscategorytitle().hashCode();
      }
      if (hasTschchartaxisvaluetitle()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUETITLE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvaluetitle().hashCode();
      }
      if (hasTschchartaxisdefaultusermax()) {
        hash = (37 * hash) + TSCHCHARTAXISDEFAULTUSERMAX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisdefaultusermax().hashCode();
      }
      if (hasTschchartaxisdefaultusermin()) {
        hash = (37 * hash) + TSCHCHARTAXISDEFAULTUSERMIN_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisdefaultusermin().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TSCH.Generated.ChartAxisNonStyleArchive}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TSCH.Generated.ChartAxisNonStyleArchive)
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchiveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartAxisNonStyleArchive_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartAxisNonStyleArchive_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive.class, org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive.Builder.class);
      }

      // Construct using TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTschchartaxisdefaultnumberformatFieldBuilder();
          getTschchartaxisdefaultusermaxFieldBuilder();
          getTschchartaxisdefaultuserminFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        tschchartaxisdefault3Dlabelposition_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (tschchartaxisdefaultnumberformatBuilder_ == null) {
          tschchartaxisdefaultnumberformat_ = null;
        } else {
          tschchartaxisdefaultnumberformatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        tschchartaxisdefaultnumberformattype_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        tschchartaxisvaluenumberofdecades_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        tschchartaxisvaluenumberofmajorgridlines_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        tschchartaxisvaluenumberofminorgridlines_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        tschchartaxiscategoryplottoedges_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        tschchartaxisvaluescale_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        tschchartaxiscategoryshowlabels_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        tschchartaxisdefaultshowlabels_ = false;
        bitField0_ = (bitField0_ & ~0x00000200);
        tschchartaxisvalueshowlabels_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        tschchartaxiscategoryshowserieslabels_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        tschchartaxismultidatashowserieslabels_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        tschchartaxiscategoryshowtitle_ = false;
        bitField0_ = (bitField0_ & ~0x00002000);
        tschchartaxisvalueshowtitle_ = false;
        bitField0_ = (bitField0_ & ~0x00004000);
        tschchartaxiscategorytitle_ = "";
        bitField0_ = (bitField0_ & ~0x00008000);
        tschchartaxisvaluetitle_ = "";
        bitField0_ = (bitField0_ & ~0x00010000);
        if (tschchartaxisdefaultusermaxBuilder_ == null) {
          tschchartaxisdefaultusermax_ = null;
        } else {
          tschchartaxisdefaultusermaxBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        if (tschchartaxisdefaultuserminBuilder_ == null) {
          tschchartaxisdefaultusermin_ = null;
        } else {
          tschchartaxisdefaultuserminBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartAxisNonStyleArchive_descriptor;
      }

      public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive getDefaultInstanceForType() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive.getDefaultInstance();
      }

      public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive build() {
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive buildPartial() {
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive result = new org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tschchartaxisdefault3Dlabelposition_ = tschchartaxisdefault3Dlabelposition_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (tschchartaxisdefaultnumberformatBuilder_ == null) {
          result.tschchartaxisdefaultnumberformat_ = tschchartaxisdefaultnumberformat_;
        } else {
          result.tschchartaxisdefaultnumberformat_ = tschchartaxisdefaultnumberformatBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tschchartaxisdefaultnumberformattype_ = tschchartaxisdefaultnumberformattype_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.tschchartaxisvaluenumberofdecades_ = tschchartaxisvaluenumberofdecades_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.tschchartaxisvaluenumberofmajorgridlines_ = tschchartaxisvaluenumberofmajorgridlines_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.tschchartaxisvaluenumberofminorgridlines_ = tschchartaxisvaluenumberofminorgridlines_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.tschchartaxiscategoryplottoedges_ = tschchartaxiscategoryplottoedges_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.tschchartaxisvaluescale_ = tschchartaxisvaluescale_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.tschchartaxiscategoryshowlabels_ = tschchartaxiscategoryshowlabels_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.tschchartaxisdefaultshowlabels_ = tschchartaxisdefaultshowlabels_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.tschchartaxisvalueshowlabels_ = tschchartaxisvalueshowlabels_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.tschchartaxiscategoryshowserieslabels_ = tschchartaxiscategoryshowserieslabels_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.tschchartaxismultidatashowserieslabels_ = tschchartaxismultidatashowserieslabels_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.tschchartaxiscategoryshowtitle_ = tschchartaxiscategoryshowtitle_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.tschchartaxisvalueshowtitle_ = tschchartaxisvalueshowtitle_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.tschchartaxiscategorytitle_ = tschchartaxiscategorytitle_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.tschchartaxisvaluetitle_ = tschchartaxisvaluetitle_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        if (tschchartaxisdefaultusermaxBuilder_ == null) {
          result.tschchartaxisdefaultusermax_ = tschchartaxisdefaultusermax_;
        } else {
          result.tschchartaxisdefaultusermax_ = tschchartaxisdefaultusermaxBuilder_.build();
        }
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        if (tschchartaxisdefaultuserminBuilder_ == null) {
          result.tschchartaxisdefaultusermin_ = tschchartaxisdefaultusermin_;
        } else {
          result.tschchartaxisdefaultusermin_ = tschchartaxisdefaultuserminBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive) {
          return mergeFrom((org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive other) {
        if (other == org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive.getDefaultInstance()) return this;
        if (other.hasTschchartaxisdefault3Dlabelposition()) {
          setTschchartaxisdefault3Dlabelposition(other.getTschchartaxisdefault3Dlabelposition());
        }
        if (other.hasTschchartaxisdefaultnumberformat()) {
          mergeTschchartaxisdefaultnumberformat(other.getTschchartaxisdefaultnumberformat());
        }
        if (other.hasTschchartaxisdefaultnumberformattype()) {
          setTschchartaxisdefaultnumberformattype(other.getTschchartaxisdefaultnumberformattype());
        }
        if (other.hasTschchartaxisvaluenumberofdecades()) {
          setTschchartaxisvaluenumberofdecades(other.getTschchartaxisvaluenumberofdecades());
        }
        if (other.hasTschchartaxisvaluenumberofmajorgridlines()) {
          setTschchartaxisvaluenumberofmajorgridlines(other.getTschchartaxisvaluenumberofmajorgridlines());
        }
        if (other.hasTschchartaxisvaluenumberofminorgridlines()) {
          setTschchartaxisvaluenumberofminorgridlines(other.getTschchartaxisvaluenumberofminorgridlines());
        }
        if (other.hasTschchartaxiscategoryplottoedges()) {
          setTschchartaxiscategoryplottoedges(other.getTschchartaxiscategoryplottoedges());
        }
        if (other.hasTschchartaxisvaluescale()) {
          setTschchartaxisvaluescale(other.getTschchartaxisvaluescale());
        }
        if (other.hasTschchartaxiscategoryshowlabels()) {
          setTschchartaxiscategoryshowlabels(other.getTschchartaxiscategoryshowlabels());
        }
        if (other.hasTschchartaxisdefaultshowlabels()) {
          setTschchartaxisdefaultshowlabels(other.getTschchartaxisdefaultshowlabels());
        }
        if (other.hasTschchartaxisvalueshowlabels()) {
          setTschchartaxisvalueshowlabels(other.getTschchartaxisvalueshowlabels());
        }
        if (other.hasTschchartaxiscategoryshowserieslabels()) {
          setTschchartaxiscategoryshowserieslabels(other.getTschchartaxiscategoryshowserieslabels());
        }
        if (other.hasTschchartaxismultidatashowserieslabels()) {
          setTschchartaxismultidatashowserieslabels(other.getTschchartaxismultidatashowserieslabels());
        }
        if (other.hasTschchartaxiscategoryshowtitle()) {
          setTschchartaxiscategoryshowtitle(other.getTschchartaxiscategoryshowtitle());
        }
        if (other.hasTschchartaxisvalueshowtitle()) {
          setTschchartaxisvalueshowtitle(other.getTschchartaxisvalueshowtitle());
        }
        if (other.hasTschchartaxiscategorytitle()) {
          bitField0_ |= 0x00008000;
          tschchartaxiscategorytitle_ = other.tschchartaxiscategorytitle_;
          onChanged();
        }
        if (other.hasTschchartaxisvaluetitle()) {
          bitField0_ |= 0x00010000;
          tschchartaxisvaluetitle_ = other.tschchartaxisvaluetitle_;
          onChanged();
        }
        if (other.hasTschchartaxisdefaultusermax()) {
          mergeTschchartaxisdefaultusermax(other.getTschchartaxisdefaultusermax());
        }
        if (other.hasTschchartaxisdefaultusermin()) {
          mergeTschchartaxisdefaultusermin(other.getTschchartaxisdefaultusermin());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (hasTschchartaxisdefaultnumberformat()) {
          if (!getTschchartaxisdefaultnumberformat().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int tschchartaxisdefault3Dlabelposition_ ;
      /**
       * <code>optional int32 tschchartaxisdefault3dlabelposition = 1;</code>
       */
      public boolean hasTschchartaxisdefault3Dlabelposition() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 tschchartaxisdefault3dlabelposition = 1;</code>
       */
      public int getTschchartaxisdefault3Dlabelposition() {
        return tschchartaxisdefault3Dlabelposition_;
      }
      /**
       * <code>optional int32 tschchartaxisdefault3dlabelposition = 1;</code>
       */
      public Builder setTschchartaxisdefault3Dlabelposition(int value) {
        bitField0_ |= 0x00000001;
        tschchartaxisdefault3Dlabelposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxisdefault3dlabelposition = 1;</code>
       */
      public Builder clearTschchartaxisdefault3Dlabelposition() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tschchartaxisdefault3Dlabelposition_ = 0;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive tschchartaxisdefaultnumberformat_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive, org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.Builder, org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchiveOrBuilder> tschchartaxisdefaultnumberformatBuilder_;
      /**
       * <code>optional .TSK.FormatStructArchive tschchartaxisdefaultnumberformat = 2;</code>
       */
      public boolean hasTschchartaxisdefaultnumberformat() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartaxisdefaultnumberformat = 2;</code>
       */
      public org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive getTschchartaxisdefaultnumberformat() {
        if (tschchartaxisdefaultnumberformatBuilder_ == null) {
          return tschchartaxisdefaultnumberformat_ == null ? org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.getDefaultInstance() : tschchartaxisdefaultnumberformat_;
        } else {
          return tschchartaxisdefaultnumberformatBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartaxisdefaultnumberformat = 2;</code>
       */
      public Builder setTschchartaxisdefaultnumberformat(org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive value) {
        if (tschchartaxisdefaultnumberformatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxisdefaultnumberformat_ = value;
          onChanged();
        } else {
          tschchartaxisdefaultnumberformatBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartaxisdefaultnumberformat = 2;</code>
       */
      public Builder setTschchartaxisdefaultnumberformat(
          org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.Builder builderForValue) {
        if (tschchartaxisdefaultnumberformatBuilder_ == null) {
          tschchartaxisdefaultnumberformat_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxisdefaultnumberformatBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartaxisdefaultnumberformat = 2;</code>
       */
      public Builder mergeTschchartaxisdefaultnumberformat(org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive value) {
        if (tschchartaxisdefaultnumberformatBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              tschchartaxisdefaultnumberformat_ != null &&
              tschchartaxisdefaultnumberformat_ != org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.getDefaultInstance()) {
            tschchartaxisdefaultnumberformat_ =
              org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.newBuilder(tschchartaxisdefaultnumberformat_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxisdefaultnumberformat_ = value;
          }
          onChanged();
        } else {
          tschchartaxisdefaultnumberformatBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartaxisdefaultnumberformat = 2;</code>
       */
      public Builder clearTschchartaxisdefaultnumberformat() {
        if (tschchartaxisdefaultnumberformatBuilder_ == null) {
          tschchartaxisdefaultnumberformat_ = null;
          onChanged();
        } else {
          tschchartaxisdefaultnumberformatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartaxisdefaultnumberformat = 2;</code>
       */
      public org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.Builder getTschchartaxisdefaultnumberformatBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTschchartaxisdefaultnumberformatFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartaxisdefaultnumberformat = 2;</code>
       */
      public org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchiveOrBuilder getTschchartaxisdefaultnumberformatOrBuilder() {
        if (tschchartaxisdefaultnumberformatBuilder_ != null) {
          return tschchartaxisdefaultnumberformatBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxisdefaultnumberformat_ == null ?
              org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.getDefaultInstance() : tschchartaxisdefaultnumberformat_;
        }
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartaxisdefaultnumberformat = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive, org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.Builder, org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchiveOrBuilder> 
          getTschchartaxisdefaultnumberformatFieldBuilder() {
        if (tschchartaxisdefaultnumberformatBuilder_ == null) {
          tschchartaxisdefaultnumberformatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive, org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.Builder, org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchiveOrBuilder>(
                  getTschchartaxisdefaultnumberformat(),
                  getParentForChildren(),
                  isClean());
          tschchartaxisdefaultnumberformat_ = null;
        }
        return tschchartaxisdefaultnumberformatBuilder_;
      }

      private int tschchartaxisdefaultnumberformattype_ ;
      /**
       * <code>optional int32 tschchartaxisdefaultnumberformattype = 3;</code>
       */
      public boolean hasTschchartaxisdefaultnumberformattype() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 tschchartaxisdefaultnumberformattype = 3;</code>
       */
      public int getTschchartaxisdefaultnumberformattype() {
        return tschchartaxisdefaultnumberformattype_;
      }
      /**
       * <code>optional int32 tschchartaxisdefaultnumberformattype = 3;</code>
       */
      public Builder setTschchartaxisdefaultnumberformattype(int value) {
        bitField0_ |= 0x00000004;
        tschchartaxisdefaultnumberformattype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxisdefaultnumberformattype = 3;</code>
       */
      public Builder clearTschchartaxisdefaultnumberformattype() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tschchartaxisdefaultnumberformattype_ = 0;
        onChanged();
        return this;
      }

      private int tschchartaxisvaluenumberofdecades_ ;
      /**
       * <code>optional int32 tschchartaxisvaluenumberofdecades = 4;</code>
       */
      public boolean hasTschchartaxisvaluenumberofdecades() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 tschchartaxisvaluenumberofdecades = 4;</code>
       */
      public int getTschchartaxisvaluenumberofdecades() {
        return tschchartaxisvaluenumberofdecades_;
      }
      /**
       * <code>optional int32 tschchartaxisvaluenumberofdecades = 4;</code>
       */
      public Builder setTschchartaxisvaluenumberofdecades(int value) {
        bitField0_ |= 0x00000008;
        tschchartaxisvaluenumberofdecades_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxisvaluenumberofdecades = 4;</code>
       */
      public Builder clearTschchartaxisvaluenumberofdecades() {
        bitField0_ = (bitField0_ & ~0x00000008);
        tschchartaxisvaluenumberofdecades_ = 0;
        onChanged();
        return this;
      }

      private int tschchartaxisvaluenumberofmajorgridlines_ ;
      /**
       * <code>optional int32 tschchartaxisvaluenumberofmajorgridlines = 5;</code>
       */
      public boolean hasTschchartaxisvaluenumberofmajorgridlines() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 tschchartaxisvaluenumberofmajorgridlines = 5;</code>
       */
      public int getTschchartaxisvaluenumberofmajorgridlines() {
        return tschchartaxisvaluenumberofmajorgridlines_;
      }
      /**
       * <code>optional int32 tschchartaxisvaluenumberofmajorgridlines = 5;</code>
       */
      public Builder setTschchartaxisvaluenumberofmajorgridlines(int value) {
        bitField0_ |= 0x00000010;
        tschchartaxisvaluenumberofmajorgridlines_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxisvaluenumberofmajorgridlines = 5;</code>
       */
      public Builder clearTschchartaxisvaluenumberofmajorgridlines() {
        bitField0_ = (bitField0_ & ~0x00000010);
        tschchartaxisvaluenumberofmajorgridlines_ = 0;
        onChanged();
        return this;
      }

      private int tschchartaxisvaluenumberofminorgridlines_ ;
      /**
       * <code>optional int32 tschchartaxisvaluenumberofminorgridlines = 6;</code>
       */
      public boolean hasTschchartaxisvaluenumberofminorgridlines() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 tschchartaxisvaluenumberofminorgridlines = 6;</code>
       */
      public int getTschchartaxisvaluenumberofminorgridlines() {
        return tschchartaxisvaluenumberofminorgridlines_;
      }
      /**
       * <code>optional int32 tschchartaxisvaluenumberofminorgridlines = 6;</code>
       */
      public Builder setTschchartaxisvaluenumberofminorgridlines(int value) {
        bitField0_ |= 0x00000020;
        tschchartaxisvaluenumberofminorgridlines_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxisvaluenumberofminorgridlines = 6;</code>
       */
      public Builder clearTschchartaxisvaluenumberofminorgridlines() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tschchartaxisvaluenumberofminorgridlines_ = 0;
        onChanged();
        return this;
      }

      private boolean tschchartaxiscategoryplottoedges_ ;
      /**
       * <code>optional bool tschchartaxiscategoryplottoedges = 7;</code>
       */
      public boolean hasTschchartaxiscategoryplottoedges() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool tschchartaxiscategoryplottoedges = 7;</code>
       */
      public boolean getTschchartaxiscategoryplottoedges() {
        return tschchartaxiscategoryplottoedges_;
      }
      /**
       * <code>optional bool tschchartaxiscategoryplottoedges = 7;</code>
       */
      public Builder setTschchartaxiscategoryplottoedges(boolean value) {
        bitField0_ |= 0x00000040;
        tschchartaxiscategoryplottoedges_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxiscategoryplottoedges = 7;</code>
       */
      public Builder clearTschchartaxiscategoryplottoedges() {
        bitField0_ = (bitField0_ & ~0x00000040);
        tschchartaxiscategoryplottoedges_ = false;
        onChanged();
        return this;
      }

      private int tschchartaxisvaluescale_ ;
      /**
       * <code>optional int32 tschchartaxisvaluescale = 8;</code>
       */
      public boolean hasTschchartaxisvaluescale() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 tschchartaxisvaluescale = 8;</code>
       */
      public int getTschchartaxisvaluescale() {
        return tschchartaxisvaluescale_;
      }
      /**
       * <code>optional int32 tschchartaxisvaluescale = 8;</code>
       */
      public Builder setTschchartaxisvaluescale(int value) {
        bitField0_ |= 0x00000080;
        tschchartaxisvaluescale_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxisvaluescale = 8;</code>
       */
      public Builder clearTschchartaxisvaluescale() {
        bitField0_ = (bitField0_ & ~0x00000080);
        tschchartaxisvaluescale_ = 0;
        onChanged();
        return this;
      }

      private boolean tschchartaxiscategoryshowlabels_ ;
      /**
       * <code>optional bool tschchartaxiscategoryshowlabels = 9;</code>
       */
      public boolean hasTschchartaxiscategoryshowlabels() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowlabels = 9;</code>
       */
      public boolean getTschchartaxiscategoryshowlabels() {
        return tschchartaxiscategoryshowlabels_;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowlabels = 9;</code>
       */
      public Builder setTschchartaxiscategoryshowlabels(boolean value) {
        bitField0_ |= 0x00000100;
        tschchartaxiscategoryshowlabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowlabels = 9;</code>
       */
      public Builder clearTschchartaxiscategoryshowlabels() {
        bitField0_ = (bitField0_ & ~0x00000100);
        tschchartaxiscategoryshowlabels_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartaxisdefaultshowlabels_ ;
      /**
       * <code>optional bool tschchartaxisdefaultshowlabels = 10;</code>
       */
      public boolean hasTschchartaxisdefaultshowlabels() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool tschchartaxisdefaultshowlabels = 10;</code>
       */
      public boolean getTschchartaxisdefaultshowlabels() {
        return tschchartaxisdefaultshowlabels_;
      }
      /**
       * <code>optional bool tschchartaxisdefaultshowlabels = 10;</code>
       */
      public Builder setTschchartaxisdefaultshowlabels(boolean value) {
        bitField0_ |= 0x00000200;
        tschchartaxisdefaultshowlabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxisdefaultshowlabels = 10;</code>
       */
      public Builder clearTschchartaxisdefaultshowlabels() {
        bitField0_ = (bitField0_ & ~0x00000200);
        tschchartaxisdefaultshowlabels_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartaxisvalueshowlabels_ ;
      /**
       * <code>optional bool tschchartaxisvalueshowlabels = 11;</code>
       */
      public boolean hasTschchartaxisvalueshowlabels() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool tschchartaxisvalueshowlabels = 11;</code>
       */
      public boolean getTschchartaxisvalueshowlabels() {
        return tschchartaxisvalueshowlabels_;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowlabels = 11;</code>
       */
      public Builder setTschchartaxisvalueshowlabels(boolean value) {
        bitField0_ |= 0x00000400;
        tschchartaxisvalueshowlabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowlabels = 11;</code>
       */
      public Builder clearTschchartaxisvalueshowlabels() {
        bitField0_ = (bitField0_ & ~0x00000400);
        tschchartaxisvalueshowlabels_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartaxiscategoryshowserieslabels_ ;
      /**
       * <code>optional bool tschchartaxiscategoryshowserieslabels = 12;</code>
       */
      public boolean hasTschchartaxiscategoryshowserieslabels() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowserieslabels = 12;</code>
       */
      public boolean getTschchartaxiscategoryshowserieslabels() {
        return tschchartaxiscategoryshowserieslabels_;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowserieslabels = 12;</code>
       */
      public Builder setTschchartaxiscategoryshowserieslabels(boolean value) {
        bitField0_ |= 0x00000800;
        tschchartaxiscategoryshowserieslabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowserieslabels = 12;</code>
       */
      public Builder clearTschchartaxiscategoryshowserieslabels() {
        bitField0_ = (bitField0_ & ~0x00000800);
        tschchartaxiscategoryshowserieslabels_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartaxismultidatashowserieslabels_ ;
      /**
       * <code>optional bool tschchartaxismultidatashowserieslabels = 19;</code>
       */
      public boolean hasTschchartaxismultidatashowserieslabels() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bool tschchartaxismultidatashowserieslabels = 19;</code>
       */
      public boolean getTschchartaxismultidatashowserieslabels() {
        return tschchartaxismultidatashowserieslabels_;
      }
      /**
       * <code>optional bool tschchartaxismultidatashowserieslabels = 19;</code>
       */
      public Builder setTschchartaxismultidatashowserieslabels(boolean value) {
        bitField0_ |= 0x00001000;
        tschchartaxismultidatashowserieslabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxismultidatashowserieslabels = 19;</code>
       */
      public Builder clearTschchartaxismultidatashowserieslabels() {
        bitField0_ = (bitField0_ & ~0x00001000);
        tschchartaxismultidatashowserieslabels_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartaxiscategoryshowtitle_ ;
      /**
       * <code>optional bool tschchartaxiscategoryshowtitle = 13;</code>
       */
      public boolean hasTschchartaxiscategoryshowtitle() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowtitle = 13;</code>
       */
      public boolean getTschchartaxiscategoryshowtitle() {
        return tschchartaxiscategoryshowtitle_;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowtitle = 13;</code>
       */
      public Builder setTschchartaxiscategoryshowtitle(boolean value) {
        bitField0_ |= 0x00002000;
        tschchartaxiscategoryshowtitle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowtitle = 13;</code>
       */
      public Builder clearTschchartaxiscategoryshowtitle() {
        bitField0_ = (bitField0_ & ~0x00002000);
        tschchartaxiscategoryshowtitle_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartaxisvalueshowtitle_ ;
      /**
       * <code>optional bool tschchartaxisvalueshowtitle = 14;</code>
       */
      public boolean hasTschchartaxisvalueshowtitle() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional bool tschchartaxisvalueshowtitle = 14;</code>
       */
      public boolean getTschchartaxisvalueshowtitle() {
        return tschchartaxisvalueshowtitle_;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowtitle = 14;</code>
       */
      public Builder setTschchartaxisvalueshowtitle(boolean value) {
        bitField0_ |= 0x00004000;
        tschchartaxisvalueshowtitle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowtitle = 14;</code>
       */
      public Builder clearTschchartaxisvalueshowtitle() {
        bitField0_ = (bitField0_ & ~0x00004000);
        tschchartaxisvalueshowtitle_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object tschchartaxiscategorytitle_ = "";
      /**
       * <code>optional string tschchartaxiscategorytitle = 15;</code>
       */
      public boolean hasTschchartaxiscategorytitle() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional string tschchartaxiscategorytitle = 15;</code>
       */
      public java.lang.String getTschchartaxiscategorytitle() {
        java.lang.Object ref = tschchartaxiscategorytitle_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tschchartaxiscategorytitle_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string tschchartaxiscategorytitle = 15;</code>
       */
      public com.google.protobuf.ByteString
          getTschchartaxiscategorytitleBytes() {
        java.lang.Object ref = tschchartaxiscategorytitle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tschchartaxiscategorytitle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string tschchartaxiscategorytitle = 15;</code>
       */
      public Builder setTschchartaxiscategorytitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        tschchartaxiscategorytitle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string tschchartaxiscategorytitle = 15;</code>
       */
      public Builder clearTschchartaxiscategorytitle() {
        bitField0_ = (bitField0_ & ~0x00008000);
        tschchartaxiscategorytitle_ = getDefaultInstance().getTschchartaxiscategorytitle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string tschchartaxiscategorytitle = 15;</code>
       */
      public Builder setTschchartaxiscategorytitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        tschchartaxiscategorytitle_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object tschchartaxisvaluetitle_ = "";
      /**
       * <code>optional string tschchartaxisvaluetitle = 16;</code>
       */
      public boolean hasTschchartaxisvaluetitle() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional string tschchartaxisvaluetitle = 16;</code>
       */
      public java.lang.String getTschchartaxisvaluetitle() {
        java.lang.Object ref = tschchartaxisvaluetitle_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tschchartaxisvaluetitle_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string tschchartaxisvaluetitle = 16;</code>
       */
      public com.google.protobuf.ByteString
          getTschchartaxisvaluetitleBytes() {
        java.lang.Object ref = tschchartaxisvaluetitle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tschchartaxisvaluetitle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string tschchartaxisvaluetitle = 16;</code>
       */
      public Builder setTschchartaxisvaluetitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        tschchartaxisvaluetitle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string tschchartaxisvaluetitle = 16;</code>
       */
      public Builder clearTschchartaxisvaluetitle() {
        bitField0_ = (bitField0_ & ~0x00010000);
        tschchartaxisvaluetitle_ = getDefaultInstance().getTschchartaxisvaluetitle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string tschchartaxisvaluetitle = 16;</code>
       */
      public Builder setTschchartaxisvaluetitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        tschchartaxisvaluetitle_ = value;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchiveOrBuilder> tschchartaxisdefaultusermaxBuilder_;
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 17;</code>
       */
      public boolean hasTschchartaxisdefaultusermax() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 17;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive getTschchartaxisdefaultusermax() {
        if (tschchartaxisdefaultusermaxBuilder_ == null) {
          return tschchartaxisdefaultusermax_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.getDefaultInstance() : tschchartaxisdefaultusermax_;
        } else {
          return tschchartaxisdefaultusermaxBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 17;</code>
       */
      public Builder setTschchartaxisdefaultusermax(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive value) {
        if (tschchartaxisdefaultusermaxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxisdefaultusermax_ = value;
          onChanged();
        } else {
          tschchartaxisdefaultusermaxBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 17;</code>
       */
      public Builder setTschchartaxisdefaultusermax(
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.Builder builderForValue) {
        if (tschchartaxisdefaultusermaxBuilder_ == null) {
          tschchartaxisdefaultusermax_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxisdefaultusermaxBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 17;</code>
       */
      public Builder mergeTschchartaxisdefaultusermax(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive value) {
        if (tschchartaxisdefaultusermaxBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000) &&
              tschchartaxisdefaultusermax_ != null &&
              tschchartaxisdefaultusermax_ != org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.getDefaultInstance()) {
            tschchartaxisdefaultusermax_ =
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.newBuilder(tschchartaxisdefaultusermax_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxisdefaultusermax_ = value;
          }
          onChanged();
        } else {
          tschchartaxisdefaultusermaxBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 17;</code>
       */
      public Builder clearTschchartaxisdefaultusermax() {
        if (tschchartaxisdefaultusermaxBuilder_ == null) {
          tschchartaxisdefaultusermax_ = null;
          onChanged();
        } else {
          tschchartaxisdefaultusermaxBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 17;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.Builder getTschchartaxisdefaultusermaxBuilder() {
        bitField0_ |= 0x00020000;
        onChanged();
        return getTschchartaxisdefaultusermaxFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 17;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchiveOrBuilder getTschchartaxisdefaultusermaxOrBuilder() {
        if (tschchartaxisdefaultusermaxBuilder_ != null) {
          return tschchartaxisdefaultusermaxBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxisdefaultusermax_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.getDefaultInstance() : tschchartaxisdefaultusermax_;
        }
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchiveOrBuilder> 
          getTschchartaxisdefaultusermaxFieldBuilder() {
        if (tschchartaxisdefaultusermaxBuilder_ == null) {
          tschchartaxisdefaultusermaxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchiveOrBuilder>(
                  getTschchartaxisdefaultusermax(),
                  getParentForChildren(),
                  isClean());
          tschchartaxisdefaultusermax_ = null;
        }
        return tschchartaxisdefaultusermaxBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchiveOrBuilder> tschchartaxisdefaultuserminBuilder_;
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 18;</code>
       */
      public boolean hasTschchartaxisdefaultusermin() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 18;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive getTschchartaxisdefaultusermin() {
        if (tschchartaxisdefaultuserminBuilder_ == null) {
          return tschchartaxisdefaultusermin_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.getDefaultInstance() : tschchartaxisdefaultusermin_;
        } else {
          return tschchartaxisdefaultuserminBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 18;</code>
       */
      public Builder setTschchartaxisdefaultusermin(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive value) {
        if (tschchartaxisdefaultuserminBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxisdefaultusermin_ = value;
          onChanged();
        } else {
          tschchartaxisdefaultuserminBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 18;</code>
       */
      public Builder setTschchartaxisdefaultusermin(
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.Builder builderForValue) {
        if (tschchartaxisdefaultuserminBuilder_ == null) {
          tschchartaxisdefaultusermin_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxisdefaultuserminBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 18;</code>
       */
      public Builder mergeTschchartaxisdefaultusermin(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive value) {
        if (tschchartaxisdefaultuserminBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000) &&
              tschchartaxisdefaultusermin_ != null &&
              tschchartaxisdefaultusermin_ != org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.getDefaultInstance()) {
            tschchartaxisdefaultusermin_ =
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.newBuilder(tschchartaxisdefaultusermin_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxisdefaultusermin_ = value;
          }
          onChanged();
        } else {
          tschchartaxisdefaultuserminBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 18;</code>
       */
      public Builder clearTschchartaxisdefaultusermin() {
        if (tschchartaxisdefaultuserminBuilder_ == null) {
          tschchartaxisdefaultusermin_ = null;
          onChanged();
        } else {
          tschchartaxisdefaultuserminBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 18;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.Builder getTschchartaxisdefaultuserminBuilder() {
        bitField0_ |= 0x00040000;
        onChanged();
        return getTschchartaxisdefaultuserminFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 18;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchiveOrBuilder getTschchartaxisdefaultuserminOrBuilder() {
        if (tschchartaxisdefaultuserminBuilder_ != null) {
          return tschchartaxisdefaultuserminBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxisdefaultusermin_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.getDefaultInstance() : tschchartaxisdefaultusermin_;
        }
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 18;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchiveOrBuilder> 
          getTschchartaxisdefaultuserminFieldBuilder() {
        if (tschchartaxisdefaultuserminBuilder_ == null) {
          tschchartaxisdefaultuserminBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchiveOrBuilder>(
                  getTschchartaxisdefaultusermin(),
                  getParentForChildren(),
                  isClean());
          tschchartaxisdefaultusermin_ = null;
        }
        return tschchartaxisdefaultuserminBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TSCH.Generated.ChartAxisNonStyleArchive)
    }

    // @@protoc_insertion_point(class_scope:TSCH.Generated.ChartAxisNonStyleArchive)
    private static final org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive();
    }

    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ChartAxisNonStyleArchive>
        PARSER = new com.google.protobuf.AbstractParser<ChartAxisNonStyleArchive>() {
      public ChartAxisNonStyleArchive parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ChartAxisNonStyleArchive(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChartAxisNonStyleArchive> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChartAxisNonStyleArchive> getParserForType() {
      return PARSER;
    }

    public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    public static final int CURRENT_FIELD_NUMBER = 10000;
    /**
     * <code>extend .TSCH.ChartAxisNonStyleArchive { ... }</code>
     */
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartAxisNonStyleArchive,
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive> current = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive.getDefaultInstance(),
          0,
          org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive.class,
          org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartAxisNonStyleArchive.getDefaultInstance());
  }

  public interface ChartSeriesStyleArchiveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TSCH.Generated.ChartSeriesStyleArchive)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 1;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarlineend();
    /**
     * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 1;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive getTschchartseriesdefaulterrorbarlineend();
    /**
     * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 1;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchiveOrBuilder getTschchartseriesdefaulterrorbarlineendOrBuilder();

    /**
     * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 2;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarlineendscatterx();
    /**
     * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 2;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive getTschchartseriesdefaulterrorbarlineendscatterx();
    /**
     * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 2;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchiveOrBuilder getTschchartseriesdefaulterrorbarlineendscatterxOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 3;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 3;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesdefaulterrorbarshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 3;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesdefaulterrorbarshadowOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 4;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 4;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesdefaulterrorbarstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 4;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesdefaulterrorbarstrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 5;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarstrokescatterx();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 5;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesdefaulterrorbarstrokescatterx();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 5;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesdefaulterrorbarstrokescatterxOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseries3dareafill = 6;</code>
     */
    boolean hasTschchartseries3Dareafill();
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dareafill = 6;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dareafill();
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dareafill = 6;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DareafillOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 7;</code>
     */
    boolean hasTschchartseries3Dbarfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 7;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dbarfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 7;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DbarfillOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 8;</code>
     */
    boolean hasTschchartseries3Dcolumnfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 8;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dcolumnfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 8;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DcolumnfillOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 9;</code>
     */
    boolean hasTschchartseries3Dlinefill();
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 9;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dlinefill();
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 9;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DlinefillOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 10;</code>
     */
    boolean hasTschchartseries3Dpiefill();
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 10;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dpiefill();
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 10;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DpiefillOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseriesareafill = 11;</code>
     */
    boolean hasTschchartseriesareafill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesareafill = 11;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesareafill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesareafill = 11;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesareafillOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseriesbarfill = 12;</code>
     */
    boolean hasTschchartseriesbarfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesbarfill = 12;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesbarfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesbarfill = 12;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesbarfillOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 13;</code>
     */
    boolean hasTschchartseriescolumnfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 13;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriescolumnfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 13;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriescolumnfillOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 14;</code>
     */
    boolean hasTschchartseriesdefaultfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 14;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesdefaultfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 14;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesdefaultfillOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 15;</code>
     */
    boolean hasTschchartseriesmixedareafill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 15;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesmixedareafill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 15;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesmixedareafillOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 16;</code>
     */
    boolean hasTschchartseriesmixedcolumnfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 16;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesmixedcolumnfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 16;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesmixedcolumnfillOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseriespiefill = 17;</code>
     */
    boolean hasTschchartseriespiefill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriespiefill = 17;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriespiefill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriespiefill = 17;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriespiefillOrBuilder();

    /**
     * <code>optional int32 tschchartseriesarealabelparagraphstyleindex = 18;</code>
     */
    boolean hasTschchartseriesarealabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartseriesarealabelparagraphstyleindex = 18;</code>
     */
    int getTschchartseriesarealabelparagraphstyleindex();

    /**
     * <code>optional int32 tschchartseriesbarlabelparagraphstyleindex = 19;</code>
     */
    boolean hasTschchartseriesbarlabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartseriesbarlabelparagraphstyleindex = 19;</code>
     */
    int getTschchartseriesbarlabelparagraphstyleindex();

    /**
     * <code>optional int32 tschchartseriesdefaultlabelparagraphstyleindex = 20;</code>
     */
    boolean hasTschchartseriesdefaultlabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartseriesdefaultlabelparagraphstyleindex = 20;</code>
     */
    int getTschchartseriesdefaultlabelparagraphstyleindex();

    /**
     * <code>optional int32 tschchartserieslinelabelparagraphstyleindex = 21;</code>
     */
    boolean hasTschchartserieslinelabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartserieslinelabelparagraphstyleindex = 21;</code>
     */
    int getTschchartserieslinelabelparagraphstyleindex();

    /**
     * <code>optional int32 tschchartseriesmixedlabelparagraphstyleindex = 22;</code>
     */
    boolean hasTschchartseriesmixedlabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartseriesmixedlabelparagraphstyleindex = 22;</code>
     */
    int getTschchartseriesmixedlabelparagraphstyleindex();

    /**
     * <code>optional int32 tschchartseriespielabelparagraphstyleindex = 23;</code>
     */
    boolean hasTschchartseriespielabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartseriespielabelparagraphstyleindex = 23;</code>
     */
    int getTschchartseriespielabelparagraphstyleindex();

    /**
     * <code>optional float tschchartseriesdefaultopacity = 24;</code>
     */
    boolean hasTschchartseriesdefaultopacity();
    /**
     * <code>optional float tschchartseriesdefaultopacity = 24;</code>
     */
    float getTschchartseriesdefaultopacity();

    /**
     * <code>optional int32 tschchartseriesareaoutsidelabelparagraphstyleindex = 25;</code>
     */
    boolean hasTschchartseriesareaoutsidelabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartseriesareaoutsidelabelparagraphstyleindex = 25;</code>
     */
    int getTschchartseriesareaoutsidelabelparagraphstyleindex();

    /**
     * <code>optional int32 tschchartseriesbaroutsidelabelparagraphstyleindex = 26;</code>
     */
    boolean hasTschchartseriesbaroutsidelabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartseriesbaroutsidelabelparagraphstyleindex = 26;</code>
     */
    int getTschchartseriesbaroutsidelabelparagraphstyleindex();

    /**
     * <code>optional int32 tschchartseriesdefaultoutsidelabelparagraphstyleindex = 27;</code>
     */
    boolean hasTschchartseriesdefaultoutsidelabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartseriesdefaultoutsidelabelparagraphstyleindex = 27;</code>
     */
    int getTschchartseriesdefaultoutsidelabelparagraphstyleindex();

    /**
     * <code>optional int32 tschchartseriesmixedoutsidelabelparagraphstyleindex = 28;</code>
     */
    boolean hasTschchartseriesmixedoutsidelabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartseriesmixedoutsidelabelparagraphstyleindex = 28;</code>
     */
    int getTschchartseriesmixedoutsidelabelparagraphstyleindex();

    /**
     * <code>optional int32 tschchartseriespieoutsidelabelparagraphstyleindex = 29;</code>
     */
    boolean hasTschchartseriespieoutsidelabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartseriespieoutsidelabelparagraphstyleindex = 29;</code>
     */
    int getTschchartseriespieoutsidelabelparagraphstyleindex();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 30;</code>
     */
    boolean hasTschchartseries3Dareashadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 30;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dareashadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 30;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DareashadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 31;</code>
     */
    boolean hasTschchartseries3Dbarshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 31;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dbarshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 31;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DbarshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 32;</code>
     */
    boolean hasTschchartseries3Dcolumnshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 32;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dcolumnshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 32;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DcolumnshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 33;</code>
     */
    boolean hasTschchartseries3Dlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 33;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 33;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DlineshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 34;</code>
     */
    boolean hasTschchartseries3Dpieshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 34;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dpieshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 34;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DpieshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 35;</code>
     */
    boolean hasTschchartseriesareashadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 35;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesareashadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 35;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesareashadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 36;</code>
     */
    boolean hasTschchartseriesbarshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 36;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesbarshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 36;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesbarshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 37;</code>
     */
    boolean hasTschchartseriesbubbleshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 37;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesbubbleshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 37;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesbubbleshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 38;</code>
     */
    boolean hasTschchartseriesdefaultshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 38;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesdefaultshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 38;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesdefaultshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 39;</code>
     */
    boolean hasTschchartserieslineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 39;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartserieslineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 39;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartserieslineshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 40;</code>
     */
    boolean hasTschchartseriesmixedareashadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 40;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesmixedareashadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 40;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesmixedareashadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 41;</code>
     */
    boolean hasTschchartseriesmixedcolumnshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 41;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesmixedcolumnshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 41;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesmixedcolumnshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 42;</code>
     */
    boolean hasTschchartseriesmixedlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 42;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesmixedlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 42;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesmixedlineshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 43;</code>
     */
    boolean hasTschchartseriespieshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 43;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriespieshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 43;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriespieshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 44;</code>
     */
    boolean hasTschchartseriesscattershadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 44;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesscattershadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 44;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesscattershadowOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 45;</code>
     */
    boolean hasTschchartseriesareastroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 45;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesareastroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 45;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesareastrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 46;</code>
     */
    boolean hasTschchartseriesbarstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 46;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesbarstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 46;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesbarstrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 47;</code>
     */
    boolean hasTschchartseriesbubblestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 47;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesbubblestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 47;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesbubblestrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 48;</code>
     */
    boolean hasTschchartserieslinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 48;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartserieslinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 48;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartserieslinestrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 49;</code>
     */
    boolean hasTschchartseriesmixedareastroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 49;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedareastroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 49;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedareastrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 50;</code>
     */
    boolean hasTschchartseriesmixedcolumnstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 50;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedcolumnstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 50;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedcolumnstrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 51;</code>
     */
    boolean hasTschchartseriesmixedlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 51;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 51;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedlinestrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 52;</code>
     */
    boolean hasTschchartseriespiestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 52;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriespiestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 52;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriespiestrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 53;</code>
     */
    boolean hasTschchartseriesscatterstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 53;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesscatterstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 53;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesscatterstrokeOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 54;</code>
     */
    boolean hasTschchartseriesareasymbolfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 54;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesareasymbolfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 54;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesareasymbolfillOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 55;</code>
     */
    boolean hasTschchartseriesbubblesymbolfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 55;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesbubblesymbolfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 55;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesbubblesymbolfillOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 56;</code>
     */
    boolean hasTschchartserieslinesymbolfill();
    /**
     * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 56;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartserieslinesymbolfill();
    /**
     * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 56;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartserieslinesymbolfillOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 57;</code>
     */
    boolean hasTschchartseriesmixedareasymbolfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 57;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesmixedareasymbolfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 57;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesmixedareasymbolfillOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 58;</code>
     */
    boolean hasTschchartseriesmixedlinesymbolfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 58;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesmixedlinesymbolfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 58;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesmixedlinesymbolfillOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 59;</code>
     */
    boolean hasTschchartseriesscattersymbolfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 59;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesscattersymbolfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 59;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesscattersymbolfillOrBuilder();

    /**
     * <code>optional bool tschchartseriesareasymbolfilluseseriesfill = 60;</code>
     */
    boolean hasTschchartseriesareasymbolfilluseseriesfill();
    /**
     * <code>optional bool tschchartseriesareasymbolfilluseseriesfill = 60;</code>
     */
    boolean getTschchartseriesareasymbolfilluseseriesfill();

    /**
     * <code>optional bool tschchartserieslinesymbolfilluseseriesfill = 61;</code>
     */
    boolean hasTschchartserieslinesymbolfilluseseriesfill();
    /**
     * <code>optional bool tschchartserieslinesymbolfilluseseriesfill = 61;</code>
     */
    boolean getTschchartserieslinesymbolfilluseseriesfill();

    /**
     * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesfill = 62;</code>
     */
    boolean hasTschchartseriesmixedareasymbolfilluseseriesfill();
    /**
     * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesfill = 62;</code>
     */
    boolean getTschchartseriesmixedareasymbolfilluseseriesfill();

    /**
     * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesfill = 63;</code>
     */
    boolean hasTschchartseriesmixedlinesymbolfilluseseriesfill();
    /**
     * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesfill = 63;</code>
     */
    boolean getTschchartseriesmixedlinesymbolfilluseseriesfill();

    /**
     * <code>optional bool tschchartseriesareasymbolfilluseseriesstroke = 64;</code>
     */
    boolean hasTschchartseriesareasymbolfilluseseriesstroke();
    /**
     * <code>optional bool tschchartseriesareasymbolfilluseseriesstroke = 64;</code>
     */
    boolean getTschchartseriesareasymbolfilluseseriesstroke();

    /**
     * <code>optional bool tschchartseriesbubblesymbolfilluseseriesstroke = 65;</code>
     */
    boolean hasTschchartseriesbubblesymbolfilluseseriesstroke();
    /**
     * <code>optional bool tschchartseriesbubblesymbolfilluseseriesstroke = 65;</code>
     */
    boolean getTschchartseriesbubblesymbolfilluseseriesstroke();

    /**
     * <code>optional bool tschchartserieslinesymbolfilluseseriesstroke = 66;</code>
     */
    boolean hasTschchartserieslinesymbolfilluseseriesstroke();
    /**
     * <code>optional bool tschchartserieslinesymbolfilluseseriesstroke = 66;</code>
     */
    boolean getTschchartserieslinesymbolfilluseseriesstroke();

    /**
     * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesstroke = 67;</code>
     */
    boolean hasTschchartseriesmixedareasymbolfilluseseriesstroke();
    /**
     * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesstroke = 67;</code>
     */
    boolean getTschchartseriesmixedareasymbolfilluseseriesstroke();

    /**
     * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesstroke = 68;</code>
     */
    boolean hasTschchartseriesmixedlinesymbolfilluseseriesstroke();
    /**
     * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesstroke = 68;</code>
     */
    boolean getTschchartseriesmixedlinesymbolfilluseseriesstroke();

    /**
     * <code>optional bool tschchartseriesscattersymbolfilluseseriesstroke = 69;</code>
     */
    boolean hasTschchartseriesscattersymbolfilluseseriesstroke();
    /**
     * <code>optional bool tschchartseriesscattersymbolfilluseseriesstroke = 69;</code>
     */
    boolean getTschchartseriesscattersymbolfilluseseriesstroke();

    /**
     * <code>optional float tschchartseriesareasymbolsize = 70;</code>
     */
    boolean hasTschchartseriesareasymbolsize();
    /**
     * <code>optional float tschchartseriesareasymbolsize = 70;</code>
     */
    float getTschchartseriesareasymbolsize();

    /**
     * <code>optional float tschchartserieslinesymbolsize = 71;</code>
     */
    boolean hasTschchartserieslinesymbolsize();
    /**
     * <code>optional float tschchartserieslinesymbolsize = 71;</code>
     */
    float getTschchartserieslinesymbolsize();

    /**
     * <code>optional float tschchartseriesmixedareasymbolsize = 72;</code>
     */
    boolean hasTschchartseriesmixedareasymbolsize();
    /**
     * <code>optional float tschchartseriesmixedareasymbolsize = 72;</code>
     */
    float getTschchartseriesmixedareasymbolsize();

    /**
     * <code>optional float tschchartseriesmixedlinesymbolsize = 73;</code>
     */
    boolean hasTschchartseriesmixedlinesymbolsize();
    /**
     * <code>optional float tschchartseriesmixedlinesymbolsize = 73;</code>
     */
    float getTschchartseriesmixedlinesymbolsize();

    /**
     * <code>optional float tschchartseriesscattersymbolsize = 74;</code>
     */
    boolean hasTschchartseriesscattersymbolsize();
    /**
     * <code>optional float tschchartseriesscattersymbolsize = 74;</code>
     */
    float getTschchartseriesscattersymbolsize();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 75;</code>
     */
    boolean hasTschchartseriesareasymbolstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 75;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesareasymbolstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 75;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesareasymbolstrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 76;</code>
     */
    boolean hasTschchartseriesbubblesymbolstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 76;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesbubblesymbolstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 76;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesbubblesymbolstrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 77;</code>
     */
    boolean hasTschchartserieslinesymbolstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 77;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartserieslinesymbolstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 77;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartserieslinesymbolstrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 78;</code>
     */
    boolean hasTschchartseriesmixedareasymbolstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 78;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedareasymbolstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 78;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedareasymbolstrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 79;</code>
     */
    boolean hasTschchartseriesmixedlinesymbolstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 79;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedlinesymbolstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 79;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedlinesymbolstrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 80;</code>
     */
    boolean hasTschchartseriesscattersymbolstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 80;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesscattersymbolstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 80;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesscattersymbolstrokeOrBuilder();

    /**
     * <code>optional float tschchartseriesdefaulttrendlineequationopacity = 81;</code>
     */
    boolean hasTschchartseriesdefaulttrendlineequationopacity();
    /**
     * <code>optional float tschchartseriesdefaulttrendlineequationopacity = 81;</code>
     */
    float getTschchartseriesdefaulttrendlineequationopacity();

    /**
     * <code>optional int32 tschchartseriesdefaulttrendlineequationparagraphstyleindex = 82;</code>
     */
    boolean hasTschchartseriesdefaulttrendlineequationparagraphstyleindex();
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlineequationparagraphstyleindex = 82;</code>
     */
    int getTschchartseriesdefaulttrendlineequationparagraphstyleindex();

    /**
     * <code>optional float tschchartseriesdefaulttrendlinersquaredopacity = 83;</code>
     */
    boolean hasTschchartseriesdefaulttrendlinersquaredopacity();
    /**
     * <code>optional float tschchartseriesdefaulttrendlinersquaredopacity = 83;</code>
     */
    float getTschchartseriesdefaulttrendlinersquaredopacity();

    /**
     * <code>optional int32 tschchartseriesdefaulttrendlinersquaredparagraphstyleindex = 84;</code>
     */
    boolean hasTschchartseriesdefaulttrendlinersquaredparagraphstyleindex();
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlinersquaredparagraphstyleindex = 84;</code>
     */
    int getTschchartseriesdefaulttrendlinersquaredparagraphstyleindex();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 85;</code>
     */
    boolean hasTschchartseriesdefaulttrendlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 85;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesdefaulttrendlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 85;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesdefaulttrendlineshadowOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 86;</code>
     */
    boolean hasTschchartseriesdefaulttrendlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 86;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesdefaulttrendlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 86;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesdefaulttrendlinestrokeOrBuilder();

    /**
     * <code>optional int32 tschchartseriesareavaluelabelposition = 87;</code>
     */
    boolean hasTschchartseriesareavaluelabelposition();
    /**
     * <code>optional int32 tschchartseriesareavaluelabelposition = 87;</code>
     */
    int getTschchartseriesareavaluelabelposition();

    /**
     * <code>optional int32 tschchartseriesbarvaluelabelposition = 88;</code>
     */
    boolean hasTschchartseriesbarvaluelabelposition();
    /**
     * <code>optional int32 tschchartseriesbarvaluelabelposition = 88;</code>
     */
    int getTschchartseriesbarvaluelabelposition();

    /**
     * <code>optional int32 tschchartseriesbubblevaluelabelposition = 89;</code>
     */
    boolean hasTschchartseriesbubblevaluelabelposition();
    /**
     * <code>optional int32 tschchartseriesbubblevaluelabelposition = 89;</code>
     */
    int getTschchartseriesbubblevaluelabelposition();

    /**
     * <code>optional int32 tschchartseriesdefaultvaluelabelposition = 90;</code>
     */
    boolean hasTschchartseriesdefaultvaluelabelposition();
    /**
     * <code>optional int32 tschchartseriesdefaultvaluelabelposition = 90;</code>
     */
    int getTschchartseriesdefaultvaluelabelposition();

    /**
     * <code>optional int32 tschchartserieslinevaluelabelposition = 91;</code>
     */
    boolean hasTschchartserieslinevaluelabelposition();
    /**
     * <code>optional int32 tschchartserieslinevaluelabelposition = 91;</code>
     */
    int getTschchartserieslinevaluelabelposition();

    /**
     * <code>optional int32 tschchartseriesmixedareavaluelabelposition = 92;</code>
     */
    boolean hasTschchartseriesmixedareavaluelabelposition();
    /**
     * <code>optional int32 tschchartseriesmixedareavaluelabelposition = 92;</code>
     */
    int getTschchartseriesmixedareavaluelabelposition();

    /**
     * <code>optional int32 tschchartseriesmixedcolumnvaluelabelposition = 93;</code>
     */
    boolean hasTschchartseriesmixedcolumnvaluelabelposition();
    /**
     * <code>optional int32 tschchartseriesmixedcolumnvaluelabelposition = 93;</code>
     */
    int getTschchartseriesmixedcolumnvaluelabelposition();

    /**
     * <code>optional int32 tschchartseriesmixedlinevaluelabelposition = 94;</code>
     */
    boolean hasTschchartseriesmixedlinevaluelabelposition();
    /**
     * <code>optional int32 tschchartseriesmixedlinevaluelabelposition = 94;</code>
     */
    int getTschchartseriesmixedlinevaluelabelposition();

    /**
     * <code>optional int32 tschchartseriesscattervaluelabelposition = 95;</code>
     */
    boolean hasTschchartseriesscattervaluelabelposition();
    /**
     * <code>optional int32 tschchartseriesscattervaluelabelposition = 95;</code>
     */
    int getTschchartseriesscattervaluelabelposition();

    /**
     * <code>optional int32 tschchartseriesstackedareavaluelabelposition = 96;</code>
     */
    boolean hasTschchartseriesstackedareavaluelabelposition();
    /**
     * <code>optional int32 tschchartseriesstackedareavaluelabelposition = 96;</code>
     */
    int getTschchartseriesstackedareavaluelabelposition();

    /**
     * <code>optional int32 tschchartseriesstackedbarvaluelabelposition = 97;</code>
     */
    boolean hasTschchartseriesstackedbarvaluelabelposition();
    /**
     * <code>optional int32 tschchartseriesstackedbarvaluelabelposition = 97;</code>
     */
    int getTschchartseriesstackedbarvaluelabelposition();
  }
  /**
   * Protobuf type {@code TSCH.Generated.ChartSeriesStyleArchive}
   */
  public  static final class ChartSeriesStyleArchive extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TSCH.Generated.ChartSeriesStyleArchive)
      ChartSeriesStyleArchiveOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChartSeriesStyleArchive.newBuilder() to construct.
    private ChartSeriesStyleArchive(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChartSeriesStyleArchive() {
      tschchartseriesarealabelparagraphstyleindex_ = 0;
      tschchartseriesbarlabelparagraphstyleindex_ = 0;
      tschchartseriesdefaultlabelparagraphstyleindex_ = 0;
      tschchartserieslinelabelparagraphstyleindex_ = 0;
      tschchartseriesmixedlabelparagraphstyleindex_ = 0;
      tschchartseriespielabelparagraphstyleindex_ = 0;
      tschchartseriesdefaultopacity_ = 0F;
      tschchartseriesareaoutsidelabelparagraphstyleindex_ = 0;
      tschchartseriesbaroutsidelabelparagraphstyleindex_ = 0;
      tschchartseriesdefaultoutsidelabelparagraphstyleindex_ = 0;
      tschchartseriesmixedoutsidelabelparagraphstyleindex_ = 0;
      tschchartseriespieoutsidelabelparagraphstyleindex_ = 0;
      tschchartseriesareasymbolfilluseseriesfill_ = false;
      tschchartserieslinesymbolfilluseseriesfill_ = false;
      tschchartseriesmixedareasymbolfilluseseriesfill_ = false;
      tschchartseriesmixedlinesymbolfilluseseriesfill_ = false;
      tschchartseriesareasymbolfilluseseriesstroke_ = false;
      tschchartseriesbubblesymbolfilluseseriesstroke_ = false;
      tschchartserieslinesymbolfilluseseriesstroke_ = false;
      tschchartseriesmixedareasymbolfilluseseriesstroke_ = false;
      tschchartseriesmixedlinesymbolfilluseseriesstroke_ = false;
      tschchartseriesscattersymbolfilluseseriesstroke_ = false;
      tschchartseriesareasymbolsize_ = 0F;
      tschchartserieslinesymbolsize_ = 0F;
      tschchartseriesmixedareasymbolsize_ = 0F;
      tschchartseriesmixedlinesymbolsize_ = 0F;
      tschchartseriesscattersymbolsize_ = 0F;
      tschchartseriesdefaulttrendlineequationopacity_ = 0F;
      tschchartseriesdefaulttrendlineequationparagraphstyleindex_ = 0;
      tschchartseriesdefaulttrendlinersquaredopacity_ = 0F;
      tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_ = 0;
      tschchartseriesareavaluelabelposition_ = 0;
      tschchartseriesbarvaluelabelposition_ = 0;
      tschchartseriesbubblevaluelabelposition_ = 0;
      tschchartseriesdefaultvaluelabelposition_ = 0;
      tschchartserieslinevaluelabelposition_ = 0;
      tschchartseriesmixedareavaluelabelposition_ = 0;
      tschchartseriesmixedcolumnvaluelabelposition_ = 0;
      tschchartseriesmixedlinevaluelabelposition_ = 0;
      tschchartseriesscattervaluelabelposition_ = 0;
      tschchartseriesstackedareavaluelabelposition_ = 0;
      tschchartseriesstackedbarvaluelabelposition_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChartSeriesStyleArchive(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      int mutable_bitField2_ = 0;
      int mutable_bitField3_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = tschchartseriesdefaulterrorbarlineend_.toBuilder();
              }
              tschchartseriesdefaulterrorbarlineend_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaulterrorbarlineend_);
                tschchartseriesdefaulterrorbarlineend_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = tschchartseriesdefaulterrorbarlineendscatterx_.toBuilder();
              }
              tschchartseriesdefaulterrorbarlineendscatterx_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaulterrorbarlineendscatterx_);
                tschchartseriesdefaulterrorbarlineendscatterx_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = tschchartseriesdefaulterrorbarshadow_.toBuilder();
              }
              tschchartseriesdefaulterrorbarshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaulterrorbarshadow_);
                tschchartseriesdefaulterrorbarshadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = tschchartseriesdefaulterrorbarstroke_.toBuilder();
              }
              tschchartseriesdefaulterrorbarstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaulterrorbarstroke_);
                tschchartseriesdefaulterrorbarstroke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = tschchartseriesdefaulterrorbarstrokescatterx_.toBuilder();
              }
              tschchartseriesdefaulterrorbarstrokescatterx_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaulterrorbarstrokescatterx_);
                tschchartseriesdefaulterrorbarstrokescatterx_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = tschchartseries3Dareafill_.toBuilder();
              }
              tschchartseries3Dareafill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseries3Dareafill_);
                tschchartseries3Dareafill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = tschchartseries3Dbarfill_.toBuilder();
              }
              tschchartseries3Dbarfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseries3Dbarfill_);
                tschchartseries3Dbarfill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 66: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = tschchartseries3Dcolumnfill_.toBuilder();
              }
              tschchartseries3Dcolumnfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseries3Dcolumnfill_);
                tschchartseries3Dcolumnfill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 74: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = tschchartseries3Dlinefill_.toBuilder();
              }
              tschchartseries3Dlinefill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseries3Dlinefill_);
                tschchartseries3Dlinefill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 82: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = tschchartseries3Dpiefill_.toBuilder();
              }
              tschchartseries3Dpiefill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseries3Dpiefill_);
                tschchartseries3Dpiefill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 90: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = tschchartseriesareafill_.toBuilder();
              }
              tschchartseriesareafill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesareafill_);
                tschchartseriesareafill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 98: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = tschchartseriesbarfill_.toBuilder();
              }
              tschchartseriesbarfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesbarfill_);
                tschchartseriesbarfill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 106: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00001000) == 0x00001000)) {
                subBuilder = tschchartseriescolumnfill_.toBuilder();
              }
              tschchartseriescolumnfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriescolumnfill_);
                tschchartseriescolumnfill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00001000;
              break;
            }
            case 114: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00002000) == 0x00002000)) {
                subBuilder = tschchartseriesdefaultfill_.toBuilder();
              }
              tschchartseriesdefaultfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaultfill_);
                tschchartseriesdefaultfill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00002000;
              break;
            }
            case 122: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00004000) == 0x00004000)) {
                subBuilder = tschchartseriesmixedareafill_.toBuilder();
              }
              tschchartseriesmixedareafill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesmixedareafill_);
                tschchartseriesmixedareafill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00004000;
              break;
            }
            case 130: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00008000) == 0x00008000)) {
                subBuilder = tschchartseriesmixedcolumnfill_.toBuilder();
              }
              tschchartseriesmixedcolumnfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesmixedcolumnfill_);
                tschchartseriesmixedcolumnfill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00008000;
              break;
            }
            case 138: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00010000) == 0x00010000)) {
                subBuilder = tschchartseriespiefill_.toBuilder();
              }
              tschchartseriespiefill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriespiefill_);
                tschchartseriespiefill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00010000;
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              tschchartseriesarealabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              tschchartseriesbarlabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              tschchartseriesdefaultlabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              tschchartserieslinelabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00200000;
              tschchartseriesmixedlabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00400000;
              tschchartseriespielabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 197: {
              bitField0_ |= 0x00800000;
              tschchartseriesdefaultopacity_ = input.readFloat();
              break;
            }
            case 200: {
              bitField0_ |= 0x01000000;
              tschchartseriesareaoutsidelabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 208: {
              bitField0_ |= 0x02000000;
              tschchartseriesbaroutsidelabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 216: {
              bitField0_ |= 0x04000000;
              tschchartseriesdefaultoutsidelabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 224: {
              bitField0_ |= 0x08000000;
              tschchartseriesmixedoutsidelabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 232: {
              bitField0_ |= 0x10000000;
              tschchartseriespieoutsidelabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 242: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x20000000) == 0x20000000)) {
                subBuilder = tschchartseries3Dareashadow_.toBuilder();
              }
              tschchartseries3Dareashadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseries3Dareashadow_);
                tschchartseries3Dareashadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x20000000;
              break;
            }
            case 250: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x40000000) == 0x40000000)) {
                subBuilder = tschchartseries3Dbarshadow_.toBuilder();
              }
              tschchartseries3Dbarshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseries3Dbarshadow_);
                tschchartseries3Dbarshadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x40000000;
              break;
            }
            case 258: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x80000000) == 0x80000000)) {
                subBuilder = tschchartseries3Dcolumnshadow_.toBuilder();
              }
              tschchartseries3Dcolumnshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseries3Dcolumnshadow_);
                tschchartseries3Dcolumnshadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x80000000;
              break;
            }
            case 266: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000001) == 0x00000001)) {
                subBuilder = tschchartseries3Dlineshadow_.toBuilder();
              }
              tschchartseries3Dlineshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseries3Dlineshadow_);
                tschchartseries3Dlineshadow_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000001;
              break;
            }
            case 274: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000002) == 0x00000002)) {
                subBuilder = tschchartseries3Dpieshadow_.toBuilder();
              }
              tschchartseries3Dpieshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseries3Dpieshadow_);
                tschchartseries3Dpieshadow_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000002;
              break;
            }
            case 282: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000004) == 0x00000004)) {
                subBuilder = tschchartseriesareashadow_.toBuilder();
              }
              tschchartseriesareashadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesareashadow_);
                tschchartseriesareashadow_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000004;
              break;
            }
            case 290: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000008) == 0x00000008)) {
                subBuilder = tschchartseriesbarshadow_.toBuilder();
              }
              tschchartseriesbarshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesbarshadow_);
                tschchartseriesbarshadow_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000008;
              break;
            }
            case 298: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000010) == 0x00000010)) {
                subBuilder = tschchartseriesbubbleshadow_.toBuilder();
              }
              tschchartseriesbubbleshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesbubbleshadow_);
                tschchartseriesbubbleshadow_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000010;
              break;
            }
            case 306: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000020) == 0x00000020)) {
                subBuilder = tschchartseriesdefaultshadow_.toBuilder();
              }
              tschchartseriesdefaultshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaultshadow_);
                tschchartseriesdefaultshadow_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000020;
              break;
            }
            case 314: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000040) == 0x00000040)) {
                subBuilder = tschchartserieslineshadow_.toBuilder();
              }
              tschchartserieslineshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartserieslineshadow_);
                tschchartserieslineshadow_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000040;
              break;
            }
            case 322: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000080) == 0x00000080)) {
                subBuilder = tschchartseriesmixedareashadow_.toBuilder();
              }
              tschchartseriesmixedareashadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesmixedareashadow_);
                tschchartseriesmixedareashadow_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000080;
              break;
            }
            case 330: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000100) == 0x00000100)) {
                subBuilder = tschchartseriesmixedcolumnshadow_.toBuilder();
              }
              tschchartseriesmixedcolumnshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesmixedcolumnshadow_);
                tschchartseriesmixedcolumnshadow_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000100;
              break;
            }
            case 338: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000200) == 0x00000200)) {
                subBuilder = tschchartseriesmixedlineshadow_.toBuilder();
              }
              tschchartseriesmixedlineshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesmixedlineshadow_);
                tschchartseriesmixedlineshadow_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000200;
              break;
            }
            case 346: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000400) == 0x00000400)) {
                subBuilder = tschchartseriespieshadow_.toBuilder();
              }
              tschchartseriespieshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriespieshadow_);
                tschchartseriespieshadow_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000400;
              break;
            }
            case 354: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000800) == 0x00000800)) {
                subBuilder = tschchartseriesscattershadow_.toBuilder();
              }
              tschchartseriesscattershadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesscattershadow_);
                tschchartseriesscattershadow_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000800;
              break;
            }
            case 362: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00001000) == 0x00001000)) {
                subBuilder = tschchartseriesareastroke_.toBuilder();
              }
              tschchartseriesareastroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesareastroke_);
                tschchartseriesareastroke_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00001000;
              break;
            }
            case 370: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00002000) == 0x00002000)) {
                subBuilder = tschchartseriesbarstroke_.toBuilder();
              }
              tschchartseriesbarstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesbarstroke_);
                tschchartseriesbarstroke_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00002000;
              break;
            }
            case 378: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00004000) == 0x00004000)) {
                subBuilder = tschchartseriesbubblestroke_.toBuilder();
              }
              tschchartseriesbubblestroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesbubblestroke_);
                tschchartseriesbubblestroke_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00004000;
              break;
            }
            case 386: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00008000) == 0x00008000)) {
                subBuilder = tschchartserieslinestroke_.toBuilder();
              }
              tschchartserieslinestroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartserieslinestroke_);
                tschchartserieslinestroke_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00008000;
              break;
            }
            case 394: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00010000) == 0x00010000)) {
                subBuilder = tschchartseriesmixedareastroke_.toBuilder();
              }
              tschchartseriesmixedareastroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesmixedareastroke_);
                tschchartseriesmixedareastroke_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00010000;
              break;
            }
            case 402: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00020000) == 0x00020000)) {
                subBuilder = tschchartseriesmixedcolumnstroke_.toBuilder();
              }
              tschchartseriesmixedcolumnstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesmixedcolumnstroke_);
                tschchartseriesmixedcolumnstroke_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00020000;
              break;
            }
            case 410: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00040000) == 0x00040000)) {
                subBuilder = tschchartseriesmixedlinestroke_.toBuilder();
              }
              tschchartseriesmixedlinestroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesmixedlinestroke_);
                tschchartseriesmixedlinestroke_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00040000;
              break;
            }
            case 418: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00080000) == 0x00080000)) {
                subBuilder = tschchartseriespiestroke_.toBuilder();
              }
              tschchartseriespiestroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriespiestroke_);
                tschchartseriespiestroke_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00080000;
              break;
            }
            case 426: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00100000) == 0x00100000)) {
                subBuilder = tschchartseriesscatterstroke_.toBuilder();
              }
              tschchartseriesscatterstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesscatterstroke_);
                tschchartseriesscatterstroke_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00100000;
              break;
            }
            case 434: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00200000) == 0x00200000)) {
                subBuilder = tschchartseriesareasymbolfill_.toBuilder();
              }
              tschchartseriesareasymbolfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesareasymbolfill_);
                tschchartseriesareasymbolfill_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00200000;
              break;
            }
            case 442: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00400000) == 0x00400000)) {
                subBuilder = tschchartseriesbubblesymbolfill_.toBuilder();
              }
              tschchartseriesbubblesymbolfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesbubblesymbolfill_);
                tschchartseriesbubblesymbolfill_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00400000;
              break;
            }
            case 450: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00800000) == 0x00800000)) {
                subBuilder = tschchartserieslinesymbolfill_.toBuilder();
              }
              tschchartserieslinesymbolfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartserieslinesymbolfill_);
                tschchartserieslinesymbolfill_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00800000;
              break;
            }
            case 458: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x01000000) == 0x01000000)) {
                subBuilder = tschchartseriesmixedareasymbolfill_.toBuilder();
              }
              tschchartseriesmixedareasymbolfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesmixedareasymbolfill_);
                tschchartseriesmixedareasymbolfill_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x01000000;
              break;
            }
            case 466: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x02000000) == 0x02000000)) {
                subBuilder = tschchartseriesmixedlinesymbolfill_.toBuilder();
              }
              tschchartseriesmixedlinesymbolfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesmixedlinesymbolfill_);
                tschchartseriesmixedlinesymbolfill_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x02000000;
              break;
            }
            case 474: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x04000000) == 0x04000000)) {
                subBuilder = tschchartseriesscattersymbolfill_.toBuilder();
              }
              tschchartseriesscattersymbolfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesscattersymbolfill_);
                tschchartseriesscattersymbolfill_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x04000000;
              break;
            }
            case 480: {
              bitField1_ |= 0x08000000;
              tschchartseriesareasymbolfilluseseriesfill_ = input.readBool();
              break;
            }
            case 488: {
              bitField1_ |= 0x10000000;
              tschchartserieslinesymbolfilluseseriesfill_ = input.readBool();
              break;
            }
            case 496: {
              bitField1_ |= 0x20000000;
              tschchartseriesmixedareasymbolfilluseseriesfill_ = input.readBool();
              break;
            }
            case 504: {
              bitField1_ |= 0x40000000;
              tschchartseriesmixedlinesymbolfilluseseriesfill_ = input.readBool();
              break;
            }
            case 512: {
              bitField1_ |= 0x80000000;
              tschchartseriesareasymbolfilluseseriesstroke_ = input.readBool();
              break;
            }
            case 520: {
              bitField2_ |= 0x00000001;
              tschchartseriesbubblesymbolfilluseseriesstroke_ = input.readBool();
              break;
            }
            case 528: {
              bitField2_ |= 0x00000002;
              tschchartserieslinesymbolfilluseseriesstroke_ = input.readBool();
              break;
            }
            case 536: {
              bitField2_ |= 0x00000004;
              tschchartseriesmixedareasymbolfilluseseriesstroke_ = input.readBool();
              break;
            }
            case 544: {
              bitField2_ |= 0x00000008;
              tschchartseriesmixedlinesymbolfilluseseriesstroke_ = input.readBool();
              break;
            }
            case 552: {
              bitField2_ |= 0x00000010;
              tschchartseriesscattersymbolfilluseseriesstroke_ = input.readBool();
              break;
            }
            case 565: {
              bitField2_ |= 0x00000020;
              tschchartseriesareasymbolsize_ = input.readFloat();
              break;
            }
            case 573: {
              bitField2_ |= 0x00000040;
              tschchartserieslinesymbolsize_ = input.readFloat();
              break;
            }
            case 581: {
              bitField2_ |= 0x00000080;
              tschchartseriesmixedareasymbolsize_ = input.readFloat();
              break;
            }
            case 589: {
              bitField2_ |= 0x00000100;
              tschchartseriesmixedlinesymbolsize_ = input.readFloat();
              break;
            }
            case 597: {
              bitField2_ |= 0x00000200;
              tschchartseriesscattersymbolsize_ = input.readFloat();
              break;
            }
            case 602: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x00000400) == 0x00000400)) {
                subBuilder = tschchartseriesareasymbolstroke_.toBuilder();
              }
              tschchartseriesareasymbolstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesareasymbolstroke_);
                tschchartseriesareasymbolstroke_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00000400;
              break;
            }
            case 610: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x00000800) == 0x00000800)) {
                subBuilder = tschchartseriesbubblesymbolstroke_.toBuilder();
              }
              tschchartseriesbubblesymbolstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesbubblesymbolstroke_);
                tschchartseriesbubblesymbolstroke_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00000800;
              break;
            }
            case 618: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x00001000) == 0x00001000)) {
                subBuilder = tschchartserieslinesymbolstroke_.toBuilder();
              }
              tschchartserieslinesymbolstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartserieslinesymbolstroke_);
                tschchartserieslinesymbolstroke_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00001000;
              break;
            }
            case 626: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x00002000) == 0x00002000)) {
                subBuilder = tschchartseriesmixedareasymbolstroke_.toBuilder();
              }
              tschchartseriesmixedareasymbolstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesmixedareasymbolstroke_);
                tschchartseriesmixedareasymbolstroke_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00002000;
              break;
            }
            case 634: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x00004000) == 0x00004000)) {
                subBuilder = tschchartseriesmixedlinesymbolstroke_.toBuilder();
              }
              tschchartseriesmixedlinesymbolstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesmixedlinesymbolstroke_);
                tschchartseriesmixedlinesymbolstroke_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00004000;
              break;
            }
            case 642: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x00008000) == 0x00008000)) {
                subBuilder = tschchartseriesscattersymbolstroke_.toBuilder();
              }
              tschchartseriesscattersymbolstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesscattersymbolstroke_);
                tschchartseriesscattersymbolstroke_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00008000;
              break;
            }
            case 653: {
              bitField2_ |= 0x00010000;
              tschchartseriesdefaulttrendlineequationopacity_ = input.readFloat();
              break;
            }
            case 656: {
              bitField2_ |= 0x00020000;
              tschchartseriesdefaulttrendlineequationparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 669: {
              bitField2_ |= 0x00040000;
              tschchartseriesdefaulttrendlinersquaredopacity_ = input.readFloat();
              break;
            }
            case 672: {
              bitField2_ |= 0x00080000;
              tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 682: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x00100000) == 0x00100000)) {
                subBuilder = tschchartseriesdefaulttrendlineshadow_.toBuilder();
              }
              tschchartseriesdefaulttrendlineshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaulttrendlineshadow_);
                tschchartseriesdefaulttrendlineshadow_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00100000;
              break;
            }
            case 690: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x00200000) == 0x00200000)) {
                subBuilder = tschchartseriesdefaulttrendlinestroke_.toBuilder();
              }
              tschchartseriesdefaulttrendlinestroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaulttrendlinestroke_);
                tschchartseriesdefaulttrendlinestroke_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00200000;
              break;
            }
            case 696: {
              bitField2_ |= 0x00400000;
              tschchartseriesareavaluelabelposition_ = input.readInt32();
              break;
            }
            case 704: {
              bitField2_ |= 0x00800000;
              tschchartseriesbarvaluelabelposition_ = input.readInt32();
              break;
            }
            case 712: {
              bitField2_ |= 0x01000000;
              tschchartseriesbubblevaluelabelposition_ = input.readInt32();
              break;
            }
            case 720: {
              bitField2_ |= 0x02000000;
              tschchartseriesdefaultvaluelabelposition_ = input.readInt32();
              break;
            }
            case 728: {
              bitField2_ |= 0x04000000;
              tschchartserieslinevaluelabelposition_ = input.readInt32();
              break;
            }
            case 736: {
              bitField2_ |= 0x08000000;
              tschchartseriesmixedareavaluelabelposition_ = input.readInt32();
              break;
            }
            case 744: {
              bitField2_ |= 0x10000000;
              tschchartseriesmixedcolumnvaluelabelposition_ = input.readInt32();
              break;
            }
            case 752: {
              bitField2_ |= 0x20000000;
              tschchartseriesmixedlinevaluelabelposition_ = input.readInt32();
              break;
            }
            case 760: {
              bitField2_ |= 0x40000000;
              tschchartseriesscattervaluelabelposition_ = input.readInt32();
              break;
            }
            case 768: {
              bitField2_ |= 0x80000000;
              tschchartseriesstackedareavaluelabelposition_ = input.readInt32();
              break;
            }
            case 776: {
              bitField3_ |= 0x00000001;
              tschchartseriesstackedbarvaluelabelposition_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartSeriesStyleArchive_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartSeriesStyleArchive_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive.class, org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive.Builder.class);
    }

    private int bitField0_;
    private int bitField1_;
    private int bitField2_;
    private int bitField3_;
    public static final int TSCHCHARTSERIESDEFAULTERRORBARLINEEND_FIELD_NUMBER = 1;
    private org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive tschchartseriesdefaulterrorbarlineend_;
    /**
     * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 1;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarlineend() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 1;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive getTschchartseriesdefaulterrorbarlineend() {
      return tschchartseriesdefaulterrorbarlineend_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarlineend_;
    }
    /**
     * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 1;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchiveOrBuilder getTschchartseriesdefaulterrorbarlineendOrBuilder() {
      return tschchartseriesdefaulterrorbarlineend_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarlineend_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARLINEENDSCATTERX_FIELD_NUMBER = 2;
    private org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx_;
    /**
     * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 2;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarlineendscatterx() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 2;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive getTschchartseriesdefaulterrorbarlineendscatterx() {
      return tschchartseriesdefaulterrorbarlineendscatterx_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarlineendscatterx_;
    }
    /**
     * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 2;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchiveOrBuilder getTschchartseriesdefaulterrorbarlineendscatterxOrBuilder() {
      return tschchartseriesdefaulterrorbarlineendscatterx_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarlineendscatterx_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARSHADOW_FIELD_NUMBER = 3;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesdefaulterrorbarshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 3;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarshadow() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 3;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesdefaulterrorbarshadow() {
      return tschchartseriesdefaulterrorbarshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 3;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesdefaulterrorbarshadowOrBuilder() {
      return tschchartseriesdefaulterrorbarshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarshadow_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARSTROKE_FIELD_NUMBER = 4;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesdefaulterrorbarstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 4;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarstroke() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 4;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesdefaulterrorbarstroke() {
      return tschchartseriesdefaulterrorbarstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 4;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesdefaulterrorbarstrokeOrBuilder() {
      return tschchartseriesdefaulterrorbarstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarstroke_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARSTROKESCATTERX_FIELD_NUMBER = 5;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 5;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarstrokescatterx() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 5;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesdefaulterrorbarstrokescatterx() {
      return tschchartseriesdefaulterrorbarstrokescatterx_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarstrokescatterx_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 5;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesdefaulterrorbarstrokescatterxOrBuilder() {
      return tschchartseriesdefaulterrorbarstrokescatterx_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarstrokescatterx_;
    }

    public static final int TSCHCHARTSERIES3DAREAFILL_FIELD_NUMBER = 6;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseries3Dareafill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dareafill = 6;</code>
     */
    public boolean hasTschchartseries3Dareafill() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dareafill = 6;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dareafill() {
      return tschchartseries3Dareafill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dareafill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dareafill = 6;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DareafillOrBuilder() {
      return tschchartseries3Dareafill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dareafill_;
    }

    public static final int TSCHCHARTSERIES3DBARFILL_FIELD_NUMBER = 7;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseries3Dbarfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 7;</code>
     */
    public boolean hasTschchartseries3Dbarfill() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 7;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dbarfill() {
      return tschchartseries3Dbarfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dbarfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 7;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DbarfillOrBuilder() {
      return tschchartseries3Dbarfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dbarfill_;
    }

    public static final int TSCHCHARTSERIES3DCOLUMNFILL_FIELD_NUMBER = 8;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseries3Dcolumnfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 8;</code>
     */
    public boolean hasTschchartseries3Dcolumnfill() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 8;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dcolumnfill() {
      return tschchartseries3Dcolumnfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dcolumnfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 8;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DcolumnfillOrBuilder() {
      return tschchartseries3Dcolumnfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dcolumnfill_;
    }

    public static final int TSCHCHARTSERIES3DLINEFILL_FIELD_NUMBER = 9;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseries3Dlinefill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 9;</code>
     */
    public boolean hasTschchartseries3Dlinefill() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 9;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dlinefill() {
      return tschchartseries3Dlinefill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dlinefill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 9;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DlinefillOrBuilder() {
      return tschchartseries3Dlinefill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dlinefill_;
    }

    public static final int TSCHCHARTSERIES3DPIEFILL_FIELD_NUMBER = 10;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseries3Dpiefill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 10;</code>
     */
    public boolean hasTschchartseries3Dpiefill() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 10;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dpiefill() {
      return tschchartseries3Dpiefill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dpiefill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 10;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DpiefillOrBuilder() {
      return tschchartseries3Dpiefill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dpiefill_;
    }

    public static final int TSCHCHARTSERIESAREAFILL_FIELD_NUMBER = 11;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesareafill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseriesareafill = 11;</code>
     */
    public boolean hasTschchartseriesareafill() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesareafill = 11;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesareafill() {
      return tschchartseriesareafill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesareafill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesareafill = 11;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesareafillOrBuilder() {
      return tschchartseriesareafill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesareafill_;
    }

    public static final int TSCHCHARTSERIESBARFILL_FIELD_NUMBER = 12;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesbarfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseriesbarfill = 12;</code>
     */
    public boolean hasTschchartseriesbarfill() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesbarfill = 12;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesbarfill() {
      return tschchartseriesbarfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesbarfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesbarfill = 12;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesbarfillOrBuilder() {
      return tschchartseriesbarfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesbarfill_;
    }

    public static final int TSCHCHARTSERIESCOLUMNFILL_FIELD_NUMBER = 13;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriescolumnfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 13;</code>
     */
    public boolean hasTschchartseriescolumnfill() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 13;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriescolumnfill() {
      return tschchartseriescolumnfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriescolumnfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 13;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriescolumnfillOrBuilder() {
      return tschchartseriescolumnfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriescolumnfill_;
    }

    public static final int TSCHCHARTSERIESDEFAULTFILL_FIELD_NUMBER = 14;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesdefaultfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 14;</code>
     */
    public boolean hasTschchartseriesdefaultfill() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 14;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesdefaultfill() {
      return tschchartseriesdefaultfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesdefaultfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 14;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesdefaultfillOrBuilder() {
      return tschchartseriesdefaultfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesdefaultfill_;
    }

    public static final int TSCHCHARTSERIESMIXEDAREAFILL_FIELD_NUMBER = 15;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesmixedareafill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 15;</code>
     */
    public boolean hasTschchartseriesmixedareafill() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 15;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesmixedareafill() {
      return tschchartseriesmixedareafill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedareafill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 15;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesmixedareafillOrBuilder() {
      return tschchartseriesmixedareafill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedareafill_;
    }

    public static final int TSCHCHARTSERIESMIXEDCOLUMNFILL_FIELD_NUMBER = 16;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesmixedcolumnfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 16;</code>
     */
    public boolean hasTschchartseriesmixedcolumnfill() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 16;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesmixedcolumnfill() {
      return tschchartseriesmixedcolumnfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedcolumnfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 16;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesmixedcolumnfillOrBuilder() {
      return tschchartseriesmixedcolumnfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedcolumnfill_;
    }

    public static final int TSCHCHARTSERIESPIEFILL_FIELD_NUMBER = 17;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriespiefill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseriespiefill = 17;</code>
     */
    public boolean hasTschchartseriespiefill() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriespiefill = 17;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriespiefill() {
      return tschchartseriespiefill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriespiefill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriespiefill = 17;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriespiefillOrBuilder() {
      return tschchartseriespiefill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriespiefill_;
    }

    public static final int TSCHCHARTSERIESAREALABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 18;
    private int tschchartseriesarealabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartseriesarealabelparagraphstyleindex = 18;</code>
     */
    public boolean hasTschchartseriesarealabelparagraphstyleindex() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 tschchartseriesarealabelparagraphstyleindex = 18;</code>
     */
    public int getTschchartseriesarealabelparagraphstyleindex() {
      return tschchartseriesarealabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIESBARLABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 19;
    private int tschchartseriesbarlabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartseriesbarlabelparagraphstyleindex = 19;</code>
     */
    public boolean hasTschchartseriesbarlabelparagraphstyleindex() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 tschchartseriesbarlabelparagraphstyleindex = 19;</code>
     */
    public int getTschchartseriesbarlabelparagraphstyleindex() {
      return tschchartseriesbarlabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIESDEFAULTLABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 20;
    private int tschchartseriesdefaultlabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartseriesdefaultlabelparagraphstyleindex = 20;</code>
     */
    public boolean hasTschchartseriesdefaultlabelparagraphstyleindex() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 tschchartseriesdefaultlabelparagraphstyleindex = 20;</code>
     */
    public int getTschchartseriesdefaultlabelparagraphstyleindex() {
      return tschchartseriesdefaultlabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIESLINELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 21;
    private int tschchartserieslinelabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartserieslinelabelparagraphstyleindex = 21;</code>
     */
    public boolean hasTschchartserieslinelabelparagraphstyleindex() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 tschchartserieslinelabelparagraphstyleindex = 21;</code>
     */
    public int getTschchartserieslinelabelparagraphstyleindex() {
      return tschchartserieslinelabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIESMIXEDLABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 22;
    private int tschchartseriesmixedlabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartseriesmixedlabelparagraphstyleindex = 22;</code>
     */
    public boolean hasTschchartseriesmixedlabelparagraphstyleindex() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int32 tschchartseriesmixedlabelparagraphstyleindex = 22;</code>
     */
    public int getTschchartseriesmixedlabelparagraphstyleindex() {
      return tschchartseriesmixedlabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIESPIELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 23;
    private int tschchartseriespielabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartseriespielabelparagraphstyleindex = 23;</code>
     */
    public boolean hasTschchartseriespielabelparagraphstyleindex() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int32 tschchartseriespielabelparagraphstyleindex = 23;</code>
     */
    public int getTschchartseriespielabelparagraphstyleindex() {
      return tschchartseriespielabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIESDEFAULTOPACITY_FIELD_NUMBER = 24;
    private float tschchartseriesdefaultopacity_;
    /**
     * <code>optional float tschchartseriesdefaultopacity = 24;</code>
     */
    public boolean hasTschchartseriesdefaultopacity() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional float tschchartseriesdefaultopacity = 24;</code>
     */
    public float getTschchartseriesdefaultopacity() {
      return tschchartseriesdefaultopacity_;
    }

    public static final int TSCHCHARTSERIESAREAOUTSIDELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 25;
    private int tschchartseriesareaoutsidelabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartseriesareaoutsidelabelparagraphstyleindex = 25;</code>
     */
    public boolean hasTschchartseriesareaoutsidelabelparagraphstyleindex() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int32 tschchartseriesareaoutsidelabelparagraphstyleindex = 25;</code>
     */
    public int getTschchartseriesareaoutsidelabelparagraphstyleindex() {
      return tschchartseriesareaoutsidelabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIESBAROUTSIDELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 26;
    private int tschchartseriesbaroutsidelabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartseriesbaroutsidelabelparagraphstyleindex = 26;</code>
     */
    public boolean hasTschchartseriesbaroutsidelabelparagraphstyleindex() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int32 tschchartseriesbaroutsidelabelparagraphstyleindex = 26;</code>
     */
    public int getTschchartseriesbaroutsidelabelparagraphstyleindex() {
      return tschchartseriesbaroutsidelabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIESDEFAULTOUTSIDELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 27;
    private int tschchartseriesdefaultoutsidelabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartseriesdefaultoutsidelabelparagraphstyleindex = 27;</code>
     */
    public boolean hasTschchartseriesdefaultoutsidelabelparagraphstyleindex() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int32 tschchartseriesdefaultoutsidelabelparagraphstyleindex = 27;</code>
     */
    public int getTschchartseriesdefaultoutsidelabelparagraphstyleindex() {
      return tschchartseriesdefaultoutsidelabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIESMIXEDOUTSIDELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 28;
    private int tschchartseriesmixedoutsidelabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartseriesmixedoutsidelabelparagraphstyleindex = 28;</code>
     */
    public boolean hasTschchartseriesmixedoutsidelabelparagraphstyleindex() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int32 tschchartseriesmixedoutsidelabelparagraphstyleindex = 28;</code>
     */
    public int getTschchartseriesmixedoutsidelabelparagraphstyleindex() {
      return tschchartseriesmixedoutsidelabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIESPIEOUTSIDELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 29;
    private int tschchartseriespieoutsidelabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartseriespieoutsidelabelparagraphstyleindex = 29;</code>
     */
    public boolean hasTschchartseriespieoutsidelabelparagraphstyleindex() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int32 tschchartseriespieoutsidelabelparagraphstyleindex = 29;</code>
     */
    public int getTschchartseriespieoutsidelabelparagraphstyleindex() {
      return tschchartseriespieoutsidelabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIES3DAREASHADOW_FIELD_NUMBER = 30;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseries3Dareashadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 30;</code>
     */
    public boolean hasTschchartseries3Dareashadow() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 30;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dareashadow() {
      return tschchartseries3Dareashadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dareashadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 30;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DareashadowOrBuilder() {
      return tschchartseries3Dareashadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dareashadow_;
    }

    public static final int TSCHCHARTSERIES3DBARSHADOW_FIELD_NUMBER = 31;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseries3Dbarshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 31;</code>
     */
    public boolean hasTschchartseries3Dbarshadow() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 31;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dbarshadow() {
      return tschchartseries3Dbarshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dbarshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 31;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DbarshadowOrBuilder() {
      return tschchartseries3Dbarshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dbarshadow_;
    }

    public static final int TSCHCHARTSERIES3DCOLUMNSHADOW_FIELD_NUMBER = 32;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseries3Dcolumnshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 32;</code>
     */
    public boolean hasTschchartseries3Dcolumnshadow() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 32;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dcolumnshadow() {
      return tschchartseries3Dcolumnshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dcolumnshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 32;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DcolumnshadowOrBuilder() {
      return tschchartseries3Dcolumnshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dcolumnshadow_;
    }

    public static final int TSCHCHARTSERIES3DLINESHADOW_FIELD_NUMBER = 33;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseries3Dlineshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 33;</code>
     */
    public boolean hasTschchartseries3Dlineshadow() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 33;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dlineshadow() {
      return tschchartseries3Dlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dlineshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 33;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DlineshadowOrBuilder() {
      return tschchartseries3Dlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dlineshadow_;
    }

    public static final int TSCHCHARTSERIES3DPIESHADOW_FIELD_NUMBER = 34;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseries3Dpieshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 34;</code>
     */
    public boolean hasTschchartseries3Dpieshadow() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 34;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dpieshadow() {
      return tschchartseries3Dpieshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dpieshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 34;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DpieshadowOrBuilder() {
      return tschchartseries3Dpieshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dpieshadow_;
    }

    public static final int TSCHCHARTSERIESAREASHADOW_FIELD_NUMBER = 35;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesareashadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 35;</code>
     */
    public boolean hasTschchartseriesareashadow() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 35;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesareashadow() {
      return tschchartseriesareashadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesareashadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 35;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesareashadowOrBuilder() {
      return tschchartseriesareashadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesareashadow_;
    }

    public static final int TSCHCHARTSERIESBARSHADOW_FIELD_NUMBER = 36;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesbarshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 36;</code>
     */
    public boolean hasTschchartseriesbarshadow() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 36;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesbarshadow() {
      return tschchartseriesbarshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesbarshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 36;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesbarshadowOrBuilder() {
      return tschchartseriesbarshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesbarshadow_;
    }

    public static final int TSCHCHARTSERIESBUBBLESHADOW_FIELD_NUMBER = 37;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesbubbleshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 37;</code>
     */
    public boolean hasTschchartseriesbubbleshadow() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 37;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesbubbleshadow() {
      return tschchartseriesbubbleshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesbubbleshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 37;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesbubbleshadowOrBuilder() {
      return tschchartseriesbubbleshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesbubbleshadow_;
    }

    public static final int TSCHCHARTSERIESDEFAULTSHADOW_FIELD_NUMBER = 38;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesdefaultshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 38;</code>
     */
    public boolean hasTschchartseriesdefaultshadow() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 38;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesdefaultshadow() {
      return tschchartseriesdefaultshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesdefaultshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 38;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesdefaultshadowOrBuilder() {
      return tschchartseriesdefaultshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesdefaultshadow_;
    }

    public static final int TSCHCHARTSERIESLINESHADOW_FIELD_NUMBER = 39;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartserieslineshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 39;</code>
     */
    public boolean hasTschchartserieslineshadow() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 39;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartserieslineshadow() {
      return tschchartserieslineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartserieslineshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 39;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartserieslineshadowOrBuilder() {
      return tschchartserieslineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartserieslineshadow_;
    }

    public static final int TSCHCHARTSERIESMIXEDAREASHADOW_FIELD_NUMBER = 40;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesmixedareashadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 40;</code>
     */
    public boolean hasTschchartseriesmixedareashadow() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 40;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesmixedareashadow() {
      return tschchartseriesmixedareashadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesmixedareashadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 40;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesmixedareashadowOrBuilder() {
      return tschchartseriesmixedareashadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesmixedareashadow_;
    }

    public static final int TSCHCHARTSERIESMIXEDCOLUMNSHADOW_FIELD_NUMBER = 41;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesmixedcolumnshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 41;</code>
     */
    public boolean hasTschchartseriesmixedcolumnshadow() {
      return ((bitField1_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 41;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesmixedcolumnshadow() {
      return tschchartseriesmixedcolumnshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesmixedcolumnshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 41;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesmixedcolumnshadowOrBuilder() {
      return tschchartseriesmixedcolumnshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesmixedcolumnshadow_;
    }

    public static final int TSCHCHARTSERIESMIXEDLINESHADOW_FIELD_NUMBER = 42;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesmixedlineshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 42;</code>
     */
    public boolean hasTschchartseriesmixedlineshadow() {
      return ((bitField1_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 42;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesmixedlineshadow() {
      return tschchartseriesmixedlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesmixedlineshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 42;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesmixedlineshadowOrBuilder() {
      return tschchartseriesmixedlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesmixedlineshadow_;
    }

    public static final int TSCHCHARTSERIESPIESHADOW_FIELD_NUMBER = 43;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriespieshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 43;</code>
     */
    public boolean hasTschchartseriespieshadow() {
      return ((bitField1_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 43;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriespieshadow() {
      return tschchartseriespieshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriespieshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 43;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriespieshadowOrBuilder() {
      return tschchartseriespieshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriespieshadow_;
    }

    public static final int TSCHCHARTSERIESSCATTERSHADOW_FIELD_NUMBER = 44;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesscattershadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 44;</code>
     */
    public boolean hasTschchartseriesscattershadow() {
      return ((bitField1_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 44;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesscattershadow() {
      return tschchartseriesscattershadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesscattershadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 44;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesscattershadowOrBuilder() {
      return tschchartseriesscattershadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesscattershadow_;
    }

    public static final int TSCHCHARTSERIESAREASTROKE_FIELD_NUMBER = 45;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesareastroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 45;</code>
     */
    public boolean hasTschchartseriesareastroke() {
      return ((bitField1_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 45;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesareastroke() {
      return tschchartseriesareastroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesareastroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 45;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesareastrokeOrBuilder() {
      return tschchartseriesareastroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesareastroke_;
    }

    public static final int TSCHCHARTSERIESBARSTROKE_FIELD_NUMBER = 46;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesbarstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 46;</code>
     */
    public boolean hasTschchartseriesbarstroke() {
      return ((bitField1_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 46;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesbarstroke() {
      return tschchartseriesbarstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesbarstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 46;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesbarstrokeOrBuilder() {
      return tschchartseriesbarstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesbarstroke_;
    }

    public static final int TSCHCHARTSERIESBUBBLESTROKE_FIELD_NUMBER = 47;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesbubblestroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 47;</code>
     */
    public boolean hasTschchartseriesbubblestroke() {
      return ((bitField1_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 47;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesbubblestroke() {
      return tschchartseriesbubblestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesbubblestroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 47;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesbubblestrokeOrBuilder() {
      return tschchartseriesbubblestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesbubblestroke_;
    }

    public static final int TSCHCHARTSERIESLINESTROKE_FIELD_NUMBER = 48;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartserieslinestroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 48;</code>
     */
    public boolean hasTschchartserieslinestroke() {
      return ((bitField1_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 48;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartserieslinestroke() {
      return tschchartserieslinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartserieslinestroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 48;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartserieslinestrokeOrBuilder() {
      return tschchartserieslinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartserieslinestroke_;
    }

    public static final int TSCHCHARTSERIESMIXEDAREASTROKE_FIELD_NUMBER = 49;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesmixedareastroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 49;</code>
     */
    public boolean hasTschchartseriesmixedareastroke() {
      return ((bitField1_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 49;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedareastroke() {
      return tschchartseriesmixedareastroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedareastroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 49;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedareastrokeOrBuilder() {
      return tschchartseriesmixedareastroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedareastroke_;
    }

    public static final int TSCHCHARTSERIESMIXEDCOLUMNSTROKE_FIELD_NUMBER = 50;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesmixedcolumnstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 50;</code>
     */
    public boolean hasTschchartseriesmixedcolumnstroke() {
      return ((bitField1_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 50;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedcolumnstroke() {
      return tschchartseriesmixedcolumnstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedcolumnstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 50;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedcolumnstrokeOrBuilder() {
      return tschchartseriesmixedcolumnstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedcolumnstroke_;
    }

    public static final int TSCHCHARTSERIESMIXEDLINESTROKE_FIELD_NUMBER = 51;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesmixedlinestroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 51;</code>
     */
    public boolean hasTschchartseriesmixedlinestroke() {
      return ((bitField1_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 51;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedlinestroke() {
      return tschchartseriesmixedlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedlinestroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 51;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedlinestrokeOrBuilder() {
      return tschchartseriesmixedlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedlinestroke_;
    }

    public static final int TSCHCHARTSERIESPIESTROKE_FIELD_NUMBER = 52;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriespiestroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 52;</code>
     */
    public boolean hasTschchartseriespiestroke() {
      return ((bitField1_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 52;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriespiestroke() {
      return tschchartseriespiestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriespiestroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 52;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriespiestrokeOrBuilder() {
      return tschchartseriespiestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriespiestroke_;
    }

    public static final int TSCHCHARTSERIESSCATTERSTROKE_FIELD_NUMBER = 53;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesscatterstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 53;</code>
     */
    public boolean hasTschchartseriesscatterstroke() {
      return ((bitField1_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 53;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesscatterstroke() {
      return tschchartseriesscatterstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesscatterstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 53;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesscatterstrokeOrBuilder() {
      return tschchartseriesscatterstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesscatterstroke_;
    }

    public static final int TSCHCHARTSERIESAREASYMBOLFILL_FIELD_NUMBER = 54;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesareasymbolfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 54;</code>
     */
    public boolean hasTschchartseriesareasymbolfill() {
      return ((bitField1_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 54;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesareasymbolfill() {
      return tschchartseriesareasymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesareasymbolfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 54;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesareasymbolfillOrBuilder() {
      return tschchartseriesareasymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesareasymbolfill_;
    }

    public static final int TSCHCHARTSERIESBUBBLESYMBOLFILL_FIELD_NUMBER = 55;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesbubblesymbolfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 55;</code>
     */
    public boolean hasTschchartseriesbubblesymbolfill() {
      return ((bitField1_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 55;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesbubblesymbolfill() {
      return tschchartseriesbubblesymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesbubblesymbolfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 55;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesbubblesymbolfillOrBuilder() {
      return tschchartseriesbubblesymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesbubblesymbolfill_;
    }

    public static final int TSCHCHARTSERIESLINESYMBOLFILL_FIELD_NUMBER = 56;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartserieslinesymbolfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 56;</code>
     */
    public boolean hasTschchartserieslinesymbolfill() {
      return ((bitField1_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 56;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartserieslinesymbolfill() {
      return tschchartserieslinesymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartserieslinesymbolfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 56;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartserieslinesymbolfillOrBuilder() {
      return tschchartserieslinesymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartserieslinesymbolfill_;
    }

    public static final int TSCHCHARTSERIESMIXEDAREASYMBOLFILL_FIELD_NUMBER = 57;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesmixedareasymbolfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 57;</code>
     */
    public boolean hasTschchartseriesmixedareasymbolfill() {
      return ((bitField1_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 57;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesmixedareasymbolfill() {
      return tschchartseriesmixedareasymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedareasymbolfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 57;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesmixedareasymbolfillOrBuilder() {
      return tschchartseriesmixedareasymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedareasymbolfill_;
    }

    public static final int TSCHCHARTSERIESMIXEDLINESYMBOLFILL_FIELD_NUMBER = 58;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesmixedlinesymbolfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 58;</code>
     */
    public boolean hasTschchartseriesmixedlinesymbolfill() {
      return ((bitField1_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 58;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesmixedlinesymbolfill() {
      return tschchartseriesmixedlinesymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedlinesymbolfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 58;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesmixedlinesymbolfillOrBuilder() {
      return tschchartseriesmixedlinesymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedlinesymbolfill_;
    }

    public static final int TSCHCHARTSERIESSCATTERSYMBOLFILL_FIELD_NUMBER = 59;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesscattersymbolfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 59;</code>
     */
    public boolean hasTschchartseriesscattersymbolfill() {
      return ((bitField1_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 59;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesscattersymbolfill() {
      return tschchartseriesscattersymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesscattersymbolfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 59;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesscattersymbolfillOrBuilder() {
      return tschchartseriesscattersymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesscattersymbolfill_;
    }

    public static final int TSCHCHARTSERIESAREASYMBOLFILLUSESERIESFILL_FIELD_NUMBER = 60;
    private boolean tschchartseriesareasymbolfilluseseriesfill_;
    /**
     * <code>optional bool tschchartseriesareasymbolfilluseseriesfill = 60;</code>
     */
    public boolean hasTschchartseriesareasymbolfilluseseriesfill() {
      return ((bitField1_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional bool tschchartseriesareasymbolfilluseseriesfill = 60;</code>
     */
    public boolean getTschchartseriesareasymbolfilluseseriesfill() {
      return tschchartseriesareasymbolfilluseseriesfill_;
    }

    public static final int TSCHCHARTSERIESLINESYMBOLFILLUSESERIESFILL_FIELD_NUMBER = 61;
    private boolean tschchartserieslinesymbolfilluseseriesfill_;
    /**
     * <code>optional bool tschchartserieslinesymbolfilluseseriesfill = 61;</code>
     */
    public boolean hasTschchartserieslinesymbolfilluseseriesfill() {
      return ((bitField1_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional bool tschchartserieslinesymbolfilluseseriesfill = 61;</code>
     */
    public boolean getTschchartserieslinesymbolfilluseseriesfill() {
      return tschchartserieslinesymbolfilluseseriesfill_;
    }

    public static final int TSCHCHARTSERIESMIXEDAREASYMBOLFILLUSESERIESFILL_FIELD_NUMBER = 62;
    private boolean tschchartseriesmixedareasymbolfilluseseriesfill_;
    /**
     * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesfill = 62;</code>
     */
    public boolean hasTschchartseriesmixedareasymbolfilluseseriesfill() {
      return ((bitField1_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesfill = 62;</code>
     */
    public boolean getTschchartseriesmixedareasymbolfilluseseriesfill() {
      return tschchartseriesmixedareasymbolfilluseseriesfill_;
    }

    public static final int TSCHCHARTSERIESMIXEDLINESYMBOLFILLUSESERIESFILL_FIELD_NUMBER = 63;
    private boolean tschchartseriesmixedlinesymbolfilluseseriesfill_;
    /**
     * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesfill = 63;</code>
     */
    public boolean hasTschchartseriesmixedlinesymbolfilluseseriesfill() {
      return ((bitField1_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesfill = 63;</code>
     */
    public boolean getTschchartseriesmixedlinesymbolfilluseseriesfill() {
      return tschchartseriesmixedlinesymbolfilluseseriesfill_;
    }

    public static final int TSCHCHARTSERIESAREASYMBOLFILLUSESERIESSTROKE_FIELD_NUMBER = 64;
    private boolean tschchartseriesareasymbolfilluseseriesstroke_;
    /**
     * <code>optional bool tschchartseriesareasymbolfilluseseriesstroke = 64;</code>
     */
    public boolean hasTschchartseriesareasymbolfilluseseriesstroke() {
      return ((bitField1_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional bool tschchartseriesareasymbolfilluseseriesstroke = 64;</code>
     */
    public boolean getTschchartseriesareasymbolfilluseseriesstroke() {
      return tschchartseriesareasymbolfilluseseriesstroke_;
    }

    public static final int TSCHCHARTSERIESBUBBLESYMBOLFILLUSESERIESSTROKE_FIELD_NUMBER = 65;
    private boolean tschchartseriesbubblesymbolfilluseseriesstroke_;
    /**
     * <code>optional bool tschchartseriesbubblesymbolfilluseseriesstroke = 65;</code>
     */
    public boolean hasTschchartseriesbubblesymbolfilluseseriesstroke() {
      return ((bitField2_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool tschchartseriesbubblesymbolfilluseseriesstroke = 65;</code>
     */
    public boolean getTschchartseriesbubblesymbolfilluseseriesstroke() {
      return tschchartseriesbubblesymbolfilluseseriesstroke_;
    }

    public static final int TSCHCHARTSERIESLINESYMBOLFILLUSESERIESSTROKE_FIELD_NUMBER = 66;
    private boolean tschchartserieslinesymbolfilluseseriesstroke_;
    /**
     * <code>optional bool tschchartserieslinesymbolfilluseseriesstroke = 66;</code>
     */
    public boolean hasTschchartserieslinesymbolfilluseseriesstroke() {
      return ((bitField2_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool tschchartserieslinesymbolfilluseseriesstroke = 66;</code>
     */
    public boolean getTschchartserieslinesymbolfilluseseriesstroke() {
      return tschchartserieslinesymbolfilluseseriesstroke_;
    }

    public static final int TSCHCHARTSERIESMIXEDAREASYMBOLFILLUSESERIESSTROKE_FIELD_NUMBER = 67;
    private boolean tschchartseriesmixedareasymbolfilluseseriesstroke_;
    /**
     * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesstroke = 67;</code>
     */
    public boolean hasTschchartseriesmixedareasymbolfilluseseriesstroke() {
      return ((bitField2_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesstroke = 67;</code>
     */
    public boolean getTschchartseriesmixedareasymbolfilluseseriesstroke() {
      return tschchartseriesmixedareasymbolfilluseseriesstroke_;
    }

    public static final int TSCHCHARTSERIESMIXEDLINESYMBOLFILLUSESERIESSTROKE_FIELD_NUMBER = 68;
    private boolean tschchartseriesmixedlinesymbolfilluseseriesstroke_;
    /**
     * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesstroke = 68;</code>
     */
    public boolean hasTschchartseriesmixedlinesymbolfilluseseriesstroke() {
      return ((bitField2_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesstroke = 68;</code>
     */
    public boolean getTschchartseriesmixedlinesymbolfilluseseriesstroke() {
      return tschchartseriesmixedlinesymbolfilluseseriesstroke_;
    }

    public static final int TSCHCHARTSERIESSCATTERSYMBOLFILLUSESERIESSTROKE_FIELD_NUMBER = 69;
    private boolean tschchartseriesscattersymbolfilluseseriesstroke_;
    /**
     * <code>optional bool tschchartseriesscattersymbolfilluseseriesstroke = 69;</code>
     */
    public boolean hasTschchartseriesscattersymbolfilluseseriesstroke() {
      return ((bitField2_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool tschchartseriesscattersymbolfilluseseriesstroke = 69;</code>
     */
    public boolean getTschchartseriesscattersymbolfilluseseriesstroke() {
      return tschchartseriesscattersymbolfilluseseriesstroke_;
    }

    public static final int TSCHCHARTSERIESAREASYMBOLSIZE_FIELD_NUMBER = 70;
    private float tschchartseriesareasymbolsize_;
    /**
     * <code>optional float tschchartseriesareasymbolsize = 70;</code>
     */
    public boolean hasTschchartseriesareasymbolsize() {
      return ((bitField2_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float tschchartseriesareasymbolsize = 70;</code>
     */
    public float getTschchartseriesareasymbolsize() {
      return tschchartseriesareasymbolsize_;
    }

    public static final int TSCHCHARTSERIESLINESYMBOLSIZE_FIELD_NUMBER = 71;
    private float tschchartserieslinesymbolsize_;
    /**
     * <code>optional float tschchartserieslinesymbolsize = 71;</code>
     */
    public boolean hasTschchartserieslinesymbolsize() {
      return ((bitField2_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float tschchartserieslinesymbolsize = 71;</code>
     */
    public float getTschchartserieslinesymbolsize() {
      return tschchartserieslinesymbolsize_;
    }

    public static final int TSCHCHARTSERIESMIXEDAREASYMBOLSIZE_FIELD_NUMBER = 72;
    private float tschchartseriesmixedareasymbolsize_;
    /**
     * <code>optional float tschchartseriesmixedareasymbolsize = 72;</code>
     */
    public boolean hasTschchartseriesmixedareasymbolsize() {
      return ((bitField2_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float tschchartseriesmixedareasymbolsize = 72;</code>
     */
    public float getTschchartseriesmixedareasymbolsize() {
      return tschchartseriesmixedareasymbolsize_;
    }

    public static final int TSCHCHARTSERIESMIXEDLINESYMBOLSIZE_FIELD_NUMBER = 73;
    private float tschchartseriesmixedlinesymbolsize_;
    /**
     * <code>optional float tschchartseriesmixedlinesymbolsize = 73;</code>
     */
    public boolean hasTschchartseriesmixedlinesymbolsize() {
      return ((bitField2_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float tschchartseriesmixedlinesymbolsize = 73;</code>
     */
    public float getTschchartseriesmixedlinesymbolsize() {
      return tschchartseriesmixedlinesymbolsize_;
    }

    public static final int TSCHCHARTSERIESSCATTERSYMBOLSIZE_FIELD_NUMBER = 74;
    private float tschchartseriesscattersymbolsize_;
    /**
     * <code>optional float tschchartseriesscattersymbolsize = 74;</code>
     */
    public boolean hasTschchartseriesscattersymbolsize() {
      return ((bitField2_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional float tschchartseriesscattersymbolsize = 74;</code>
     */
    public float getTschchartseriesscattersymbolsize() {
      return tschchartseriesscattersymbolsize_;
    }

    public static final int TSCHCHARTSERIESAREASYMBOLSTROKE_FIELD_NUMBER = 75;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesareasymbolstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 75;</code>
     */
    public boolean hasTschchartseriesareasymbolstroke() {
      return ((bitField2_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 75;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesareasymbolstroke() {
      return tschchartseriesareasymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesareasymbolstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 75;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesareasymbolstrokeOrBuilder() {
      return tschchartseriesareasymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesareasymbolstroke_;
    }

    public static final int TSCHCHARTSERIESBUBBLESYMBOLSTROKE_FIELD_NUMBER = 76;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesbubblesymbolstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 76;</code>
     */
    public boolean hasTschchartseriesbubblesymbolstroke() {
      return ((bitField2_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 76;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesbubblesymbolstroke() {
      return tschchartseriesbubblesymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesbubblesymbolstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 76;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesbubblesymbolstrokeOrBuilder() {
      return tschchartseriesbubblesymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesbubblesymbolstroke_;
    }

    public static final int TSCHCHARTSERIESLINESYMBOLSTROKE_FIELD_NUMBER = 77;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartserieslinesymbolstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 77;</code>
     */
    public boolean hasTschchartserieslinesymbolstroke() {
      return ((bitField2_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 77;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartserieslinesymbolstroke() {
      return tschchartserieslinesymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartserieslinesymbolstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 77;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartserieslinesymbolstrokeOrBuilder() {
      return tschchartserieslinesymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartserieslinesymbolstroke_;
    }

    public static final int TSCHCHARTSERIESMIXEDAREASYMBOLSTROKE_FIELD_NUMBER = 78;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesmixedareasymbolstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 78;</code>
     */
    public boolean hasTschchartseriesmixedareasymbolstroke() {
      return ((bitField2_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 78;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedareasymbolstroke() {
      return tschchartseriesmixedareasymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedareasymbolstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 78;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedareasymbolstrokeOrBuilder() {
      return tschchartseriesmixedareasymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedareasymbolstroke_;
    }

    public static final int TSCHCHARTSERIESMIXEDLINESYMBOLSTROKE_FIELD_NUMBER = 79;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesmixedlinesymbolstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 79;</code>
     */
    public boolean hasTschchartseriesmixedlinesymbolstroke() {
      return ((bitField2_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 79;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedlinesymbolstroke() {
      return tschchartseriesmixedlinesymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedlinesymbolstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 79;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedlinesymbolstrokeOrBuilder() {
      return tschchartseriesmixedlinesymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedlinesymbolstroke_;
    }

    public static final int TSCHCHARTSERIESSCATTERSYMBOLSTROKE_FIELD_NUMBER = 80;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesscattersymbolstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 80;</code>
     */
    public boolean hasTschchartseriesscattersymbolstroke() {
      return ((bitField2_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 80;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesscattersymbolstroke() {
      return tschchartseriesscattersymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesscattersymbolstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 80;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesscattersymbolstrokeOrBuilder() {
      return tschchartseriesscattersymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesscattersymbolstroke_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINEEQUATIONOPACITY_FIELD_NUMBER = 81;
    private float tschchartseriesdefaulttrendlineequationopacity_;
    /**
     * <code>optional float tschchartseriesdefaulttrendlineequationopacity = 81;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlineequationopacity() {
      return ((bitField2_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional float tschchartseriesdefaulttrendlineequationopacity = 81;</code>
     */
    public float getTschchartseriesdefaulttrendlineequationopacity() {
      return tschchartseriesdefaulttrendlineequationopacity_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINEEQUATIONPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 82;
    private int tschchartseriesdefaulttrendlineequationparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlineequationparagraphstyleindex = 82;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlineequationparagraphstyleindex() {
      return ((bitField2_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlineequationparagraphstyleindex = 82;</code>
     */
    public int getTschchartseriesdefaulttrendlineequationparagraphstyleindex() {
      return tschchartseriesdefaulttrendlineequationparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINERSQUAREDOPACITY_FIELD_NUMBER = 83;
    private float tschchartseriesdefaulttrendlinersquaredopacity_;
    /**
     * <code>optional float tschchartseriesdefaulttrendlinersquaredopacity = 83;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlinersquaredopacity() {
      return ((bitField2_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional float tschchartseriesdefaulttrendlinersquaredopacity = 83;</code>
     */
    public float getTschchartseriesdefaulttrendlinersquaredopacity() {
      return tschchartseriesdefaulttrendlinersquaredopacity_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINERSQUAREDPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 84;
    private int tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlinersquaredparagraphstyleindex = 84;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlinersquaredparagraphstyleindex() {
      return ((bitField2_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlinersquaredparagraphstyleindex = 84;</code>
     */
    public int getTschchartseriesdefaulttrendlinersquaredparagraphstyleindex() {
      return tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINESHADOW_FIELD_NUMBER = 85;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesdefaulttrendlineshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 85;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlineshadow() {
      return ((bitField2_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 85;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesdefaulttrendlineshadow() {
      return tschchartseriesdefaulttrendlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesdefaulttrendlineshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 85;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesdefaulttrendlineshadowOrBuilder() {
      return tschchartseriesdefaulttrendlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesdefaulttrendlineshadow_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINESTROKE_FIELD_NUMBER = 86;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesdefaulttrendlinestroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 86;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlinestroke() {
      return ((bitField2_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 86;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesdefaulttrendlinestroke() {
      return tschchartseriesdefaulttrendlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesdefaulttrendlinestroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 86;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesdefaulttrendlinestrokeOrBuilder() {
      return tschchartseriesdefaulttrendlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesdefaulttrendlinestroke_;
    }

    public static final int TSCHCHARTSERIESAREAVALUELABELPOSITION_FIELD_NUMBER = 87;
    private int tschchartseriesareavaluelabelposition_;
    /**
     * <code>optional int32 tschchartseriesareavaluelabelposition = 87;</code>
     */
    public boolean hasTschchartseriesareavaluelabelposition() {
      return ((bitField2_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int32 tschchartseriesareavaluelabelposition = 87;</code>
     */
    public int getTschchartseriesareavaluelabelposition() {
      return tschchartseriesareavaluelabelposition_;
    }

    public static final int TSCHCHARTSERIESBARVALUELABELPOSITION_FIELD_NUMBER = 88;
    private int tschchartseriesbarvaluelabelposition_;
    /**
     * <code>optional int32 tschchartseriesbarvaluelabelposition = 88;</code>
     */
    public boolean hasTschchartseriesbarvaluelabelposition() {
      return ((bitField2_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int32 tschchartseriesbarvaluelabelposition = 88;</code>
     */
    public int getTschchartseriesbarvaluelabelposition() {
      return tschchartseriesbarvaluelabelposition_;
    }

    public static final int TSCHCHARTSERIESBUBBLEVALUELABELPOSITION_FIELD_NUMBER = 89;
    private int tschchartseriesbubblevaluelabelposition_;
    /**
     * <code>optional int32 tschchartseriesbubblevaluelabelposition = 89;</code>
     */
    public boolean hasTschchartseriesbubblevaluelabelposition() {
      return ((bitField2_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int32 tschchartseriesbubblevaluelabelposition = 89;</code>
     */
    public int getTschchartseriesbubblevaluelabelposition() {
      return tschchartseriesbubblevaluelabelposition_;
    }

    public static final int TSCHCHARTSERIESDEFAULTVALUELABELPOSITION_FIELD_NUMBER = 90;
    private int tschchartseriesdefaultvaluelabelposition_;
    /**
     * <code>optional int32 tschchartseriesdefaultvaluelabelposition = 90;</code>
     */
    public boolean hasTschchartseriesdefaultvaluelabelposition() {
      return ((bitField2_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int32 tschchartseriesdefaultvaluelabelposition = 90;</code>
     */
    public int getTschchartseriesdefaultvaluelabelposition() {
      return tschchartseriesdefaultvaluelabelposition_;
    }

    public static final int TSCHCHARTSERIESLINEVALUELABELPOSITION_FIELD_NUMBER = 91;
    private int tschchartserieslinevaluelabelposition_;
    /**
     * <code>optional int32 tschchartserieslinevaluelabelposition = 91;</code>
     */
    public boolean hasTschchartserieslinevaluelabelposition() {
      return ((bitField2_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int32 tschchartserieslinevaluelabelposition = 91;</code>
     */
    public int getTschchartserieslinevaluelabelposition() {
      return tschchartserieslinevaluelabelposition_;
    }

    public static final int TSCHCHARTSERIESMIXEDAREAVALUELABELPOSITION_FIELD_NUMBER = 92;
    private int tschchartseriesmixedareavaluelabelposition_;
    /**
     * <code>optional int32 tschchartseriesmixedareavaluelabelposition = 92;</code>
     */
    public boolean hasTschchartseriesmixedareavaluelabelposition() {
      return ((bitField2_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int32 tschchartseriesmixedareavaluelabelposition = 92;</code>
     */
    public int getTschchartseriesmixedareavaluelabelposition() {
      return tschchartseriesmixedareavaluelabelposition_;
    }

    public static final int TSCHCHARTSERIESMIXEDCOLUMNVALUELABELPOSITION_FIELD_NUMBER = 93;
    private int tschchartseriesmixedcolumnvaluelabelposition_;
    /**
     * <code>optional int32 tschchartseriesmixedcolumnvaluelabelposition = 93;</code>
     */
    public boolean hasTschchartseriesmixedcolumnvaluelabelposition() {
      return ((bitField2_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int32 tschchartseriesmixedcolumnvaluelabelposition = 93;</code>
     */
    public int getTschchartseriesmixedcolumnvaluelabelposition() {
      return tschchartseriesmixedcolumnvaluelabelposition_;
    }

    public static final int TSCHCHARTSERIESMIXEDLINEVALUELABELPOSITION_FIELD_NUMBER = 94;
    private int tschchartseriesmixedlinevaluelabelposition_;
    /**
     * <code>optional int32 tschchartseriesmixedlinevaluelabelposition = 94;</code>
     */
    public boolean hasTschchartseriesmixedlinevaluelabelposition() {
      return ((bitField2_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional int32 tschchartseriesmixedlinevaluelabelposition = 94;</code>
     */
    public int getTschchartseriesmixedlinevaluelabelposition() {
      return tschchartseriesmixedlinevaluelabelposition_;
    }

    public static final int TSCHCHARTSERIESSCATTERVALUELABELPOSITION_FIELD_NUMBER = 95;
    private int tschchartseriesscattervaluelabelposition_;
    /**
     * <code>optional int32 tschchartseriesscattervaluelabelposition = 95;</code>
     */
    public boolean hasTschchartseriesscattervaluelabelposition() {
      return ((bitField2_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int32 tschchartseriesscattervaluelabelposition = 95;</code>
     */
    public int getTschchartseriesscattervaluelabelposition() {
      return tschchartseriesscattervaluelabelposition_;
    }

    public static final int TSCHCHARTSERIESSTACKEDAREAVALUELABELPOSITION_FIELD_NUMBER = 96;
    private int tschchartseriesstackedareavaluelabelposition_;
    /**
     * <code>optional int32 tschchartseriesstackedareavaluelabelposition = 96;</code>
     */
    public boolean hasTschchartseriesstackedareavaluelabelposition() {
      return ((bitField2_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional int32 tschchartseriesstackedareavaluelabelposition = 96;</code>
     */
    public int getTschchartseriesstackedareavaluelabelposition() {
      return tschchartseriesstackedareavaluelabelposition_;
    }

    public static final int TSCHCHARTSERIESSTACKEDBARVALUELABELPOSITION_FIELD_NUMBER = 97;
    private int tschchartseriesstackedbarvaluelabelposition_;
    /**
     * <code>optional int32 tschchartseriesstackedbarvaluelabelposition = 97;</code>
     */
    public boolean hasTschchartseriesstackedbarvaluelabelposition() {
      return ((bitField3_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 tschchartseriesstackedbarvaluelabelposition = 97;</code>
     */
    public int getTschchartseriesstackedbarvaluelabelposition() {
      return tschchartseriesstackedbarvaluelabelposition_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasTschchartseriesdefaulterrorbarlineend()) {
        if (!getTschchartseriesdefaulterrorbarlineend().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesdefaulterrorbarlineendscatterx()) {
        if (!getTschchartseriesdefaulterrorbarlineendscatterx().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesdefaulterrorbarshadow()) {
        if (!getTschchartseriesdefaulterrorbarshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesdefaulterrorbarstroke()) {
        if (!getTschchartseriesdefaulterrorbarstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesdefaulterrorbarstrokescatterx()) {
        if (!getTschchartseriesdefaulterrorbarstrokescatterx().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseries3Dareafill()) {
        if (!getTschchartseries3Dareafill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseries3Dbarfill()) {
        if (!getTschchartseries3Dbarfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseries3Dcolumnfill()) {
        if (!getTschchartseries3Dcolumnfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseries3Dlinefill()) {
        if (!getTschchartseries3Dlinefill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseries3Dpiefill()) {
        if (!getTschchartseries3Dpiefill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesareafill()) {
        if (!getTschchartseriesareafill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesbarfill()) {
        if (!getTschchartseriesbarfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriescolumnfill()) {
        if (!getTschchartseriescolumnfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesdefaultfill()) {
        if (!getTschchartseriesdefaultfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesmixedareafill()) {
        if (!getTschchartseriesmixedareafill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesmixedcolumnfill()) {
        if (!getTschchartseriesmixedcolumnfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriespiefill()) {
        if (!getTschchartseriespiefill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseries3Dareashadow()) {
        if (!getTschchartseries3Dareashadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseries3Dbarshadow()) {
        if (!getTschchartseries3Dbarshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseries3Dcolumnshadow()) {
        if (!getTschchartseries3Dcolumnshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseries3Dlineshadow()) {
        if (!getTschchartseries3Dlineshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseries3Dpieshadow()) {
        if (!getTschchartseries3Dpieshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesareashadow()) {
        if (!getTschchartseriesareashadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesbarshadow()) {
        if (!getTschchartseriesbarshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesbubbleshadow()) {
        if (!getTschchartseriesbubbleshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesdefaultshadow()) {
        if (!getTschchartseriesdefaultshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartserieslineshadow()) {
        if (!getTschchartserieslineshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesmixedareashadow()) {
        if (!getTschchartseriesmixedareashadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesmixedcolumnshadow()) {
        if (!getTschchartseriesmixedcolumnshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesmixedlineshadow()) {
        if (!getTschchartseriesmixedlineshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriespieshadow()) {
        if (!getTschchartseriespieshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesscattershadow()) {
        if (!getTschchartseriesscattershadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesareastroke()) {
        if (!getTschchartseriesareastroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesbarstroke()) {
        if (!getTschchartseriesbarstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesbubblestroke()) {
        if (!getTschchartseriesbubblestroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartserieslinestroke()) {
        if (!getTschchartserieslinestroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesmixedareastroke()) {
        if (!getTschchartseriesmixedareastroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesmixedcolumnstroke()) {
        if (!getTschchartseriesmixedcolumnstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesmixedlinestroke()) {
        if (!getTschchartseriesmixedlinestroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriespiestroke()) {
        if (!getTschchartseriespiestroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesscatterstroke()) {
        if (!getTschchartseriesscatterstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesareasymbolfill()) {
        if (!getTschchartseriesareasymbolfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesbubblesymbolfill()) {
        if (!getTschchartseriesbubblesymbolfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartserieslinesymbolfill()) {
        if (!getTschchartserieslinesymbolfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesmixedareasymbolfill()) {
        if (!getTschchartseriesmixedareasymbolfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesmixedlinesymbolfill()) {
        if (!getTschchartseriesmixedlinesymbolfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesscattersymbolfill()) {
        if (!getTschchartseriesscattersymbolfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesareasymbolstroke()) {
        if (!getTschchartseriesareasymbolstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesbubblesymbolstroke()) {
        if (!getTschchartseriesbubblesymbolstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartserieslinesymbolstroke()) {
        if (!getTschchartserieslinesymbolstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesmixedareasymbolstroke()) {
        if (!getTschchartseriesmixedareasymbolstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesmixedlinesymbolstroke()) {
        if (!getTschchartseriesmixedlinesymbolstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesscattersymbolstroke()) {
        if (!getTschchartseriesscattersymbolstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesdefaulttrendlineshadow()) {
        if (!getTschchartseriesdefaulttrendlineshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesdefaulttrendlinestroke()) {
        if (!getTschchartseriesdefaulttrendlinestroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getTschchartseriesdefaulterrorbarlineend());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getTschchartseriesdefaulterrorbarlineendscatterx());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getTschchartseriesdefaulterrorbarshadow());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getTschchartseriesdefaulterrorbarstroke());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, getTschchartseriesdefaulterrorbarstrokescatterx());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, getTschchartseries3Dareafill());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, getTschchartseries3Dbarfill());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, getTschchartseries3Dcolumnfill());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(9, getTschchartseries3Dlinefill());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(10, getTschchartseries3Dpiefill());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(11, getTschchartseriesareafill());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(12, getTschchartseriesbarfill());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(13, getTschchartseriescolumnfill());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(14, getTschchartseriesdefaultfill());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(15, getTschchartseriesmixedareafill());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(16, getTschchartseriesmixedcolumnfill());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(17, getTschchartseriespiefill());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, tschchartseriesarealabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(19, tschchartseriesbarlabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(20, tschchartseriesdefaultlabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(21, tschchartserieslinelabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(22, tschchartseriesmixedlabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(23, tschchartseriespielabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeFloat(24, tschchartseriesdefaultopacity_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(25, tschchartseriesareaoutsidelabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(26, tschchartseriesbaroutsidelabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeInt32(27, tschchartseriesdefaultoutsidelabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(28, tschchartseriesmixedoutsidelabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(29, tschchartseriespieoutsidelabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeMessage(30, getTschchartseries3Dareashadow());
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeMessage(31, getTschchartseries3Dbarshadow());
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeMessage(32, getTschchartseries3Dcolumnshadow());
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(33, getTschchartseries3Dlineshadow());
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(34, getTschchartseries3Dpieshadow());
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(35, getTschchartseriesareashadow());
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(36, getTschchartseriesbarshadow());
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(37, getTschchartseriesbubbleshadow());
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(38, getTschchartseriesdefaultshadow());
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(39, getTschchartserieslineshadow());
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(40, getTschchartseriesmixedareashadow());
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(41, getTschchartseriesmixedcolumnshadow());
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(42, getTschchartseriesmixedlineshadow());
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(43, getTschchartseriespieshadow());
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(44, getTschchartseriesscattershadow());
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(45, getTschchartseriesareastroke());
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(46, getTschchartseriesbarstroke());
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(47, getTschchartseriesbubblestroke());
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(48, getTschchartserieslinestroke());
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(49, getTschchartseriesmixedareastroke());
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(50, getTschchartseriesmixedcolumnstroke());
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        output.writeMessage(51, getTschchartseriesmixedlinestroke());
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        output.writeMessage(52, getTschchartseriespiestroke());
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        output.writeMessage(53, getTschchartseriesscatterstroke());
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        output.writeMessage(54, getTschchartseriesareasymbolfill());
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        output.writeMessage(55, getTschchartseriesbubblesymbolfill());
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        output.writeMessage(56, getTschchartserieslinesymbolfill());
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        output.writeMessage(57, getTschchartseriesmixedareasymbolfill());
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        output.writeMessage(58, getTschchartseriesmixedlinesymbolfill());
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        output.writeMessage(59, getTschchartseriesscattersymbolfill());
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        output.writeBool(60, tschchartseriesareasymbolfilluseseriesfill_);
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        output.writeBool(61, tschchartserieslinesymbolfilluseseriesfill_);
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        output.writeBool(62, tschchartseriesmixedareasymbolfilluseseriesfill_);
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        output.writeBool(63, tschchartseriesmixedlinesymbolfilluseseriesfill_);
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        output.writeBool(64, tschchartseriesareasymbolfilluseseriesstroke_);
      }
      if (((bitField2_ & 0x00000001) == 0x00000001)) {
        output.writeBool(65, tschchartseriesbubblesymbolfilluseseriesstroke_);
      }
      if (((bitField2_ & 0x00000002) == 0x00000002)) {
        output.writeBool(66, tschchartserieslinesymbolfilluseseriesstroke_);
      }
      if (((bitField2_ & 0x00000004) == 0x00000004)) {
        output.writeBool(67, tschchartseriesmixedareasymbolfilluseseriesstroke_);
      }
      if (((bitField2_ & 0x00000008) == 0x00000008)) {
        output.writeBool(68, tschchartseriesmixedlinesymbolfilluseseriesstroke_);
      }
      if (((bitField2_ & 0x00000010) == 0x00000010)) {
        output.writeBool(69, tschchartseriesscattersymbolfilluseseriesstroke_);
      }
      if (((bitField2_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(70, tschchartseriesareasymbolsize_);
      }
      if (((bitField2_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(71, tschchartserieslinesymbolsize_);
      }
      if (((bitField2_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(72, tschchartseriesmixedareasymbolsize_);
      }
      if (((bitField2_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(73, tschchartseriesmixedlinesymbolsize_);
      }
      if (((bitField2_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(74, tschchartseriesscattersymbolsize_);
      }
      if (((bitField2_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(75, getTschchartseriesareasymbolstroke());
      }
      if (((bitField2_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(76, getTschchartseriesbubblesymbolstroke());
      }
      if (((bitField2_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(77, getTschchartserieslinesymbolstroke());
      }
      if (((bitField2_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(78, getTschchartseriesmixedareasymbolstroke());
      }
      if (((bitField2_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(79, getTschchartseriesmixedlinesymbolstroke());
      }
      if (((bitField2_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(80, getTschchartseriesscattersymbolstroke());
      }
      if (((bitField2_ & 0x00010000) == 0x00010000)) {
        output.writeFloat(81, tschchartseriesdefaulttrendlineequationopacity_);
      }
      if (((bitField2_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(82, tschchartseriesdefaulttrendlineequationparagraphstyleindex_);
      }
      if (((bitField2_ & 0x00040000) == 0x00040000)) {
        output.writeFloat(83, tschchartseriesdefaulttrendlinersquaredopacity_);
      }
      if (((bitField2_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(84, tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_);
      }
      if (((bitField2_ & 0x00100000) == 0x00100000)) {
        output.writeMessage(85, getTschchartseriesdefaulttrendlineshadow());
      }
      if (((bitField2_ & 0x00200000) == 0x00200000)) {
        output.writeMessage(86, getTschchartseriesdefaulttrendlinestroke());
      }
      if (((bitField2_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(87, tschchartseriesareavaluelabelposition_);
      }
      if (((bitField2_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(88, tschchartseriesbarvaluelabelposition_);
      }
      if (((bitField2_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(89, tschchartseriesbubblevaluelabelposition_);
      }
      if (((bitField2_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(90, tschchartseriesdefaultvaluelabelposition_);
      }
      if (((bitField2_ & 0x04000000) == 0x04000000)) {
        output.writeInt32(91, tschchartserieslinevaluelabelposition_);
      }
      if (((bitField2_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(92, tschchartseriesmixedareavaluelabelposition_);
      }
      if (((bitField2_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(93, tschchartseriesmixedcolumnvaluelabelposition_);
      }
      if (((bitField2_ & 0x20000000) == 0x20000000)) {
        output.writeInt32(94, tschchartseriesmixedlinevaluelabelposition_);
      }
      if (((bitField2_ & 0x40000000) == 0x40000000)) {
        output.writeInt32(95, tschchartseriesscattervaluelabelposition_);
      }
      if (((bitField2_ & 0x80000000) == 0x80000000)) {
        output.writeInt32(96, tschchartseriesstackedareavaluelabelposition_);
      }
      if (((bitField3_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(97, tschchartseriesstackedbarvaluelabelposition_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTschchartseriesdefaulterrorbarlineend());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTschchartseriesdefaulterrorbarlineendscatterx());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTschchartseriesdefaulterrorbarshadow());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTschchartseriesdefaulterrorbarstroke());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getTschchartseriesdefaulterrorbarstrokescatterx());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getTschchartseries3Dareafill());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getTschchartseries3Dbarfill());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getTschchartseries3Dcolumnfill());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getTschchartseries3Dlinefill());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getTschchartseries3Dpiefill());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getTschchartseriesareafill());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getTschchartseriesbarfill());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getTschchartseriescolumnfill());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getTschchartseriesdefaultfill());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getTschchartseriesmixedareafill());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getTschchartseriesmixedcolumnfill());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, getTschchartseriespiefill());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, tschchartseriesarealabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, tschchartseriesbarlabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, tschchartseriesdefaultlabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, tschchartserieslinelabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, tschchartseriesmixedlabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, tschchartseriespielabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(24, tschchartseriesdefaultopacity_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, tschchartseriesareaoutsidelabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(26, tschchartseriesbaroutsidelabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(27, tschchartseriesdefaultoutsidelabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(28, tschchartseriesmixedoutsidelabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(29, tschchartseriespieoutsidelabelparagraphstyleindex_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(30, getTschchartseries3Dareashadow());
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(31, getTschchartseries3Dbarshadow());
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(32, getTschchartseries3Dcolumnshadow());
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(33, getTschchartseries3Dlineshadow());
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(34, getTschchartseries3Dpieshadow());
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(35, getTschchartseriesareashadow());
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(36, getTschchartseriesbarshadow());
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(37, getTschchartseriesbubbleshadow());
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(38, getTschchartseriesdefaultshadow());
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(39, getTschchartserieslineshadow());
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(40, getTschchartseriesmixedareashadow());
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(41, getTschchartseriesmixedcolumnshadow());
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(42, getTschchartseriesmixedlineshadow());
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(43, getTschchartseriespieshadow());
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(44, getTschchartseriesscattershadow());
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(45, getTschchartseriesareastroke());
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(46, getTschchartseriesbarstroke());
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(47, getTschchartseriesbubblestroke());
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(48, getTschchartserieslinestroke());
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(49, getTschchartseriesmixedareastroke());
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(50, getTschchartseriesmixedcolumnstroke());
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(51, getTschchartseriesmixedlinestroke());
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(52, getTschchartseriespiestroke());
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(53, getTschchartseriesscatterstroke());
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(54, getTschchartseriesareasymbolfill());
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(55, getTschchartseriesbubblesymbolfill());
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(56, getTschchartserieslinesymbolfill());
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(57, getTschchartseriesmixedareasymbolfill());
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(58, getTschchartseriesmixedlinesymbolfill());
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(59, getTschchartseriesscattersymbolfill());
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(60, tschchartseriesareasymbolfilluseseriesfill_);
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(61, tschchartserieslinesymbolfilluseseriesfill_);
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(62, tschchartseriesmixedareasymbolfilluseseriesfill_);
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(63, tschchartseriesmixedlinesymbolfilluseseriesfill_);
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(64, tschchartseriesareasymbolfilluseseriesstroke_);
      }
      if (((bitField2_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(65, tschchartseriesbubblesymbolfilluseseriesstroke_);
      }
      if (((bitField2_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(66, tschchartserieslinesymbolfilluseseriesstroke_);
      }
      if (((bitField2_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(67, tschchartseriesmixedareasymbolfilluseseriesstroke_);
      }
      if (((bitField2_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(68, tschchartseriesmixedlinesymbolfilluseseriesstroke_);
      }
      if (((bitField2_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(69, tschchartseriesscattersymbolfilluseseriesstroke_);
      }
      if (((bitField2_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(70, tschchartseriesareasymbolsize_);
      }
      if (((bitField2_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(71, tschchartserieslinesymbolsize_);
      }
      if (((bitField2_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(72, tschchartseriesmixedareasymbolsize_);
      }
      if (((bitField2_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(73, tschchartseriesmixedlinesymbolsize_);
      }
      if (((bitField2_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(74, tschchartseriesscattersymbolsize_);
      }
      if (((bitField2_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(75, getTschchartseriesareasymbolstroke());
      }
      if (((bitField2_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(76, getTschchartseriesbubblesymbolstroke());
      }
      if (((bitField2_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(77, getTschchartserieslinesymbolstroke());
      }
      if (((bitField2_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(78, getTschchartseriesmixedareasymbolstroke());
      }
      if (((bitField2_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(79, getTschchartseriesmixedlinesymbolstroke());
      }
      if (((bitField2_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(80, getTschchartseriesscattersymbolstroke());
      }
      if (((bitField2_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(81, tschchartseriesdefaulttrendlineequationopacity_);
      }
      if (((bitField2_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(82, tschchartseriesdefaulttrendlineequationparagraphstyleindex_);
      }
      if (((bitField2_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(83, tschchartseriesdefaulttrendlinersquaredopacity_);
      }
      if (((bitField2_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(84, tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_);
      }
      if (((bitField2_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(85, getTschchartseriesdefaulttrendlineshadow());
      }
      if (((bitField2_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(86, getTschchartseriesdefaulttrendlinestroke());
      }
      if (((bitField2_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(87, tschchartseriesareavaluelabelposition_);
      }
      if (((bitField2_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(88, tschchartseriesbarvaluelabelposition_);
      }
      if (((bitField2_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(89, tschchartseriesbubblevaluelabelposition_);
      }
      if (((bitField2_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(90, tschchartseriesdefaultvaluelabelposition_);
      }
      if (((bitField2_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(91, tschchartserieslinevaluelabelposition_);
      }
      if (((bitField2_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(92, tschchartseriesmixedareavaluelabelposition_);
      }
      if (((bitField2_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(93, tschchartseriesmixedcolumnvaluelabelposition_);
      }
      if (((bitField2_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(94, tschchartseriesmixedlinevaluelabelposition_);
      }
      if (((bitField2_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(95, tschchartseriesscattervaluelabelposition_);
      }
      if (((bitField2_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(96, tschchartseriesstackedareavaluelabelposition_);
      }
      if (((bitField3_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(97, tschchartseriesstackedbarvaluelabelposition_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive)) {
        return super.equals(obj);
      }
      org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive other = (org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive) obj;

      boolean result = true;
      result = result && (hasTschchartseriesdefaulterrorbarlineend() == other.hasTschchartseriesdefaulterrorbarlineend());
      if (hasTschchartseriesdefaulterrorbarlineend()) {
        result = result && getTschchartseriesdefaulterrorbarlineend()
            .equals(other.getTschchartseriesdefaulterrorbarlineend());
      }
      result = result && (hasTschchartseriesdefaulterrorbarlineendscatterx() == other.hasTschchartseriesdefaulterrorbarlineendscatterx());
      if (hasTschchartseriesdefaulterrorbarlineendscatterx()) {
        result = result && getTschchartseriesdefaulterrorbarlineendscatterx()
            .equals(other.getTschchartseriesdefaulterrorbarlineendscatterx());
      }
      result = result && (hasTschchartseriesdefaulterrorbarshadow() == other.hasTschchartseriesdefaulterrorbarshadow());
      if (hasTschchartseriesdefaulterrorbarshadow()) {
        result = result && getTschchartseriesdefaulterrorbarshadow()
            .equals(other.getTschchartseriesdefaulterrorbarshadow());
      }
      result = result && (hasTschchartseriesdefaulterrorbarstroke() == other.hasTschchartseriesdefaulterrorbarstroke());
      if (hasTschchartseriesdefaulterrorbarstroke()) {
        result = result && getTschchartseriesdefaulterrorbarstroke()
            .equals(other.getTschchartseriesdefaulterrorbarstroke());
      }
      result = result && (hasTschchartseriesdefaulterrorbarstrokescatterx() == other.hasTschchartseriesdefaulterrorbarstrokescatterx());
      if (hasTschchartseriesdefaulterrorbarstrokescatterx()) {
        result = result && getTschchartseriesdefaulterrorbarstrokescatterx()
            .equals(other.getTschchartseriesdefaulterrorbarstrokescatterx());
      }
      result = result && (hasTschchartseries3Dareafill() == other.hasTschchartseries3Dareafill());
      if (hasTschchartseries3Dareafill()) {
        result = result && getTschchartseries3Dareafill()
            .equals(other.getTschchartseries3Dareafill());
      }
      result = result && (hasTschchartseries3Dbarfill() == other.hasTschchartseries3Dbarfill());
      if (hasTschchartseries3Dbarfill()) {
        result = result && getTschchartseries3Dbarfill()
            .equals(other.getTschchartseries3Dbarfill());
      }
      result = result && (hasTschchartseries3Dcolumnfill() == other.hasTschchartseries3Dcolumnfill());
      if (hasTschchartseries3Dcolumnfill()) {
        result = result && getTschchartseries3Dcolumnfill()
            .equals(other.getTschchartseries3Dcolumnfill());
      }
      result = result && (hasTschchartseries3Dlinefill() == other.hasTschchartseries3Dlinefill());
      if (hasTschchartseries3Dlinefill()) {
        result = result && getTschchartseries3Dlinefill()
            .equals(other.getTschchartseries3Dlinefill());
      }
      result = result && (hasTschchartseries3Dpiefill() == other.hasTschchartseries3Dpiefill());
      if (hasTschchartseries3Dpiefill()) {
        result = result && getTschchartseries3Dpiefill()
            .equals(other.getTschchartseries3Dpiefill());
      }
      result = result && (hasTschchartseriesareafill() == other.hasTschchartseriesareafill());
      if (hasTschchartseriesareafill()) {
        result = result && getTschchartseriesareafill()
            .equals(other.getTschchartseriesareafill());
      }
      result = result && (hasTschchartseriesbarfill() == other.hasTschchartseriesbarfill());
      if (hasTschchartseriesbarfill()) {
        result = result && getTschchartseriesbarfill()
            .equals(other.getTschchartseriesbarfill());
      }
      result = result && (hasTschchartseriescolumnfill() == other.hasTschchartseriescolumnfill());
      if (hasTschchartseriescolumnfill()) {
        result = result && getTschchartseriescolumnfill()
            .equals(other.getTschchartseriescolumnfill());
      }
      result = result && (hasTschchartseriesdefaultfill() == other.hasTschchartseriesdefaultfill());
      if (hasTschchartseriesdefaultfill()) {
        result = result && getTschchartseriesdefaultfill()
            .equals(other.getTschchartseriesdefaultfill());
      }
      result = result && (hasTschchartseriesmixedareafill() == other.hasTschchartseriesmixedareafill());
      if (hasTschchartseriesmixedareafill()) {
        result = result && getTschchartseriesmixedareafill()
            .equals(other.getTschchartseriesmixedareafill());
      }
      result = result && (hasTschchartseriesmixedcolumnfill() == other.hasTschchartseriesmixedcolumnfill());
      if (hasTschchartseriesmixedcolumnfill()) {
        result = result && getTschchartseriesmixedcolumnfill()
            .equals(other.getTschchartseriesmixedcolumnfill());
      }
      result = result && (hasTschchartseriespiefill() == other.hasTschchartseriespiefill());
      if (hasTschchartseriespiefill()) {
        result = result && getTschchartseriespiefill()
            .equals(other.getTschchartseriespiefill());
      }
      result = result && (hasTschchartseriesarealabelparagraphstyleindex() == other.hasTschchartseriesarealabelparagraphstyleindex());
      if (hasTschchartseriesarealabelparagraphstyleindex()) {
        result = result && (getTschchartseriesarealabelparagraphstyleindex()
            == other.getTschchartseriesarealabelparagraphstyleindex());
      }
      result = result && (hasTschchartseriesbarlabelparagraphstyleindex() == other.hasTschchartseriesbarlabelparagraphstyleindex());
      if (hasTschchartseriesbarlabelparagraphstyleindex()) {
        result = result && (getTschchartseriesbarlabelparagraphstyleindex()
            == other.getTschchartseriesbarlabelparagraphstyleindex());
      }
      result = result && (hasTschchartseriesdefaultlabelparagraphstyleindex() == other.hasTschchartseriesdefaultlabelparagraphstyleindex());
      if (hasTschchartseriesdefaultlabelparagraphstyleindex()) {
        result = result && (getTschchartseriesdefaultlabelparagraphstyleindex()
            == other.getTschchartseriesdefaultlabelparagraphstyleindex());
      }
      result = result && (hasTschchartserieslinelabelparagraphstyleindex() == other.hasTschchartserieslinelabelparagraphstyleindex());
      if (hasTschchartserieslinelabelparagraphstyleindex()) {
        result = result && (getTschchartserieslinelabelparagraphstyleindex()
            == other.getTschchartserieslinelabelparagraphstyleindex());
      }
      result = result && (hasTschchartseriesmixedlabelparagraphstyleindex() == other.hasTschchartseriesmixedlabelparagraphstyleindex());
      if (hasTschchartseriesmixedlabelparagraphstyleindex()) {
        result = result && (getTschchartseriesmixedlabelparagraphstyleindex()
            == other.getTschchartseriesmixedlabelparagraphstyleindex());
      }
      result = result && (hasTschchartseriespielabelparagraphstyleindex() == other.hasTschchartseriespielabelparagraphstyleindex());
      if (hasTschchartseriespielabelparagraphstyleindex()) {
        result = result && (getTschchartseriespielabelparagraphstyleindex()
            == other.getTschchartseriespielabelparagraphstyleindex());
      }
      result = result && (hasTschchartseriesdefaultopacity() == other.hasTschchartseriesdefaultopacity());
      if (hasTschchartseriesdefaultopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaultopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaultopacity()));
      }
      result = result && (hasTschchartseriesareaoutsidelabelparagraphstyleindex() == other.hasTschchartseriesareaoutsidelabelparagraphstyleindex());
      if (hasTschchartseriesareaoutsidelabelparagraphstyleindex()) {
        result = result && (getTschchartseriesareaoutsidelabelparagraphstyleindex()
            == other.getTschchartseriesareaoutsidelabelparagraphstyleindex());
      }
      result = result && (hasTschchartseriesbaroutsidelabelparagraphstyleindex() == other.hasTschchartseriesbaroutsidelabelparagraphstyleindex());
      if (hasTschchartseriesbaroutsidelabelparagraphstyleindex()) {
        result = result && (getTschchartseriesbaroutsidelabelparagraphstyleindex()
            == other.getTschchartseriesbaroutsidelabelparagraphstyleindex());
      }
      result = result && (hasTschchartseriesdefaultoutsidelabelparagraphstyleindex() == other.hasTschchartseriesdefaultoutsidelabelparagraphstyleindex());
      if (hasTschchartseriesdefaultoutsidelabelparagraphstyleindex()) {
        result = result && (getTschchartseriesdefaultoutsidelabelparagraphstyleindex()
            == other.getTschchartseriesdefaultoutsidelabelparagraphstyleindex());
      }
      result = result && (hasTschchartseriesmixedoutsidelabelparagraphstyleindex() == other.hasTschchartseriesmixedoutsidelabelparagraphstyleindex());
      if (hasTschchartseriesmixedoutsidelabelparagraphstyleindex()) {
        result = result && (getTschchartseriesmixedoutsidelabelparagraphstyleindex()
            == other.getTschchartseriesmixedoutsidelabelparagraphstyleindex());
      }
      result = result && (hasTschchartseriespieoutsidelabelparagraphstyleindex() == other.hasTschchartseriespieoutsidelabelparagraphstyleindex());
      if (hasTschchartseriespieoutsidelabelparagraphstyleindex()) {
        result = result && (getTschchartseriespieoutsidelabelparagraphstyleindex()
            == other.getTschchartseriespieoutsidelabelparagraphstyleindex());
      }
      result = result && (hasTschchartseries3Dareashadow() == other.hasTschchartseries3Dareashadow());
      if (hasTschchartseries3Dareashadow()) {
        result = result && getTschchartseries3Dareashadow()
            .equals(other.getTschchartseries3Dareashadow());
      }
      result = result && (hasTschchartseries3Dbarshadow() == other.hasTschchartseries3Dbarshadow());
      if (hasTschchartseries3Dbarshadow()) {
        result = result && getTschchartseries3Dbarshadow()
            .equals(other.getTschchartseries3Dbarshadow());
      }
      result = result && (hasTschchartseries3Dcolumnshadow() == other.hasTschchartseries3Dcolumnshadow());
      if (hasTschchartseries3Dcolumnshadow()) {
        result = result && getTschchartseries3Dcolumnshadow()
            .equals(other.getTschchartseries3Dcolumnshadow());
      }
      result = result && (hasTschchartseries3Dlineshadow() == other.hasTschchartseries3Dlineshadow());
      if (hasTschchartseries3Dlineshadow()) {
        result = result && getTschchartseries3Dlineshadow()
            .equals(other.getTschchartseries3Dlineshadow());
      }
      result = result && (hasTschchartseries3Dpieshadow() == other.hasTschchartseries3Dpieshadow());
      if (hasTschchartseries3Dpieshadow()) {
        result = result && getTschchartseries3Dpieshadow()
            .equals(other.getTschchartseries3Dpieshadow());
      }
      result = result && (hasTschchartseriesareashadow() == other.hasTschchartseriesareashadow());
      if (hasTschchartseriesareashadow()) {
        result = result && getTschchartseriesareashadow()
            .equals(other.getTschchartseriesareashadow());
      }
      result = result && (hasTschchartseriesbarshadow() == other.hasTschchartseriesbarshadow());
      if (hasTschchartseriesbarshadow()) {
        result = result && getTschchartseriesbarshadow()
            .equals(other.getTschchartseriesbarshadow());
      }
      result = result && (hasTschchartseriesbubbleshadow() == other.hasTschchartseriesbubbleshadow());
      if (hasTschchartseriesbubbleshadow()) {
        result = result && getTschchartseriesbubbleshadow()
            .equals(other.getTschchartseriesbubbleshadow());
      }
      result = result && (hasTschchartseriesdefaultshadow() == other.hasTschchartseriesdefaultshadow());
      if (hasTschchartseriesdefaultshadow()) {
        result = result && getTschchartseriesdefaultshadow()
            .equals(other.getTschchartseriesdefaultshadow());
      }
      result = result && (hasTschchartserieslineshadow() == other.hasTschchartserieslineshadow());
      if (hasTschchartserieslineshadow()) {
        result = result && getTschchartserieslineshadow()
            .equals(other.getTschchartserieslineshadow());
      }
      result = result && (hasTschchartseriesmixedareashadow() == other.hasTschchartseriesmixedareashadow());
      if (hasTschchartseriesmixedareashadow()) {
        result = result && getTschchartseriesmixedareashadow()
            .equals(other.getTschchartseriesmixedareashadow());
      }
      result = result && (hasTschchartseriesmixedcolumnshadow() == other.hasTschchartseriesmixedcolumnshadow());
      if (hasTschchartseriesmixedcolumnshadow()) {
        result = result && getTschchartseriesmixedcolumnshadow()
            .equals(other.getTschchartseriesmixedcolumnshadow());
      }
      result = result && (hasTschchartseriesmixedlineshadow() == other.hasTschchartseriesmixedlineshadow());
      if (hasTschchartseriesmixedlineshadow()) {
        result = result && getTschchartseriesmixedlineshadow()
            .equals(other.getTschchartseriesmixedlineshadow());
      }
      result = result && (hasTschchartseriespieshadow() == other.hasTschchartseriespieshadow());
      if (hasTschchartseriespieshadow()) {
        result = result && getTschchartseriespieshadow()
            .equals(other.getTschchartseriespieshadow());
      }
      result = result && (hasTschchartseriesscattershadow() == other.hasTschchartseriesscattershadow());
      if (hasTschchartseriesscattershadow()) {
        result = result && getTschchartseriesscattershadow()
            .equals(other.getTschchartseriesscattershadow());
      }
      result = result && (hasTschchartseriesareastroke() == other.hasTschchartseriesareastroke());
      if (hasTschchartseriesareastroke()) {
        result = result && getTschchartseriesareastroke()
            .equals(other.getTschchartseriesareastroke());
      }
      result = result && (hasTschchartseriesbarstroke() == other.hasTschchartseriesbarstroke());
      if (hasTschchartseriesbarstroke()) {
        result = result && getTschchartseriesbarstroke()
            .equals(other.getTschchartseriesbarstroke());
      }
      result = result && (hasTschchartseriesbubblestroke() == other.hasTschchartseriesbubblestroke());
      if (hasTschchartseriesbubblestroke()) {
        result = result && getTschchartseriesbubblestroke()
            .equals(other.getTschchartseriesbubblestroke());
      }
      result = result && (hasTschchartserieslinestroke() == other.hasTschchartserieslinestroke());
      if (hasTschchartserieslinestroke()) {
        result = result && getTschchartserieslinestroke()
            .equals(other.getTschchartserieslinestroke());
      }
      result = result && (hasTschchartseriesmixedareastroke() == other.hasTschchartseriesmixedareastroke());
      if (hasTschchartseriesmixedareastroke()) {
        result = result && getTschchartseriesmixedareastroke()
            .equals(other.getTschchartseriesmixedareastroke());
      }
      result = result && (hasTschchartseriesmixedcolumnstroke() == other.hasTschchartseriesmixedcolumnstroke());
      if (hasTschchartseriesmixedcolumnstroke()) {
        result = result && getTschchartseriesmixedcolumnstroke()
            .equals(other.getTschchartseriesmixedcolumnstroke());
      }
      result = result && (hasTschchartseriesmixedlinestroke() == other.hasTschchartseriesmixedlinestroke());
      if (hasTschchartseriesmixedlinestroke()) {
        result = result && getTschchartseriesmixedlinestroke()
            .equals(other.getTschchartseriesmixedlinestroke());
      }
      result = result && (hasTschchartseriespiestroke() == other.hasTschchartseriespiestroke());
      if (hasTschchartseriespiestroke()) {
        result = result && getTschchartseriespiestroke()
            .equals(other.getTschchartseriespiestroke());
      }
      result = result && (hasTschchartseriesscatterstroke() == other.hasTschchartseriesscatterstroke());
      if (hasTschchartseriesscatterstroke()) {
        result = result && getTschchartseriesscatterstroke()
            .equals(other.getTschchartseriesscatterstroke());
      }
      result = result && (hasTschchartseriesareasymbolfill() == other.hasTschchartseriesareasymbolfill());
      if (hasTschchartseriesareasymbolfill()) {
        result = result && getTschchartseriesareasymbolfill()
            .equals(other.getTschchartseriesareasymbolfill());
      }
      result = result && (hasTschchartseriesbubblesymbolfill() == other.hasTschchartseriesbubblesymbolfill());
      if (hasTschchartseriesbubblesymbolfill()) {
        result = result && getTschchartseriesbubblesymbolfill()
            .equals(other.getTschchartseriesbubblesymbolfill());
      }
      result = result && (hasTschchartserieslinesymbolfill() == other.hasTschchartserieslinesymbolfill());
      if (hasTschchartserieslinesymbolfill()) {
        result = result && getTschchartserieslinesymbolfill()
            .equals(other.getTschchartserieslinesymbolfill());
      }
      result = result && (hasTschchartseriesmixedareasymbolfill() == other.hasTschchartseriesmixedareasymbolfill());
      if (hasTschchartseriesmixedareasymbolfill()) {
        result = result && getTschchartseriesmixedareasymbolfill()
            .equals(other.getTschchartseriesmixedareasymbolfill());
      }
      result = result && (hasTschchartseriesmixedlinesymbolfill() == other.hasTschchartseriesmixedlinesymbolfill());
      if (hasTschchartseriesmixedlinesymbolfill()) {
        result = result && getTschchartseriesmixedlinesymbolfill()
            .equals(other.getTschchartseriesmixedlinesymbolfill());
      }
      result = result && (hasTschchartseriesscattersymbolfill() == other.hasTschchartseriesscattersymbolfill());
      if (hasTschchartseriesscattersymbolfill()) {
        result = result && getTschchartseriesscattersymbolfill()
            .equals(other.getTschchartseriesscattersymbolfill());
      }
      result = result && (hasTschchartseriesareasymbolfilluseseriesfill() == other.hasTschchartseriesareasymbolfilluseseriesfill());
      if (hasTschchartseriesareasymbolfilluseseriesfill()) {
        result = result && (getTschchartseriesareasymbolfilluseseriesfill()
            == other.getTschchartseriesareasymbolfilluseseriesfill());
      }
      result = result && (hasTschchartserieslinesymbolfilluseseriesfill() == other.hasTschchartserieslinesymbolfilluseseriesfill());
      if (hasTschchartserieslinesymbolfilluseseriesfill()) {
        result = result && (getTschchartserieslinesymbolfilluseseriesfill()
            == other.getTschchartserieslinesymbolfilluseseriesfill());
      }
      result = result && (hasTschchartseriesmixedareasymbolfilluseseriesfill() == other.hasTschchartseriesmixedareasymbolfilluseseriesfill());
      if (hasTschchartseriesmixedareasymbolfilluseseriesfill()) {
        result = result && (getTschchartseriesmixedareasymbolfilluseseriesfill()
            == other.getTschchartseriesmixedareasymbolfilluseseriesfill());
      }
      result = result && (hasTschchartseriesmixedlinesymbolfilluseseriesfill() == other.hasTschchartseriesmixedlinesymbolfilluseseriesfill());
      if (hasTschchartseriesmixedlinesymbolfilluseseriesfill()) {
        result = result && (getTschchartseriesmixedlinesymbolfilluseseriesfill()
            == other.getTschchartseriesmixedlinesymbolfilluseseriesfill());
      }
      result = result && (hasTschchartseriesareasymbolfilluseseriesstroke() == other.hasTschchartseriesareasymbolfilluseseriesstroke());
      if (hasTschchartseriesareasymbolfilluseseriesstroke()) {
        result = result && (getTschchartseriesareasymbolfilluseseriesstroke()
            == other.getTschchartseriesareasymbolfilluseseriesstroke());
      }
      result = result && (hasTschchartseriesbubblesymbolfilluseseriesstroke() == other.hasTschchartseriesbubblesymbolfilluseseriesstroke());
      if (hasTschchartseriesbubblesymbolfilluseseriesstroke()) {
        result = result && (getTschchartseriesbubblesymbolfilluseseriesstroke()
            == other.getTschchartseriesbubblesymbolfilluseseriesstroke());
      }
      result = result && (hasTschchartserieslinesymbolfilluseseriesstroke() == other.hasTschchartserieslinesymbolfilluseseriesstroke());
      if (hasTschchartserieslinesymbolfilluseseriesstroke()) {
        result = result && (getTschchartserieslinesymbolfilluseseriesstroke()
            == other.getTschchartserieslinesymbolfilluseseriesstroke());
      }
      result = result && (hasTschchartseriesmixedareasymbolfilluseseriesstroke() == other.hasTschchartseriesmixedareasymbolfilluseseriesstroke());
      if (hasTschchartseriesmixedareasymbolfilluseseriesstroke()) {
        result = result && (getTschchartseriesmixedareasymbolfilluseseriesstroke()
            == other.getTschchartseriesmixedareasymbolfilluseseriesstroke());
      }
      result = result && (hasTschchartseriesmixedlinesymbolfilluseseriesstroke() == other.hasTschchartseriesmixedlinesymbolfilluseseriesstroke());
      if (hasTschchartseriesmixedlinesymbolfilluseseriesstroke()) {
        result = result && (getTschchartseriesmixedlinesymbolfilluseseriesstroke()
            == other.getTschchartseriesmixedlinesymbolfilluseseriesstroke());
      }
      result = result && (hasTschchartseriesscattersymbolfilluseseriesstroke() == other.hasTschchartseriesscattersymbolfilluseseriesstroke());
      if (hasTschchartseriesscattersymbolfilluseseriesstroke()) {
        result = result && (getTschchartseriesscattersymbolfilluseseriesstroke()
            == other.getTschchartseriesscattersymbolfilluseseriesstroke());
      }
      result = result && (hasTschchartseriesareasymbolsize() == other.hasTschchartseriesareasymbolsize());
      if (hasTschchartseriesareasymbolsize()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesareasymbolsize())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesareasymbolsize()));
      }
      result = result && (hasTschchartserieslinesymbolsize() == other.hasTschchartserieslinesymbolsize());
      if (hasTschchartserieslinesymbolsize()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartserieslinesymbolsize())
            == java.lang.Float.floatToIntBits(
                other.getTschchartserieslinesymbolsize()));
      }
      result = result && (hasTschchartseriesmixedareasymbolsize() == other.hasTschchartseriesmixedareasymbolsize());
      if (hasTschchartseriesmixedareasymbolsize()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesmixedareasymbolsize())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesmixedareasymbolsize()));
      }
      result = result && (hasTschchartseriesmixedlinesymbolsize() == other.hasTschchartseriesmixedlinesymbolsize());
      if (hasTschchartseriesmixedlinesymbolsize()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesmixedlinesymbolsize())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesmixedlinesymbolsize()));
      }
      result = result && (hasTschchartseriesscattersymbolsize() == other.hasTschchartseriesscattersymbolsize());
      if (hasTschchartseriesscattersymbolsize()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesscattersymbolsize())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesscattersymbolsize()));
      }
      result = result && (hasTschchartseriesareasymbolstroke() == other.hasTschchartseriesareasymbolstroke());
      if (hasTschchartseriesareasymbolstroke()) {
        result = result && getTschchartseriesareasymbolstroke()
            .equals(other.getTschchartseriesareasymbolstroke());
      }
      result = result && (hasTschchartseriesbubblesymbolstroke() == other.hasTschchartseriesbubblesymbolstroke());
      if (hasTschchartseriesbubblesymbolstroke()) {
        result = result && getTschchartseriesbubblesymbolstroke()
            .equals(other.getTschchartseriesbubblesymbolstroke());
      }
      result = result && (hasTschchartserieslinesymbolstroke() == other.hasTschchartserieslinesymbolstroke());
      if (hasTschchartserieslinesymbolstroke()) {
        result = result && getTschchartserieslinesymbolstroke()
            .equals(other.getTschchartserieslinesymbolstroke());
      }
      result = result && (hasTschchartseriesmixedareasymbolstroke() == other.hasTschchartseriesmixedareasymbolstroke());
      if (hasTschchartseriesmixedareasymbolstroke()) {
        result = result && getTschchartseriesmixedareasymbolstroke()
            .equals(other.getTschchartseriesmixedareasymbolstroke());
      }
      result = result && (hasTschchartseriesmixedlinesymbolstroke() == other.hasTschchartseriesmixedlinesymbolstroke());
      if (hasTschchartseriesmixedlinesymbolstroke()) {
        result = result && getTschchartseriesmixedlinesymbolstroke()
            .equals(other.getTschchartseriesmixedlinesymbolstroke());
      }
      result = result && (hasTschchartseriesscattersymbolstroke() == other.hasTschchartseriesscattersymbolstroke());
      if (hasTschchartseriesscattersymbolstroke()) {
        result = result && getTschchartseriesscattersymbolstroke()
            .equals(other.getTschchartseriesscattersymbolstroke());
      }
      result = result && (hasTschchartseriesdefaulttrendlineequationopacity() == other.hasTschchartseriesdefaulttrendlineequationopacity());
      if (hasTschchartseriesdefaulttrendlineequationopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaulttrendlineequationopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaulttrendlineequationopacity()));
      }
      result = result && (hasTschchartseriesdefaulttrendlineequationparagraphstyleindex() == other.hasTschchartseriesdefaulttrendlineequationparagraphstyleindex());
      if (hasTschchartseriesdefaulttrendlineequationparagraphstyleindex()) {
        result = result && (getTschchartseriesdefaulttrendlineequationparagraphstyleindex()
            == other.getTschchartseriesdefaulttrendlineequationparagraphstyleindex());
      }
      result = result && (hasTschchartseriesdefaulttrendlinersquaredopacity() == other.hasTschchartseriesdefaulttrendlinersquaredopacity());
      if (hasTschchartseriesdefaulttrendlinersquaredopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaulttrendlinersquaredopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaulttrendlinersquaredopacity()));
      }
      result = result && (hasTschchartseriesdefaulttrendlinersquaredparagraphstyleindex() == other.hasTschchartseriesdefaulttrendlinersquaredparagraphstyleindex());
      if (hasTschchartseriesdefaulttrendlinersquaredparagraphstyleindex()) {
        result = result && (getTschchartseriesdefaulttrendlinersquaredparagraphstyleindex()
            == other.getTschchartseriesdefaulttrendlinersquaredparagraphstyleindex());
      }
      result = result && (hasTschchartseriesdefaulttrendlineshadow() == other.hasTschchartseriesdefaulttrendlineshadow());
      if (hasTschchartseriesdefaulttrendlineshadow()) {
        result = result && getTschchartseriesdefaulttrendlineshadow()
            .equals(other.getTschchartseriesdefaulttrendlineshadow());
      }
      result = result && (hasTschchartseriesdefaulttrendlinestroke() == other.hasTschchartseriesdefaulttrendlinestroke());
      if (hasTschchartseriesdefaulttrendlinestroke()) {
        result = result && getTschchartseriesdefaulttrendlinestroke()
            .equals(other.getTschchartseriesdefaulttrendlinestroke());
      }
      result = result && (hasTschchartseriesareavaluelabelposition() == other.hasTschchartseriesareavaluelabelposition());
      if (hasTschchartseriesareavaluelabelposition()) {
        result = result && (getTschchartseriesareavaluelabelposition()
            == other.getTschchartseriesareavaluelabelposition());
      }
      result = result && (hasTschchartseriesbarvaluelabelposition() == other.hasTschchartseriesbarvaluelabelposition());
      if (hasTschchartseriesbarvaluelabelposition()) {
        result = result && (getTschchartseriesbarvaluelabelposition()
            == other.getTschchartseriesbarvaluelabelposition());
      }
      result = result && (hasTschchartseriesbubblevaluelabelposition() == other.hasTschchartseriesbubblevaluelabelposition());
      if (hasTschchartseriesbubblevaluelabelposition()) {
        result = result && (getTschchartseriesbubblevaluelabelposition()
            == other.getTschchartseriesbubblevaluelabelposition());
      }
      result = result && (hasTschchartseriesdefaultvaluelabelposition() == other.hasTschchartseriesdefaultvaluelabelposition());
      if (hasTschchartseriesdefaultvaluelabelposition()) {
        result = result && (getTschchartseriesdefaultvaluelabelposition()
            == other.getTschchartseriesdefaultvaluelabelposition());
      }
      result = result && (hasTschchartserieslinevaluelabelposition() == other.hasTschchartserieslinevaluelabelposition());
      if (hasTschchartserieslinevaluelabelposition()) {
        result = result && (getTschchartserieslinevaluelabelposition()
            == other.getTschchartserieslinevaluelabelposition());
      }
      result = result && (hasTschchartseriesmixedareavaluelabelposition() == other.hasTschchartseriesmixedareavaluelabelposition());
      if (hasTschchartseriesmixedareavaluelabelposition()) {
        result = result && (getTschchartseriesmixedareavaluelabelposition()
            == other.getTschchartseriesmixedareavaluelabelposition());
      }
      result = result && (hasTschchartseriesmixedcolumnvaluelabelposition() == other.hasTschchartseriesmixedcolumnvaluelabelposition());
      if (hasTschchartseriesmixedcolumnvaluelabelposition()) {
        result = result && (getTschchartseriesmixedcolumnvaluelabelposition()
            == other.getTschchartseriesmixedcolumnvaluelabelposition());
      }
      result = result && (hasTschchartseriesmixedlinevaluelabelposition() == other.hasTschchartseriesmixedlinevaluelabelposition());
      if (hasTschchartseriesmixedlinevaluelabelposition()) {
        result = result && (getTschchartseriesmixedlinevaluelabelposition()
            == other.getTschchartseriesmixedlinevaluelabelposition());
      }
      result = result && (hasTschchartseriesscattervaluelabelposition() == other.hasTschchartseriesscattervaluelabelposition());
      if (hasTschchartseriesscattervaluelabelposition()) {
        result = result && (getTschchartseriesscattervaluelabelposition()
            == other.getTschchartseriesscattervaluelabelposition());
      }
      result = result && (hasTschchartseriesstackedareavaluelabelposition() == other.hasTschchartseriesstackedareavaluelabelposition());
      if (hasTschchartseriesstackedareavaluelabelposition()) {
        result = result && (getTschchartseriesstackedareavaluelabelposition()
            == other.getTschchartseriesstackedareavaluelabelposition());
      }
      result = result && (hasTschchartseriesstackedbarvaluelabelposition() == other.hasTschchartseriesstackedbarvaluelabelposition());
      if (hasTschchartseriesstackedbarvaluelabelposition()) {
        result = result && (getTschchartseriesstackedbarvaluelabelposition()
            == other.getTschchartseriesstackedbarvaluelabelposition());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTschchartseriesdefaulterrorbarlineend()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARLINEEND_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbarlineend().hashCode();
      }
      if (hasTschchartseriesdefaulterrorbarlineendscatterx()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARLINEENDSCATTERX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbarlineendscatterx().hashCode();
      }
      if (hasTschchartseriesdefaulterrorbarshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARSHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbarshadow().hashCode();
      }
      if (hasTschchartseriesdefaulterrorbarstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbarstroke().hashCode();
      }
      if (hasTschchartseriesdefaulterrorbarstrokescatterx()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARSTROKESCATTERX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbarstrokescatterx().hashCode();
      }
      if (hasTschchartseries3Dareafill()) {
        hash = (37 * hash) + TSCHCHARTSERIES3DAREAFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseries3Dareafill().hashCode();
      }
      if (hasTschchartseries3Dbarfill()) {
        hash = (37 * hash) + TSCHCHARTSERIES3DBARFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseries3Dbarfill().hashCode();
      }
      if (hasTschchartseries3Dcolumnfill()) {
        hash = (37 * hash) + TSCHCHARTSERIES3DCOLUMNFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseries3Dcolumnfill().hashCode();
      }
      if (hasTschchartseries3Dlinefill()) {
        hash = (37 * hash) + TSCHCHARTSERIES3DLINEFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseries3Dlinefill().hashCode();
      }
      if (hasTschchartseries3Dpiefill()) {
        hash = (37 * hash) + TSCHCHARTSERIES3DPIEFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseries3Dpiefill().hashCode();
      }
      if (hasTschchartseriesareafill()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREAFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesareafill().hashCode();
      }
      if (hasTschchartseriesbarfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESBARFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbarfill().hashCode();
      }
      if (hasTschchartseriescolumnfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESCOLUMNFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriescolumnfill().hashCode();
      }
      if (hasTschchartseriesdefaultfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaultfill().hashCode();
      }
      if (hasTschchartseriesmixedareafill()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDAREAFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedareafill().hashCode();
      }
      if (hasTschchartseriesmixedcolumnfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDCOLUMNFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedcolumnfill().hashCode();
      }
      if (hasTschchartseriespiefill()) {
        hash = (37 * hash) + TSCHCHARTSERIESPIEFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriespiefill().hashCode();
      }
      if (hasTschchartseriesarealabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREALABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesarealabelparagraphstyleindex();
      }
      if (hasTschchartseriesbarlabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESBARLABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbarlabelparagraphstyleindex();
      }
      if (hasTschchartseriesdefaultlabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTLABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaultlabelparagraphstyleindex();
      }
      if (hasTschchartserieslinelabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartserieslinelabelparagraphstyleindex();
      }
      if (hasTschchartseriesmixedlabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDLABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedlabelparagraphstyleindex();
      }
      if (hasTschchartseriespielabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESPIELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriespielabelparagraphstyleindex();
      }
      if (hasTschchartseriesdefaultopacity()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaultopacity());
      }
      if (hasTschchartseriesareaoutsidelabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREAOUTSIDELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesareaoutsidelabelparagraphstyleindex();
      }
      if (hasTschchartseriesbaroutsidelabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESBAROUTSIDELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbaroutsidelabelparagraphstyleindex();
      }
      if (hasTschchartseriesdefaultoutsidelabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTOUTSIDELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaultoutsidelabelparagraphstyleindex();
      }
      if (hasTschchartseriesmixedoutsidelabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDOUTSIDELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedoutsidelabelparagraphstyleindex();
      }
      if (hasTschchartseriespieoutsidelabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESPIEOUTSIDELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriespieoutsidelabelparagraphstyleindex();
      }
      if (hasTschchartseries3Dareashadow()) {
        hash = (37 * hash) + TSCHCHARTSERIES3DAREASHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseries3Dareashadow().hashCode();
      }
      if (hasTschchartseries3Dbarshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIES3DBARSHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseries3Dbarshadow().hashCode();
      }
      if (hasTschchartseries3Dcolumnshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIES3DCOLUMNSHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseries3Dcolumnshadow().hashCode();
      }
      if (hasTschchartseries3Dlineshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIES3DLINESHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseries3Dlineshadow().hashCode();
      }
      if (hasTschchartseries3Dpieshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIES3DPIESHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseries3Dpieshadow().hashCode();
      }
      if (hasTschchartseriesareashadow()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREASHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesareashadow().hashCode();
      }
      if (hasTschchartseriesbarshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIESBARSHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbarshadow().hashCode();
      }
      if (hasTschchartseriesbubbleshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIESBUBBLESHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbubbleshadow().hashCode();
      }
      if (hasTschchartseriesdefaultshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTSHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaultshadow().hashCode();
      }
      if (hasTschchartserieslineshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINESHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartserieslineshadow().hashCode();
      }
      if (hasTschchartseriesmixedareashadow()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDAREASHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedareashadow().hashCode();
      }
      if (hasTschchartseriesmixedcolumnshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDCOLUMNSHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedcolumnshadow().hashCode();
      }
      if (hasTschchartseriesmixedlineshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDLINESHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedlineshadow().hashCode();
      }
      if (hasTschchartseriespieshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIESPIESHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriespieshadow().hashCode();
      }
      if (hasTschchartseriesscattershadow()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERSHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesscattershadow().hashCode();
      }
      if (hasTschchartseriesareastroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREASTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesareastroke().hashCode();
      }
      if (hasTschchartseriesbarstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESBARSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbarstroke().hashCode();
      }
      if (hasTschchartseriesbubblestroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESBUBBLESTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbubblestroke().hashCode();
      }
      if (hasTschchartserieslinestroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINESTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartserieslinestroke().hashCode();
      }
      if (hasTschchartseriesmixedareastroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDAREASTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedareastroke().hashCode();
      }
      if (hasTschchartseriesmixedcolumnstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDCOLUMNSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedcolumnstroke().hashCode();
      }
      if (hasTschchartseriesmixedlinestroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDLINESTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedlinestroke().hashCode();
      }
      if (hasTschchartseriespiestroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESPIESTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriespiestroke().hashCode();
      }
      if (hasTschchartseriesscatterstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesscatterstroke().hashCode();
      }
      if (hasTschchartseriesareasymbolfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREASYMBOLFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesareasymbolfill().hashCode();
      }
      if (hasTschchartseriesbubblesymbolfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESBUBBLESYMBOLFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbubblesymbolfill().hashCode();
      }
      if (hasTschchartserieslinesymbolfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINESYMBOLFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartserieslinesymbolfill().hashCode();
      }
      if (hasTschchartseriesmixedareasymbolfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDAREASYMBOLFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedareasymbolfill().hashCode();
      }
      if (hasTschchartseriesmixedlinesymbolfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDLINESYMBOLFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedlinesymbolfill().hashCode();
      }
      if (hasTschchartseriesscattersymbolfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERSYMBOLFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesscattersymbolfill().hashCode();
      }
      if (hasTschchartseriesareasymbolfilluseseriesfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREASYMBOLFILLUSESERIESFILL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesareasymbolfilluseseriesfill());
      }
      if (hasTschchartserieslinesymbolfilluseseriesfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINESYMBOLFILLUSESERIESFILL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartserieslinesymbolfilluseseriesfill());
      }
      if (hasTschchartseriesmixedareasymbolfilluseseriesfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDAREASYMBOLFILLUSESERIESFILL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesmixedareasymbolfilluseseriesfill());
      }
      if (hasTschchartseriesmixedlinesymbolfilluseseriesfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDLINESYMBOLFILLUSESERIESFILL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesmixedlinesymbolfilluseseriesfill());
      }
      if (hasTschchartseriesareasymbolfilluseseriesstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREASYMBOLFILLUSESERIESSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesareasymbolfilluseseriesstroke());
      }
      if (hasTschchartseriesbubblesymbolfilluseseriesstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESBUBBLESYMBOLFILLUSESERIESSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesbubblesymbolfilluseseriesstroke());
      }
      if (hasTschchartserieslinesymbolfilluseseriesstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINESYMBOLFILLUSESERIESSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartserieslinesymbolfilluseseriesstroke());
      }
      if (hasTschchartseriesmixedareasymbolfilluseseriesstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDAREASYMBOLFILLUSESERIESSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesmixedareasymbolfilluseseriesstroke());
      }
      if (hasTschchartseriesmixedlinesymbolfilluseseriesstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDLINESYMBOLFILLUSESERIESSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesmixedlinesymbolfilluseseriesstroke());
      }
      if (hasTschchartseriesscattersymbolfilluseseriesstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERSYMBOLFILLUSESERIESSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesscattersymbolfilluseseriesstroke());
      }
      if (hasTschchartseriesareasymbolsize()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREASYMBOLSIZE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesareasymbolsize());
      }
      if (hasTschchartserieslinesymbolsize()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINESYMBOLSIZE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartserieslinesymbolsize());
      }
      if (hasTschchartseriesmixedareasymbolsize()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDAREASYMBOLSIZE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesmixedareasymbolsize());
      }
      if (hasTschchartseriesmixedlinesymbolsize()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDLINESYMBOLSIZE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesmixedlinesymbolsize());
      }
      if (hasTschchartseriesscattersymbolsize()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERSYMBOLSIZE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesscattersymbolsize());
      }
      if (hasTschchartseriesareasymbolstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREASYMBOLSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesareasymbolstroke().hashCode();
      }
      if (hasTschchartseriesbubblesymbolstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESBUBBLESYMBOLSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbubblesymbolstroke().hashCode();
      }
      if (hasTschchartserieslinesymbolstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINESYMBOLSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartserieslinesymbolstroke().hashCode();
      }
      if (hasTschchartseriesmixedareasymbolstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDAREASYMBOLSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedareasymbolstroke().hashCode();
      }
      if (hasTschchartseriesmixedlinesymbolstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDLINESYMBOLSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedlinesymbolstroke().hashCode();
      }
      if (hasTschchartseriesscattersymbolstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERSYMBOLSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesscattersymbolstroke().hashCode();
      }
      if (hasTschchartseriesdefaulttrendlineequationopacity()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINEEQUATIONOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaulttrendlineequationopacity());
      }
      if (hasTschchartseriesdefaulttrendlineequationparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINEEQUATIONPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulttrendlineequationparagraphstyleindex();
      }
      if (hasTschchartseriesdefaulttrendlinersquaredopacity()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINERSQUAREDOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaulttrendlinersquaredopacity());
      }
      if (hasTschchartseriesdefaulttrendlinersquaredparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINERSQUAREDPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulttrendlinersquaredparagraphstyleindex();
      }
      if (hasTschchartseriesdefaulttrendlineshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINESHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulttrendlineshadow().hashCode();
      }
      if (hasTschchartseriesdefaulttrendlinestroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINESTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulttrendlinestroke().hashCode();
      }
      if (hasTschchartseriesareavaluelabelposition()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREAVALUELABELPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesareavaluelabelposition();
      }
      if (hasTschchartseriesbarvaluelabelposition()) {
        hash = (37 * hash) + TSCHCHARTSERIESBARVALUELABELPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbarvaluelabelposition();
      }
      if (hasTschchartseriesbubblevaluelabelposition()) {
        hash = (37 * hash) + TSCHCHARTSERIESBUBBLEVALUELABELPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbubblevaluelabelposition();
      }
      if (hasTschchartseriesdefaultvaluelabelposition()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTVALUELABELPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaultvaluelabelposition();
      }
      if (hasTschchartserieslinevaluelabelposition()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINEVALUELABELPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartserieslinevaluelabelposition();
      }
      if (hasTschchartseriesmixedareavaluelabelposition()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDAREAVALUELABELPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedareavaluelabelposition();
      }
      if (hasTschchartseriesmixedcolumnvaluelabelposition()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDCOLUMNVALUELABELPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedcolumnvaluelabelposition();
      }
      if (hasTschchartseriesmixedlinevaluelabelposition()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDLINEVALUELABELPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedlinevaluelabelposition();
      }
      if (hasTschchartseriesscattervaluelabelposition()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERVALUELABELPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesscattervaluelabelposition();
      }
      if (hasTschchartseriesstackedareavaluelabelposition()) {
        hash = (37 * hash) + TSCHCHARTSERIESSTACKEDAREAVALUELABELPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesstackedareavaluelabelposition();
      }
      if (hasTschchartseriesstackedbarvaluelabelposition()) {
        hash = (37 * hash) + TSCHCHARTSERIESSTACKEDBARVALUELABELPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesstackedbarvaluelabelposition();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TSCH.Generated.ChartSeriesStyleArchive}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TSCH.Generated.ChartSeriesStyleArchive)
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchiveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartSeriesStyleArchive_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartSeriesStyleArchive_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive.class, org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive.Builder.class);
      }

      // Construct using TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTschchartseriesdefaulterrorbarlineendFieldBuilder();
          getTschchartseriesdefaulterrorbarlineendscatterxFieldBuilder();
          getTschchartseriesdefaulterrorbarshadowFieldBuilder();
          getTschchartseriesdefaulterrorbarstrokeFieldBuilder();
          getTschchartseriesdefaulterrorbarstrokescatterxFieldBuilder();
          getTschchartseries3DareafillFieldBuilder();
          getTschchartseries3DbarfillFieldBuilder();
          getTschchartseries3DcolumnfillFieldBuilder();
          getTschchartseries3DlinefillFieldBuilder();
          getTschchartseries3DpiefillFieldBuilder();
          getTschchartseriesareafillFieldBuilder();
          getTschchartseriesbarfillFieldBuilder();
          getTschchartseriescolumnfillFieldBuilder();
          getTschchartseriesdefaultfillFieldBuilder();
          getTschchartseriesmixedareafillFieldBuilder();
          getTschchartseriesmixedcolumnfillFieldBuilder();
          getTschchartseriespiefillFieldBuilder();
          getTschchartseries3DareashadowFieldBuilder();
          getTschchartseries3DbarshadowFieldBuilder();
          getTschchartseries3DcolumnshadowFieldBuilder();
          getTschchartseries3DlineshadowFieldBuilder();
          getTschchartseries3DpieshadowFieldBuilder();
          getTschchartseriesareashadowFieldBuilder();
          getTschchartseriesbarshadowFieldBuilder();
          getTschchartseriesbubbleshadowFieldBuilder();
          getTschchartseriesdefaultshadowFieldBuilder();
          getTschchartserieslineshadowFieldBuilder();
          getTschchartseriesmixedareashadowFieldBuilder();
          getTschchartseriesmixedcolumnshadowFieldBuilder();
          getTschchartseriesmixedlineshadowFieldBuilder();
          getTschchartseriespieshadowFieldBuilder();
          getTschchartseriesscattershadowFieldBuilder();
          getTschchartseriesareastrokeFieldBuilder();
          getTschchartseriesbarstrokeFieldBuilder();
          getTschchartseriesbubblestrokeFieldBuilder();
          getTschchartserieslinestrokeFieldBuilder();
          getTschchartseriesmixedareastrokeFieldBuilder();
          getTschchartseriesmixedcolumnstrokeFieldBuilder();
          getTschchartseriesmixedlinestrokeFieldBuilder();
          getTschchartseriespiestrokeFieldBuilder();
          getTschchartseriesscatterstrokeFieldBuilder();
          getTschchartseriesareasymbolfillFieldBuilder();
          getTschchartseriesbubblesymbolfillFieldBuilder();
          getTschchartserieslinesymbolfillFieldBuilder();
          getTschchartseriesmixedareasymbolfillFieldBuilder();
          getTschchartseriesmixedlinesymbolfillFieldBuilder();
          getTschchartseriesscattersymbolfillFieldBuilder();
          getTschchartseriesareasymbolstrokeFieldBuilder();
          getTschchartseriesbubblesymbolstrokeFieldBuilder();
          getTschchartserieslinesymbolstrokeFieldBuilder();
          getTschchartseriesmixedareasymbolstrokeFieldBuilder();
          getTschchartseriesmixedlinesymbolstrokeFieldBuilder();
          getTschchartseriesscattersymbolstrokeFieldBuilder();
          getTschchartseriesdefaulttrendlineshadowFieldBuilder();
          getTschchartseriesdefaulttrendlinestrokeFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (tschchartseriesdefaulterrorbarlineendBuilder_ == null) {
          tschchartseriesdefaulterrorbarlineend_ = null;
        } else {
          tschchartseriesdefaulterrorbarlineendBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (tschchartseriesdefaulterrorbarlineendscatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarlineendscatterx_ = null;
        } else {
          tschchartseriesdefaulterrorbarlineendscatterxBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (tschchartseriesdefaulterrorbarshadowBuilder_ == null) {
          tschchartseriesdefaulterrorbarshadow_ = null;
        } else {
          tschchartseriesdefaulterrorbarshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (tschchartseriesdefaulterrorbarstrokeBuilder_ == null) {
          tschchartseriesdefaulterrorbarstroke_ = null;
        } else {
          tschchartseriesdefaulterrorbarstrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (tschchartseriesdefaulterrorbarstrokescatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarstrokescatterx_ = null;
        } else {
          tschchartseriesdefaulterrorbarstrokescatterxBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (tschchartseries3DareafillBuilder_ == null) {
          tschchartseries3Dareafill_ = null;
        } else {
          tschchartseries3DareafillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (tschchartseries3DbarfillBuilder_ == null) {
          tschchartseries3Dbarfill_ = null;
        } else {
          tschchartseries3DbarfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (tschchartseries3DcolumnfillBuilder_ == null) {
          tschchartseries3Dcolumnfill_ = null;
        } else {
          tschchartseries3DcolumnfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (tschchartseries3DlinefillBuilder_ == null) {
          tschchartseries3Dlinefill_ = null;
        } else {
          tschchartseries3DlinefillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (tschchartseries3DpiefillBuilder_ == null) {
          tschchartseries3Dpiefill_ = null;
        } else {
          tschchartseries3DpiefillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (tschchartseriesareafillBuilder_ == null) {
          tschchartseriesareafill_ = null;
        } else {
          tschchartseriesareafillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        if (tschchartseriesbarfillBuilder_ == null) {
          tschchartseriesbarfill_ = null;
        } else {
          tschchartseriesbarfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        if (tschchartseriescolumnfillBuilder_ == null) {
          tschchartseriescolumnfill_ = null;
        } else {
          tschchartseriescolumnfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        if (tschchartseriesdefaultfillBuilder_ == null) {
          tschchartseriesdefaultfill_ = null;
        } else {
          tschchartseriesdefaultfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        if (tschchartseriesmixedareafillBuilder_ == null) {
          tschchartseriesmixedareafill_ = null;
        } else {
          tschchartseriesmixedareafillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        if (tschchartseriesmixedcolumnfillBuilder_ == null) {
          tschchartseriesmixedcolumnfill_ = null;
        } else {
          tschchartseriesmixedcolumnfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        if (tschchartseriespiefillBuilder_ == null) {
          tschchartseriespiefill_ = null;
        } else {
          tschchartseriespiefillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        tschchartseriesarealabelparagraphstyleindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        tschchartseriesbarlabelparagraphstyleindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        tschchartseriesdefaultlabelparagraphstyleindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        tschchartserieslinelabelparagraphstyleindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        tschchartseriesmixedlabelparagraphstyleindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        tschchartseriespielabelparagraphstyleindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        tschchartseriesdefaultopacity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00800000);
        tschchartseriesareaoutsidelabelparagraphstyleindex_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        tschchartseriesbaroutsidelabelparagraphstyleindex_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        tschchartseriesdefaultoutsidelabelparagraphstyleindex_ = 0;
        bitField0_ = (bitField0_ & ~0x04000000);
        tschchartseriesmixedoutsidelabelparagraphstyleindex_ = 0;
        bitField0_ = (bitField0_ & ~0x08000000);
        tschchartseriespieoutsidelabelparagraphstyleindex_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        if (tschchartseries3DareashadowBuilder_ == null) {
          tschchartseries3Dareashadow_ = null;
        } else {
          tschchartseries3DareashadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x20000000);
        if (tschchartseries3DbarshadowBuilder_ == null) {
          tschchartseries3Dbarshadow_ = null;
        } else {
          tschchartseries3DbarshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x40000000);
        if (tschchartseries3DcolumnshadowBuilder_ == null) {
          tschchartseries3Dcolumnshadow_ = null;
        } else {
          tschchartseries3DcolumnshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x80000000);
        if (tschchartseries3DlineshadowBuilder_ == null) {
          tschchartseries3Dlineshadow_ = null;
        } else {
          tschchartseries3DlineshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000001);
        if (tschchartseries3DpieshadowBuilder_ == null) {
          tschchartseries3Dpieshadow_ = null;
        } else {
          tschchartseries3DpieshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000002);
        if (tschchartseriesareashadowBuilder_ == null) {
          tschchartseriesareashadow_ = null;
        } else {
          tschchartseriesareashadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000004);
        if (tschchartseriesbarshadowBuilder_ == null) {
          tschchartseriesbarshadow_ = null;
        } else {
          tschchartseriesbarshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000008);
        if (tschchartseriesbubbleshadowBuilder_ == null) {
          tschchartseriesbubbleshadow_ = null;
        } else {
          tschchartseriesbubbleshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000010);
        if (tschchartseriesdefaultshadowBuilder_ == null) {
          tschchartseriesdefaultshadow_ = null;
        } else {
          tschchartseriesdefaultshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000020);
        if (tschchartserieslineshadowBuilder_ == null) {
          tschchartserieslineshadow_ = null;
        } else {
          tschchartserieslineshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000040);
        if (tschchartseriesmixedareashadowBuilder_ == null) {
          tschchartseriesmixedareashadow_ = null;
        } else {
          tschchartseriesmixedareashadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000080);
        if (tschchartseriesmixedcolumnshadowBuilder_ == null) {
          tschchartseriesmixedcolumnshadow_ = null;
        } else {
          tschchartseriesmixedcolumnshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000100);
        if (tschchartseriesmixedlineshadowBuilder_ == null) {
          tschchartseriesmixedlineshadow_ = null;
        } else {
          tschchartseriesmixedlineshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000200);
        if (tschchartseriespieshadowBuilder_ == null) {
          tschchartseriespieshadow_ = null;
        } else {
          tschchartseriespieshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000400);
        if (tschchartseriesscattershadowBuilder_ == null) {
          tschchartseriesscattershadow_ = null;
        } else {
          tschchartseriesscattershadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000800);
        if (tschchartseriesareastrokeBuilder_ == null) {
          tschchartseriesareastroke_ = null;
        } else {
          tschchartseriesareastrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00001000);
        if (tschchartseriesbarstrokeBuilder_ == null) {
          tschchartseriesbarstroke_ = null;
        } else {
          tschchartseriesbarstrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00002000);
        if (tschchartseriesbubblestrokeBuilder_ == null) {
          tschchartseriesbubblestroke_ = null;
        } else {
          tschchartseriesbubblestrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00004000);
        if (tschchartserieslinestrokeBuilder_ == null) {
          tschchartserieslinestroke_ = null;
        } else {
          tschchartserieslinestrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00008000);
        if (tschchartseriesmixedareastrokeBuilder_ == null) {
          tschchartseriesmixedareastroke_ = null;
        } else {
          tschchartseriesmixedareastrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00010000);
        if (tschchartseriesmixedcolumnstrokeBuilder_ == null) {
          tschchartseriesmixedcolumnstroke_ = null;
        } else {
          tschchartseriesmixedcolumnstrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00020000);
        if (tschchartseriesmixedlinestrokeBuilder_ == null) {
          tschchartseriesmixedlinestroke_ = null;
        } else {
          tschchartseriesmixedlinestrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00040000);
        if (tschchartseriespiestrokeBuilder_ == null) {
          tschchartseriespiestroke_ = null;
        } else {
          tschchartseriespiestrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00080000);
        if (tschchartseriesscatterstrokeBuilder_ == null) {
          tschchartseriesscatterstroke_ = null;
        } else {
          tschchartseriesscatterstrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00100000);
        if (tschchartseriesareasymbolfillBuilder_ == null) {
          tschchartseriesareasymbolfill_ = null;
        } else {
          tschchartseriesareasymbolfillBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00200000);
        if (tschchartseriesbubblesymbolfillBuilder_ == null) {
          tschchartseriesbubblesymbolfill_ = null;
        } else {
          tschchartseriesbubblesymbolfillBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00400000);
        if (tschchartserieslinesymbolfillBuilder_ == null) {
          tschchartserieslinesymbolfill_ = null;
        } else {
          tschchartserieslinesymbolfillBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00800000);
        if (tschchartseriesmixedareasymbolfillBuilder_ == null) {
          tschchartseriesmixedareasymbolfill_ = null;
        } else {
          tschchartseriesmixedareasymbolfillBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x01000000);
        if (tschchartseriesmixedlinesymbolfillBuilder_ == null) {
          tschchartseriesmixedlinesymbolfill_ = null;
        } else {
          tschchartseriesmixedlinesymbolfillBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x02000000);
        if (tschchartseriesscattersymbolfillBuilder_ == null) {
          tschchartseriesscattersymbolfill_ = null;
        } else {
          tschchartseriesscattersymbolfillBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x04000000);
        tschchartseriesareasymbolfilluseseriesfill_ = false;
        bitField1_ = (bitField1_ & ~0x08000000);
        tschchartserieslinesymbolfilluseseriesfill_ = false;
        bitField1_ = (bitField1_ & ~0x10000000);
        tschchartseriesmixedareasymbolfilluseseriesfill_ = false;
        bitField1_ = (bitField1_ & ~0x20000000);
        tschchartseriesmixedlinesymbolfilluseseriesfill_ = false;
        bitField1_ = (bitField1_ & ~0x40000000);
        tschchartseriesareasymbolfilluseseriesstroke_ = false;
        bitField1_ = (bitField1_ & ~0x80000000);
        tschchartseriesbubblesymbolfilluseseriesstroke_ = false;
        bitField2_ = (bitField2_ & ~0x00000001);
        tschchartserieslinesymbolfilluseseriesstroke_ = false;
        bitField2_ = (bitField2_ & ~0x00000002);
        tschchartseriesmixedareasymbolfilluseseriesstroke_ = false;
        bitField2_ = (bitField2_ & ~0x00000004);
        tschchartseriesmixedlinesymbolfilluseseriesstroke_ = false;
        bitField2_ = (bitField2_ & ~0x00000008);
        tschchartseriesscattersymbolfilluseseriesstroke_ = false;
        bitField2_ = (bitField2_ & ~0x00000010);
        tschchartseriesareasymbolsize_ = 0F;
        bitField2_ = (bitField2_ & ~0x00000020);
        tschchartserieslinesymbolsize_ = 0F;
        bitField2_ = (bitField2_ & ~0x00000040);
        tschchartseriesmixedareasymbolsize_ = 0F;
        bitField2_ = (bitField2_ & ~0x00000080);
        tschchartseriesmixedlinesymbolsize_ = 0F;
        bitField2_ = (bitField2_ & ~0x00000100);
        tschchartseriesscattersymbolsize_ = 0F;
        bitField2_ = (bitField2_ & ~0x00000200);
        if (tschchartseriesareasymbolstrokeBuilder_ == null) {
          tschchartseriesareasymbolstroke_ = null;
        } else {
          tschchartseriesareasymbolstrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000400);
        if (tschchartseriesbubblesymbolstrokeBuilder_ == null) {
          tschchartseriesbubblesymbolstroke_ = null;
        } else {
          tschchartseriesbubblesymbolstrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000800);
        if (tschchartserieslinesymbolstrokeBuilder_ == null) {
          tschchartserieslinesymbolstroke_ = null;
        } else {
          tschchartserieslinesymbolstrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00001000);
        if (tschchartseriesmixedareasymbolstrokeBuilder_ == null) {
          tschchartseriesmixedareasymbolstroke_ = null;
        } else {
          tschchartseriesmixedareasymbolstrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00002000);
        if (tschchartseriesmixedlinesymbolstrokeBuilder_ == null) {
          tschchartseriesmixedlinesymbolstroke_ = null;
        } else {
          tschchartseriesmixedlinesymbolstrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00004000);
        if (tschchartseriesscattersymbolstrokeBuilder_ == null) {
          tschchartseriesscattersymbolstroke_ = null;
        } else {
          tschchartseriesscattersymbolstrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00008000);
        tschchartseriesdefaulttrendlineequationopacity_ = 0F;
        bitField2_ = (bitField2_ & ~0x00010000);
        tschchartseriesdefaulttrendlineequationparagraphstyleindex_ = 0;
        bitField2_ = (bitField2_ & ~0x00020000);
        tschchartseriesdefaulttrendlinersquaredopacity_ = 0F;
        bitField2_ = (bitField2_ & ~0x00040000);
        tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_ = 0;
        bitField2_ = (bitField2_ & ~0x00080000);
        if (tschchartseriesdefaulttrendlineshadowBuilder_ == null) {
          tschchartseriesdefaulttrendlineshadow_ = null;
        } else {
          tschchartseriesdefaulttrendlineshadowBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00100000);
        if (tschchartseriesdefaulttrendlinestrokeBuilder_ == null) {
          tschchartseriesdefaulttrendlinestroke_ = null;
        } else {
          tschchartseriesdefaulttrendlinestrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00200000);
        tschchartseriesareavaluelabelposition_ = 0;
        bitField2_ = (bitField2_ & ~0x00400000);
        tschchartseriesbarvaluelabelposition_ = 0;
        bitField2_ = (bitField2_ & ~0x00800000);
        tschchartseriesbubblevaluelabelposition_ = 0;
        bitField2_ = (bitField2_ & ~0x01000000);
        tschchartseriesdefaultvaluelabelposition_ = 0;
        bitField2_ = (bitField2_ & ~0x02000000);
        tschchartserieslinevaluelabelposition_ = 0;
        bitField2_ = (bitField2_ & ~0x04000000);
        tschchartseriesmixedareavaluelabelposition_ = 0;
        bitField2_ = (bitField2_ & ~0x08000000);
        tschchartseriesmixedcolumnvaluelabelposition_ = 0;
        bitField2_ = (bitField2_ & ~0x10000000);
        tschchartseriesmixedlinevaluelabelposition_ = 0;
        bitField2_ = (bitField2_ & ~0x20000000);
        tschchartseriesscattervaluelabelposition_ = 0;
        bitField2_ = (bitField2_ & ~0x40000000);
        tschchartseriesstackedareavaluelabelposition_ = 0;
        bitField2_ = (bitField2_ & ~0x80000000);
        tschchartseriesstackedbarvaluelabelposition_ = 0;
        bitField3_ = (bitField3_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartSeriesStyleArchive_descriptor;
      }

      public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive getDefaultInstanceForType() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive.getDefaultInstance();
      }

      public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive build() {
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive buildPartial() {
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive result = new org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int from_bitField2_ = bitField2_;
        int from_bitField3_ = bitField3_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        int to_bitField2_ = 0;
        int to_bitField3_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (tschchartseriesdefaulterrorbarlineendBuilder_ == null) {
          result.tschchartseriesdefaulterrorbarlineend_ = tschchartseriesdefaulterrorbarlineend_;
        } else {
          result.tschchartseriesdefaulterrorbarlineend_ = tschchartseriesdefaulterrorbarlineendBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (tschchartseriesdefaulterrorbarlineendscatterxBuilder_ == null) {
          result.tschchartseriesdefaulterrorbarlineendscatterx_ = tschchartseriesdefaulterrorbarlineendscatterx_;
        } else {
          result.tschchartseriesdefaulterrorbarlineendscatterx_ = tschchartseriesdefaulterrorbarlineendscatterxBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (tschchartseriesdefaulterrorbarshadowBuilder_ == null) {
          result.tschchartseriesdefaulterrorbarshadow_ = tschchartseriesdefaulterrorbarshadow_;
        } else {
          result.tschchartseriesdefaulterrorbarshadow_ = tschchartseriesdefaulterrorbarshadowBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (tschchartseriesdefaulterrorbarstrokeBuilder_ == null) {
          result.tschchartseriesdefaulterrorbarstroke_ = tschchartseriesdefaulterrorbarstroke_;
        } else {
          result.tschchartseriesdefaulterrorbarstroke_ = tschchartseriesdefaulterrorbarstrokeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (tschchartseriesdefaulterrorbarstrokescatterxBuilder_ == null) {
          result.tschchartseriesdefaulterrorbarstrokescatterx_ = tschchartseriesdefaulterrorbarstrokescatterx_;
        } else {
          result.tschchartseriesdefaulterrorbarstrokescatterx_ = tschchartseriesdefaulterrorbarstrokescatterxBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (tschchartseries3DareafillBuilder_ == null) {
          result.tschchartseries3Dareafill_ = tschchartseries3Dareafill_;
        } else {
          result.tschchartseries3Dareafill_ = tschchartseries3DareafillBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (tschchartseries3DbarfillBuilder_ == null) {
          result.tschchartseries3Dbarfill_ = tschchartseries3Dbarfill_;
        } else {
          result.tschchartseries3Dbarfill_ = tschchartseries3DbarfillBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (tschchartseries3DcolumnfillBuilder_ == null) {
          result.tschchartseries3Dcolumnfill_ = tschchartseries3Dcolumnfill_;
        } else {
          result.tschchartseries3Dcolumnfill_ = tschchartseries3DcolumnfillBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (tschchartseries3DlinefillBuilder_ == null) {
          result.tschchartseries3Dlinefill_ = tschchartseries3Dlinefill_;
        } else {
          result.tschchartseries3Dlinefill_ = tschchartseries3DlinefillBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (tschchartseries3DpiefillBuilder_ == null) {
          result.tschchartseries3Dpiefill_ = tschchartseries3Dpiefill_;
        } else {
          result.tschchartseries3Dpiefill_ = tschchartseries3DpiefillBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (tschchartseriesareafillBuilder_ == null) {
          result.tschchartseriesareafill_ = tschchartseriesareafill_;
        } else {
          result.tschchartseriesareafill_ = tschchartseriesareafillBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        if (tschchartseriesbarfillBuilder_ == null) {
          result.tschchartseriesbarfill_ = tschchartseriesbarfill_;
        } else {
          result.tschchartseriesbarfill_ = tschchartseriesbarfillBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        if (tschchartseriescolumnfillBuilder_ == null) {
          result.tschchartseriescolumnfill_ = tschchartseriescolumnfill_;
        } else {
          result.tschchartseriescolumnfill_ = tschchartseriescolumnfillBuilder_.build();
        }
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        if (tschchartseriesdefaultfillBuilder_ == null) {
          result.tschchartseriesdefaultfill_ = tschchartseriesdefaultfill_;
        } else {
          result.tschchartseriesdefaultfill_ = tschchartseriesdefaultfillBuilder_.build();
        }
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        if (tschchartseriesmixedareafillBuilder_ == null) {
          result.tschchartseriesmixedareafill_ = tschchartseriesmixedareafill_;
        } else {
          result.tschchartseriesmixedareafill_ = tschchartseriesmixedareafillBuilder_.build();
        }
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        if (tschchartseriesmixedcolumnfillBuilder_ == null) {
          result.tschchartseriesmixedcolumnfill_ = tschchartseriesmixedcolumnfill_;
        } else {
          result.tschchartseriesmixedcolumnfill_ = tschchartseriesmixedcolumnfillBuilder_.build();
        }
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        if (tschchartseriespiefillBuilder_ == null) {
          result.tschchartseriespiefill_ = tschchartseriespiefill_;
        } else {
          result.tschchartseriespiefill_ = tschchartseriespiefillBuilder_.build();
        }
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.tschchartseriesarealabelparagraphstyleindex_ = tschchartseriesarealabelparagraphstyleindex_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.tschchartseriesbarlabelparagraphstyleindex_ = tschchartseriesbarlabelparagraphstyleindex_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.tschchartseriesdefaultlabelparagraphstyleindex_ = tschchartseriesdefaultlabelparagraphstyleindex_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.tschchartserieslinelabelparagraphstyleindex_ = tschchartserieslinelabelparagraphstyleindex_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.tschchartseriesmixedlabelparagraphstyleindex_ = tschchartseriesmixedlabelparagraphstyleindex_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.tschchartseriespielabelparagraphstyleindex_ = tschchartseriespielabelparagraphstyleindex_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.tschchartseriesdefaultopacity_ = tschchartseriesdefaultopacity_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.tschchartseriesareaoutsidelabelparagraphstyleindex_ = tschchartseriesareaoutsidelabelparagraphstyleindex_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.tschchartseriesbaroutsidelabelparagraphstyleindex_ = tschchartseriesbaroutsidelabelparagraphstyleindex_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.tschchartseriesdefaultoutsidelabelparagraphstyleindex_ = tschchartseriesdefaultoutsidelabelparagraphstyleindex_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.tschchartseriesmixedoutsidelabelparagraphstyleindex_ = tschchartseriesmixedoutsidelabelparagraphstyleindex_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.tschchartseriespieoutsidelabelparagraphstyleindex_ = tschchartseriespieoutsidelabelparagraphstyleindex_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        if (tschchartseries3DareashadowBuilder_ == null) {
          result.tschchartseries3Dareashadow_ = tschchartseries3Dareashadow_;
        } else {
          result.tschchartseries3Dareashadow_ = tschchartseries3DareashadowBuilder_.build();
        }
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        if (tschchartseries3DbarshadowBuilder_ == null) {
          result.tschchartseries3Dbarshadow_ = tschchartseries3Dbarshadow_;
        } else {
          result.tschchartseries3Dbarshadow_ = tschchartseries3DbarshadowBuilder_.build();
        }
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        if (tschchartseries3DcolumnshadowBuilder_ == null) {
          result.tschchartseries3Dcolumnshadow_ = tschchartseries3Dcolumnshadow_;
        } else {
          result.tschchartseries3Dcolumnshadow_ = tschchartseries3DcolumnshadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        if (tschchartseries3DlineshadowBuilder_ == null) {
          result.tschchartseries3Dlineshadow_ = tschchartseries3Dlineshadow_;
        } else {
          result.tschchartseries3Dlineshadow_ = tschchartseries3DlineshadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000002;
        }
        if (tschchartseries3DpieshadowBuilder_ == null) {
          result.tschchartseries3Dpieshadow_ = tschchartseries3Dpieshadow_;
        } else {
          result.tschchartseries3Dpieshadow_ = tschchartseries3DpieshadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000004;
        }
        if (tschchartseriesareashadowBuilder_ == null) {
          result.tschchartseriesareashadow_ = tschchartseriesareashadow_;
        } else {
          result.tschchartseriesareashadow_ = tschchartseriesareashadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000008;
        }
        if (tschchartseriesbarshadowBuilder_ == null) {
          result.tschchartseriesbarshadow_ = tschchartseriesbarshadow_;
        } else {
          result.tschchartseriesbarshadow_ = tschchartseriesbarshadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000010;
        }
        if (tschchartseriesbubbleshadowBuilder_ == null) {
          result.tschchartseriesbubbleshadow_ = tschchartseriesbubbleshadow_;
        } else {
          result.tschchartseriesbubbleshadow_ = tschchartseriesbubbleshadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000020;
        }
        if (tschchartseriesdefaultshadowBuilder_ == null) {
          result.tschchartseriesdefaultshadow_ = tschchartseriesdefaultshadow_;
        } else {
          result.tschchartseriesdefaultshadow_ = tschchartseriesdefaultshadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000040) == 0x00000040)) {
          to_bitField1_ |= 0x00000040;
        }
        if (tschchartserieslineshadowBuilder_ == null) {
          result.tschchartserieslineshadow_ = tschchartserieslineshadow_;
        } else {
          result.tschchartserieslineshadow_ = tschchartserieslineshadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000080) == 0x00000080)) {
          to_bitField1_ |= 0x00000080;
        }
        if (tschchartseriesmixedareashadowBuilder_ == null) {
          result.tschchartseriesmixedareashadow_ = tschchartseriesmixedareashadow_;
        } else {
          result.tschchartseriesmixedareashadow_ = tschchartseriesmixedareashadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000100) == 0x00000100)) {
          to_bitField1_ |= 0x00000100;
        }
        if (tschchartseriesmixedcolumnshadowBuilder_ == null) {
          result.tschchartseriesmixedcolumnshadow_ = tschchartseriesmixedcolumnshadow_;
        } else {
          result.tschchartseriesmixedcolumnshadow_ = tschchartseriesmixedcolumnshadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000200) == 0x00000200)) {
          to_bitField1_ |= 0x00000200;
        }
        if (tschchartseriesmixedlineshadowBuilder_ == null) {
          result.tschchartseriesmixedlineshadow_ = tschchartseriesmixedlineshadow_;
        } else {
          result.tschchartseriesmixedlineshadow_ = tschchartseriesmixedlineshadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000400) == 0x00000400)) {
          to_bitField1_ |= 0x00000400;
        }
        if (tschchartseriespieshadowBuilder_ == null) {
          result.tschchartseriespieshadow_ = tschchartseriespieshadow_;
        } else {
          result.tschchartseriespieshadow_ = tschchartseriespieshadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000800) == 0x00000800)) {
          to_bitField1_ |= 0x00000800;
        }
        if (tschchartseriesscattershadowBuilder_ == null) {
          result.tschchartseriesscattershadow_ = tschchartseriesscattershadow_;
        } else {
          result.tschchartseriesscattershadow_ = tschchartseriesscattershadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00001000) == 0x00001000)) {
          to_bitField1_ |= 0x00001000;
        }
        if (tschchartseriesareastrokeBuilder_ == null) {
          result.tschchartseriesareastroke_ = tschchartseriesareastroke_;
        } else {
          result.tschchartseriesareastroke_ = tschchartseriesareastrokeBuilder_.build();
        }
        if (((from_bitField1_ & 0x00002000) == 0x00002000)) {
          to_bitField1_ |= 0x00002000;
        }
        if (tschchartseriesbarstrokeBuilder_ == null) {
          result.tschchartseriesbarstroke_ = tschchartseriesbarstroke_;
        } else {
          result.tschchartseriesbarstroke_ = tschchartseriesbarstrokeBuilder_.build();
        }
        if (((from_bitField1_ & 0x00004000) == 0x00004000)) {
          to_bitField1_ |= 0x00004000;
        }
        if (tschchartseriesbubblestrokeBuilder_ == null) {
          result.tschchartseriesbubblestroke_ = tschchartseriesbubblestroke_;
        } else {
          result.tschchartseriesbubblestroke_ = tschchartseriesbubblestrokeBuilder_.build();
        }
        if (((from_bitField1_ & 0x00008000) == 0x00008000)) {
          to_bitField1_ |= 0x00008000;
        }
        if (tschchartserieslinestrokeBuilder_ == null) {
          result.tschchartserieslinestroke_ = tschchartserieslinestroke_;
        } else {
          result.tschchartserieslinestroke_ = tschchartserieslinestrokeBuilder_.build();
        }
        if (((from_bitField1_ & 0x00010000) == 0x00010000)) {
          to_bitField1_ |= 0x00010000;
        }
        if (tschchartseriesmixedareastrokeBuilder_ == null) {
          result.tschchartseriesmixedareastroke_ = tschchartseriesmixedareastroke_;
        } else {
          result.tschchartseriesmixedareastroke_ = tschchartseriesmixedareastrokeBuilder_.build();
        }
        if (((from_bitField1_ & 0x00020000) == 0x00020000)) {
          to_bitField1_ |= 0x00020000;
        }
        if (tschchartseriesmixedcolumnstrokeBuilder_ == null) {
          result.tschchartseriesmixedcolumnstroke_ = tschchartseriesmixedcolumnstroke_;
        } else {
          result.tschchartseriesmixedcolumnstroke_ = tschchartseriesmixedcolumnstrokeBuilder_.build();
        }
        if (((from_bitField1_ & 0x00040000) == 0x00040000)) {
          to_bitField1_ |= 0x00040000;
        }
        if (tschchartseriesmixedlinestrokeBuilder_ == null) {
          result.tschchartseriesmixedlinestroke_ = tschchartseriesmixedlinestroke_;
        } else {
          result.tschchartseriesmixedlinestroke_ = tschchartseriesmixedlinestrokeBuilder_.build();
        }
        if (((from_bitField1_ & 0x00080000) == 0x00080000)) {
          to_bitField1_ |= 0x00080000;
        }
        if (tschchartseriespiestrokeBuilder_ == null) {
          result.tschchartseriespiestroke_ = tschchartseriespiestroke_;
        } else {
          result.tschchartseriespiestroke_ = tschchartseriespiestrokeBuilder_.build();
        }
        if (((from_bitField1_ & 0x00100000) == 0x00100000)) {
          to_bitField1_ |= 0x00100000;
        }
        if (tschchartseriesscatterstrokeBuilder_ == null) {
          result.tschchartseriesscatterstroke_ = tschchartseriesscatterstroke_;
        } else {
          result.tschchartseriesscatterstroke_ = tschchartseriesscatterstrokeBuilder_.build();
        }
        if (((from_bitField1_ & 0x00200000) == 0x00200000)) {
          to_bitField1_ |= 0x00200000;
        }
        if (tschchartseriesareasymbolfillBuilder_ == null) {
          result.tschchartseriesareasymbolfill_ = tschchartseriesareasymbolfill_;
        } else {
          result.tschchartseriesareasymbolfill_ = tschchartseriesareasymbolfillBuilder_.build();
        }
        if (((from_bitField1_ & 0x00400000) == 0x00400000)) {
          to_bitField1_ |= 0x00400000;
        }
        if (tschchartseriesbubblesymbolfillBuilder_ == null) {
          result.tschchartseriesbubblesymbolfill_ = tschchartseriesbubblesymbolfill_;
        } else {
          result.tschchartseriesbubblesymbolfill_ = tschchartseriesbubblesymbolfillBuilder_.build();
        }
        if (((from_bitField1_ & 0x00800000) == 0x00800000)) {
          to_bitField1_ |= 0x00800000;
        }
        if (tschchartserieslinesymbolfillBuilder_ == null) {
          result.tschchartserieslinesymbolfill_ = tschchartserieslinesymbolfill_;
        } else {
          result.tschchartserieslinesymbolfill_ = tschchartserieslinesymbolfillBuilder_.build();
        }
        if (((from_bitField1_ & 0x01000000) == 0x01000000)) {
          to_bitField1_ |= 0x01000000;
        }
        if (tschchartseriesmixedareasymbolfillBuilder_ == null) {
          result.tschchartseriesmixedareasymbolfill_ = tschchartseriesmixedareasymbolfill_;
        } else {
          result.tschchartseriesmixedareasymbolfill_ = tschchartseriesmixedareasymbolfillBuilder_.build();
        }
        if (((from_bitField1_ & 0x02000000) == 0x02000000)) {
          to_bitField1_ |= 0x02000000;
        }
        if (tschchartseriesmixedlinesymbolfillBuilder_ == null) {
          result.tschchartseriesmixedlinesymbolfill_ = tschchartseriesmixedlinesymbolfill_;
        } else {
          result.tschchartseriesmixedlinesymbolfill_ = tschchartseriesmixedlinesymbolfillBuilder_.build();
        }
        if (((from_bitField1_ & 0x04000000) == 0x04000000)) {
          to_bitField1_ |= 0x04000000;
        }
        if (tschchartseriesscattersymbolfillBuilder_ == null) {
          result.tschchartseriesscattersymbolfill_ = tschchartseriesscattersymbolfill_;
        } else {
          result.tschchartseriesscattersymbolfill_ = tschchartseriesscattersymbolfillBuilder_.build();
        }
        if (((from_bitField1_ & 0x08000000) == 0x08000000)) {
          to_bitField1_ |= 0x08000000;
        }
        result.tschchartseriesareasymbolfilluseseriesfill_ = tschchartseriesareasymbolfilluseseriesfill_;
        if (((from_bitField1_ & 0x10000000) == 0x10000000)) {
          to_bitField1_ |= 0x10000000;
        }
        result.tschchartserieslinesymbolfilluseseriesfill_ = tschchartserieslinesymbolfilluseseriesfill_;
        if (((from_bitField1_ & 0x20000000) == 0x20000000)) {
          to_bitField1_ |= 0x20000000;
        }
        result.tschchartseriesmixedareasymbolfilluseseriesfill_ = tschchartseriesmixedareasymbolfilluseseriesfill_;
        if (((from_bitField1_ & 0x40000000) == 0x40000000)) {
          to_bitField1_ |= 0x40000000;
        }
        result.tschchartseriesmixedlinesymbolfilluseseriesfill_ = tschchartseriesmixedlinesymbolfilluseseriesfill_;
        if (((from_bitField1_ & 0x80000000) == 0x80000000)) {
          to_bitField1_ |= 0x80000000;
        }
        result.tschchartseriesareasymbolfilluseseriesstroke_ = tschchartseriesareasymbolfilluseseriesstroke_;
        if (((from_bitField2_ & 0x00000001) == 0x00000001)) {
          to_bitField2_ |= 0x00000001;
        }
        result.tschchartseriesbubblesymbolfilluseseriesstroke_ = tschchartseriesbubblesymbolfilluseseriesstroke_;
        if (((from_bitField2_ & 0x00000002) == 0x00000002)) {
          to_bitField2_ |= 0x00000002;
        }
        result.tschchartserieslinesymbolfilluseseriesstroke_ = tschchartserieslinesymbolfilluseseriesstroke_;
        if (((from_bitField2_ & 0x00000004) == 0x00000004)) {
          to_bitField2_ |= 0x00000004;
        }
        result.tschchartseriesmixedareasymbolfilluseseriesstroke_ = tschchartseriesmixedareasymbolfilluseseriesstroke_;
        if (((from_bitField2_ & 0x00000008) == 0x00000008)) {
          to_bitField2_ |= 0x00000008;
        }
        result.tschchartseriesmixedlinesymbolfilluseseriesstroke_ = tschchartseriesmixedlinesymbolfilluseseriesstroke_;
        if (((from_bitField2_ & 0x00000010) == 0x00000010)) {
          to_bitField2_ |= 0x00000010;
        }
        result.tschchartseriesscattersymbolfilluseseriesstroke_ = tschchartseriesscattersymbolfilluseseriesstroke_;
        if (((from_bitField2_ & 0x00000020) == 0x00000020)) {
          to_bitField2_ |= 0x00000020;
        }
        result.tschchartseriesareasymbolsize_ = tschchartseriesareasymbolsize_;
        if (((from_bitField2_ & 0x00000040) == 0x00000040)) {
          to_bitField2_ |= 0x00000040;
        }
        result.tschchartserieslinesymbolsize_ = tschchartserieslinesymbolsize_;
        if (((from_bitField2_ & 0x00000080) == 0x00000080)) {
          to_bitField2_ |= 0x00000080;
        }
        result.tschchartseriesmixedareasymbolsize_ = tschchartseriesmixedareasymbolsize_;
        if (((from_bitField2_ & 0x00000100) == 0x00000100)) {
          to_bitField2_ |= 0x00000100;
        }
        result.tschchartseriesmixedlinesymbolsize_ = tschchartseriesmixedlinesymbolsize_;
        if (((from_bitField2_ & 0x00000200) == 0x00000200)) {
          to_bitField2_ |= 0x00000200;
        }
        result.tschchartseriesscattersymbolsize_ = tschchartseriesscattersymbolsize_;
        if (((from_bitField2_ & 0x00000400) == 0x00000400)) {
          to_bitField2_ |= 0x00000400;
        }
        if (tschchartseriesareasymbolstrokeBuilder_ == null) {
          result.tschchartseriesareasymbolstroke_ = tschchartseriesareasymbolstroke_;
        } else {
          result.tschchartseriesareasymbolstroke_ = tschchartseriesareasymbolstrokeBuilder_.build();
        }
        if (((from_bitField2_ & 0x00000800) == 0x00000800)) {
          to_bitField2_ |= 0x00000800;
        }
        if (tschchartseriesbubblesymbolstrokeBuilder_ == null) {
          result.tschchartseriesbubblesymbolstroke_ = tschchartseriesbubblesymbolstroke_;
        } else {
          result.tschchartseriesbubblesymbolstroke_ = tschchartseriesbubblesymbolstrokeBuilder_.build();
        }
        if (((from_bitField2_ & 0x00001000) == 0x00001000)) {
          to_bitField2_ |= 0x00001000;
        }
        if (tschchartserieslinesymbolstrokeBuilder_ == null) {
          result.tschchartserieslinesymbolstroke_ = tschchartserieslinesymbolstroke_;
        } else {
          result.tschchartserieslinesymbolstroke_ = tschchartserieslinesymbolstrokeBuilder_.build();
        }
        if (((from_bitField2_ & 0x00002000) == 0x00002000)) {
          to_bitField2_ |= 0x00002000;
        }
        if (tschchartseriesmixedareasymbolstrokeBuilder_ == null) {
          result.tschchartseriesmixedareasymbolstroke_ = tschchartseriesmixedareasymbolstroke_;
        } else {
          result.tschchartseriesmixedareasymbolstroke_ = tschchartseriesmixedareasymbolstrokeBuilder_.build();
        }
        if (((from_bitField2_ & 0x00004000) == 0x00004000)) {
          to_bitField2_ |= 0x00004000;
        }
        if (tschchartseriesmixedlinesymbolstrokeBuilder_ == null) {
          result.tschchartseriesmixedlinesymbolstroke_ = tschchartseriesmixedlinesymbolstroke_;
        } else {
          result.tschchartseriesmixedlinesymbolstroke_ = tschchartseriesmixedlinesymbolstrokeBuilder_.build();
        }
        if (((from_bitField2_ & 0x00008000) == 0x00008000)) {
          to_bitField2_ |= 0x00008000;
        }
        if (tschchartseriesscattersymbolstrokeBuilder_ == null) {
          result.tschchartseriesscattersymbolstroke_ = tschchartseriesscattersymbolstroke_;
        } else {
          result.tschchartseriesscattersymbolstroke_ = tschchartseriesscattersymbolstrokeBuilder_.build();
        }
        if (((from_bitField2_ & 0x00010000) == 0x00010000)) {
          to_bitField2_ |= 0x00010000;
        }
        result.tschchartseriesdefaulttrendlineequationopacity_ = tschchartseriesdefaulttrendlineequationopacity_;
        if (((from_bitField2_ & 0x00020000) == 0x00020000)) {
          to_bitField2_ |= 0x00020000;
        }
        result.tschchartseriesdefaulttrendlineequationparagraphstyleindex_ = tschchartseriesdefaulttrendlineequationparagraphstyleindex_;
        if (((from_bitField2_ & 0x00040000) == 0x00040000)) {
          to_bitField2_ |= 0x00040000;
        }
        result.tschchartseriesdefaulttrendlinersquaredopacity_ = tschchartseriesdefaulttrendlinersquaredopacity_;
        if (((from_bitField2_ & 0x00080000) == 0x00080000)) {
          to_bitField2_ |= 0x00080000;
        }
        result.tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_ = tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_;
        if (((from_bitField2_ & 0x00100000) == 0x00100000)) {
          to_bitField2_ |= 0x00100000;
        }
        if (tschchartseriesdefaulttrendlineshadowBuilder_ == null) {
          result.tschchartseriesdefaulttrendlineshadow_ = tschchartseriesdefaulttrendlineshadow_;
        } else {
          result.tschchartseriesdefaulttrendlineshadow_ = tschchartseriesdefaulttrendlineshadowBuilder_.build();
        }
        if (((from_bitField2_ & 0x00200000) == 0x00200000)) {
          to_bitField2_ |= 0x00200000;
        }
        if (tschchartseriesdefaulttrendlinestrokeBuilder_ == null) {
          result.tschchartseriesdefaulttrendlinestroke_ = tschchartseriesdefaulttrendlinestroke_;
        } else {
          result.tschchartseriesdefaulttrendlinestroke_ = tschchartseriesdefaulttrendlinestrokeBuilder_.build();
        }
        if (((from_bitField2_ & 0x00400000) == 0x00400000)) {
          to_bitField2_ |= 0x00400000;
        }
        result.tschchartseriesareavaluelabelposition_ = tschchartseriesareavaluelabelposition_;
        if (((from_bitField2_ & 0x00800000) == 0x00800000)) {
          to_bitField2_ |= 0x00800000;
        }
        result.tschchartseriesbarvaluelabelposition_ = tschchartseriesbarvaluelabelposition_;
        if (((from_bitField2_ & 0x01000000) == 0x01000000)) {
          to_bitField2_ |= 0x01000000;
        }
        result.tschchartseriesbubblevaluelabelposition_ = tschchartseriesbubblevaluelabelposition_;
        if (((from_bitField2_ & 0x02000000) == 0x02000000)) {
          to_bitField2_ |= 0x02000000;
        }
        result.tschchartseriesdefaultvaluelabelposition_ = tschchartseriesdefaultvaluelabelposition_;
        if (((from_bitField2_ & 0x04000000) == 0x04000000)) {
          to_bitField2_ |= 0x04000000;
        }
        result.tschchartserieslinevaluelabelposition_ = tschchartserieslinevaluelabelposition_;
        if (((from_bitField2_ & 0x08000000) == 0x08000000)) {
          to_bitField2_ |= 0x08000000;
        }
        result.tschchartseriesmixedareavaluelabelposition_ = tschchartseriesmixedareavaluelabelposition_;
        if (((from_bitField2_ & 0x10000000) == 0x10000000)) {
          to_bitField2_ |= 0x10000000;
        }
        result.tschchartseriesmixedcolumnvaluelabelposition_ = tschchartseriesmixedcolumnvaluelabelposition_;
        if (((from_bitField2_ & 0x20000000) == 0x20000000)) {
          to_bitField2_ |= 0x20000000;
        }
        result.tschchartseriesmixedlinevaluelabelposition_ = tschchartseriesmixedlinevaluelabelposition_;
        if (((from_bitField2_ & 0x40000000) == 0x40000000)) {
          to_bitField2_ |= 0x40000000;
        }
        result.tschchartseriesscattervaluelabelposition_ = tschchartseriesscattervaluelabelposition_;
        if (((from_bitField2_ & 0x80000000) == 0x80000000)) {
          to_bitField2_ |= 0x80000000;
        }
        result.tschchartseriesstackedareavaluelabelposition_ = tschchartseriesstackedareavaluelabelposition_;
        if (((from_bitField3_ & 0x00000001) == 0x00000001)) {
          to_bitField3_ |= 0x00000001;
        }
        result.tschchartseriesstackedbarvaluelabelposition_ = tschchartseriesstackedbarvaluelabelposition_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        result.bitField2_ = to_bitField2_;
        result.bitField3_ = to_bitField3_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive) {
          return mergeFrom((org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive other) {
        if (other == org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive.getDefaultInstance()) return this;
        if (other.hasTschchartseriesdefaulterrorbarlineend()) {
          mergeTschchartseriesdefaulterrorbarlineend(other.getTschchartseriesdefaulterrorbarlineend());
        }
        if (other.hasTschchartseriesdefaulterrorbarlineendscatterx()) {
          mergeTschchartseriesdefaulterrorbarlineendscatterx(other.getTschchartseriesdefaulterrorbarlineendscatterx());
        }
        if (other.hasTschchartseriesdefaulterrorbarshadow()) {
          mergeTschchartseriesdefaulterrorbarshadow(other.getTschchartseriesdefaulterrorbarshadow());
        }
        if (other.hasTschchartseriesdefaulterrorbarstroke()) {
          mergeTschchartseriesdefaulterrorbarstroke(other.getTschchartseriesdefaulterrorbarstroke());
        }
        if (other.hasTschchartseriesdefaulterrorbarstrokescatterx()) {
          mergeTschchartseriesdefaulterrorbarstrokescatterx(other.getTschchartseriesdefaulterrorbarstrokescatterx());
        }
        if (other.hasTschchartseries3Dareafill()) {
          mergeTschchartseries3Dareafill(other.getTschchartseries3Dareafill());
        }
        if (other.hasTschchartseries3Dbarfill()) {
          mergeTschchartseries3Dbarfill(other.getTschchartseries3Dbarfill());
        }
        if (other.hasTschchartseries3Dcolumnfill()) {
          mergeTschchartseries3Dcolumnfill(other.getTschchartseries3Dcolumnfill());
        }
        if (other.hasTschchartseries3Dlinefill()) {
          mergeTschchartseries3Dlinefill(other.getTschchartseries3Dlinefill());
        }
        if (other.hasTschchartseries3Dpiefill()) {
          mergeTschchartseries3Dpiefill(other.getTschchartseries3Dpiefill());
        }
        if (other.hasTschchartseriesareafill()) {
          mergeTschchartseriesareafill(other.getTschchartseriesareafill());
        }
        if (other.hasTschchartseriesbarfill()) {
          mergeTschchartseriesbarfill(other.getTschchartseriesbarfill());
        }
        if (other.hasTschchartseriescolumnfill()) {
          mergeTschchartseriescolumnfill(other.getTschchartseriescolumnfill());
        }
        if (other.hasTschchartseriesdefaultfill()) {
          mergeTschchartseriesdefaultfill(other.getTschchartseriesdefaultfill());
        }
        if (other.hasTschchartseriesmixedareafill()) {
          mergeTschchartseriesmixedareafill(other.getTschchartseriesmixedareafill());
        }
        if (other.hasTschchartseriesmixedcolumnfill()) {
          mergeTschchartseriesmixedcolumnfill(other.getTschchartseriesmixedcolumnfill());
        }
        if (other.hasTschchartseriespiefill()) {
          mergeTschchartseriespiefill(other.getTschchartseriespiefill());
        }
        if (other.hasTschchartseriesarealabelparagraphstyleindex()) {
          setTschchartseriesarealabelparagraphstyleindex(other.getTschchartseriesarealabelparagraphstyleindex());
        }
        if (other.hasTschchartseriesbarlabelparagraphstyleindex()) {
          setTschchartseriesbarlabelparagraphstyleindex(other.getTschchartseriesbarlabelparagraphstyleindex());
        }
        if (other.hasTschchartseriesdefaultlabelparagraphstyleindex()) {
          setTschchartseriesdefaultlabelparagraphstyleindex(other.getTschchartseriesdefaultlabelparagraphstyleindex());
        }
        if (other.hasTschchartserieslinelabelparagraphstyleindex()) {
          setTschchartserieslinelabelparagraphstyleindex(other.getTschchartserieslinelabelparagraphstyleindex());
        }
        if (other.hasTschchartseriesmixedlabelparagraphstyleindex()) {
          setTschchartseriesmixedlabelparagraphstyleindex(other.getTschchartseriesmixedlabelparagraphstyleindex());
        }
        if (other.hasTschchartseriespielabelparagraphstyleindex()) {
          setTschchartseriespielabelparagraphstyleindex(other.getTschchartseriespielabelparagraphstyleindex());
        }
        if (other.hasTschchartseriesdefaultopacity()) {
          setTschchartseriesdefaultopacity(other.getTschchartseriesdefaultopacity());
        }
        if (other.hasTschchartseriesareaoutsidelabelparagraphstyleindex()) {
          setTschchartseriesareaoutsidelabelparagraphstyleindex(other.getTschchartseriesareaoutsidelabelparagraphstyleindex());
        }
        if (other.hasTschchartseriesbaroutsidelabelparagraphstyleindex()) {
          setTschchartseriesbaroutsidelabelparagraphstyleindex(other.getTschchartseriesbaroutsidelabelparagraphstyleindex());
        }
        if (other.hasTschchartseriesdefaultoutsidelabelparagraphstyleindex()) {
          setTschchartseriesdefaultoutsidelabelparagraphstyleindex(other.getTschchartseriesdefaultoutsidelabelparagraphstyleindex());
        }
        if (other.hasTschchartseriesmixedoutsidelabelparagraphstyleindex()) {
          setTschchartseriesmixedoutsidelabelparagraphstyleindex(other.getTschchartseriesmixedoutsidelabelparagraphstyleindex());
        }
        if (other.hasTschchartseriespieoutsidelabelparagraphstyleindex()) {
          setTschchartseriespieoutsidelabelparagraphstyleindex(other.getTschchartseriespieoutsidelabelparagraphstyleindex());
        }
        if (other.hasTschchartseries3Dareashadow()) {
          mergeTschchartseries3Dareashadow(other.getTschchartseries3Dareashadow());
        }
        if (other.hasTschchartseries3Dbarshadow()) {
          mergeTschchartseries3Dbarshadow(other.getTschchartseries3Dbarshadow());
        }
        if (other.hasTschchartseries3Dcolumnshadow()) {
          mergeTschchartseries3Dcolumnshadow(other.getTschchartseries3Dcolumnshadow());
        }
        if (other.hasTschchartseries3Dlineshadow()) {
          mergeTschchartseries3Dlineshadow(other.getTschchartseries3Dlineshadow());
        }
        if (other.hasTschchartseries3Dpieshadow()) {
          mergeTschchartseries3Dpieshadow(other.getTschchartseries3Dpieshadow());
        }
        if (other.hasTschchartseriesareashadow()) {
          mergeTschchartseriesareashadow(other.getTschchartseriesareashadow());
        }
        if (other.hasTschchartseriesbarshadow()) {
          mergeTschchartseriesbarshadow(other.getTschchartseriesbarshadow());
        }
        if (other.hasTschchartseriesbubbleshadow()) {
          mergeTschchartseriesbubbleshadow(other.getTschchartseriesbubbleshadow());
        }
        if (other.hasTschchartseriesdefaultshadow()) {
          mergeTschchartseriesdefaultshadow(other.getTschchartseriesdefaultshadow());
        }
        if (other.hasTschchartserieslineshadow()) {
          mergeTschchartserieslineshadow(other.getTschchartserieslineshadow());
        }
        if (other.hasTschchartseriesmixedareashadow()) {
          mergeTschchartseriesmixedareashadow(other.getTschchartseriesmixedareashadow());
        }
        if (other.hasTschchartseriesmixedcolumnshadow()) {
          mergeTschchartseriesmixedcolumnshadow(other.getTschchartseriesmixedcolumnshadow());
        }
        if (other.hasTschchartseriesmixedlineshadow()) {
          mergeTschchartseriesmixedlineshadow(other.getTschchartseriesmixedlineshadow());
        }
        if (other.hasTschchartseriespieshadow()) {
          mergeTschchartseriespieshadow(other.getTschchartseriespieshadow());
        }
        if (other.hasTschchartseriesscattershadow()) {
          mergeTschchartseriesscattershadow(other.getTschchartseriesscattershadow());
        }
        if (other.hasTschchartseriesareastroke()) {
          mergeTschchartseriesareastroke(other.getTschchartseriesareastroke());
        }
        if (other.hasTschchartseriesbarstroke()) {
          mergeTschchartseriesbarstroke(other.getTschchartseriesbarstroke());
        }
        if (other.hasTschchartseriesbubblestroke()) {
          mergeTschchartseriesbubblestroke(other.getTschchartseriesbubblestroke());
        }
        if (other.hasTschchartserieslinestroke()) {
          mergeTschchartserieslinestroke(other.getTschchartserieslinestroke());
        }
        if (other.hasTschchartseriesmixedareastroke()) {
          mergeTschchartseriesmixedareastroke(other.getTschchartseriesmixedareastroke());
        }
        if (other.hasTschchartseriesmixedcolumnstroke()) {
          mergeTschchartseriesmixedcolumnstroke(other.getTschchartseriesmixedcolumnstroke());
        }
        if (other.hasTschchartseriesmixedlinestroke()) {
          mergeTschchartseriesmixedlinestroke(other.getTschchartseriesmixedlinestroke());
        }
        if (other.hasTschchartseriespiestroke()) {
          mergeTschchartseriespiestroke(other.getTschchartseriespiestroke());
        }
        if (other.hasTschchartseriesscatterstroke()) {
          mergeTschchartseriesscatterstroke(other.getTschchartseriesscatterstroke());
        }
        if (other.hasTschchartseriesareasymbolfill()) {
          mergeTschchartseriesareasymbolfill(other.getTschchartseriesareasymbolfill());
        }
        if (other.hasTschchartseriesbubblesymbolfill()) {
          mergeTschchartseriesbubblesymbolfill(other.getTschchartseriesbubblesymbolfill());
        }
        if (other.hasTschchartserieslinesymbolfill()) {
          mergeTschchartserieslinesymbolfill(other.getTschchartserieslinesymbolfill());
        }
        if (other.hasTschchartseriesmixedareasymbolfill()) {
          mergeTschchartseriesmixedareasymbolfill(other.getTschchartseriesmixedareasymbolfill());
        }
        if (other.hasTschchartseriesmixedlinesymbolfill()) {
          mergeTschchartseriesmixedlinesymbolfill(other.getTschchartseriesmixedlinesymbolfill());
        }
        if (other.hasTschchartseriesscattersymbolfill()) {
          mergeTschchartseriesscattersymbolfill(other.getTschchartseriesscattersymbolfill());
        }
        if (other.hasTschchartseriesareasymbolfilluseseriesfill()) {
          setTschchartseriesareasymbolfilluseseriesfill(other.getTschchartseriesareasymbolfilluseseriesfill());
        }
        if (other.hasTschchartserieslinesymbolfilluseseriesfill()) {
          setTschchartserieslinesymbolfilluseseriesfill(other.getTschchartserieslinesymbolfilluseseriesfill());
        }
        if (other.hasTschchartseriesmixedareasymbolfilluseseriesfill()) {
          setTschchartseriesmixedareasymbolfilluseseriesfill(other.getTschchartseriesmixedareasymbolfilluseseriesfill());
        }
        if (other.hasTschchartseriesmixedlinesymbolfilluseseriesfill()) {
          setTschchartseriesmixedlinesymbolfilluseseriesfill(other.getTschchartseriesmixedlinesymbolfilluseseriesfill());
        }
        if (other.hasTschchartseriesareasymbolfilluseseriesstroke()) {
          setTschchartseriesareasymbolfilluseseriesstroke(other.getTschchartseriesareasymbolfilluseseriesstroke());
        }
        if (other.hasTschchartseriesbubblesymbolfilluseseriesstroke()) {
          setTschchartseriesbubblesymbolfilluseseriesstroke(other.getTschchartseriesbubblesymbolfilluseseriesstroke());
        }
        if (other.hasTschchartserieslinesymbolfilluseseriesstroke()) {
          setTschchartserieslinesymbolfilluseseriesstroke(other.getTschchartserieslinesymbolfilluseseriesstroke());
        }
        if (other.hasTschchartseriesmixedareasymbolfilluseseriesstroke()) {
          setTschchartseriesmixedareasymbolfilluseseriesstroke(other.getTschchartseriesmixedareasymbolfilluseseriesstroke());
        }
        if (other.hasTschchartseriesmixedlinesymbolfilluseseriesstroke()) {
          setTschchartseriesmixedlinesymbolfilluseseriesstroke(other.getTschchartseriesmixedlinesymbolfilluseseriesstroke());
        }
        if (other.hasTschchartseriesscattersymbolfilluseseriesstroke()) {
          setTschchartseriesscattersymbolfilluseseriesstroke(other.getTschchartseriesscattersymbolfilluseseriesstroke());
        }
        if (other.hasTschchartseriesareasymbolsize()) {
          setTschchartseriesareasymbolsize(other.getTschchartseriesareasymbolsize());
        }
        if (other.hasTschchartserieslinesymbolsize()) {
          setTschchartserieslinesymbolsize(other.getTschchartserieslinesymbolsize());
        }
        if (other.hasTschchartseriesmixedareasymbolsize()) {
          setTschchartseriesmixedareasymbolsize(other.getTschchartseriesmixedareasymbolsize());
        }
        if (other.hasTschchartseriesmixedlinesymbolsize()) {
          setTschchartseriesmixedlinesymbolsize(other.getTschchartseriesmixedlinesymbolsize());
        }
        if (other.hasTschchartseriesscattersymbolsize()) {
          setTschchartseriesscattersymbolsize(other.getTschchartseriesscattersymbolsize());
        }
        if (other.hasTschchartseriesareasymbolstroke()) {
          mergeTschchartseriesareasymbolstroke(other.getTschchartseriesareasymbolstroke());
        }
        if (other.hasTschchartseriesbubblesymbolstroke()) {
          mergeTschchartseriesbubblesymbolstroke(other.getTschchartseriesbubblesymbolstroke());
        }
        if (other.hasTschchartserieslinesymbolstroke()) {
          mergeTschchartserieslinesymbolstroke(other.getTschchartserieslinesymbolstroke());
        }
        if (other.hasTschchartseriesmixedareasymbolstroke()) {
          mergeTschchartseriesmixedareasymbolstroke(other.getTschchartseriesmixedareasymbolstroke());
        }
        if (other.hasTschchartseriesmixedlinesymbolstroke()) {
          mergeTschchartseriesmixedlinesymbolstroke(other.getTschchartseriesmixedlinesymbolstroke());
        }
        if (other.hasTschchartseriesscattersymbolstroke()) {
          mergeTschchartseriesscattersymbolstroke(other.getTschchartseriesscattersymbolstroke());
        }
        if (other.hasTschchartseriesdefaulttrendlineequationopacity()) {
          setTschchartseriesdefaulttrendlineequationopacity(other.getTschchartseriesdefaulttrendlineequationopacity());
        }
        if (other.hasTschchartseriesdefaulttrendlineequationparagraphstyleindex()) {
          setTschchartseriesdefaulttrendlineequationparagraphstyleindex(other.getTschchartseriesdefaulttrendlineequationparagraphstyleindex());
        }
        if (other.hasTschchartseriesdefaulttrendlinersquaredopacity()) {
          setTschchartseriesdefaulttrendlinersquaredopacity(other.getTschchartseriesdefaulttrendlinersquaredopacity());
        }
        if (other.hasTschchartseriesdefaulttrendlinersquaredparagraphstyleindex()) {
          setTschchartseriesdefaulttrendlinersquaredparagraphstyleindex(other.getTschchartseriesdefaulttrendlinersquaredparagraphstyleindex());
        }
        if (other.hasTschchartseriesdefaulttrendlineshadow()) {
          mergeTschchartseriesdefaulttrendlineshadow(other.getTschchartseriesdefaulttrendlineshadow());
        }
        if (other.hasTschchartseriesdefaulttrendlinestroke()) {
          mergeTschchartseriesdefaulttrendlinestroke(other.getTschchartseriesdefaulttrendlinestroke());
        }
        if (other.hasTschchartseriesareavaluelabelposition()) {
          setTschchartseriesareavaluelabelposition(other.getTschchartseriesareavaluelabelposition());
        }
        if (other.hasTschchartseriesbarvaluelabelposition()) {
          setTschchartseriesbarvaluelabelposition(other.getTschchartseriesbarvaluelabelposition());
        }
        if (other.hasTschchartseriesbubblevaluelabelposition()) {
          setTschchartseriesbubblevaluelabelposition(other.getTschchartseriesbubblevaluelabelposition());
        }
        if (other.hasTschchartseriesdefaultvaluelabelposition()) {
          setTschchartseriesdefaultvaluelabelposition(other.getTschchartseriesdefaultvaluelabelposition());
        }
        if (other.hasTschchartserieslinevaluelabelposition()) {
          setTschchartserieslinevaluelabelposition(other.getTschchartserieslinevaluelabelposition());
        }
        if (other.hasTschchartseriesmixedareavaluelabelposition()) {
          setTschchartseriesmixedareavaluelabelposition(other.getTschchartseriesmixedareavaluelabelposition());
        }
        if (other.hasTschchartseriesmixedcolumnvaluelabelposition()) {
          setTschchartseriesmixedcolumnvaluelabelposition(other.getTschchartseriesmixedcolumnvaluelabelposition());
        }
        if (other.hasTschchartseriesmixedlinevaluelabelposition()) {
          setTschchartseriesmixedlinevaluelabelposition(other.getTschchartseriesmixedlinevaluelabelposition());
        }
        if (other.hasTschchartseriesscattervaluelabelposition()) {
          setTschchartseriesscattervaluelabelposition(other.getTschchartseriesscattervaluelabelposition());
        }
        if (other.hasTschchartseriesstackedareavaluelabelposition()) {
          setTschchartseriesstackedareavaluelabelposition(other.getTschchartseriesstackedareavaluelabelposition());
        }
        if (other.hasTschchartseriesstackedbarvaluelabelposition()) {
          setTschchartseriesstackedbarvaluelabelposition(other.getTschchartseriesstackedbarvaluelabelposition());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (hasTschchartseriesdefaulterrorbarlineend()) {
          if (!getTschchartseriesdefaulterrorbarlineend().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesdefaulterrorbarlineendscatterx()) {
          if (!getTschchartseriesdefaulterrorbarlineendscatterx().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesdefaulterrorbarshadow()) {
          if (!getTschchartseriesdefaulterrorbarshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesdefaulterrorbarstroke()) {
          if (!getTschchartseriesdefaulterrorbarstroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesdefaulterrorbarstrokescatterx()) {
          if (!getTschchartseriesdefaulterrorbarstrokescatterx().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseries3Dareafill()) {
          if (!getTschchartseries3Dareafill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseries3Dbarfill()) {
          if (!getTschchartseries3Dbarfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseries3Dcolumnfill()) {
          if (!getTschchartseries3Dcolumnfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseries3Dlinefill()) {
          if (!getTschchartseries3Dlinefill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseries3Dpiefill()) {
          if (!getTschchartseries3Dpiefill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesareafill()) {
          if (!getTschchartseriesareafill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesbarfill()) {
          if (!getTschchartseriesbarfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriescolumnfill()) {
          if (!getTschchartseriescolumnfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesdefaultfill()) {
          if (!getTschchartseriesdefaultfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesmixedareafill()) {
          if (!getTschchartseriesmixedareafill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesmixedcolumnfill()) {
          if (!getTschchartseriesmixedcolumnfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriespiefill()) {
          if (!getTschchartseriespiefill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseries3Dareashadow()) {
          if (!getTschchartseries3Dareashadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseries3Dbarshadow()) {
          if (!getTschchartseries3Dbarshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseries3Dcolumnshadow()) {
          if (!getTschchartseries3Dcolumnshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseries3Dlineshadow()) {
          if (!getTschchartseries3Dlineshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseries3Dpieshadow()) {
          if (!getTschchartseries3Dpieshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesareashadow()) {
          if (!getTschchartseriesareashadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesbarshadow()) {
          if (!getTschchartseriesbarshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesbubbleshadow()) {
          if (!getTschchartseriesbubbleshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesdefaultshadow()) {
          if (!getTschchartseriesdefaultshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartserieslineshadow()) {
          if (!getTschchartserieslineshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesmixedareashadow()) {
          if (!getTschchartseriesmixedareashadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesmixedcolumnshadow()) {
          if (!getTschchartseriesmixedcolumnshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesmixedlineshadow()) {
          if (!getTschchartseriesmixedlineshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriespieshadow()) {
          if (!getTschchartseriespieshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesscattershadow()) {
          if (!getTschchartseriesscattershadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesareastroke()) {
          if (!getTschchartseriesareastroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesbarstroke()) {
          if (!getTschchartseriesbarstroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesbubblestroke()) {
          if (!getTschchartseriesbubblestroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartserieslinestroke()) {
          if (!getTschchartserieslinestroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesmixedareastroke()) {
          if (!getTschchartseriesmixedareastroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesmixedcolumnstroke()) {
          if (!getTschchartseriesmixedcolumnstroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesmixedlinestroke()) {
          if (!getTschchartseriesmixedlinestroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriespiestroke()) {
          if (!getTschchartseriespiestroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesscatterstroke()) {
          if (!getTschchartseriesscatterstroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesareasymbolfill()) {
          if (!getTschchartseriesareasymbolfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesbubblesymbolfill()) {
          if (!getTschchartseriesbubblesymbolfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartserieslinesymbolfill()) {
          if (!getTschchartserieslinesymbolfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesmixedareasymbolfill()) {
          if (!getTschchartseriesmixedareasymbolfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesmixedlinesymbolfill()) {
          if (!getTschchartseriesmixedlinesymbolfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesscattersymbolfill()) {
          if (!getTschchartseriesscattersymbolfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesareasymbolstroke()) {
          if (!getTschchartseriesareasymbolstroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesbubblesymbolstroke()) {
          if (!getTschchartseriesbubblesymbolstroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartserieslinesymbolstroke()) {
          if (!getTschchartserieslinesymbolstroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesmixedareasymbolstroke()) {
          if (!getTschchartseriesmixedareasymbolstroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesmixedlinesymbolstroke()) {
          if (!getTschchartseriesmixedlinesymbolstroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesscattersymbolstroke()) {
          if (!getTschchartseriesscattersymbolstroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesdefaulttrendlineshadow()) {
          if (!getTschchartseriesdefaulttrendlineshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesdefaulttrendlinestroke()) {
          if (!getTschchartseriesdefaulttrendlinestroke().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;
      private int bitField2_;
      private int bitField3_;

      private org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive tschchartseriesdefaulterrorbarlineend_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive, org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchiveOrBuilder> tschchartseriesdefaulterrorbarlineendBuilder_;
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 1;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarlineend() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 1;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive getTschchartseriesdefaulterrorbarlineend() {
        if (tschchartseriesdefaulterrorbarlineendBuilder_ == null) {
          return tschchartseriesdefaulterrorbarlineend_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarlineend_;
        } else {
          return tschchartseriesdefaulterrorbarlineendBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 1;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarlineend(org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive value) {
        if (tschchartseriesdefaulterrorbarlineendBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaulterrorbarlineend_ = value;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarlineendBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 1;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarlineend(
          org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.Builder builderForValue) {
        if (tschchartseriesdefaulterrorbarlineendBuilder_ == null) {
          tschchartseriesdefaulterrorbarlineend_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarlineendBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 1;</code>
       */
      public Builder mergeTschchartseriesdefaulterrorbarlineend(org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive value) {
        if (tschchartseriesdefaulterrorbarlineendBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              tschchartseriesdefaulterrorbarlineend_ != null &&
              tschchartseriesdefaulterrorbarlineend_ != org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.getDefaultInstance()) {
            tschchartseriesdefaulterrorbarlineend_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.newBuilder(tschchartseriesdefaulterrorbarlineend_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaulterrorbarlineend_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarlineendBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 1;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarlineend() {
        if (tschchartseriesdefaulterrorbarlineendBuilder_ == null) {
          tschchartseriesdefaulterrorbarlineend_ = null;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarlineendBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 1;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.Builder getTschchartseriesdefaulterrorbarlineendBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTschchartseriesdefaulterrorbarlineendFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 1;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchiveOrBuilder getTschchartseriesdefaulterrorbarlineendOrBuilder() {
        if (tschchartseriesdefaulterrorbarlineendBuilder_ != null) {
          return tschchartseriesdefaulterrorbarlineendBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaulterrorbarlineend_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarlineend_;
        }
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive, org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchiveOrBuilder> 
          getTschchartseriesdefaulterrorbarlineendFieldBuilder() {
        if (tschchartseriesdefaulterrorbarlineendBuilder_ == null) {
          tschchartseriesdefaulterrorbarlineendBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive, org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchiveOrBuilder>(
                  getTschchartseriesdefaulterrorbarlineend(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaulterrorbarlineend_ = null;
        }
        return tschchartseriesdefaulterrorbarlineendBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive, org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchiveOrBuilder> tschchartseriesdefaulterrorbarlineendscatterxBuilder_;
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 2;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarlineendscatterx() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 2;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive getTschchartseriesdefaulterrorbarlineendscatterx() {
        if (tschchartseriesdefaulterrorbarlineendscatterxBuilder_ == null) {
          return tschchartseriesdefaulterrorbarlineendscatterx_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarlineendscatterx_;
        } else {
          return tschchartseriesdefaulterrorbarlineendscatterxBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 2;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarlineendscatterx(org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive value) {
        if (tschchartseriesdefaulterrorbarlineendscatterxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaulterrorbarlineendscatterx_ = value;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarlineendscatterxBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 2;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarlineendscatterx(
          org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.Builder builderForValue) {
        if (tschchartseriesdefaulterrorbarlineendscatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarlineendscatterx_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarlineendscatterxBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 2;</code>
       */
      public Builder mergeTschchartseriesdefaulterrorbarlineendscatterx(org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive value) {
        if (tschchartseriesdefaulterrorbarlineendscatterxBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              tschchartseriesdefaulterrorbarlineendscatterx_ != null &&
              tschchartseriesdefaulterrorbarlineendscatterx_ != org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.getDefaultInstance()) {
            tschchartseriesdefaulterrorbarlineendscatterx_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.newBuilder(tschchartseriesdefaulterrorbarlineendscatterx_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaulterrorbarlineendscatterx_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarlineendscatterxBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 2;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarlineendscatterx() {
        if (tschchartseriesdefaulterrorbarlineendscatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarlineendscatterx_ = null;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarlineendscatterxBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 2;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.Builder getTschchartseriesdefaulterrorbarlineendscatterxBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTschchartseriesdefaulterrorbarlineendscatterxFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 2;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchiveOrBuilder getTschchartseriesdefaulterrorbarlineendscatterxOrBuilder() {
        if (tschchartseriesdefaulterrorbarlineendscatterxBuilder_ != null) {
          return tschchartseriesdefaulterrorbarlineendscatterxBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaulterrorbarlineendscatterx_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarlineendscatterx_;
        }
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive, org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchiveOrBuilder> 
          getTschchartseriesdefaulterrorbarlineendscatterxFieldBuilder() {
        if (tschchartseriesdefaulterrorbarlineendscatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarlineendscatterxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive, org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchiveOrBuilder>(
                  getTschchartseriesdefaulterrorbarlineendscatterx(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaulterrorbarlineendscatterx_ = null;
        }
        return tschchartseriesdefaulterrorbarlineendscatterxBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesdefaulterrorbarshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseriesdefaulterrorbarshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 3;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarshadow() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 3;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesdefaulterrorbarshadow() {
        if (tschchartseriesdefaulterrorbarshadowBuilder_ == null) {
          return tschchartseriesdefaulterrorbarshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarshadow_;
        } else {
          return tschchartseriesdefaulterrorbarshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 3;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesdefaulterrorbarshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaulterrorbarshadow_ = value;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarshadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 3;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseriesdefaulterrorbarshadowBuilder_ == null) {
          tschchartseriesdefaulterrorbarshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 3;</code>
       */
      public Builder mergeTschchartseriesdefaulterrorbarshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesdefaulterrorbarshadowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              tschchartseriesdefaulterrorbarshadow_ != null &&
              tschchartseriesdefaulterrorbarshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseriesdefaulterrorbarshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseriesdefaulterrorbarshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaulterrorbarshadow_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarshadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 3;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarshadow() {
        if (tschchartseriesdefaulterrorbarshadowBuilder_ == null) {
          tschchartseriesdefaulterrorbarshadow_ = null;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 3;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseriesdefaulterrorbarshadowBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getTschchartseriesdefaulterrorbarshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 3;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesdefaulterrorbarshadowOrBuilder() {
        if (tschchartseriesdefaulterrorbarshadowBuilder_ != null) {
          return tschchartseriesdefaulterrorbarshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaulterrorbarshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseriesdefaulterrorbarshadowFieldBuilder() {
        if (tschchartseriesdefaulterrorbarshadowBuilder_ == null) {
          tschchartseriesdefaulterrorbarshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseriesdefaulterrorbarshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaulterrorbarshadow_ = null;
        }
        return tschchartseriesdefaulterrorbarshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesdefaulterrorbarstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesdefaulterrorbarstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 4;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarstroke() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 4;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesdefaulterrorbarstroke() {
        if (tschchartseriesdefaulterrorbarstrokeBuilder_ == null) {
          return tschchartseriesdefaulterrorbarstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarstroke_;
        } else {
          return tschchartseriesdefaulterrorbarstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 4;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesdefaulterrorbarstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaulterrorbarstroke_ = value;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarstrokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 4;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesdefaulterrorbarstrokeBuilder_ == null) {
          tschchartseriesdefaulterrorbarstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 4;</code>
       */
      public Builder mergeTschchartseriesdefaulterrorbarstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesdefaulterrorbarstrokeBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              tschchartseriesdefaulterrorbarstroke_ != null &&
              tschchartseriesdefaulterrorbarstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesdefaulterrorbarstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesdefaulterrorbarstroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaulterrorbarstroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarstrokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 4;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarstroke() {
        if (tschchartseriesdefaulterrorbarstrokeBuilder_ == null) {
          tschchartseriesdefaulterrorbarstroke_ = null;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarstrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 4;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesdefaulterrorbarstrokeBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getTschchartseriesdefaulterrorbarstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 4;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesdefaulterrorbarstrokeOrBuilder() {
        if (tschchartseriesdefaulterrorbarstrokeBuilder_ != null) {
          return tschchartseriesdefaulterrorbarstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaulterrorbarstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesdefaulterrorbarstrokeFieldBuilder() {
        if (tschchartseriesdefaulterrorbarstrokeBuilder_ == null) {
          tschchartseriesdefaulterrorbarstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesdefaulterrorbarstroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaulterrorbarstroke_ = null;
        }
        return tschchartseriesdefaulterrorbarstrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesdefaulterrorbarstrokescatterxBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 5;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarstrokescatterx() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 5;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesdefaulterrorbarstrokescatterx() {
        if (tschchartseriesdefaulterrorbarstrokescatterxBuilder_ == null) {
          return tschchartseriesdefaulterrorbarstrokescatterx_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarstrokescatterx_;
        } else {
          return tschchartseriesdefaulterrorbarstrokescatterxBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 5;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarstrokescatterx(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesdefaulterrorbarstrokescatterxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaulterrorbarstrokescatterx_ = value;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarstrokescatterxBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 5;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarstrokescatterx(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesdefaulterrorbarstrokescatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarstrokescatterx_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarstrokescatterxBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 5;</code>
       */
      public Builder mergeTschchartseriesdefaulterrorbarstrokescatterx(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesdefaulterrorbarstrokescatterxBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              tschchartseriesdefaulterrorbarstrokescatterx_ != null &&
              tschchartseriesdefaulterrorbarstrokescatterx_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesdefaulterrorbarstrokescatterx_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesdefaulterrorbarstrokescatterx_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaulterrorbarstrokescatterx_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarstrokescatterxBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 5;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarstrokescatterx() {
        if (tschchartseriesdefaulterrorbarstrokescatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarstrokescatterx_ = null;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarstrokescatterxBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 5;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesdefaulterrorbarstrokescatterxBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getTschchartseriesdefaulterrorbarstrokescatterxFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 5;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesdefaulterrorbarstrokescatterxOrBuilder() {
        if (tschchartseriesdefaulterrorbarstrokescatterxBuilder_ != null) {
          return tschchartseriesdefaulterrorbarstrokescatterxBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaulterrorbarstrokescatterx_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarstrokescatterx_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesdefaulterrorbarstrokescatterxFieldBuilder() {
        if (tschchartseriesdefaulterrorbarstrokescatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarstrokescatterxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesdefaulterrorbarstrokescatterx(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaulterrorbarstrokescatterx_ = null;
        }
        return tschchartseriesdefaulterrorbarstrokescatterxBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseries3Dareafill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseries3DareafillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dareafill = 6;</code>
       */
      public boolean hasTschchartseries3Dareafill() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dareafill = 6;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dareafill() {
        if (tschchartseries3DareafillBuilder_ == null) {
          return tschchartseries3Dareafill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dareafill_;
        } else {
          return tschchartseries3DareafillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dareafill = 6;</code>
       */
      public Builder setTschchartseries3Dareafill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseries3DareafillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseries3Dareafill_ = value;
          onChanged();
        } else {
          tschchartseries3DareafillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dareafill = 6;</code>
       */
      public Builder setTschchartseries3Dareafill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseries3DareafillBuilder_ == null) {
          tschchartseries3Dareafill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseries3DareafillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dareafill = 6;</code>
       */
      public Builder mergeTschchartseries3Dareafill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseries3DareafillBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              tschchartseries3Dareafill_ != null &&
              tschchartseries3Dareafill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseries3Dareafill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseries3Dareafill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseries3Dareafill_ = value;
          }
          onChanged();
        } else {
          tschchartseries3DareafillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dareafill = 6;</code>
       */
      public Builder clearTschchartseries3Dareafill() {
        if (tschchartseries3DareafillBuilder_ == null) {
          tschchartseries3Dareafill_ = null;
          onChanged();
        } else {
          tschchartseries3DareafillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dareafill = 6;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseries3DareafillBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getTschchartseries3DareafillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dareafill = 6;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DareafillOrBuilder() {
        if (tschchartseries3DareafillBuilder_ != null) {
          return tschchartseries3DareafillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseries3Dareafill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dareafill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dareafill = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseries3DareafillFieldBuilder() {
        if (tschchartseries3DareafillBuilder_ == null) {
          tschchartseries3DareafillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseries3Dareafill(),
                  getParentForChildren(),
                  isClean());
          tschchartseries3Dareafill_ = null;
        }
        return tschchartseries3DareafillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseries3Dbarfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseries3DbarfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 7;</code>
       */
      public boolean hasTschchartseries3Dbarfill() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 7;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dbarfill() {
        if (tschchartseries3DbarfillBuilder_ == null) {
          return tschchartseries3Dbarfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dbarfill_;
        } else {
          return tschchartseries3DbarfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 7;</code>
       */
      public Builder setTschchartseries3Dbarfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseries3DbarfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseries3Dbarfill_ = value;
          onChanged();
        } else {
          tschchartseries3DbarfillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 7;</code>
       */
      public Builder setTschchartseries3Dbarfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseries3DbarfillBuilder_ == null) {
          tschchartseries3Dbarfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseries3DbarfillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 7;</code>
       */
      public Builder mergeTschchartseries3Dbarfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseries3DbarfillBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              tschchartseries3Dbarfill_ != null &&
              tschchartseries3Dbarfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseries3Dbarfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseries3Dbarfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseries3Dbarfill_ = value;
          }
          onChanged();
        } else {
          tschchartseries3DbarfillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 7;</code>
       */
      public Builder clearTschchartseries3Dbarfill() {
        if (tschchartseries3DbarfillBuilder_ == null) {
          tschchartseries3Dbarfill_ = null;
          onChanged();
        } else {
          tschchartseries3DbarfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 7;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseries3DbarfillBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getTschchartseries3DbarfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 7;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DbarfillOrBuilder() {
        if (tschchartseries3DbarfillBuilder_ != null) {
          return tschchartseries3DbarfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseries3Dbarfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dbarfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseries3DbarfillFieldBuilder() {
        if (tschchartseries3DbarfillBuilder_ == null) {
          tschchartseries3DbarfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseries3Dbarfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseries3Dbarfill_ = null;
        }
        return tschchartseries3DbarfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseries3Dcolumnfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseries3DcolumnfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 8;</code>
       */
      public boolean hasTschchartseries3Dcolumnfill() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 8;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dcolumnfill() {
        if (tschchartseries3DcolumnfillBuilder_ == null) {
          return tschchartseries3Dcolumnfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dcolumnfill_;
        } else {
          return tschchartseries3DcolumnfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 8;</code>
       */
      public Builder setTschchartseries3Dcolumnfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseries3DcolumnfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseries3Dcolumnfill_ = value;
          onChanged();
        } else {
          tschchartseries3DcolumnfillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 8;</code>
       */
      public Builder setTschchartseries3Dcolumnfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseries3DcolumnfillBuilder_ == null) {
          tschchartseries3Dcolumnfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseries3DcolumnfillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 8;</code>
       */
      public Builder mergeTschchartseries3Dcolumnfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseries3DcolumnfillBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              tschchartseries3Dcolumnfill_ != null &&
              tschchartseries3Dcolumnfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseries3Dcolumnfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseries3Dcolumnfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseries3Dcolumnfill_ = value;
          }
          onChanged();
        } else {
          tschchartseries3DcolumnfillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 8;</code>
       */
      public Builder clearTschchartseries3Dcolumnfill() {
        if (tschchartseries3DcolumnfillBuilder_ == null) {
          tschchartseries3Dcolumnfill_ = null;
          onChanged();
        } else {
          tschchartseries3DcolumnfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 8;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseries3DcolumnfillBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getTschchartseries3DcolumnfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 8;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DcolumnfillOrBuilder() {
        if (tschchartseries3DcolumnfillBuilder_ != null) {
          return tschchartseries3DcolumnfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseries3Dcolumnfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dcolumnfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseries3DcolumnfillFieldBuilder() {
        if (tschchartseries3DcolumnfillBuilder_ == null) {
          tschchartseries3DcolumnfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseries3Dcolumnfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseries3Dcolumnfill_ = null;
        }
        return tschchartseries3DcolumnfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseries3Dlinefill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseries3DlinefillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 9;</code>
       */
      public boolean hasTschchartseries3Dlinefill() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 9;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dlinefill() {
        if (tschchartseries3DlinefillBuilder_ == null) {
          return tschchartseries3Dlinefill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dlinefill_;
        } else {
          return tschchartseries3DlinefillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 9;</code>
       */
      public Builder setTschchartseries3Dlinefill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseries3DlinefillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseries3Dlinefill_ = value;
          onChanged();
        } else {
          tschchartseries3DlinefillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 9;</code>
       */
      public Builder setTschchartseries3Dlinefill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseries3DlinefillBuilder_ == null) {
          tschchartseries3Dlinefill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseries3DlinefillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 9;</code>
       */
      public Builder mergeTschchartseries3Dlinefill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseries3DlinefillBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              tschchartseries3Dlinefill_ != null &&
              tschchartseries3Dlinefill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseries3Dlinefill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseries3Dlinefill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseries3Dlinefill_ = value;
          }
          onChanged();
        } else {
          tschchartseries3DlinefillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 9;</code>
       */
      public Builder clearTschchartseries3Dlinefill() {
        if (tschchartseries3DlinefillBuilder_ == null) {
          tschchartseries3Dlinefill_ = null;
          onChanged();
        } else {
          tschchartseries3DlinefillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 9;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseries3DlinefillBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getTschchartseries3DlinefillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 9;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DlinefillOrBuilder() {
        if (tschchartseries3DlinefillBuilder_ != null) {
          return tschchartseries3DlinefillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseries3Dlinefill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dlinefill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseries3DlinefillFieldBuilder() {
        if (tschchartseries3DlinefillBuilder_ == null) {
          tschchartseries3DlinefillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseries3Dlinefill(),
                  getParentForChildren(),
                  isClean());
          tschchartseries3Dlinefill_ = null;
        }
        return tschchartseries3DlinefillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseries3Dpiefill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseries3DpiefillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 10;</code>
       */
      public boolean hasTschchartseries3Dpiefill() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 10;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dpiefill() {
        if (tschchartseries3DpiefillBuilder_ == null) {
          return tschchartseries3Dpiefill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dpiefill_;
        } else {
          return tschchartseries3DpiefillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 10;</code>
       */
      public Builder setTschchartseries3Dpiefill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseries3DpiefillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseries3Dpiefill_ = value;
          onChanged();
        } else {
          tschchartseries3DpiefillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 10;</code>
       */
      public Builder setTschchartseries3Dpiefill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseries3DpiefillBuilder_ == null) {
          tschchartseries3Dpiefill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseries3DpiefillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 10;</code>
       */
      public Builder mergeTschchartseries3Dpiefill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseries3DpiefillBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              tschchartseries3Dpiefill_ != null &&
              tschchartseries3Dpiefill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseries3Dpiefill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseries3Dpiefill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseries3Dpiefill_ = value;
          }
          onChanged();
        } else {
          tschchartseries3DpiefillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 10;</code>
       */
      public Builder clearTschchartseries3Dpiefill() {
        if (tschchartseries3DpiefillBuilder_ == null) {
          tschchartseries3Dpiefill_ = null;
          onChanged();
        } else {
          tschchartseries3DpiefillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 10;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseries3DpiefillBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getTschchartseries3DpiefillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 10;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DpiefillOrBuilder() {
        if (tschchartseries3DpiefillBuilder_ != null) {
          return tschchartseries3DpiefillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseries3Dpiefill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dpiefill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseries3DpiefillFieldBuilder() {
        if (tschchartseries3DpiefillBuilder_ == null) {
          tschchartseries3DpiefillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseries3Dpiefill(),
                  getParentForChildren(),
                  isClean());
          tschchartseries3Dpiefill_ = null;
        }
        return tschchartseries3DpiefillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesareafill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseriesareafillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareafill = 11;</code>
       */
      public boolean hasTschchartseriesareafill() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareafill = 11;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesareafill() {
        if (tschchartseriesareafillBuilder_ == null) {
          return tschchartseriesareafill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesareafill_;
        } else {
          return tschchartseriesareafillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareafill = 11;</code>
       */
      public Builder setTschchartseriesareafill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesareafillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesareafill_ = value;
          onChanged();
        } else {
          tschchartseriesareafillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareafill = 11;</code>
       */
      public Builder setTschchartseriesareafill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseriesareafillBuilder_ == null) {
          tschchartseriesareafill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesareafillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareafill = 11;</code>
       */
      public Builder mergeTschchartseriesareafill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesareafillBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              tschchartseriesareafill_ != null &&
              tschchartseriesareafill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseriesareafill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseriesareafill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesareafill_ = value;
          }
          onChanged();
        } else {
          tschchartseriesareafillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareafill = 11;</code>
       */
      public Builder clearTschchartseriesareafill() {
        if (tschchartseriesareafillBuilder_ == null) {
          tschchartseriesareafill_ = null;
          onChanged();
        } else {
          tschchartseriesareafillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareafill = 11;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseriesareafillBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getTschchartseriesareafillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareafill = 11;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesareafillOrBuilder() {
        if (tschchartseriesareafillBuilder_ != null) {
          return tschchartseriesareafillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesareafill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesareafill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareafill = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseriesareafillFieldBuilder() {
        if (tschchartseriesareafillBuilder_ == null) {
          tschchartseriesareafillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseriesareafill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesareafill_ = null;
        }
        return tschchartseriesareafillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesbarfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseriesbarfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbarfill = 12;</code>
       */
      public boolean hasTschchartseriesbarfill() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbarfill = 12;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesbarfill() {
        if (tschchartseriesbarfillBuilder_ == null) {
          return tschchartseriesbarfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesbarfill_;
        } else {
          return tschchartseriesbarfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbarfill = 12;</code>
       */
      public Builder setTschchartseriesbarfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesbarfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesbarfill_ = value;
          onChanged();
        } else {
          tschchartseriesbarfillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbarfill = 12;</code>
       */
      public Builder setTschchartseriesbarfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseriesbarfillBuilder_ == null) {
          tschchartseriesbarfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesbarfillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbarfill = 12;</code>
       */
      public Builder mergeTschchartseriesbarfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesbarfillBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              tschchartseriesbarfill_ != null &&
              tschchartseriesbarfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseriesbarfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseriesbarfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesbarfill_ = value;
          }
          onChanged();
        } else {
          tschchartseriesbarfillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbarfill = 12;</code>
       */
      public Builder clearTschchartseriesbarfill() {
        if (tschchartseriesbarfillBuilder_ == null) {
          tschchartseriesbarfill_ = null;
          onChanged();
        } else {
          tschchartseriesbarfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbarfill = 12;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseriesbarfillBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getTschchartseriesbarfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbarfill = 12;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesbarfillOrBuilder() {
        if (tschchartseriesbarfillBuilder_ != null) {
          return tschchartseriesbarfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesbarfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesbarfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbarfill = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseriesbarfillFieldBuilder() {
        if (tschchartseriesbarfillBuilder_ == null) {
          tschchartseriesbarfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseriesbarfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesbarfill_ = null;
        }
        return tschchartseriesbarfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriescolumnfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseriescolumnfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 13;</code>
       */
      public boolean hasTschchartseriescolumnfill() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 13;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriescolumnfill() {
        if (tschchartseriescolumnfillBuilder_ == null) {
          return tschchartseriescolumnfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriescolumnfill_;
        } else {
          return tschchartseriescolumnfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 13;</code>
       */
      public Builder setTschchartseriescolumnfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriescolumnfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriescolumnfill_ = value;
          onChanged();
        } else {
          tschchartseriescolumnfillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 13;</code>
       */
      public Builder setTschchartseriescolumnfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseriescolumnfillBuilder_ == null) {
          tschchartseriescolumnfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriescolumnfillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 13;</code>
       */
      public Builder mergeTschchartseriescolumnfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriescolumnfillBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000) &&
              tschchartseriescolumnfill_ != null &&
              tschchartseriescolumnfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseriescolumnfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseriescolumnfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriescolumnfill_ = value;
          }
          onChanged();
        } else {
          tschchartseriescolumnfillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 13;</code>
       */
      public Builder clearTschchartseriescolumnfill() {
        if (tschchartseriescolumnfillBuilder_ == null) {
          tschchartseriescolumnfill_ = null;
          onChanged();
        } else {
          tschchartseriescolumnfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 13;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseriescolumnfillBuilder() {
        bitField0_ |= 0x00001000;
        onChanged();
        return getTschchartseriescolumnfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 13;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriescolumnfillOrBuilder() {
        if (tschchartseriescolumnfillBuilder_ != null) {
          return tschchartseriescolumnfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriescolumnfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriescolumnfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseriescolumnfillFieldBuilder() {
        if (tschchartseriescolumnfillBuilder_ == null) {
          tschchartseriescolumnfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseriescolumnfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriescolumnfill_ = null;
        }
        return tschchartseriescolumnfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesdefaultfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseriesdefaultfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 14;</code>
       */
      public boolean hasTschchartseriesdefaultfill() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 14;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesdefaultfill() {
        if (tschchartseriesdefaultfillBuilder_ == null) {
          return tschchartseriesdefaultfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesdefaultfill_;
        } else {
          return tschchartseriesdefaultfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 14;</code>
       */
      public Builder setTschchartseriesdefaultfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesdefaultfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaultfill_ = value;
          onChanged();
        } else {
          tschchartseriesdefaultfillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 14;</code>
       */
      public Builder setTschchartseriesdefaultfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseriesdefaultfillBuilder_ == null) {
          tschchartseriesdefaultfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaultfillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 14;</code>
       */
      public Builder mergeTschchartseriesdefaultfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesdefaultfillBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
              tschchartseriesdefaultfill_ != null &&
              tschchartseriesdefaultfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseriesdefaultfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseriesdefaultfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaultfill_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaultfillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 14;</code>
       */
      public Builder clearTschchartseriesdefaultfill() {
        if (tschchartseriesdefaultfillBuilder_ == null) {
          tschchartseriesdefaultfill_ = null;
          onChanged();
        } else {
          tschchartseriesdefaultfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 14;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseriesdefaultfillBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getTschchartseriesdefaultfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 14;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesdefaultfillOrBuilder() {
        if (tschchartseriesdefaultfillBuilder_ != null) {
          return tschchartseriesdefaultfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaultfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesdefaultfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseriesdefaultfillFieldBuilder() {
        if (tschchartseriesdefaultfillBuilder_ == null) {
          tschchartseriesdefaultfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseriesdefaultfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaultfill_ = null;
        }
        return tschchartseriesdefaultfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesmixedareafill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseriesmixedareafillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 15;</code>
       */
      public boolean hasTschchartseriesmixedareafill() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 15;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesmixedareafill() {
        if (tschchartseriesmixedareafillBuilder_ == null) {
          return tschchartseriesmixedareafill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedareafill_;
        } else {
          return tschchartseriesmixedareafillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 15;</code>
       */
      public Builder setTschchartseriesmixedareafill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesmixedareafillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesmixedareafill_ = value;
          onChanged();
        } else {
          tschchartseriesmixedareafillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 15;</code>
       */
      public Builder setTschchartseriesmixedareafill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseriesmixedareafillBuilder_ == null) {
          tschchartseriesmixedareafill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesmixedareafillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 15;</code>
       */
      public Builder mergeTschchartseriesmixedareafill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesmixedareafillBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000) &&
              tschchartseriesmixedareafill_ != null &&
              tschchartseriesmixedareafill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseriesmixedareafill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseriesmixedareafill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesmixedareafill_ = value;
          }
          onChanged();
        } else {
          tschchartseriesmixedareafillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 15;</code>
       */
      public Builder clearTschchartseriesmixedareafill() {
        if (tschchartseriesmixedareafillBuilder_ == null) {
          tschchartseriesmixedareafill_ = null;
          onChanged();
        } else {
          tschchartseriesmixedareafillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 15;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseriesmixedareafillBuilder() {
        bitField0_ |= 0x00004000;
        onChanged();
        return getTschchartseriesmixedareafillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 15;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesmixedareafillOrBuilder() {
        if (tschchartseriesmixedareafillBuilder_ != null) {
          return tschchartseriesmixedareafillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesmixedareafill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedareafill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseriesmixedareafillFieldBuilder() {
        if (tschchartseriesmixedareafillBuilder_ == null) {
          tschchartseriesmixedareafillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseriesmixedareafill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesmixedareafill_ = null;
        }
        return tschchartseriesmixedareafillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesmixedcolumnfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseriesmixedcolumnfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 16;</code>
       */
      public boolean hasTschchartseriesmixedcolumnfill() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 16;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesmixedcolumnfill() {
        if (tschchartseriesmixedcolumnfillBuilder_ == null) {
          return tschchartseriesmixedcolumnfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedcolumnfill_;
        } else {
          return tschchartseriesmixedcolumnfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 16;</code>
       */
      public Builder setTschchartseriesmixedcolumnfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesmixedcolumnfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesmixedcolumnfill_ = value;
          onChanged();
        } else {
          tschchartseriesmixedcolumnfillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 16;</code>
       */
      public Builder setTschchartseriesmixedcolumnfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseriesmixedcolumnfillBuilder_ == null) {
          tschchartseriesmixedcolumnfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesmixedcolumnfillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 16;</code>
       */
      public Builder mergeTschchartseriesmixedcolumnfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesmixedcolumnfillBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000) &&
              tschchartseriesmixedcolumnfill_ != null &&
              tschchartseriesmixedcolumnfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseriesmixedcolumnfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseriesmixedcolumnfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesmixedcolumnfill_ = value;
          }
          onChanged();
        } else {
          tschchartseriesmixedcolumnfillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 16;</code>
       */
      public Builder clearTschchartseriesmixedcolumnfill() {
        if (tschchartseriesmixedcolumnfillBuilder_ == null) {
          tschchartseriesmixedcolumnfill_ = null;
          onChanged();
        } else {
          tschchartseriesmixedcolumnfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 16;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseriesmixedcolumnfillBuilder() {
        bitField0_ |= 0x00008000;
        onChanged();
        return getTschchartseriesmixedcolumnfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 16;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesmixedcolumnfillOrBuilder() {
        if (tschchartseriesmixedcolumnfillBuilder_ != null) {
          return tschchartseriesmixedcolumnfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesmixedcolumnfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedcolumnfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseriesmixedcolumnfillFieldBuilder() {
        if (tschchartseriesmixedcolumnfillBuilder_ == null) {
          tschchartseriesmixedcolumnfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseriesmixedcolumnfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesmixedcolumnfill_ = null;
        }
        return tschchartseriesmixedcolumnfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriespiefill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseriespiefillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseriespiefill = 17;</code>
       */
      public boolean hasTschchartseriespiefill() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriespiefill = 17;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriespiefill() {
        if (tschchartseriespiefillBuilder_ == null) {
          return tschchartseriespiefill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriespiefill_;
        } else {
          return tschchartseriespiefillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriespiefill = 17;</code>
       */
      public Builder setTschchartseriespiefill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriespiefillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriespiefill_ = value;
          onChanged();
        } else {
          tschchartseriespiefillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriespiefill = 17;</code>
       */
      public Builder setTschchartseriespiefill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseriespiefillBuilder_ == null) {
          tschchartseriespiefill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriespiefillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriespiefill = 17;</code>
       */
      public Builder mergeTschchartseriespiefill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriespiefillBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000) &&
              tschchartseriespiefill_ != null &&
              tschchartseriespiefill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseriespiefill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseriespiefill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriespiefill_ = value;
          }
          onChanged();
        } else {
          tschchartseriespiefillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriespiefill = 17;</code>
       */
      public Builder clearTschchartseriespiefill() {
        if (tschchartseriespiefillBuilder_ == null) {
          tschchartseriespiefill_ = null;
          onChanged();
        } else {
          tschchartseriespiefillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriespiefill = 17;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseriespiefillBuilder() {
        bitField0_ |= 0x00010000;
        onChanged();
        return getTschchartseriespiefillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriespiefill = 17;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriespiefillOrBuilder() {
        if (tschchartseriespiefillBuilder_ != null) {
          return tschchartseriespiefillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriespiefill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriespiefill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriespiefill = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseriespiefillFieldBuilder() {
        if (tschchartseriespiefillBuilder_ == null) {
          tschchartseriespiefillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseriespiefill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriespiefill_ = null;
        }
        return tschchartseriespiefillBuilder_;
      }

      private int tschchartseriesarealabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartseriesarealabelparagraphstyleindex = 18;</code>
       */
      public boolean hasTschchartseriesarealabelparagraphstyleindex() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 tschchartseriesarealabelparagraphstyleindex = 18;</code>
       */
      public int getTschchartseriesarealabelparagraphstyleindex() {
        return tschchartseriesarealabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartseriesarealabelparagraphstyleindex = 18;</code>
       */
      public Builder setTschchartseriesarealabelparagraphstyleindex(int value) {
        bitField0_ |= 0x00020000;
        tschchartseriesarealabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesarealabelparagraphstyleindex = 18;</code>
       */
      public Builder clearTschchartseriesarealabelparagraphstyleindex() {
        bitField0_ = (bitField0_ & ~0x00020000);
        tschchartseriesarealabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesbarlabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartseriesbarlabelparagraphstyleindex = 19;</code>
       */
      public boolean hasTschchartseriesbarlabelparagraphstyleindex() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 tschchartseriesbarlabelparagraphstyleindex = 19;</code>
       */
      public int getTschchartseriesbarlabelparagraphstyleindex() {
        return tschchartseriesbarlabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartseriesbarlabelparagraphstyleindex = 19;</code>
       */
      public Builder setTschchartseriesbarlabelparagraphstyleindex(int value) {
        bitField0_ |= 0x00040000;
        tschchartseriesbarlabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesbarlabelparagraphstyleindex = 19;</code>
       */
      public Builder clearTschchartseriesbarlabelparagraphstyleindex() {
        bitField0_ = (bitField0_ & ~0x00040000);
        tschchartseriesbarlabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesdefaultlabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartseriesdefaultlabelparagraphstyleindex = 20;</code>
       */
      public boolean hasTschchartseriesdefaultlabelparagraphstyleindex() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 tschchartseriesdefaultlabelparagraphstyleindex = 20;</code>
       */
      public int getTschchartseriesdefaultlabelparagraphstyleindex() {
        return tschchartseriesdefaultlabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaultlabelparagraphstyleindex = 20;</code>
       */
      public Builder setTschchartseriesdefaultlabelparagraphstyleindex(int value) {
        bitField0_ |= 0x00080000;
        tschchartseriesdefaultlabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaultlabelparagraphstyleindex = 20;</code>
       */
      public Builder clearTschchartseriesdefaultlabelparagraphstyleindex() {
        bitField0_ = (bitField0_ & ~0x00080000);
        tschchartseriesdefaultlabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartserieslinelabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartserieslinelabelparagraphstyleindex = 21;</code>
       */
      public boolean hasTschchartserieslinelabelparagraphstyleindex() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 tschchartserieslinelabelparagraphstyleindex = 21;</code>
       */
      public int getTschchartserieslinelabelparagraphstyleindex() {
        return tschchartserieslinelabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartserieslinelabelparagraphstyleindex = 21;</code>
       */
      public Builder setTschchartserieslinelabelparagraphstyleindex(int value) {
        bitField0_ |= 0x00100000;
        tschchartserieslinelabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartserieslinelabelparagraphstyleindex = 21;</code>
       */
      public Builder clearTschchartserieslinelabelparagraphstyleindex() {
        bitField0_ = (bitField0_ & ~0x00100000);
        tschchartserieslinelabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesmixedlabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartseriesmixedlabelparagraphstyleindex = 22;</code>
       */
      public boolean hasTschchartseriesmixedlabelparagraphstyleindex() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 tschchartseriesmixedlabelparagraphstyleindex = 22;</code>
       */
      public int getTschchartseriesmixedlabelparagraphstyleindex() {
        return tschchartseriesmixedlabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartseriesmixedlabelparagraphstyleindex = 22;</code>
       */
      public Builder setTschchartseriesmixedlabelparagraphstyleindex(int value) {
        bitField0_ |= 0x00200000;
        tschchartseriesmixedlabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesmixedlabelparagraphstyleindex = 22;</code>
       */
      public Builder clearTschchartseriesmixedlabelparagraphstyleindex() {
        bitField0_ = (bitField0_ & ~0x00200000);
        tschchartseriesmixedlabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriespielabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartseriespielabelparagraphstyleindex = 23;</code>
       */
      public boolean hasTschchartseriespielabelparagraphstyleindex() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 tschchartseriespielabelparagraphstyleindex = 23;</code>
       */
      public int getTschchartseriespielabelparagraphstyleindex() {
        return tschchartseriespielabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartseriespielabelparagraphstyleindex = 23;</code>
       */
      public Builder setTschchartseriespielabelparagraphstyleindex(int value) {
        bitField0_ |= 0x00400000;
        tschchartseriespielabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriespielabelparagraphstyleindex = 23;</code>
       */
      public Builder clearTschchartseriespielabelparagraphstyleindex() {
        bitField0_ = (bitField0_ & ~0x00400000);
        tschchartseriespielabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private float tschchartseriesdefaultopacity_ ;
      /**
       * <code>optional float tschchartseriesdefaultopacity = 24;</code>
       */
      public boolean hasTschchartseriesdefaultopacity() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional float tschchartseriesdefaultopacity = 24;</code>
       */
      public float getTschchartseriesdefaultopacity() {
        return tschchartseriesdefaultopacity_;
      }
      /**
       * <code>optional float tschchartseriesdefaultopacity = 24;</code>
       */
      public Builder setTschchartseriesdefaultopacity(float value) {
        bitField0_ |= 0x00800000;
        tschchartseriesdefaultopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaultopacity = 24;</code>
       */
      public Builder clearTschchartseriesdefaultopacity() {
        bitField0_ = (bitField0_ & ~0x00800000);
        tschchartseriesdefaultopacity_ = 0F;
        onChanged();
        return this;
      }

      private int tschchartseriesareaoutsidelabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartseriesareaoutsidelabelparagraphstyleindex = 25;</code>
       */
      public boolean hasTschchartseriesareaoutsidelabelparagraphstyleindex() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int32 tschchartseriesareaoutsidelabelparagraphstyleindex = 25;</code>
       */
      public int getTschchartseriesareaoutsidelabelparagraphstyleindex() {
        return tschchartseriesareaoutsidelabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartseriesareaoutsidelabelparagraphstyleindex = 25;</code>
       */
      public Builder setTschchartseriesareaoutsidelabelparagraphstyleindex(int value) {
        bitField0_ |= 0x01000000;
        tschchartseriesareaoutsidelabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesareaoutsidelabelparagraphstyleindex = 25;</code>
       */
      public Builder clearTschchartseriesareaoutsidelabelparagraphstyleindex() {
        bitField0_ = (bitField0_ & ~0x01000000);
        tschchartseriesareaoutsidelabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesbaroutsidelabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartseriesbaroutsidelabelparagraphstyleindex = 26;</code>
       */
      public boolean hasTschchartseriesbaroutsidelabelparagraphstyleindex() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int32 tschchartseriesbaroutsidelabelparagraphstyleindex = 26;</code>
       */
      public int getTschchartseriesbaroutsidelabelparagraphstyleindex() {
        return tschchartseriesbaroutsidelabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartseriesbaroutsidelabelparagraphstyleindex = 26;</code>
       */
      public Builder setTschchartseriesbaroutsidelabelparagraphstyleindex(int value) {
        bitField0_ |= 0x02000000;
        tschchartseriesbaroutsidelabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesbaroutsidelabelparagraphstyleindex = 26;</code>
       */
      public Builder clearTschchartseriesbaroutsidelabelparagraphstyleindex() {
        bitField0_ = (bitField0_ & ~0x02000000);
        tschchartseriesbaroutsidelabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesdefaultoutsidelabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartseriesdefaultoutsidelabelparagraphstyleindex = 27;</code>
       */
      public boolean hasTschchartseriesdefaultoutsidelabelparagraphstyleindex() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int32 tschchartseriesdefaultoutsidelabelparagraphstyleindex = 27;</code>
       */
      public int getTschchartseriesdefaultoutsidelabelparagraphstyleindex() {
        return tschchartseriesdefaultoutsidelabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaultoutsidelabelparagraphstyleindex = 27;</code>
       */
      public Builder setTschchartseriesdefaultoutsidelabelparagraphstyleindex(int value) {
        bitField0_ |= 0x04000000;
        tschchartseriesdefaultoutsidelabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaultoutsidelabelparagraphstyleindex = 27;</code>
       */
      public Builder clearTschchartseriesdefaultoutsidelabelparagraphstyleindex() {
        bitField0_ = (bitField0_ & ~0x04000000);
        tschchartseriesdefaultoutsidelabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesmixedoutsidelabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartseriesmixedoutsidelabelparagraphstyleindex = 28;</code>
       */
      public boolean hasTschchartseriesmixedoutsidelabelparagraphstyleindex() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int32 tschchartseriesmixedoutsidelabelparagraphstyleindex = 28;</code>
       */
      public int getTschchartseriesmixedoutsidelabelparagraphstyleindex() {
        return tschchartseriesmixedoutsidelabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartseriesmixedoutsidelabelparagraphstyleindex = 28;</code>
       */
      public Builder setTschchartseriesmixedoutsidelabelparagraphstyleindex(int value) {
        bitField0_ |= 0x08000000;
        tschchartseriesmixedoutsidelabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesmixedoutsidelabelparagraphstyleindex = 28;</code>
       */
      public Builder clearTschchartseriesmixedoutsidelabelparagraphstyleindex() {
        bitField0_ = (bitField0_ & ~0x08000000);
        tschchartseriesmixedoutsidelabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriespieoutsidelabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartseriespieoutsidelabelparagraphstyleindex = 29;</code>
       */
      public boolean hasTschchartseriespieoutsidelabelparagraphstyleindex() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int32 tschchartseriespieoutsidelabelparagraphstyleindex = 29;</code>
       */
      public int getTschchartseriespieoutsidelabelparagraphstyleindex() {
        return tschchartseriespieoutsidelabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartseriespieoutsidelabelparagraphstyleindex = 29;</code>
       */
      public Builder setTschchartseriespieoutsidelabelparagraphstyleindex(int value) {
        bitField0_ |= 0x10000000;
        tschchartseriespieoutsidelabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriespieoutsidelabelparagraphstyleindex = 29;</code>
       */
      public Builder clearTschchartseriespieoutsidelabelparagraphstyleindex() {
        bitField0_ = (bitField0_ & ~0x10000000);
        tschchartseriespieoutsidelabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseries3Dareashadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseries3DareashadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 30;</code>
       */
      public boolean hasTschchartseries3Dareashadow() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 30;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dareashadow() {
        if (tschchartseries3DareashadowBuilder_ == null) {
          return tschchartseries3Dareashadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dareashadow_;
        } else {
          return tschchartseries3DareashadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 30;</code>
       */
      public Builder setTschchartseries3Dareashadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseries3DareashadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseries3Dareashadow_ = value;
          onChanged();
        } else {
          tschchartseries3DareashadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 30;</code>
       */
      public Builder setTschchartseries3Dareashadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseries3DareashadowBuilder_ == null) {
          tschchartseries3Dareashadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseries3DareashadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 30;</code>
       */
      public Builder mergeTschchartseries3Dareashadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseries3DareashadowBuilder_ == null) {
          if (((bitField0_ & 0x20000000) == 0x20000000) &&
              tschchartseries3Dareashadow_ != null &&
              tschchartseries3Dareashadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseries3Dareashadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseries3Dareashadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseries3Dareashadow_ = value;
          }
          onChanged();
        } else {
          tschchartseries3DareashadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 30;</code>
       */
      public Builder clearTschchartseries3Dareashadow() {
        if (tschchartseries3DareashadowBuilder_ == null) {
          tschchartseries3Dareashadow_ = null;
          onChanged();
        } else {
          tschchartseries3DareashadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x20000000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 30;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseries3DareashadowBuilder() {
        bitField0_ |= 0x20000000;
        onChanged();
        return getTschchartseries3DareashadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 30;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DareashadowOrBuilder() {
        if (tschchartseries3DareashadowBuilder_ != null) {
          return tschchartseries3DareashadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseries3Dareashadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dareashadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 30;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseries3DareashadowFieldBuilder() {
        if (tschchartseries3DareashadowBuilder_ == null) {
          tschchartseries3DareashadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseries3Dareashadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseries3Dareashadow_ = null;
        }
        return tschchartseries3DareashadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseries3Dbarshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseries3DbarshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 31;</code>
       */
      public boolean hasTschchartseries3Dbarshadow() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 31;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dbarshadow() {
        if (tschchartseries3DbarshadowBuilder_ == null) {
          return tschchartseries3Dbarshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dbarshadow_;
        } else {
          return tschchartseries3DbarshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 31;</code>
       */
      public Builder setTschchartseries3Dbarshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseries3DbarshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseries3Dbarshadow_ = value;
          onChanged();
        } else {
          tschchartseries3DbarshadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 31;</code>
       */
      public Builder setTschchartseries3Dbarshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseries3DbarshadowBuilder_ == null) {
          tschchartseries3Dbarshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseries3DbarshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 31;</code>
       */
      public Builder mergeTschchartseries3Dbarshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseries3DbarshadowBuilder_ == null) {
          if (((bitField0_ & 0x40000000) == 0x40000000) &&
              tschchartseries3Dbarshadow_ != null &&
              tschchartseries3Dbarshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseries3Dbarshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseries3Dbarshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseries3Dbarshadow_ = value;
          }
          onChanged();
        } else {
          tschchartseries3DbarshadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 31;</code>
       */
      public Builder clearTschchartseries3Dbarshadow() {
        if (tschchartseries3DbarshadowBuilder_ == null) {
          tschchartseries3Dbarshadow_ = null;
          onChanged();
        } else {
          tschchartseries3DbarshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x40000000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 31;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseries3DbarshadowBuilder() {
        bitField0_ |= 0x40000000;
        onChanged();
        return getTschchartseries3DbarshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 31;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DbarshadowOrBuilder() {
        if (tschchartseries3DbarshadowBuilder_ != null) {
          return tschchartseries3DbarshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseries3Dbarshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dbarshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 31;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseries3DbarshadowFieldBuilder() {
        if (tschchartseries3DbarshadowBuilder_ == null) {
          tschchartseries3DbarshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseries3Dbarshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseries3Dbarshadow_ = null;
        }
        return tschchartseries3DbarshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseries3Dcolumnshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseries3DcolumnshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 32;</code>
       */
      public boolean hasTschchartseries3Dcolumnshadow() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 32;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dcolumnshadow() {
        if (tschchartseries3DcolumnshadowBuilder_ == null) {
          return tschchartseries3Dcolumnshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dcolumnshadow_;
        } else {
          return tschchartseries3DcolumnshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 32;</code>
       */
      public Builder setTschchartseries3Dcolumnshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseries3DcolumnshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseries3Dcolumnshadow_ = value;
          onChanged();
        } else {
          tschchartseries3DcolumnshadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 32;</code>
       */
      public Builder setTschchartseries3Dcolumnshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseries3DcolumnshadowBuilder_ == null) {
          tschchartseries3Dcolumnshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseries3DcolumnshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 32;</code>
       */
      public Builder mergeTschchartseries3Dcolumnshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseries3DcolumnshadowBuilder_ == null) {
          if (((bitField0_ & 0x80000000) == 0x80000000) &&
              tschchartseries3Dcolumnshadow_ != null &&
              tschchartseries3Dcolumnshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseries3Dcolumnshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseries3Dcolumnshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseries3Dcolumnshadow_ = value;
          }
          onChanged();
        } else {
          tschchartseries3DcolumnshadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 32;</code>
       */
      public Builder clearTschchartseries3Dcolumnshadow() {
        if (tschchartseries3DcolumnshadowBuilder_ == null) {
          tschchartseries3Dcolumnshadow_ = null;
          onChanged();
        } else {
          tschchartseries3DcolumnshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x80000000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 32;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseries3DcolumnshadowBuilder() {
        bitField0_ |= 0x80000000;
        onChanged();
        return getTschchartseries3DcolumnshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 32;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DcolumnshadowOrBuilder() {
        if (tschchartseries3DcolumnshadowBuilder_ != null) {
          return tschchartseries3DcolumnshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseries3Dcolumnshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dcolumnshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 32;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseries3DcolumnshadowFieldBuilder() {
        if (tschchartseries3DcolumnshadowBuilder_ == null) {
          tschchartseries3DcolumnshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseries3Dcolumnshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseries3Dcolumnshadow_ = null;
        }
        return tschchartseries3DcolumnshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseries3Dlineshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseries3DlineshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 33;</code>
       */
      public boolean hasTschchartseries3Dlineshadow() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 33;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dlineshadow() {
        if (tschchartseries3DlineshadowBuilder_ == null) {
          return tschchartseries3Dlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dlineshadow_;
        } else {
          return tschchartseries3DlineshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 33;</code>
       */
      public Builder setTschchartseries3Dlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseries3DlineshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseries3Dlineshadow_ = value;
          onChanged();
        } else {
          tschchartseries3DlineshadowBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 33;</code>
       */
      public Builder setTschchartseries3Dlineshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseries3DlineshadowBuilder_ == null) {
          tschchartseries3Dlineshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseries3DlineshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 33;</code>
       */
      public Builder mergeTschchartseries3Dlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseries3DlineshadowBuilder_ == null) {
          if (((bitField1_ & 0x00000001) == 0x00000001) &&
              tschchartseries3Dlineshadow_ != null &&
              tschchartseries3Dlineshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseries3Dlineshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseries3Dlineshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseries3Dlineshadow_ = value;
          }
          onChanged();
        } else {
          tschchartseries3DlineshadowBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 33;</code>
       */
      public Builder clearTschchartseries3Dlineshadow() {
        if (tschchartseries3DlineshadowBuilder_ == null) {
          tschchartseries3Dlineshadow_ = null;
          onChanged();
        } else {
          tschchartseries3DlineshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 33;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseries3DlineshadowBuilder() {
        bitField1_ |= 0x00000001;
        onChanged();
        return getTschchartseries3DlineshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 33;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DlineshadowOrBuilder() {
        if (tschchartseries3DlineshadowBuilder_ != null) {
          return tschchartseries3DlineshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseries3Dlineshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dlineshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 33;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseries3DlineshadowFieldBuilder() {
        if (tschchartseries3DlineshadowBuilder_ == null) {
          tschchartseries3DlineshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseries3Dlineshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseries3Dlineshadow_ = null;
        }
        return tschchartseries3DlineshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseries3Dpieshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseries3DpieshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 34;</code>
       */
      public boolean hasTschchartseries3Dpieshadow() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 34;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dpieshadow() {
        if (tschchartseries3DpieshadowBuilder_ == null) {
          return tschchartseries3Dpieshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dpieshadow_;
        } else {
          return tschchartseries3DpieshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 34;</code>
       */
      public Builder setTschchartseries3Dpieshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseries3DpieshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseries3Dpieshadow_ = value;
          onChanged();
        } else {
          tschchartseries3DpieshadowBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 34;</code>
       */
      public Builder setTschchartseries3Dpieshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseries3DpieshadowBuilder_ == null) {
          tschchartseries3Dpieshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseries3DpieshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 34;</code>
       */
      public Builder mergeTschchartseries3Dpieshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseries3DpieshadowBuilder_ == null) {
          if (((bitField1_ & 0x00000002) == 0x00000002) &&
              tschchartseries3Dpieshadow_ != null &&
              tschchartseries3Dpieshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseries3Dpieshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseries3Dpieshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseries3Dpieshadow_ = value;
          }
          onChanged();
        } else {
          tschchartseries3DpieshadowBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 34;</code>
       */
      public Builder clearTschchartseries3Dpieshadow() {
        if (tschchartseries3DpieshadowBuilder_ == null) {
          tschchartseries3Dpieshadow_ = null;
          onChanged();
        } else {
          tschchartseries3DpieshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 34;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseries3DpieshadowBuilder() {
        bitField1_ |= 0x00000002;
        onChanged();
        return getTschchartseries3DpieshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 34;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DpieshadowOrBuilder() {
        if (tschchartseries3DpieshadowBuilder_ != null) {
          return tschchartseries3DpieshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseries3Dpieshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dpieshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 34;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseries3DpieshadowFieldBuilder() {
        if (tschchartseries3DpieshadowBuilder_ == null) {
          tschchartseries3DpieshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseries3Dpieshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseries3Dpieshadow_ = null;
        }
        return tschchartseries3DpieshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesareashadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseriesareashadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 35;</code>
       */
      public boolean hasTschchartseriesareashadow() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 35;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesareashadow() {
        if (tschchartseriesareashadowBuilder_ == null) {
          return tschchartseriesareashadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesareashadow_;
        } else {
          return tschchartseriesareashadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 35;</code>
       */
      public Builder setTschchartseriesareashadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesareashadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesareashadow_ = value;
          onChanged();
        } else {
          tschchartseriesareashadowBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 35;</code>
       */
      public Builder setTschchartseriesareashadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseriesareashadowBuilder_ == null) {
          tschchartseriesareashadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesareashadowBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 35;</code>
       */
      public Builder mergeTschchartseriesareashadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesareashadowBuilder_ == null) {
          if (((bitField1_ & 0x00000004) == 0x00000004) &&
              tschchartseriesareashadow_ != null &&
              tschchartseriesareashadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseriesareashadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseriesareashadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesareashadow_ = value;
          }
          onChanged();
        } else {
          tschchartseriesareashadowBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 35;</code>
       */
      public Builder clearTschchartseriesareashadow() {
        if (tschchartseriesareashadowBuilder_ == null) {
          tschchartseriesareashadow_ = null;
          onChanged();
        } else {
          tschchartseriesareashadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 35;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseriesareashadowBuilder() {
        bitField1_ |= 0x00000004;
        onChanged();
        return getTschchartseriesareashadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 35;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesareashadowOrBuilder() {
        if (tschchartseriesareashadowBuilder_ != null) {
          return tschchartseriesareashadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesareashadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesareashadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 35;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseriesareashadowFieldBuilder() {
        if (tschchartseriesareashadowBuilder_ == null) {
          tschchartseriesareashadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseriesareashadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesareashadow_ = null;
        }
        return tschchartseriesareashadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesbarshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseriesbarshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 36;</code>
       */
      public boolean hasTschchartseriesbarshadow() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 36;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesbarshadow() {
        if (tschchartseriesbarshadowBuilder_ == null) {
          return tschchartseriesbarshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesbarshadow_;
        } else {
          return tschchartseriesbarshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 36;</code>
       */
      public Builder setTschchartseriesbarshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesbarshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesbarshadow_ = value;
          onChanged();
        } else {
          tschchartseriesbarshadowBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 36;</code>
       */
      public Builder setTschchartseriesbarshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseriesbarshadowBuilder_ == null) {
          tschchartseriesbarshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesbarshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 36;</code>
       */
      public Builder mergeTschchartseriesbarshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesbarshadowBuilder_ == null) {
          if (((bitField1_ & 0x00000008) == 0x00000008) &&
              tschchartseriesbarshadow_ != null &&
              tschchartseriesbarshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseriesbarshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseriesbarshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesbarshadow_ = value;
          }
          onChanged();
        } else {
          tschchartseriesbarshadowBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 36;</code>
       */
      public Builder clearTschchartseriesbarshadow() {
        if (tschchartseriesbarshadowBuilder_ == null) {
          tschchartseriesbarshadow_ = null;
          onChanged();
        } else {
          tschchartseriesbarshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 36;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseriesbarshadowBuilder() {
        bitField1_ |= 0x00000008;
        onChanged();
        return getTschchartseriesbarshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 36;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesbarshadowOrBuilder() {
        if (tschchartseriesbarshadowBuilder_ != null) {
          return tschchartseriesbarshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesbarshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesbarshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 36;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseriesbarshadowFieldBuilder() {
        if (tschchartseriesbarshadowBuilder_ == null) {
          tschchartseriesbarshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseriesbarshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesbarshadow_ = null;
        }
        return tschchartseriesbarshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesbubbleshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseriesbubbleshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 37;</code>
       */
      public boolean hasTschchartseriesbubbleshadow() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 37;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesbubbleshadow() {
        if (tschchartseriesbubbleshadowBuilder_ == null) {
          return tschchartseriesbubbleshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesbubbleshadow_;
        } else {
          return tschchartseriesbubbleshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 37;</code>
       */
      public Builder setTschchartseriesbubbleshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesbubbleshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesbubbleshadow_ = value;
          onChanged();
        } else {
          tschchartseriesbubbleshadowBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 37;</code>
       */
      public Builder setTschchartseriesbubbleshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseriesbubbleshadowBuilder_ == null) {
          tschchartseriesbubbleshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesbubbleshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 37;</code>
       */
      public Builder mergeTschchartseriesbubbleshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesbubbleshadowBuilder_ == null) {
          if (((bitField1_ & 0x00000010) == 0x00000010) &&
              tschchartseriesbubbleshadow_ != null &&
              tschchartseriesbubbleshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseriesbubbleshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseriesbubbleshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesbubbleshadow_ = value;
          }
          onChanged();
        } else {
          tschchartseriesbubbleshadowBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 37;</code>
       */
      public Builder clearTschchartseriesbubbleshadow() {
        if (tschchartseriesbubbleshadowBuilder_ == null) {
          tschchartseriesbubbleshadow_ = null;
          onChanged();
        } else {
          tschchartseriesbubbleshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 37;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseriesbubbleshadowBuilder() {
        bitField1_ |= 0x00000010;
        onChanged();
        return getTschchartseriesbubbleshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 37;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesbubbleshadowOrBuilder() {
        if (tschchartseriesbubbleshadowBuilder_ != null) {
          return tschchartseriesbubbleshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesbubbleshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesbubbleshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 37;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseriesbubbleshadowFieldBuilder() {
        if (tschchartseriesbubbleshadowBuilder_ == null) {
          tschchartseriesbubbleshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseriesbubbleshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesbubbleshadow_ = null;
        }
        return tschchartseriesbubbleshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesdefaultshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseriesdefaultshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 38;</code>
       */
      public boolean hasTschchartseriesdefaultshadow() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 38;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesdefaultshadow() {
        if (tschchartseriesdefaultshadowBuilder_ == null) {
          return tschchartseriesdefaultshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesdefaultshadow_;
        } else {
          return tschchartseriesdefaultshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 38;</code>
       */
      public Builder setTschchartseriesdefaultshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesdefaultshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaultshadow_ = value;
          onChanged();
        } else {
          tschchartseriesdefaultshadowBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 38;</code>
       */
      public Builder setTschchartseriesdefaultshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseriesdefaultshadowBuilder_ == null) {
          tschchartseriesdefaultshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaultshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 38;</code>
       */
      public Builder mergeTschchartseriesdefaultshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesdefaultshadowBuilder_ == null) {
          if (((bitField1_ & 0x00000020) == 0x00000020) &&
              tschchartseriesdefaultshadow_ != null &&
              tschchartseriesdefaultshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseriesdefaultshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseriesdefaultshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaultshadow_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaultshadowBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 38;</code>
       */
      public Builder clearTschchartseriesdefaultshadow() {
        if (tschchartseriesdefaultshadowBuilder_ == null) {
          tschchartseriesdefaultshadow_ = null;
          onChanged();
        } else {
          tschchartseriesdefaultshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 38;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseriesdefaultshadowBuilder() {
        bitField1_ |= 0x00000020;
        onChanged();
        return getTschchartseriesdefaultshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 38;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesdefaultshadowOrBuilder() {
        if (tschchartseriesdefaultshadowBuilder_ != null) {
          return tschchartseriesdefaultshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaultshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesdefaultshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 38;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseriesdefaultshadowFieldBuilder() {
        if (tschchartseriesdefaultshadowBuilder_ == null) {
          tschchartseriesdefaultshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseriesdefaultshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaultshadow_ = null;
        }
        return tschchartseriesdefaultshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartserieslineshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartserieslineshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 39;</code>
       */
      public boolean hasTschchartserieslineshadow() {
        return ((bitField1_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 39;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartserieslineshadow() {
        if (tschchartserieslineshadowBuilder_ == null) {
          return tschchartserieslineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartserieslineshadow_;
        } else {
          return tschchartserieslineshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 39;</code>
       */
      public Builder setTschchartserieslineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartserieslineshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartserieslineshadow_ = value;
          onChanged();
        } else {
          tschchartserieslineshadowBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 39;</code>
       */
      public Builder setTschchartserieslineshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartserieslineshadowBuilder_ == null) {
          tschchartserieslineshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartserieslineshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 39;</code>
       */
      public Builder mergeTschchartserieslineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartserieslineshadowBuilder_ == null) {
          if (((bitField1_ & 0x00000040) == 0x00000040) &&
              tschchartserieslineshadow_ != null &&
              tschchartserieslineshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartserieslineshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartserieslineshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartserieslineshadow_ = value;
          }
          onChanged();
        } else {
          tschchartserieslineshadowBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 39;</code>
       */
      public Builder clearTschchartserieslineshadow() {
        if (tschchartserieslineshadowBuilder_ == null) {
          tschchartserieslineshadow_ = null;
          onChanged();
        } else {
          tschchartserieslineshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 39;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartserieslineshadowBuilder() {
        bitField1_ |= 0x00000040;
        onChanged();
        return getTschchartserieslineshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 39;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartserieslineshadowOrBuilder() {
        if (tschchartserieslineshadowBuilder_ != null) {
          return tschchartserieslineshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartserieslineshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartserieslineshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 39;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartserieslineshadowFieldBuilder() {
        if (tschchartserieslineshadowBuilder_ == null) {
          tschchartserieslineshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartserieslineshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartserieslineshadow_ = null;
        }
        return tschchartserieslineshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesmixedareashadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseriesmixedareashadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 40;</code>
       */
      public boolean hasTschchartseriesmixedareashadow() {
        return ((bitField1_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 40;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesmixedareashadow() {
        if (tschchartseriesmixedareashadowBuilder_ == null) {
          return tschchartseriesmixedareashadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesmixedareashadow_;
        } else {
          return tschchartseriesmixedareashadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 40;</code>
       */
      public Builder setTschchartseriesmixedareashadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesmixedareashadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesmixedareashadow_ = value;
          onChanged();
        } else {
          tschchartseriesmixedareashadowBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 40;</code>
       */
      public Builder setTschchartseriesmixedareashadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseriesmixedareashadowBuilder_ == null) {
          tschchartseriesmixedareashadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesmixedareashadowBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 40;</code>
       */
      public Builder mergeTschchartseriesmixedareashadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesmixedareashadowBuilder_ == null) {
          if (((bitField1_ & 0x00000080) == 0x00000080) &&
              tschchartseriesmixedareashadow_ != null &&
              tschchartseriesmixedareashadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseriesmixedareashadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseriesmixedareashadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesmixedareashadow_ = value;
          }
          onChanged();
        } else {
          tschchartseriesmixedareashadowBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 40;</code>
       */
      public Builder clearTschchartseriesmixedareashadow() {
        if (tschchartseriesmixedareashadowBuilder_ == null) {
          tschchartseriesmixedareashadow_ = null;
          onChanged();
        } else {
          tschchartseriesmixedareashadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 40;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseriesmixedareashadowBuilder() {
        bitField1_ |= 0x00000080;
        onChanged();
        return getTschchartseriesmixedareashadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 40;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesmixedareashadowOrBuilder() {
        if (tschchartseriesmixedareashadowBuilder_ != null) {
          return tschchartseriesmixedareashadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesmixedareashadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesmixedareashadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 40;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseriesmixedareashadowFieldBuilder() {
        if (tschchartseriesmixedareashadowBuilder_ == null) {
          tschchartseriesmixedareashadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseriesmixedareashadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesmixedareashadow_ = null;
        }
        return tschchartseriesmixedareashadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesmixedcolumnshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseriesmixedcolumnshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 41;</code>
       */
      public boolean hasTschchartseriesmixedcolumnshadow() {
        return ((bitField1_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 41;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesmixedcolumnshadow() {
        if (tschchartseriesmixedcolumnshadowBuilder_ == null) {
          return tschchartseriesmixedcolumnshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesmixedcolumnshadow_;
        } else {
          return tschchartseriesmixedcolumnshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 41;</code>
       */
      public Builder setTschchartseriesmixedcolumnshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesmixedcolumnshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesmixedcolumnshadow_ = value;
          onChanged();
        } else {
          tschchartseriesmixedcolumnshadowBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 41;</code>
       */
      public Builder setTschchartseriesmixedcolumnshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseriesmixedcolumnshadowBuilder_ == null) {
          tschchartseriesmixedcolumnshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesmixedcolumnshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 41;</code>
       */
      public Builder mergeTschchartseriesmixedcolumnshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesmixedcolumnshadowBuilder_ == null) {
          if (((bitField1_ & 0x00000100) == 0x00000100) &&
              tschchartseriesmixedcolumnshadow_ != null &&
              tschchartseriesmixedcolumnshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseriesmixedcolumnshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseriesmixedcolumnshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesmixedcolumnshadow_ = value;
          }
          onChanged();
        } else {
          tschchartseriesmixedcolumnshadowBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 41;</code>
       */
      public Builder clearTschchartseriesmixedcolumnshadow() {
        if (tschchartseriesmixedcolumnshadowBuilder_ == null) {
          tschchartseriesmixedcolumnshadow_ = null;
          onChanged();
        } else {
          tschchartseriesmixedcolumnshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 41;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseriesmixedcolumnshadowBuilder() {
        bitField1_ |= 0x00000100;
        onChanged();
        return getTschchartseriesmixedcolumnshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 41;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesmixedcolumnshadowOrBuilder() {
        if (tschchartseriesmixedcolumnshadowBuilder_ != null) {
          return tschchartseriesmixedcolumnshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesmixedcolumnshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesmixedcolumnshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 41;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseriesmixedcolumnshadowFieldBuilder() {
        if (tschchartseriesmixedcolumnshadowBuilder_ == null) {
          tschchartseriesmixedcolumnshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseriesmixedcolumnshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesmixedcolumnshadow_ = null;
        }
        return tschchartseriesmixedcolumnshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesmixedlineshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseriesmixedlineshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 42;</code>
       */
      public boolean hasTschchartseriesmixedlineshadow() {
        return ((bitField1_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 42;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesmixedlineshadow() {
        if (tschchartseriesmixedlineshadowBuilder_ == null) {
          return tschchartseriesmixedlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesmixedlineshadow_;
        } else {
          return tschchartseriesmixedlineshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 42;</code>
       */
      public Builder setTschchartseriesmixedlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesmixedlineshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesmixedlineshadow_ = value;
          onChanged();
        } else {
          tschchartseriesmixedlineshadowBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 42;</code>
       */
      public Builder setTschchartseriesmixedlineshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseriesmixedlineshadowBuilder_ == null) {
          tschchartseriesmixedlineshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesmixedlineshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 42;</code>
       */
      public Builder mergeTschchartseriesmixedlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesmixedlineshadowBuilder_ == null) {
          if (((bitField1_ & 0x00000200) == 0x00000200) &&
              tschchartseriesmixedlineshadow_ != null &&
              tschchartseriesmixedlineshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseriesmixedlineshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseriesmixedlineshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesmixedlineshadow_ = value;
          }
          onChanged();
        } else {
          tschchartseriesmixedlineshadowBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 42;</code>
       */
      public Builder clearTschchartseriesmixedlineshadow() {
        if (tschchartseriesmixedlineshadowBuilder_ == null) {
          tschchartseriesmixedlineshadow_ = null;
          onChanged();
        } else {
          tschchartseriesmixedlineshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 42;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseriesmixedlineshadowBuilder() {
        bitField1_ |= 0x00000200;
        onChanged();
        return getTschchartseriesmixedlineshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 42;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesmixedlineshadowOrBuilder() {
        if (tschchartseriesmixedlineshadowBuilder_ != null) {
          return tschchartseriesmixedlineshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesmixedlineshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesmixedlineshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 42;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseriesmixedlineshadowFieldBuilder() {
        if (tschchartseriesmixedlineshadowBuilder_ == null) {
          tschchartseriesmixedlineshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseriesmixedlineshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesmixedlineshadow_ = null;
        }
        return tschchartseriesmixedlineshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriespieshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseriespieshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 43;</code>
       */
      public boolean hasTschchartseriespieshadow() {
        return ((bitField1_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 43;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriespieshadow() {
        if (tschchartseriespieshadowBuilder_ == null) {
          return tschchartseriespieshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriespieshadow_;
        } else {
          return tschchartseriespieshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 43;</code>
       */
      public Builder setTschchartseriespieshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriespieshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriespieshadow_ = value;
          onChanged();
        } else {
          tschchartseriespieshadowBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 43;</code>
       */
      public Builder setTschchartseriespieshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseriespieshadowBuilder_ == null) {
          tschchartseriespieshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriespieshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 43;</code>
       */
      public Builder mergeTschchartseriespieshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriespieshadowBuilder_ == null) {
          if (((bitField1_ & 0x00000400) == 0x00000400) &&
              tschchartseriespieshadow_ != null &&
              tschchartseriespieshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseriespieshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseriespieshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriespieshadow_ = value;
          }
          onChanged();
        } else {
          tschchartseriespieshadowBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 43;</code>
       */
      public Builder clearTschchartseriespieshadow() {
        if (tschchartseriespieshadowBuilder_ == null) {
          tschchartseriespieshadow_ = null;
          onChanged();
        } else {
          tschchartseriespieshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 43;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseriespieshadowBuilder() {
        bitField1_ |= 0x00000400;
        onChanged();
        return getTschchartseriespieshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 43;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriespieshadowOrBuilder() {
        if (tschchartseriespieshadowBuilder_ != null) {
          return tschchartseriespieshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriespieshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriespieshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 43;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseriespieshadowFieldBuilder() {
        if (tschchartseriespieshadowBuilder_ == null) {
          tschchartseriespieshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseriespieshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseriespieshadow_ = null;
        }
        return tschchartseriespieshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesscattershadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseriesscattershadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 44;</code>
       */
      public boolean hasTschchartseriesscattershadow() {
        return ((bitField1_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 44;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesscattershadow() {
        if (tschchartseriesscattershadowBuilder_ == null) {
          return tschchartseriesscattershadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesscattershadow_;
        } else {
          return tschchartseriesscattershadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 44;</code>
       */
      public Builder setTschchartseriesscattershadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesscattershadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesscattershadow_ = value;
          onChanged();
        } else {
          tschchartseriesscattershadowBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 44;</code>
       */
      public Builder setTschchartseriesscattershadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseriesscattershadowBuilder_ == null) {
          tschchartseriesscattershadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesscattershadowBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 44;</code>
       */
      public Builder mergeTschchartseriesscattershadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesscattershadowBuilder_ == null) {
          if (((bitField1_ & 0x00000800) == 0x00000800) &&
              tschchartseriesscattershadow_ != null &&
              tschchartseriesscattershadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseriesscattershadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseriesscattershadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesscattershadow_ = value;
          }
          onChanged();
        } else {
          tschchartseriesscattershadowBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 44;</code>
       */
      public Builder clearTschchartseriesscattershadow() {
        if (tschchartseriesscattershadowBuilder_ == null) {
          tschchartseriesscattershadow_ = null;
          onChanged();
        } else {
          tschchartseriesscattershadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 44;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseriesscattershadowBuilder() {
        bitField1_ |= 0x00000800;
        onChanged();
        return getTschchartseriesscattershadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 44;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesscattershadowOrBuilder() {
        if (tschchartseriesscattershadowBuilder_ != null) {
          return tschchartseriesscattershadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesscattershadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesscattershadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 44;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseriesscattershadowFieldBuilder() {
        if (tschchartseriesscattershadowBuilder_ == null) {
          tschchartseriesscattershadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseriesscattershadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesscattershadow_ = null;
        }
        return tschchartseriesscattershadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesareastroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesareastrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 45;</code>
       */
      public boolean hasTschchartseriesareastroke() {
        return ((bitField1_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 45;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesareastroke() {
        if (tschchartseriesareastrokeBuilder_ == null) {
          return tschchartseriesareastroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesareastroke_;
        } else {
          return tschchartseriesareastrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 45;</code>
       */
      public Builder setTschchartseriesareastroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesareastrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesareastroke_ = value;
          onChanged();
        } else {
          tschchartseriesareastrokeBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 45;</code>
       */
      public Builder setTschchartseriesareastroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesareastrokeBuilder_ == null) {
          tschchartseriesareastroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesareastrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 45;</code>
       */
      public Builder mergeTschchartseriesareastroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesareastrokeBuilder_ == null) {
          if (((bitField1_ & 0x00001000) == 0x00001000) &&
              tschchartseriesareastroke_ != null &&
              tschchartseriesareastroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesareastroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesareastroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesareastroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesareastrokeBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 45;</code>
       */
      public Builder clearTschchartseriesareastroke() {
        if (tschchartseriesareastrokeBuilder_ == null) {
          tschchartseriesareastroke_ = null;
          onChanged();
        } else {
          tschchartseriesareastrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 45;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesareastrokeBuilder() {
        bitField1_ |= 0x00001000;
        onChanged();
        return getTschchartseriesareastrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 45;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesareastrokeOrBuilder() {
        if (tschchartseriesareastrokeBuilder_ != null) {
          return tschchartseriesareastrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesareastroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesareastroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 45;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesareastrokeFieldBuilder() {
        if (tschchartseriesareastrokeBuilder_ == null) {
          tschchartseriesareastrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesareastroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesareastroke_ = null;
        }
        return tschchartseriesareastrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesbarstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesbarstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 46;</code>
       */
      public boolean hasTschchartseriesbarstroke() {
        return ((bitField1_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 46;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesbarstroke() {
        if (tschchartseriesbarstrokeBuilder_ == null) {
          return tschchartseriesbarstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesbarstroke_;
        } else {
          return tschchartseriesbarstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 46;</code>
       */
      public Builder setTschchartseriesbarstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesbarstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesbarstroke_ = value;
          onChanged();
        } else {
          tschchartseriesbarstrokeBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 46;</code>
       */
      public Builder setTschchartseriesbarstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesbarstrokeBuilder_ == null) {
          tschchartseriesbarstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesbarstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 46;</code>
       */
      public Builder mergeTschchartseriesbarstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesbarstrokeBuilder_ == null) {
          if (((bitField1_ & 0x00002000) == 0x00002000) &&
              tschchartseriesbarstroke_ != null &&
              tschchartseriesbarstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesbarstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesbarstroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesbarstroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesbarstrokeBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 46;</code>
       */
      public Builder clearTschchartseriesbarstroke() {
        if (tschchartseriesbarstrokeBuilder_ == null) {
          tschchartseriesbarstroke_ = null;
          onChanged();
        } else {
          tschchartseriesbarstrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 46;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesbarstrokeBuilder() {
        bitField1_ |= 0x00002000;
        onChanged();
        return getTschchartseriesbarstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 46;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesbarstrokeOrBuilder() {
        if (tschchartseriesbarstrokeBuilder_ != null) {
          return tschchartseriesbarstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesbarstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesbarstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 46;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesbarstrokeFieldBuilder() {
        if (tschchartseriesbarstrokeBuilder_ == null) {
          tschchartseriesbarstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesbarstroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesbarstroke_ = null;
        }
        return tschchartseriesbarstrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesbubblestroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesbubblestrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 47;</code>
       */
      public boolean hasTschchartseriesbubblestroke() {
        return ((bitField1_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 47;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesbubblestroke() {
        if (tschchartseriesbubblestrokeBuilder_ == null) {
          return tschchartseriesbubblestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesbubblestroke_;
        } else {
          return tschchartseriesbubblestrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 47;</code>
       */
      public Builder setTschchartseriesbubblestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesbubblestrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesbubblestroke_ = value;
          onChanged();
        } else {
          tschchartseriesbubblestrokeBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 47;</code>
       */
      public Builder setTschchartseriesbubblestroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesbubblestrokeBuilder_ == null) {
          tschchartseriesbubblestroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesbubblestrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 47;</code>
       */
      public Builder mergeTschchartseriesbubblestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesbubblestrokeBuilder_ == null) {
          if (((bitField1_ & 0x00004000) == 0x00004000) &&
              tschchartseriesbubblestroke_ != null &&
              tschchartseriesbubblestroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesbubblestroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesbubblestroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesbubblestroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesbubblestrokeBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 47;</code>
       */
      public Builder clearTschchartseriesbubblestroke() {
        if (tschchartseriesbubblestrokeBuilder_ == null) {
          tschchartseriesbubblestroke_ = null;
          onChanged();
        } else {
          tschchartseriesbubblestrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00004000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 47;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesbubblestrokeBuilder() {
        bitField1_ |= 0x00004000;
        onChanged();
        return getTschchartseriesbubblestrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 47;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesbubblestrokeOrBuilder() {
        if (tschchartseriesbubblestrokeBuilder_ != null) {
          return tschchartseriesbubblestrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesbubblestroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesbubblestroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 47;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesbubblestrokeFieldBuilder() {
        if (tschchartseriesbubblestrokeBuilder_ == null) {
          tschchartseriesbubblestrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesbubblestroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesbubblestroke_ = null;
        }
        return tschchartseriesbubblestrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartserieslinestroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartserieslinestrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 48;</code>
       */
      public boolean hasTschchartserieslinestroke() {
        return ((bitField1_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 48;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartserieslinestroke() {
        if (tschchartserieslinestrokeBuilder_ == null) {
          return tschchartserieslinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartserieslinestroke_;
        } else {
          return tschchartserieslinestrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 48;</code>
       */
      public Builder setTschchartserieslinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartserieslinestrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartserieslinestroke_ = value;
          onChanged();
        } else {
          tschchartserieslinestrokeBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 48;</code>
       */
      public Builder setTschchartserieslinestroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartserieslinestrokeBuilder_ == null) {
          tschchartserieslinestroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartserieslinestrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 48;</code>
       */
      public Builder mergeTschchartserieslinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartserieslinestrokeBuilder_ == null) {
          if (((bitField1_ & 0x00008000) == 0x00008000) &&
              tschchartserieslinestroke_ != null &&
              tschchartserieslinestroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartserieslinestroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartserieslinestroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartserieslinestroke_ = value;
          }
          onChanged();
        } else {
          tschchartserieslinestrokeBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 48;</code>
       */
      public Builder clearTschchartserieslinestroke() {
        if (tschchartserieslinestrokeBuilder_ == null) {
          tschchartserieslinestroke_ = null;
          onChanged();
        } else {
          tschchartserieslinestrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00008000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 48;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartserieslinestrokeBuilder() {
        bitField1_ |= 0x00008000;
        onChanged();
        return getTschchartserieslinestrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 48;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartserieslinestrokeOrBuilder() {
        if (tschchartserieslinestrokeBuilder_ != null) {
          return tschchartserieslinestrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartserieslinestroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartserieslinestroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 48;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartserieslinestrokeFieldBuilder() {
        if (tschchartserieslinestrokeBuilder_ == null) {
          tschchartserieslinestrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartserieslinestroke(),
                  getParentForChildren(),
                  isClean());
          tschchartserieslinestroke_ = null;
        }
        return tschchartserieslinestrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesmixedareastroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesmixedareastrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 49;</code>
       */
      public boolean hasTschchartseriesmixedareastroke() {
        return ((bitField1_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 49;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedareastroke() {
        if (tschchartseriesmixedareastrokeBuilder_ == null) {
          return tschchartseriesmixedareastroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedareastroke_;
        } else {
          return tschchartseriesmixedareastrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 49;</code>
       */
      public Builder setTschchartseriesmixedareastroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesmixedareastrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesmixedareastroke_ = value;
          onChanged();
        } else {
          tschchartseriesmixedareastrokeBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 49;</code>
       */
      public Builder setTschchartseriesmixedareastroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesmixedareastrokeBuilder_ == null) {
          tschchartseriesmixedareastroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesmixedareastrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 49;</code>
       */
      public Builder mergeTschchartseriesmixedareastroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesmixedareastrokeBuilder_ == null) {
          if (((bitField1_ & 0x00010000) == 0x00010000) &&
              tschchartseriesmixedareastroke_ != null &&
              tschchartseriesmixedareastroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesmixedareastroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesmixedareastroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesmixedareastroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesmixedareastrokeBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 49;</code>
       */
      public Builder clearTschchartseriesmixedareastroke() {
        if (tschchartseriesmixedareastrokeBuilder_ == null) {
          tschchartseriesmixedareastroke_ = null;
          onChanged();
        } else {
          tschchartseriesmixedareastrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 49;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesmixedareastrokeBuilder() {
        bitField1_ |= 0x00010000;
        onChanged();
        return getTschchartseriesmixedareastrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 49;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedareastrokeOrBuilder() {
        if (tschchartseriesmixedareastrokeBuilder_ != null) {
          return tschchartseriesmixedareastrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesmixedareastroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedareastroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 49;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesmixedareastrokeFieldBuilder() {
        if (tschchartseriesmixedareastrokeBuilder_ == null) {
          tschchartseriesmixedareastrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesmixedareastroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesmixedareastroke_ = null;
        }
        return tschchartseriesmixedareastrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesmixedcolumnstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesmixedcolumnstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 50;</code>
       */
      public boolean hasTschchartseriesmixedcolumnstroke() {
        return ((bitField1_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 50;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedcolumnstroke() {
        if (tschchartseriesmixedcolumnstrokeBuilder_ == null) {
          return tschchartseriesmixedcolumnstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedcolumnstroke_;
        } else {
          return tschchartseriesmixedcolumnstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 50;</code>
       */
      public Builder setTschchartseriesmixedcolumnstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesmixedcolumnstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesmixedcolumnstroke_ = value;
          onChanged();
        } else {
          tschchartseriesmixedcolumnstrokeBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 50;</code>
       */
      public Builder setTschchartseriesmixedcolumnstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesmixedcolumnstrokeBuilder_ == null) {
          tschchartseriesmixedcolumnstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesmixedcolumnstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 50;</code>
       */
      public Builder mergeTschchartseriesmixedcolumnstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesmixedcolumnstrokeBuilder_ == null) {
          if (((bitField1_ & 0x00020000) == 0x00020000) &&
              tschchartseriesmixedcolumnstroke_ != null &&
              tschchartseriesmixedcolumnstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesmixedcolumnstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesmixedcolumnstroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesmixedcolumnstroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesmixedcolumnstrokeBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 50;</code>
       */
      public Builder clearTschchartseriesmixedcolumnstroke() {
        if (tschchartseriesmixedcolumnstrokeBuilder_ == null) {
          tschchartseriesmixedcolumnstroke_ = null;
          onChanged();
        } else {
          tschchartseriesmixedcolumnstrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00020000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 50;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesmixedcolumnstrokeBuilder() {
        bitField1_ |= 0x00020000;
        onChanged();
        return getTschchartseriesmixedcolumnstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 50;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedcolumnstrokeOrBuilder() {
        if (tschchartseriesmixedcolumnstrokeBuilder_ != null) {
          return tschchartseriesmixedcolumnstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesmixedcolumnstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedcolumnstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 50;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesmixedcolumnstrokeFieldBuilder() {
        if (tschchartseriesmixedcolumnstrokeBuilder_ == null) {
          tschchartseriesmixedcolumnstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesmixedcolumnstroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesmixedcolumnstroke_ = null;
        }
        return tschchartseriesmixedcolumnstrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesmixedlinestroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesmixedlinestrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 51;</code>
       */
      public boolean hasTschchartseriesmixedlinestroke() {
        return ((bitField1_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 51;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedlinestroke() {
        if (tschchartseriesmixedlinestrokeBuilder_ == null) {
          return tschchartseriesmixedlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedlinestroke_;
        } else {
          return tschchartseriesmixedlinestrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 51;</code>
       */
      public Builder setTschchartseriesmixedlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesmixedlinestrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesmixedlinestroke_ = value;
          onChanged();
        } else {
          tschchartseriesmixedlinestrokeBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 51;</code>
       */
      public Builder setTschchartseriesmixedlinestroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesmixedlinestrokeBuilder_ == null) {
          tschchartseriesmixedlinestroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesmixedlinestrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 51;</code>
       */
      public Builder mergeTschchartseriesmixedlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesmixedlinestrokeBuilder_ == null) {
          if (((bitField1_ & 0x00040000) == 0x00040000) &&
              tschchartseriesmixedlinestroke_ != null &&
              tschchartseriesmixedlinestroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesmixedlinestroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesmixedlinestroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesmixedlinestroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesmixedlinestrokeBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 51;</code>
       */
      public Builder clearTschchartseriesmixedlinestroke() {
        if (tschchartseriesmixedlinestrokeBuilder_ == null) {
          tschchartseriesmixedlinestroke_ = null;
          onChanged();
        } else {
          tschchartseriesmixedlinestrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00040000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 51;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesmixedlinestrokeBuilder() {
        bitField1_ |= 0x00040000;
        onChanged();
        return getTschchartseriesmixedlinestrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 51;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedlinestrokeOrBuilder() {
        if (tschchartseriesmixedlinestrokeBuilder_ != null) {
          return tschchartseriesmixedlinestrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesmixedlinestroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedlinestroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 51;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesmixedlinestrokeFieldBuilder() {
        if (tschchartseriesmixedlinestrokeBuilder_ == null) {
          tschchartseriesmixedlinestrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesmixedlinestroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesmixedlinestroke_ = null;
        }
        return tschchartseriesmixedlinestrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriespiestroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriespiestrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 52;</code>
       */
      public boolean hasTschchartseriespiestroke() {
        return ((bitField1_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 52;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriespiestroke() {
        if (tschchartseriespiestrokeBuilder_ == null) {
          return tschchartseriespiestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriespiestroke_;
        } else {
          return tschchartseriespiestrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 52;</code>
       */
      public Builder setTschchartseriespiestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriespiestrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriespiestroke_ = value;
          onChanged();
        } else {
          tschchartseriespiestrokeBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 52;</code>
       */
      public Builder setTschchartseriespiestroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriespiestrokeBuilder_ == null) {
          tschchartseriespiestroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriespiestrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 52;</code>
       */
      public Builder mergeTschchartseriespiestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriespiestrokeBuilder_ == null) {
          if (((bitField1_ & 0x00080000) == 0x00080000) &&
              tschchartseriespiestroke_ != null &&
              tschchartseriespiestroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriespiestroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriespiestroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriespiestroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriespiestrokeBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 52;</code>
       */
      public Builder clearTschchartseriespiestroke() {
        if (tschchartseriespiestrokeBuilder_ == null) {
          tschchartseriespiestroke_ = null;
          onChanged();
        } else {
          tschchartseriespiestrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00080000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 52;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriespiestrokeBuilder() {
        bitField1_ |= 0x00080000;
        onChanged();
        return getTschchartseriespiestrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 52;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriespiestrokeOrBuilder() {
        if (tschchartseriespiestrokeBuilder_ != null) {
          return tschchartseriespiestrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriespiestroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriespiestroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 52;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriespiestrokeFieldBuilder() {
        if (tschchartseriespiestrokeBuilder_ == null) {
          tschchartseriespiestrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriespiestroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriespiestroke_ = null;
        }
        return tschchartseriespiestrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesscatterstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesscatterstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 53;</code>
       */
      public boolean hasTschchartseriesscatterstroke() {
        return ((bitField1_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 53;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesscatterstroke() {
        if (tschchartseriesscatterstrokeBuilder_ == null) {
          return tschchartseriesscatterstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesscatterstroke_;
        } else {
          return tschchartseriesscatterstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 53;</code>
       */
      public Builder setTschchartseriesscatterstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesscatterstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesscatterstroke_ = value;
          onChanged();
        } else {
          tschchartseriesscatterstrokeBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 53;</code>
       */
      public Builder setTschchartseriesscatterstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesscatterstrokeBuilder_ == null) {
          tschchartseriesscatterstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesscatterstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 53;</code>
       */
      public Builder mergeTschchartseriesscatterstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesscatterstrokeBuilder_ == null) {
          if (((bitField1_ & 0x00100000) == 0x00100000) &&
              tschchartseriesscatterstroke_ != null &&
              tschchartseriesscatterstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesscatterstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesscatterstroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesscatterstroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesscatterstrokeBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 53;</code>
       */
      public Builder clearTschchartseriesscatterstroke() {
        if (tschchartseriesscatterstrokeBuilder_ == null) {
          tschchartseriesscatterstroke_ = null;
          onChanged();
        } else {
          tschchartseriesscatterstrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00100000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 53;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesscatterstrokeBuilder() {
        bitField1_ |= 0x00100000;
        onChanged();
        return getTschchartseriesscatterstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 53;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesscatterstrokeOrBuilder() {
        if (tschchartseriesscatterstrokeBuilder_ != null) {
          return tschchartseriesscatterstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesscatterstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesscatterstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 53;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesscatterstrokeFieldBuilder() {
        if (tschchartseriesscatterstrokeBuilder_ == null) {
          tschchartseriesscatterstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesscatterstroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesscatterstroke_ = null;
        }
        return tschchartseriesscatterstrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesareasymbolfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseriesareasymbolfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 54;</code>
       */
      public boolean hasTschchartseriesareasymbolfill() {
        return ((bitField1_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 54;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesareasymbolfill() {
        if (tschchartseriesareasymbolfillBuilder_ == null) {
          return tschchartseriesareasymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesareasymbolfill_;
        } else {
          return tschchartseriesareasymbolfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 54;</code>
       */
      public Builder setTschchartseriesareasymbolfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesareasymbolfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesareasymbolfill_ = value;
          onChanged();
        } else {
          tschchartseriesareasymbolfillBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 54;</code>
       */
      public Builder setTschchartseriesareasymbolfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseriesareasymbolfillBuilder_ == null) {
          tschchartseriesareasymbolfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesareasymbolfillBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 54;</code>
       */
      public Builder mergeTschchartseriesareasymbolfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesareasymbolfillBuilder_ == null) {
          if (((bitField1_ & 0x00200000) == 0x00200000) &&
              tschchartseriesareasymbolfill_ != null &&
              tschchartseriesareasymbolfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseriesareasymbolfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseriesareasymbolfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesareasymbolfill_ = value;
          }
          onChanged();
        } else {
          tschchartseriesareasymbolfillBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 54;</code>
       */
      public Builder clearTschchartseriesareasymbolfill() {
        if (tschchartseriesareasymbolfillBuilder_ == null) {
          tschchartseriesareasymbolfill_ = null;
          onChanged();
        } else {
          tschchartseriesareasymbolfillBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00200000);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 54;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseriesareasymbolfillBuilder() {
        bitField1_ |= 0x00200000;
        onChanged();
        return getTschchartseriesareasymbolfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 54;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesareasymbolfillOrBuilder() {
        if (tschchartseriesareasymbolfillBuilder_ != null) {
          return tschchartseriesareasymbolfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesareasymbolfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesareasymbolfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 54;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseriesareasymbolfillFieldBuilder() {
        if (tschchartseriesareasymbolfillBuilder_ == null) {
          tschchartseriesareasymbolfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseriesareasymbolfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesareasymbolfill_ = null;
        }
        return tschchartseriesareasymbolfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesbubblesymbolfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseriesbubblesymbolfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 55;</code>
       */
      public boolean hasTschchartseriesbubblesymbolfill() {
        return ((bitField1_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 55;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesbubblesymbolfill() {
        if (tschchartseriesbubblesymbolfillBuilder_ == null) {
          return tschchartseriesbubblesymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesbubblesymbolfill_;
        } else {
          return tschchartseriesbubblesymbolfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 55;</code>
       */
      public Builder setTschchartseriesbubblesymbolfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesbubblesymbolfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesbubblesymbolfill_ = value;
          onChanged();
        } else {
          tschchartseriesbubblesymbolfillBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 55;</code>
       */
      public Builder setTschchartseriesbubblesymbolfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseriesbubblesymbolfillBuilder_ == null) {
          tschchartseriesbubblesymbolfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesbubblesymbolfillBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 55;</code>
       */
      public Builder mergeTschchartseriesbubblesymbolfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesbubblesymbolfillBuilder_ == null) {
          if (((bitField1_ & 0x00400000) == 0x00400000) &&
              tschchartseriesbubblesymbolfill_ != null &&
              tschchartseriesbubblesymbolfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseriesbubblesymbolfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseriesbubblesymbolfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesbubblesymbolfill_ = value;
          }
          onChanged();
        } else {
          tschchartseriesbubblesymbolfillBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 55;</code>
       */
      public Builder clearTschchartseriesbubblesymbolfill() {
        if (tschchartseriesbubblesymbolfillBuilder_ == null) {
          tschchartseriesbubblesymbolfill_ = null;
          onChanged();
        } else {
          tschchartseriesbubblesymbolfillBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00400000);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 55;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseriesbubblesymbolfillBuilder() {
        bitField1_ |= 0x00400000;
        onChanged();
        return getTschchartseriesbubblesymbolfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 55;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesbubblesymbolfillOrBuilder() {
        if (tschchartseriesbubblesymbolfillBuilder_ != null) {
          return tschchartseriesbubblesymbolfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesbubblesymbolfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesbubblesymbolfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 55;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseriesbubblesymbolfillFieldBuilder() {
        if (tschchartseriesbubblesymbolfillBuilder_ == null) {
          tschchartseriesbubblesymbolfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseriesbubblesymbolfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesbubblesymbolfill_ = null;
        }
        return tschchartseriesbubblesymbolfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartserieslinesymbolfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartserieslinesymbolfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 56;</code>
       */
      public boolean hasTschchartserieslinesymbolfill() {
        return ((bitField1_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 56;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartserieslinesymbolfill() {
        if (tschchartserieslinesymbolfillBuilder_ == null) {
          return tschchartserieslinesymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartserieslinesymbolfill_;
        } else {
          return tschchartserieslinesymbolfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 56;</code>
       */
      public Builder setTschchartserieslinesymbolfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartserieslinesymbolfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartserieslinesymbolfill_ = value;
          onChanged();
        } else {
          tschchartserieslinesymbolfillBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 56;</code>
       */
      public Builder setTschchartserieslinesymbolfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartserieslinesymbolfillBuilder_ == null) {
          tschchartserieslinesymbolfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartserieslinesymbolfillBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 56;</code>
       */
      public Builder mergeTschchartserieslinesymbolfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartserieslinesymbolfillBuilder_ == null) {
          if (((bitField1_ & 0x00800000) == 0x00800000) &&
              tschchartserieslinesymbolfill_ != null &&
              tschchartserieslinesymbolfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartserieslinesymbolfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartserieslinesymbolfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartserieslinesymbolfill_ = value;
          }
          onChanged();
        } else {
          tschchartserieslinesymbolfillBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 56;</code>
       */
      public Builder clearTschchartserieslinesymbolfill() {
        if (tschchartserieslinesymbolfillBuilder_ == null) {
          tschchartserieslinesymbolfill_ = null;
          onChanged();
        } else {
          tschchartserieslinesymbolfillBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00800000);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 56;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartserieslinesymbolfillBuilder() {
        bitField1_ |= 0x00800000;
        onChanged();
        return getTschchartserieslinesymbolfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 56;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartserieslinesymbolfillOrBuilder() {
        if (tschchartserieslinesymbolfillBuilder_ != null) {
          return tschchartserieslinesymbolfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartserieslinesymbolfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartserieslinesymbolfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 56;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartserieslinesymbolfillFieldBuilder() {
        if (tschchartserieslinesymbolfillBuilder_ == null) {
          tschchartserieslinesymbolfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartserieslinesymbolfill(),
                  getParentForChildren(),
                  isClean());
          tschchartserieslinesymbolfill_ = null;
        }
        return tschchartserieslinesymbolfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesmixedareasymbolfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseriesmixedareasymbolfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 57;</code>
       */
      public boolean hasTschchartseriesmixedareasymbolfill() {
        return ((bitField1_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 57;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesmixedareasymbolfill() {
        if (tschchartseriesmixedareasymbolfillBuilder_ == null) {
          return tschchartseriesmixedareasymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedareasymbolfill_;
        } else {
          return tschchartseriesmixedareasymbolfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 57;</code>
       */
      public Builder setTschchartseriesmixedareasymbolfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesmixedareasymbolfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesmixedareasymbolfill_ = value;
          onChanged();
        } else {
          tschchartseriesmixedareasymbolfillBuilder_.setMessage(value);
        }
        bitField1_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 57;</code>
       */
      public Builder setTschchartseriesmixedareasymbolfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseriesmixedareasymbolfillBuilder_ == null) {
          tschchartseriesmixedareasymbolfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesmixedareasymbolfillBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 57;</code>
       */
      public Builder mergeTschchartseriesmixedareasymbolfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesmixedareasymbolfillBuilder_ == null) {
          if (((bitField1_ & 0x01000000) == 0x01000000) &&
              tschchartseriesmixedareasymbolfill_ != null &&
              tschchartseriesmixedareasymbolfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseriesmixedareasymbolfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseriesmixedareasymbolfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesmixedareasymbolfill_ = value;
          }
          onChanged();
        } else {
          tschchartseriesmixedareasymbolfillBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 57;</code>
       */
      public Builder clearTschchartseriesmixedareasymbolfill() {
        if (tschchartseriesmixedareasymbolfillBuilder_ == null) {
          tschchartseriesmixedareasymbolfill_ = null;
          onChanged();
        } else {
          tschchartseriesmixedareasymbolfillBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x01000000);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 57;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseriesmixedareasymbolfillBuilder() {
        bitField1_ |= 0x01000000;
        onChanged();
        return getTschchartseriesmixedareasymbolfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 57;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesmixedareasymbolfillOrBuilder() {
        if (tschchartseriesmixedareasymbolfillBuilder_ != null) {
          return tschchartseriesmixedareasymbolfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesmixedareasymbolfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedareasymbolfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 57;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseriesmixedareasymbolfillFieldBuilder() {
        if (tschchartseriesmixedareasymbolfillBuilder_ == null) {
          tschchartseriesmixedareasymbolfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseriesmixedareasymbolfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesmixedareasymbolfill_ = null;
        }
        return tschchartseriesmixedareasymbolfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesmixedlinesymbolfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseriesmixedlinesymbolfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 58;</code>
       */
      public boolean hasTschchartseriesmixedlinesymbolfill() {
        return ((bitField1_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 58;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesmixedlinesymbolfill() {
        if (tschchartseriesmixedlinesymbolfillBuilder_ == null) {
          return tschchartseriesmixedlinesymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedlinesymbolfill_;
        } else {
          return tschchartseriesmixedlinesymbolfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 58;</code>
       */
      public Builder setTschchartseriesmixedlinesymbolfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesmixedlinesymbolfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesmixedlinesymbolfill_ = value;
          onChanged();
        } else {
          tschchartseriesmixedlinesymbolfillBuilder_.setMessage(value);
        }
        bitField1_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 58;</code>
       */
      public Builder setTschchartseriesmixedlinesymbolfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseriesmixedlinesymbolfillBuilder_ == null) {
          tschchartseriesmixedlinesymbolfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesmixedlinesymbolfillBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 58;</code>
       */
      public Builder mergeTschchartseriesmixedlinesymbolfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesmixedlinesymbolfillBuilder_ == null) {
          if (((bitField1_ & 0x02000000) == 0x02000000) &&
              tschchartseriesmixedlinesymbolfill_ != null &&
              tschchartseriesmixedlinesymbolfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseriesmixedlinesymbolfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseriesmixedlinesymbolfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesmixedlinesymbolfill_ = value;
          }
          onChanged();
        } else {
          tschchartseriesmixedlinesymbolfillBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 58;</code>
       */
      public Builder clearTschchartseriesmixedlinesymbolfill() {
        if (tschchartseriesmixedlinesymbolfillBuilder_ == null) {
          tschchartseriesmixedlinesymbolfill_ = null;
          onChanged();
        } else {
          tschchartseriesmixedlinesymbolfillBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x02000000);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 58;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseriesmixedlinesymbolfillBuilder() {
        bitField1_ |= 0x02000000;
        onChanged();
        return getTschchartseriesmixedlinesymbolfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 58;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesmixedlinesymbolfillOrBuilder() {
        if (tschchartseriesmixedlinesymbolfillBuilder_ != null) {
          return tschchartseriesmixedlinesymbolfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesmixedlinesymbolfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedlinesymbolfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 58;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseriesmixedlinesymbolfillFieldBuilder() {
        if (tschchartseriesmixedlinesymbolfillBuilder_ == null) {
          tschchartseriesmixedlinesymbolfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseriesmixedlinesymbolfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesmixedlinesymbolfill_ = null;
        }
        return tschchartseriesmixedlinesymbolfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesscattersymbolfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseriesscattersymbolfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 59;</code>
       */
      public boolean hasTschchartseriesscattersymbolfill() {
        return ((bitField1_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 59;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesscattersymbolfill() {
        if (tschchartseriesscattersymbolfillBuilder_ == null) {
          return tschchartseriesscattersymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesscattersymbolfill_;
        } else {
          return tschchartseriesscattersymbolfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 59;</code>
       */
      public Builder setTschchartseriesscattersymbolfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesscattersymbolfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesscattersymbolfill_ = value;
          onChanged();
        } else {
          tschchartseriesscattersymbolfillBuilder_.setMessage(value);
        }
        bitField1_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 59;</code>
       */
      public Builder setTschchartseriesscattersymbolfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseriesscattersymbolfillBuilder_ == null) {
          tschchartseriesscattersymbolfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesscattersymbolfillBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 59;</code>
       */
      public Builder mergeTschchartseriesscattersymbolfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesscattersymbolfillBuilder_ == null) {
          if (((bitField1_ & 0x04000000) == 0x04000000) &&
              tschchartseriesscattersymbolfill_ != null &&
              tschchartseriesscattersymbolfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseriesscattersymbolfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseriesscattersymbolfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesscattersymbolfill_ = value;
          }
          onChanged();
        } else {
          tschchartseriesscattersymbolfillBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 59;</code>
       */
      public Builder clearTschchartseriesscattersymbolfill() {
        if (tschchartseriesscattersymbolfillBuilder_ == null) {
          tschchartseriesscattersymbolfill_ = null;
          onChanged();
        } else {
          tschchartseriesscattersymbolfillBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x04000000);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 59;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseriesscattersymbolfillBuilder() {
        bitField1_ |= 0x04000000;
        onChanged();
        return getTschchartseriesscattersymbolfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 59;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesscattersymbolfillOrBuilder() {
        if (tschchartseriesscattersymbolfillBuilder_ != null) {
          return tschchartseriesscattersymbolfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesscattersymbolfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesscattersymbolfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 59;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseriesscattersymbolfillFieldBuilder() {
        if (tschchartseriesscattersymbolfillBuilder_ == null) {
          tschchartseriesscattersymbolfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseriesscattersymbolfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesscattersymbolfill_ = null;
        }
        return tschchartseriesscattersymbolfillBuilder_;
      }

      private boolean tschchartseriesareasymbolfilluseseriesfill_ ;
      /**
       * <code>optional bool tschchartseriesareasymbolfilluseseriesfill = 60;</code>
       */
      public boolean hasTschchartseriesareasymbolfilluseseriesfill() {
        return ((bitField1_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional bool tschchartseriesareasymbolfilluseseriesfill = 60;</code>
       */
      public boolean getTschchartseriesareasymbolfilluseseriesfill() {
        return tschchartseriesareasymbolfilluseseriesfill_;
      }
      /**
       * <code>optional bool tschchartseriesareasymbolfilluseseriesfill = 60;</code>
       */
      public Builder setTschchartseriesareasymbolfilluseseriesfill(boolean value) {
        bitField1_ |= 0x08000000;
        tschchartseriesareasymbolfilluseseriesfill_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesareasymbolfilluseseriesfill = 60;</code>
       */
      public Builder clearTschchartseriesareasymbolfilluseseriesfill() {
        bitField1_ = (bitField1_ & ~0x08000000);
        tschchartseriesareasymbolfilluseseriesfill_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartserieslinesymbolfilluseseriesfill_ ;
      /**
       * <code>optional bool tschchartserieslinesymbolfilluseseriesfill = 61;</code>
       */
      public boolean hasTschchartserieslinesymbolfilluseseriesfill() {
        return ((bitField1_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional bool tschchartserieslinesymbolfilluseseriesfill = 61;</code>
       */
      public boolean getTschchartserieslinesymbolfilluseseriesfill() {
        return tschchartserieslinesymbolfilluseseriesfill_;
      }
      /**
       * <code>optional bool tschchartserieslinesymbolfilluseseriesfill = 61;</code>
       */
      public Builder setTschchartserieslinesymbolfilluseseriesfill(boolean value) {
        bitField1_ |= 0x10000000;
        tschchartserieslinesymbolfilluseseriesfill_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartserieslinesymbolfilluseseriesfill = 61;</code>
       */
      public Builder clearTschchartserieslinesymbolfilluseseriesfill() {
        bitField1_ = (bitField1_ & ~0x10000000);
        tschchartserieslinesymbolfilluseseriesfill_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesmixedareasymbolfilluseseriesfill_ ;
      /**
       * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesfill = 62;</code>
       */
      public boolean hasTschchartseriesmixedareasymbolfilluseseriesfill() {
        return ((bitField1_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesfill = 62;</code>
       */
      public boolean getTschchartseriesmixedareasymbolfilluseseriesfill() {
        return tschchartseriesmixedareasymbolfilluseseriesfill_;
      }
      /**
       * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesfill = 62;</code>
       */
      public Builder setTschchartseriesmixedareasymbolfilluseseriesfill(boolean value) {
        bitField1_ |= 0x20000000;
        tschchartseriesmixedareasymbolfilluseseriesfill_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesfill = 62;</code>
       */
      public Builder clearTschchartseriesmixedareasymbolfilluseseriesfill() {
        bitField1_ = (bitField1_ & ~0x20000000);
        tschchartseriesmixedareasymbolfilluseseriesfill_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesmixedlinesymbolfilluseseriesfill_ ;
      /**
       * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesfill = 63;</code>
       */
      public boolean hasTschchartseriesmixedlinesymbolfilluseseriesfill() {
        return ((bitField1_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesfill = 63;</code>
       */
      public boolean getTschchartseriesmixedlinesymbolfilluseseriesfill() {
        return tschchartseriesmixedlinesymbolfilluseseriesfill_;
      }
      /**
       * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesfill = 63;</code>
       */
      public Builder setTschchartseriesmixedlinesymbolfilluseseriesfill(boolean value) {
        bitField1_ |= 0x40000000;
        tschchartseriesmixedlinesymbolfilluseseriesfill_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesfill = 63;</code>
       */
      public Builder clearTschchartseriesmixedlinesymbolfilluseseriesfill() {
        bitField1_ = (bitField1_ & ~0x40000000);
        tschchartseriesmixedlinesymbolfilluseseriesfill_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesareasymbolfilluseseriesstroke_ ;
      /**
       * <code>optional bool tschchartseriesareasymbolfilluseseriesstroke = 64;</code>
       */
      public boolean hasTschchartseriesareasymbolfilluseseriesstroke() {
        return ((bitField1_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional bool tschchartseriesareasymbolfilluseseriesstroke = 64;</code>
       */
      public boolean getTschchartseriesareasymbolfilluseseriesstroke() {
        return tschchartseriesareasymbolfilluseseriesstroke_;
      }
      /**
       * <code>optional bool tschchartseriesareasymbolfilluseseriesstroke = 64;</code>
       */
      public Builder setTschchartseriesareasymbolfilluseseriesstroke(boolean value) {
        bitField1_ |= 0x80000000;
        tschchartseriesareasymbolfilluseseriesstroke_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesareasymbolfilluseseriesstroke = 64;</code>
       */
      public Builder clearTschchartseriesareasymbolfilluseseriesstroke() {
        bitField1_ = (bitField1_ & ~0x80000000);
        tschchartseriesareasymbolfilluseseriesstroke_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesbubblesymbolfilluseseriesstroke_ ;
      /**
       * <code>optional bool tschchartseriesbubblesymbolfilluseseriesstroke = 65;</code>
       */
      public boolean hasTschchartseriesbubblesymbolfilluseseriesstroke() {
        return ((bitField2_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool tschchartseriesbubblesymbolfilluseseriesstroke = 65;</code>
       */
      public boolean getTschchartseriesbubblesymbolfilluseseriesstroke() {
        return tschchartseriesbubblesymbolfilluseseriesstroke_;
      }
      /**
       * <code>optional bool tschchartseriesbubblesymbolfilluseseriesstroke = 65;</code>
       */
      public Builder setTschchartseriesbubblesymbolfilluseseriesstroke(boolean value) {
        bitField2_ |= 0x00000001;
        tschchartseriesbubblesymbolfilluseseriesstroke_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesbubblesymbolfilluseseriesstroke = 65;</code>
       */
      public Builder clearTschchartseriesbubblesymbolfilluseseriesstroke() {
        bitField2_ = (bitField2_ & ~0x00000001);
        tschchartseriesbubblesymbolfilluseseriesstroke_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartserieslinesymbolfilluseseriesstroke_ ;
      /**
       * <code>optional bool tschchartserieslinesymbolfilluseseriesstroke = 66;</code>
       */
      public boolean hasTschchartserieslinesymbolfilluseseriesstroke() {
        return ((bitField2_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool tschchartserieslinesymbolfilluseseriesstroke = 66;</code>
       */
      public boolean getTschchartserieslinesymbolfilluseseriesstroke() {
        return tschchartserieslinesymbolfilluseseriesstroke_;
      }
      /**
       * <code>optional bool tschchartserieslinesymbolfilluseseriesstroke = 66;</code>
       */
      public Builder setTschchartserieslinesymbolfilluseseriesstroke(boolean value) {
        bitField2_ |= 0x00000002;
        tschchartserieslinesymbolfilluseseriesstroke_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartserieslinesymbolfilluseseriesstroke = 66;</code>
       */
      public Builder clearTschchartserieslinesymbolfilluseseriesstroke() {
        bitField2_ = (bitField2_ & ~0x00000002);
        tschchartserieslinesymbolfilluseseriesstroke_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesmixedareasymbolfilluseseriesstroke_ ;
      /**
       * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesstroke = 67;</code>
       */
      public boolean hasTschchartseriesmixedareasymbolfilluseseriesstroke() {
        return ((bitField2_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesstroke = 67;</code>
       */
      public boolean getTschchartseriesmixedareasymbolfilluseseriesstroke() {
        return tschchartseriesmixedareasymbolfilluseseriesstroke_;
      }
      /**
       * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesstroke = 67;</code>
       */
      public Builder setTschchartseriesmixedareasymbolfilluseseriesstroke(boolean value) {
        bitField2_ |= 0x00000004;
        tschchartseriesmixedareasymbolfilluseseriesstroke_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesstroke = 67;</code>
       */
      public Builder clearTschchartseriesmixedareasymbolfilluseseriesstroke() {
        bitField2_ = (bitField2_ & ~0x00000004);
        tschchartseriesmixedareasymbolfilluseseriesstroke_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesmixedlinesymbolfilluseseriesstroke_ ;
      /**
       * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesstroke = 68;</code>
       */
      public boolean hasTschchartseriesmixedlinesymbolfilluseseriesstroke() {
        return ((bitField2_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesstroke = 68;</code>
       */
      public boolean getTschchartseriesmixedlinesymbolfilluseseriesstroke() {
        return tschchartseriesmixedlinesymbolfilluseseriesstroke_;
      }
      /**
       * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesstroke = 68;</code>
       */
      public Builder setTschchartseriesmixedlinesymbolfilluseseriesstroke(boolean value) {
        bitField2_ |= 0x00000008;
        tschchartseriesmixedlinesymbolfilluseseriesstroke_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesstroke = 68;</code>
       */
      public Builder clearTschchartseriesmixedlinesymbolfilluseseriesstroke() {
        bitField2_ = (bitField2_ & ~0x00000008);
        tschchartseriesmixedlinesymbolfilluseseriesstroke_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesscattersymbolfilluseseriesstroke_ ;
      /**
       * <code>optional bool tschchartseriesscattersymbolfilluseseriesstroke = 69;</code>
       */
      public boolean hasTschchartseriesscattersymbolfilluseseriesstroke() {
        return ((bitField2_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool tschchartseriesscattersymbolfilluseseriesstroke = 69;</code>
       */
      public boolean getTschchartseriesscattersymbolfilluseseriesstroke() {
        return tschchartseriesscattersymbolfilluseseriesstroke_;
      }
      /**
       * <code>optional bool tschchartseriesscattersymbolfilluseseriesstroke = 69;</code>
       */
      public Builder setTschchartseriesscattersymbolfilluseseriesstroke(boolean value) {
        bitField2_ |= 0x00000010;
        tschchartseriesscattersymbolfilluseseriesstroke_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesscattersymbolfilluseseriesstroke = 69;</code>
       */
      public Builder clearTschchartseriesscattersymbolfilluseseriesstroke() {
        bitField2_ = (bitField2_ & ~0x00000010);
        tschchartseriesscattersymbolfilluseseriesstroke_ = false;
        onChanged();
        return this;
      }

      private float tschchartseriesareasymbolsize_ ;
      /**
       * <code>optional float tschchartseriesareasymbolsize = 70;</code>
       */
      public boolean hasTschchartseriesareasymbolsize() {
        return ((bitField2_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float tschchartseriesareasymbolsize = 70;</code>
       */
      public float getTschchartseriesareasymbolsize() {
        return tschchartseriesareasymbolsize_;
      }
      /**
       * <code>optional float tschchartseriesareasymbolsize = 70;</code>
       */
      public Builder setTschchartseriesareasymbolsize(float value) {
        bitField2_ |= 0x00000020;
        tschchartseriesareasymbolsize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesareasymbolsize = 70;</code>
       */
      public Builder clearTschchartseriesareasymbolsize() {
        bitField2_ = (bitField2_ & ~0x00000020);
        tschchartseriesareasymbolsize_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartserieslinesymbolsize_ ;
      /**
       * <code>optional float tschchartserieslinesymbolsize = 71;</code>
       */
      public boolean hasTschchartserieslinesymbolsize() {
        return ((bitField2_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float tschchartserieslinesymbolsize = 71;</code>
       */
      public float getTschchartserieslinesymbolsize() {
        return tschchartserieslinesymbolsize_;
      }
      /**
       * <code>optional float tschchartserieslinesymbolsize = 71;</code>
       */
      public Builder setTschchartserieslinesymbolsize(float value) {
        bitField2_ |= 0x00000040;
        tschchartserieslinesymbolsize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartserieslinesymbolsize = 71;</code>
       */
      public Builder clearTschchartserieslinesymbolsize() {
        bitField2_ = (bitField2_ & ~0x00000040);
        tschchartserieslinesymbolsize_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartseriesmixedareasymbolsize_ ;
      /**
       * <code>optional float tschchartseriesmixedareasymbolsize = 72;</code>
       */
      public boolean hasTschchartseriesmixedareasymbolsize() {
        return ((bitField2_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float tschchartseriesmixedareasymbolsize = 72;</code>
       */
      public float getTschchartseriesmixedareasymbolsize() {
        return tschchartseriesmixedareasymbolsize_;
      }
      /**
       * <code>optional float tschchartseriesmixedareasymbolsize = 72;</code>
       */
      public Builder setTschchartseriesmixedareasymbolsize(float value) {
        bitField2_ |= 0x00000080;
        tschchartseriesmixedareasymbolsize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesmixedareasymbolsize = 72;</code>
       */
      public Builder clearTschchartseriesmixedareasymbolsize() {
        bitField2_ = (bitField2_ & ~0x00000080);
        tschchartseriesmixedareasymbolsize_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartseriesmixedlinesymbolsize_ ;
      /**
       * <code>optional float tschchartseriesmixedlinesymbolsize = 73;</code>
       */
      public boolean hasTschchartseriesmixedlinesymbolsize() {
        return ((bitField2_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float tschchartseriesmixedlinesymbolsize = 73;</code>
       */
      public float getTschchartseriesmixedlinesymbolsize() {
        return tschchartseriesmixedlinesymbolsize_;
      }
      /**
       * <code>optional float tschchartseriesmixedlinesymbolsize = 73;</code>
       */
      public Builder setTschchartseriesmixedlinesymbolsize(float value) {
        bitField2_ |= 0x00000100;
        tschchartseriesmixedlinesymbolsize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesmixedlinesymbolsize = 73;</code>
       */
      public Builder clearTschchartseriesmixedlinesymbolsize() {
        bitField2_ = (bitField2_ & ~0x00000100);
        tschchartseriesmixedlinesymbolsize_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartseriesscattersymbolsize_ ;
      /**
       * <code>optional float tschchartseriesscattersymbolsize = 74;</code>
       */
      public boolean hasTschchartseriesscattersymbolsize() {
        return ((bitField2_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float tschchartseriesscattersymbolsize = 74;</code>
       */
      public float getTschchartseriesscattersymbolsize() {
        return tschchartseriesscattersymbolsize_;
      }
      /**
       * <code>optional float tschchartseriesscattersymbolsize = 74;</code>
       */
      public Builder setTschchartseriesscattersymbolsize(float value) {
        bitField2_ |= 0x00000200;
        tschchartseriesscattersymbolsize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesscattersymbolsize = 74;</code>
       */
      public Builder clearTschchartseriesscattersymbolsize() {
        bitField2_ = (bitField2_ & ~0x00000200);
        tschchartseriesscattersymbolsize_ = 0F;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesareasymbolstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesareasymbolstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 75;</code>
       */
      public boolean hasTschchartseriesareasymbolstroke() {
        return ((bitField2_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 75;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesareasymbolstroke() {
        if (tschchartseriesareasymbolstrokeBuilder_ == null) {
          return tschchartseriesareasymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesareasymbolstroke_;
        } else {
          return tschchartseriesareasymbolstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 75;</code>
       */
      public Builder setTschchartseriesareasymbolstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesareasymbolstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesareasymbolstroke_ = value;
          onChanged();
        } else {
          tschchartseriesareasymbolstrokeBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 75;</code>
       */
      public Builder setTschchartseriesareasymbolstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesareasymbolstrokeBuilder_ == null) {
          tschchartseriesareasymbolstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesareasymbolstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 75;</code>
       */
      public Builder mergeTschchartseriesareasymbolstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesareasymbolstrokeBuilder_ == null) {
          if (((bitField2_ & 0x00000400) == 0x00000400) &&
              tschchartseriesareasymbolstroke_ != null &&
              tschchartseriesareasymbolstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesareasymbolstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesareasymbolstroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesareasymbolstroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesareasymbolstrokeBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 75;</code>
       */
      public Builder clearTschchartseriesareasymbolstroke() {
        if (tschchartseriesareasymbolstrokeBuilder_ == null) {
          tschchartseriesareasymbolstroke_ = null;
          onChanged();
        } else {
          tschchartseriesareasymbolstrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 75;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesareasymbolstrokeBuilder() {
        bitField2_ |= 0x00000400;
        onChanged();
        return getTschchartseriesareasymbolstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 75;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesareasymbolstrokeOrBuilder() {
        if (tschchartseriesareasymbolstrokeBuilder_ != null) {
          return tschchartseriesareasymbolstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesareasymbolstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesareasymbolstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 75;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesareasymbolstrokeFieldBuilder() {
        if (tschchartseriesareasymbolstrokeBuilder_ == null) {
          tschchartseriesareasymbolstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesareasymbolstroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesareasymbolstroke_ = null;
        }
        return tschchartseriesareasymbolstrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesbubblesymbolstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesbubblesymbolstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 76;</code>
       */
      public boolean hasTschchartseriesbubblesymbolstroke() {
        return ((bitField2_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 76;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesbubblesymbolstroke() {
        if (tschchartseriesbubblesymbolstrokeBuilder_ == null) {
          return tschchartseriesbubblesymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesbubblesymbolstroke_;
        } else {
          return tschchartseriesbubblesymbolstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 76;</code>
       */
      public Builder setTschchartseriesbubblesymbolstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesbubblesymbolstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesbubblesymbolstroke_ = value;
          onChanged();
        } else {
          tschchartseriesbubblesymbolstrokeBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 76;</code>
       */
      public Builder setTschchartseriesbubblesymbolstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesbubblesymbolstrokeBuilder_ == null) {
          tschchartseriesbubblesymbolstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesbubblesymbolstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 76;</code>
       */
      public Builder mergeTschchartseriesbubblesymbolstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesbubblesymbolstrokeBuilder_ == null) {
          if (((bitField2_ & 0x00000800) == 0x00000800) &&
              tschchartseriesbubblesymbolstroke_ != null &&
              tschchartseriesbubblesymbolstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesbubblesymbolstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesbubblesymbolstroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesbubblesymbolstroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesbubblesymbolstrokeBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 76;</code>
       */
      public Builder clearTschchartseriesbubblesymbolstroke() {
        if (tschchartseriesbubblesymbolstrokeBuilder_ == null) {
          tschchartseriesbubblesymbolstroke_ = null;
          onChanged();
        } else {
          tschchartseriesbubblesymbolstrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 76;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesbubblesymbolstrokeBuilder() {
        bitField2_ |= 0x00000800;
        onChanged();
        return getTschchartseriesbubblesymbolstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 76;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesbubblesymbolstrokeOrBuilder() {
        if (tschchartseriesbubblesymbolstrokeBuilder_ != null) {
          return tschchartseriesbubblesymbolstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesbubblesymbolstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesbubblesymbolstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 76;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesbubblesymbolstrokeFieldBuilder() {
        if (tschchartseriesbubblesymbolstrokeBuilder_ == null) {
          tschchartseriesbubblesymbolstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesbubblesymbolstroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesbubblesymbolstroke_ = null;
        }
        return tschchartseriesbubblesymbolstrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartserieslinesymbolstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartserieslinesymbolstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 77;</code>
       */
      public boolean hasTschchartserieslinesymbolstroke() {
        return ((bitField2_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 77;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartserieslinesymbolstroke() {
        if (tschchartserieslinesymbolstrokeBuilder_ == null) {
          return tschchartserieslinesymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartserieslinesymbolstroke_;
        } else {
          return tschchartserieslinesymbolstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 77;</code>
       */
      public Builder setTschchartserieslinesymbolstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartserieslinesymbolstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartserieslinesymbolstroke_ = value;
          onChanged();
        } else {
          tschchartserieslinesymbolstrokeBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 77;</code>
       */
      public Builder setTschchartserieslinesymbolstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartserieslinesymbolstrokeBuilder_ == null) {
          tschchartserieslinesymbolstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartserieslinesymbolstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 77;</code>
       */
      public Builder mergeTschchartserieslinesymbolstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartserieslinesymbolstrokeBuilder_ == null) {
          if (((bitField2_ & 0x00001000) == 0x00001000) &&
              tschchartserieslinesymbolstroke_ != null &&
              tschchartserieslinesymbolstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartserieslinesymbolstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartserieslinesymbolstroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartserieslinesymbolstroke_ = value;
          }
          onChanged();
        } else {
          tschchartserieslinesymbolstrokeBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 77;</code>
       */
      public Builder clearTschchartserieslinesymbolstroke() {
        if (tschchartserieslinesymbolstrokeBuilder_ == null) {
          tschchartserieslinesymbolstroke_ = null;
          onChanged();
        } else {
          tschchartserieslinesymbolstrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 77;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartserieslinesymbolstrokeBuilder() {
        bitField2_ |= 0x00001000;
        onChanged();
        return getTschchartserieslinesymbolstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 77;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartserieslinesymbolstrokeOrBuilder() {
        if (tschchartserieslinesymbolstrokeBuilder_ != null) {
          return tschchartserieslinesymbolstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartserieslinesymbolstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartserieslinesymbolstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 77;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartserieslinesymbolstrokeFieldBuilder() {
        if (tschchartserieslinesymbolstrokeBuilder_ == null) {
          tschchartserieslinesymbolstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartserieslinesymbolstroke(),
                  getParentForChildren(),
                  isClean());
          tschchartserieslinesymbolstroke_ = null;
        }
        return tschchartserieslinesymbolstrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesmixedareasymbolstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesmixedareasymbolstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 78;</code>
       */
      public boolean hasTschchartseriesmixedareasymbolstroke() {
        return ((bitField2_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 78;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedareasymbolstroke() {
        if (tschchartseriesmixedareasymbolstrokeBuilder_ == null) {
          return tschchartseriesmixedareasymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedareasymbolstroke_;
        } else {
          return tschchartseriesmixedareasymbolstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 78;</code>
       */
      public Builder setTschchartseriesmixedareasymbolstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesmixedareasymbolstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesmixedareasymbolstroke_ = value;
          onChanged();
        } else {
          tschchartseriesmixedareasymbolstrokeBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 78;</code>
       */
      public Builder setTschchartseriesmixedareasymbolstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesmixedareasymbolstrokeBuilder_ == null) {
          tschchartseriesmixedareasymbolstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesmixedareasymbolstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 78;</code>
       */
      public Builder mergeTschchartseriesmixedareasymbolstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesmixedareasymbolstrokeBuilder_ == null) {
          if (((bitField2_ & 0x00002000) == 0x00002000) &&
              tschchartseriesmixedareasymbolstroke_ != null &&
              tschchartseriesmixedareasymbolstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesmixedareasymbolstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesmixedareasymbolstroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesmixedareasymbolstroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesmixedareasymbolstrokeBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 78;</code>
       */
      public Builder clearTschchartseriesmixedareasymbolstroke() {
        if (tschchartseriesmixedareasymbolstrokeBuilder_ == null) {
          tschchartseriesmixedareasymbolstroke_ = null;
          onChanged();
        } else {
          tschchartseriesmixedareasymbolstrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 78;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesmixedareasymbolstrokeBuilder() {
        bitField2_ |= 0x00002000;
        onChanged();
        return getTschchartseriesmixedareasymbolstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 78;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedareasymbolstrokeOrBuilder() {
        if (tschchartseriesmixedareasymbolstrokeBuilder_ != null) {
          return tschchartseriesmixedareasymbolstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesmixedareasymbolstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedareasymbolstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 78;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesmixedareasymbolstrokeFieldBuilder() {
        if (tschchartseriesmixedareasymbolstrokeBuilder_ == null) {
          tschchartseriesmixedareasymbolstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesmixedareasymbolstroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesmixedareasymbolstroke_ = null;
        }
        return tschchartseriesmixedareasymbolstrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesmixedlinesymbolstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesmixedlinesymbolstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 79;</code>
       */
      public boolean hasTschchartseriesmixedlinesymbolstroke() {
        return ((bitField2_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 79;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedlinesymbolstroke() {
        if (tschchartseriesmixedlinesymbolstrokeBuilder_ == null) {
          return tschchartseriesmixedlinesymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedlinesymbolstroke_;
        } else {
          return tschchartseriesmixedlinesymbolstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 79;</code>
       */
      public Builder setTschchartseriesmixedlinesymbolstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesmixedlinesymbolstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesmixedlinesymbolstroke_ = value;
          onChanged();
        } else {
          tschchartseriesmixedlinesymbolstrokeBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 79;</code>
       */
      public Builder setTschchartseriesmixedlinesymbolstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesmixedlinesymbolstrokeBuilder_ == null) {
          tschchartseriesmixedlinesymbolstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesmixedlinesymbolstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 79;</code>
       */
      public Builder mergeTschchartseriesmixedlinesymbolstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesmixedlinesymbolstrokeBuilder_ == null) {
          if (((bitField2_ & 0x00004000) == 0x00004000) &&
              tschchartseriesmixedlinesymbolstroke_ != null &&
              tschchartseriesmixedlinesymbolstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesmixedlinesymbolstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesmixedlinesymbolstroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesmixedlinesymbolstroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesmixedlinesymbolstrokeBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 79;</code>
       */
      public Builder clearTschchartseriesmixedlinesymbolstroke() {
        if (tschchartseriesmixedlinesymbolstrokeBuilder_ == null) {
          tschchartseriesmixedlinesymbolstroke_ = null;
          onChanged();
        } else {
          tschchartseriesmixedlinesymbolstrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00004000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 79;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesmixedlinesymbolstrokeBuilder() {
        bitField2_ |= 0x00004000;
        onChanged();
        return getTschchartseriesmixedlinesymbolstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 79;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedlinesymbolstrokeOrBuilder() {
        if (tschchartseriesmixedlinesymbolstrokeBuilder_ != null) {
          return tschchartseriesmixedlinesymbolstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesmixedlinesymbolstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedlinesymbolstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 79;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesmixedlinesymbolstrokeFieldBuilder() {
        if (tschchartseriesmixedlinesymbolstrokeBuilder_ == null) {
          tschchartseriesmixedlinesymbolstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesmixedlinesymbolstroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesmixedlinesymbolstroke_ = null;
        }
        return tschchartseriesmixedlinesymbolstrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesscattersymbolstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesscattersymbolstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 80;</code>
       */
      public boolean hasTschchartseriesscattersymbolstroke() {
        return ((bitField2_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 80;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesscattersymbolstroke() {
        if (tschchartseriesscattersymbolstrokeBuilder_ == null) {
          return tschchartseriesscattersymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesscattersymbolstroke_;
        } else {
          return tschchartseriesscattersymbolstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 80;</code>
       */
      public Builder setTschchartseriesscattersymbolstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesscattersymbolstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesscattersymbolstroke_ = value;
          onChanged();
        } else {
          tschchartseriesscattersymbolstrokeBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 80;</code>
       */
      public Builder setTschchartseriesscattersymbolstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesscattersymbolstrokeBuilder_ == null) {
          tschchartseriesscattersymbolstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesscattersymbolstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 80;</code>
       */
      public Builder mergeTschchartseriesscattersymbolstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesscattersymbolstrokeBuilder_ == null) {
          if (((bitField2_ & 0x00008000) == 0x00008000) &&
              tschchartseriesscattersymbolstroke_ != null &&
              tschchartseriesscattersymbolstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesscattersymbolstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesscattersymbolstroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesscattersymbolstroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesscattersymbolstrokeBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 80;</code>
       */
      public Builder clearTschchartseriesscattersymbolstroke() {
        if (tschchartseriesscattersymbolstrokeBuilder_ == null) {
          tschchartseriesscattersymbolstroke_ = null;
          onChanged();
        } else {
          tschchartseriesscattersymbolstrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00008000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 80;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesscattersymbolstrokeBuilder() {
        bitField2_ |= 0x00008000;
        onChanged();
        return getTschchartseriesscattersymbolstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 80;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesscattersymbolstrokeOrBuilder() {
        if (tschchartseriesscattersymbolstrokeBuilder_ != null) {
          return tschchartseriesscattersymbolstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesscattersymbolstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesscattersymbolstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 80;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesscattersymbolstrokeFieldBuilder() {
        if (tschchartseriesscattersymbolstrokeBuilder_ == null) {
          tschchartseriesscattersymbolstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesscattersymbolstroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesscattersymbolstroke_ = null;
        }
        return tschchartseriesscattersymbolstrokeBuilder_;
      }

      private float tschchartseriesdefaulttrendlineequationopacity_ ;
      /**
       * <code>optional float tschchartseriesdefaulttrendlineequationopacity = 81;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlineequationopacity() {
        return ((bitField2_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlineequationopacity = 81;</code>
       */
      public float getTschchartseriesdefaulttrendlineequationopacity() {
        return tschchartseriesdefaulttrendlineequationopacity_;
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlineequationopacity = 81;</code>
       */
      public Builder setTschchartseriesdefaulttrendlineequationopacity(float value) {
        bitField2_ |= 0x00010000;
        tschchartseriesdefaulttrendlineequationopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlineequationopacity = 81;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlineequationopacity() {
        bitField2_ = (bitField2_ & ~0x00010000);
        tschchartseriesdefaulttrendlineequationopacity_ = 0F;
        onChanged();
        return this;
      }

      private int tschchartseriesdefaulttrendlineequationparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlineequationparagraphstyleindex = 82;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlineequationparagraphstyleindex() {
        return ((bitField2_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlineequationparagraphstyleindex = 82;</code>
       */
      public int getTschchartseriesdefaulttrendlineequationparagraphstyleindex() {
        return tschchartseriesdefaulttrendlineequationparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlineequationparagraphstyleindex = 82;</code>
       */
      public Builder setTschchartseriesdefaulttrendlineequationparagraphstyleindex(int value) {
        bitField2_ |= 0x00020000;
        tschchartseriesdefaulttrendlineequationparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlineequationparagraphstyleindex = 82;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlineequationparagraphstyleindex() {
        bitField2_ = (bitField2_ & ~0x00020000);
        tschchartseriesdefaulttrendlineequationparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private float tschchartseriesdefaulttrendlinersquaredopacity_ ;
      /**
       * <code>optional float tschchartseriesdefaulttrendlinersquaredopacity = 83;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlinersquaredopacity() {
        return ((bitField2_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlinersquaredopacity = 83;</code>
       */
      public float getTschchartseriesdefaulttrendlinersquaredopacity() {
        return tschchartseriesdefaulttrendlinersquaredopacity_;
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlinersquaredopacity = 83;</code>
       */
      public Builder setTschchartseriesdefaulttrendlinersquaredopacity(float value) {
        bitField2_ |= 0x00040000;
        tschchartseriesdefaulttrendlinersquaredopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlinersquaredopacity = 83;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlinersquaredopacity() {
        bitField2_ = (bitField2_ & ~0x00040000);
        tschchartseriesdefaulttrendlinersquaredopacity_ = 0F;
        onChanged();
        return this;
      }

      private int tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlinersquaredparagraphstyleindex = 84;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlinersquaredparagraphstyleindex() {
        return ((bitField2_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlinersquaredparagraphstyleindex = 84;</code>
       */
      public int getTschchartseriesdefaulttrendlinersquaredparagraphstyleindex() {
        return tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlinersquaredparagraphstyleindex = 84;</code>
       */
      public Builder setTschchartseriesdefaulttrendlinersquaredparagraphstyleindex(int value) {
        bitField2_ |= 0x00080000;
        tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlinersquaredparagraphstyleindex = 84;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlinersquaredparagraphstyleindex() {
        bitField2_ = (bitField2_ & ~0x00080000);
        tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesdefaulttrendlineshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseriesdefaulttrendlineshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 85;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlineshadow() {
        return ((bitField2_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 85;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesdefaulttrendlineshadow() {
        if (tschchartseriesdefaulttrendlineshadowBuilder_ == null) {
          return tschchartseriesdefaulttrendlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesdefaulttrendlineshadow_;
        } else {
          return tschchartseriesdefaulttrendlineshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 85;</code>
       */
      public Builder setTschchartseriesdefaulttrendlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesdefaulttrendlineshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaulttrendlineshadow_ = value;
          onChanged();
        } else {
          tschchartseriesdefaulttrendlineshadowBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 85;</code>
       */
      public Builder setTschchartseriesdefaulttrendlineshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseriesdefaulttrendlineshadowBuilder_ == null) {
          tschchartseriesdefaulttrendlineshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaulttrendlineshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 85;</code>
       */
      public Builder mergeTschchartseriesdefaulttrendlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesdefaulttrendlineshadowBuilder_ == null) {
          if (((bitField2_ & 0x00100000) == 0x00100000) &&
              tschchartseriesdefaulttrendlineshadow_ != null &&
              tschchartseriesdefaulttrendlineshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseriesdefaulttrendlineshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseriesdefaulttrendlineshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaulttrendlineshadow_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaulttrendlineshadowBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 85;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlineshadow() {
        if (tschchartseriesdefaulttrendlineshadowBuilder_ == null) {
          tschchartseriesdefaulttrendlineshadow_ = null;
          onChanged();
        } else {
          tschchartseriesdefaulttrendlineshadowBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00100000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 85;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseriesdefaulttrendlineshadowBuilder() {
        bitField2_ |= 0x00100000;
        onChanged();
        return getTschchartseriesdefaulttrendlineshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 85;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesdefaulttrendlineshadowOrBuilder() {
        if (tschchartseriesdefaulttrendlineshadowBuilder_ != null) {
          return tschchartseriesdefaulttrendlineshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaulttrendlineshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesdefaulttrendlineshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 85;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseriesdefaulttrendlineshadowFieldBuilder() {
        if (tschchartseriesdefaulttrendlineshadowBuilder_ == null) {
          tschchartseriesdefaulttrendlineshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseriesdefaulttrendlineshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaulttrendlineshadow_ = null;
        }
        return tschchartseriesdefaulttrendlineshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesdefaulttrendlinestroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesdefaulttrendlinestrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 86;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlinestroke() {
        return ((bitField2_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 86;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesdefaulttrendlinestroke() {
        if (tschchartseriesdefaulttrendlinestrokeBuilder_ == null) {
          return tschchartseriesdefaulttrendlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesdefaulttrendlinestroke_;
        } else {
          return tschchartseriesdefaulttrendlinestrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 86;</code>
       */
      public Builder setTschchartseriesdefaulttrendlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesdefaulttrendlinestrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaulttrendlinestroke_ = value;
          onChanged();
        } else {
          tschchartseriesdefaulttrendlinestrokeBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 86;</code>
       */
      public Builder setTschchartseriesdefaulttrendlinestroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesdefaulttrendlinestrokeBuilder_ == null) {
          tschchartseriesdefaulttrendlinestroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaulttrendlinestrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 86;</code>
       */
      public Builder mergeTschchartseriesdefaulttrendlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesdefaulttrendlinestrokeBuilder_ == null) {
          if (((bitField2_ & 0x00200000) == 0x00200000) &&
              tschchartseriesdefaulttrendlinestroke_ != null &&
              tschchartseriesdefaulttrendlinestroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesdefaulttrendlinestroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesdefaulttrendlinestroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaulttrendlinestroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaulttrendlinestrokeBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 86;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlinestroke() {
        if (tschchartseriesdefaulttrendlinestrokeBuilder_ == null) {
          tschchartseriesdefaulttrendlinestroke_ = null;
          onChanged();
        } else {
          tschchartseriesdefaulttrendlinestrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00200000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 86;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesdefaulttrendlinestrokeBuilder() {
        bitField2_ |= 0x00200000;
        onChanged();
        return getTschchartseriesdefaulttrendlinestrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 86;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesdefaulttrendlinestrokeOrBuilder() {
        if (tschchartseriesdefaulttrendlinestrokeBuilder_ != null) {
          return tschchartseriesdefaulttrendlinestrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaulttrendlinestroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesdefaulttrendlinestroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 86;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesdefaulttrendlinestrokeFieldBuilder() {
        if (tschchartseriesdefaulttrendlinestrokeBuilder_ == null) {
          tschchartseriesdefaulttrendlinestrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesdefaulttrendlinestroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaulttrendlinestroke_ = null;
        }
        return tschchartseriesdefaulttrendlinestrokeBuilder_;
      }

      private int tschchartseriesareavaluelabelposition_ ;
      /**
       * <code>optional int32 tschchartseriesareavaluelabelposition = 87;</code>
       */
      public boolean hasTschchartseriesareavaluelabelposition() {
        return ((bitField2_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 tschchartseriesareavaluelabelposition = 87;</code>
       */
      public int getTschchartseriesareavaluelabelposition() {
        return tschchartseriesareavaluelabelposition_;
      }
      /**
       * <code>optional int32 tschchartseriesareavaluelabelposition = 87;</code>
       */
      public Builder setTschchartseriesareavaluelabelposition(int value) {
        bitField2_ |= 0x00400000;
        tschchartseriesareavaluelabelposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesareavaluelabelposition = 87;</code>
       */
      public Builder clearTschchartseriesareavaluelabelposition() {
        bitField2_ = (bitField2_ & ~0x00400000);
        tschchartseriesareavaluelabelposition_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesbarvaluelabelposition_ ;
      /**
       * <code>optional int32 tschchartseriesbarvaluelabelposition = 88;</code>
       */
      public boolean hasTschchartseriesbarvaluelabelposition() {
        return ((bitField2_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int32 tschchartseriesbarvaluelabelposition = 88;</code>
       */
      public int getTschchartseriesbarvaluelabelposition() {
        return tschchartseriesbarvaluelabelposition_;
      }
      /**
       * <code>optional int32 tschchartseriesbarvaluelabelposition = 88;</code>
       */
      public Builder setTschchartseriesbarvaluelabelposition(int value) {
        bitField2_ |= 0x00800000;
        tschchartseriesbarvaluelabelposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesbarvaluelabelposition = 88;</code>
       */
      public Builder clearTschchartseriesbarvaluelabelposition() {
        bitField2_ = (bitField2_ & ~0x00800000);
        tschchartseriesbarvaluelabelposition_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesbubblevaluelabelposition_ ;
      /**
       * <code>optional int32 tschchartseriesbubblevaluelabelposition = 89;</code>
       */
      public boolean hasTschchartseriesbubblevaluelabelposition() {
        return ((bitField2_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int32 tschchartseriesbubblevaluelabelposition = 89;</code>
       */
      public int getTschchartseriesbubblevaluelabelposition() {
        return tschchartseriesbubblevaluelabelposition_;
      }
      /**
       * <code>optional int32 tschchartseriesbubblevaluelabelposition = 89;</code>
       */
      public Builder setTschchartseriesbubblevaluelabelposition(int value) {
        bitField2_ |= 0x01000000;
        tschchartseriesbubblevaluelabelposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesbubblevaluelabelposition = 89;</code>
       */
      public Builder clearTschchartseriesbubblevaluelabelposition() {
        bitField2_ = (bitField2_ & ~0x01000000);
        tschchartseriesbubblevaluelabelposition_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesdefaultvaluelabelposition_ ;
      /**
       * <code>optional int32 tschchartseriesdefaultvaluelabelposition = 90;</code>
       */
      public boolean hasTschchartseriesdefaultvaluelabelposition() {
        return ((bitField2_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int32 tschchartseriesdefaultvaluelabelposition = 90;</code>
       */
      public int getTschchartseriesdefaultvaluelabelposition() {
        return tschchartseriesdefaultvaluelabelposition_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaultvaluelabelposition = 90;</code>
       */
      public Builder setTschchartseriesdefaultvaluelabelposition(int value) {
        bitField2_ |= 0x02000000;
        tschchartseriesdefaultvaluelabelposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaultvaluelabelposition = 90;</code>
       */
      public Builder clearTschchartseriesdefaultvaluelabelposition() {
        bitField2_ = (bitField2_ & ~0x02000000);
        tschchartseriesdefaultvaluelabelposition_ = 0;
        onChanged();
        return this;
      }

      private int tschchartserieslinevaluelabelposition_ ;
      /**
       * <code>optional int32 tschchartserieslinevaluelabelposition = 91;</code>
       */
      public boolean hasTschchartserieslinevaluelabelposition() {
        return ((bitField2_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int32 tschchartserieslinevaluelabelposition = 91;</code>
       */
      public int getTschchartserieslinevaluelabelposition() {
        return tschchartserieslinevaluelabelposition_;
      }
      /**
       * <code>optional int32 tschchartserieslinevaluelabelposition = 91;</code>
       */
      public Builder setTschchartserieslinevaluelabelposition(int value) {
        bitField2_ |= 0x04000000;
        tschchartserieslinevaluelabelposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartserieslinevaluelabelposition = 91;</code>
       */
      public Builder clearTschchartserieslinevaluelabelposition() {
        bitField2_ = (bitField2_ & ~0x04000000);
        tschchartserieslinevaluelabelposition_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesmixedareavaluelabelposition_ ;
      /**
       * <code>optional int32 tschchartseriesmixedareavaluelabelposition = 92;</code>
       */
      public boolean hasTschchartseriesmixedareavaluelabelposition() {
        return ((bitField2_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int32 tschchartseriesmixedareavaluelabelposition = 92;</code>
       */
      public int getTschchartseriesmixedareavaluelabelposition() {
        return tschchartseriesmixedareavaluelabelposition_;
      }
      /**
       * <code>optional int32 tschchartseriesmixedareavaluelabelposition = 92;</code>
       */
      public Builder setTschchartseriesmixedareavaluelabelposition(int value) {
        bitField2_ |= 0x08000000;
        tschchartseriesmixedareavaluelabelposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesmixedareavaluelabelposition = 92;</code>
       */
      public Builder clearTschchartseriesmixedareavaluelabelposition() {
        bitField2_ = (bitField2_ & ~0x08000000);
        tschchartseriesmixedareavaluelabelposition_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesmixedcolumnvaluelabelposition_ ;
      /**
       * <code>optional int32 tschchartseriesmixedcolumnvaluelabelposition = 93;</code>
       */
      public boolean hasTschchartseriesmixedcolumnvaluelabelposition() {
        return ((bitField2_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int32 tschchartseriesmixedcolumnvaluelabelposition = 93;</code>
       */
      public int getTschchartseriesmixedcolumnvaluelabelposition() {
        return tschchartseriesmixedcolumnvaluelabelposition_;
      }
      /**
       * <code>optional int32 tschchartseriesmixedcolumnvaluelabelposition = 93;</code>
       */
      public Builder setTschchartseriesmixedcolumnvaluelabelposition(int value) {
        bitField2_ |= 0x10000000;
        tschchartseriesmixedcolumnvaluelabelposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesmixedcolumnvaluelabelposition = 93;</code>
       */
      public Builder clearTschchartseriesmixedcolumnvaluelabelposition() {
        bitField2_ = (bitField2_ & ~0x10000000);
        tschchartseriesmixedcolumnvaluelabelposition_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesmixedlinevaluelabelposition_ ;
      /**
       * <code>optional int32 tschchartseriesmixedlinevaluelabelposition = 94;</code>
       */
      public boolean hasTschchartseriesmixedlinevaluelabelposition() {
        return ((bitField2_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int32 tschchartseriesmixedlinevaluelabelposition = 94;</code>
       */
      public int getTschchartseriesmixedlinevaluelabelposition() {
        return tschchartseriesmixedlinevaluelabelposition_;
      }
      /**
       * <code>optional int32 tschchartseriesmixedlinevaluelabelposition = 94;</code>
       */
      public Builder setTschchartseriesmixedlinevaluelabelposition(int value) {
        bitField2_ |= 0x20000000;
        tschchartseriesmixedlinevaluelabelposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesmixedlinevaluelabelposition = 94;</code>
       */
      public Builder clearTschchartseriesmixedlinevaluelabelposition() {
        bitField2_ = (bitField2_ & ~0x20000000);
        tschchartseriesmixedlinevaluelabelposition_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesscattervaluelabelposition_ ;
      /**
       * <code>optional int32 tschchartseriesscattervaluelabelposition = 95;</code>
       */
      public boolean hasTschchartseriesscattervaluelabelposition() {
        return ((bitField2_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int32 tschchartseriesscattervaluelabelposition = 95;</code>
       */
      public int getTschchartseriesscattervaluelabelposition() {
        return tschchartseriesscattervaluelabelposition_;
      }
      /**
       * <code>optional int32 tschchartseriesscattervaluelabelposition = 95;</code>
       */
      public Builder setTschchartseriesscattervaluelabelposition(int value) {
        bitField2_ |= 0x40000000;
        tschchartseriesscattervaluelabelposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesscattervaluelabelposition = 95;</code>
       */
      public Builder clearTschchartseriesscattervaluelabelposition() {
        bitField2_ = (bitField2_ & ~0x40000000);
        tschchartseriesscattervaluelabelposition_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesstackedareavaluelabelposition_ ;
      /**
       * <code>optional int32 tschchartseriesstackedareavaluelabelposition = 96;</code>
       */
      public boolean hasTschchartseriesstackedareavaluelabelposition() {
        return ((bitField2_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional int32 tschchartseriesstackedareavaluelabelposition = 96;</code>
       */
      public int getTschchartseriesstackedareavaluelabelposition() {
        return tschchartseriesstackedareavaluelabelposition_;
      }
      /**
       * <code>optional int32 tschchartseriesstackedareavaluelabelposition = 96;</code>
       */
      public Builder setTschchartseriesstackedareavaluelabelposition(int value) {
        bitField2_ |= 0x80000000;
        tschchartseriesstackedareavaluelabelposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesstackedareavaluelabelposition = 96;</code>
       */
      public Builder clearTschchartseriesstackedareavaluelabelposition() {
        bitField2_ = (bitField2_ & ~0x80000000);
        tschchartseriesstackedareavaluelabelposition_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesstackedbarvaluelabelposition_ ;
      /**
       * <code>optional int32 tschchartseriesstackedbarvaluelabelposition = 97;</code>
       */
      public boolean hasTschchartseriesstackedbarvaluelabelposition() {
        return ((bitField3_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 tschchartseriesstackedbarvaluelabelposition = 97;</code>
       */
      public int getTschchartseriesstackedbarvaluelabelposition() {
        return tschchartseriesstackedbarvaluelabelposition_;
      }
      /**
       * <code>optional int32 tschchartseriesstackedbarvaluelabelposition = 97;</code>
       */
      public Builder setTschchartseriesstackedbarvaluelabelposition(int value) {
        bitField3_ |= 0x00000001;
        tschchartseriesstackedbarvaluelabelposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesstackedbarvaluelabelposition = 97;</code>
       */
      public Builder clearTschchartseriesstackedbarvaluelabelposition() {
        bitField3_ = (bitField3_ & ~0x00000001);
        tschchartseriesstackedbarvaluelabelposition_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TSCH.Generated.ChartSeriesStyleArchive)
    }

    // @@protoc_insertion_point(class_scope:TSCH.Generated.ChartSeriesStyleArchive)
    private static final org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive();
    }

    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ChartSeriesStyleArchive>
        PARSER = new com.google.protobuf.AbstractParser<ChartSeriesStyleArchive>() {
      public ChartSeriesStyleArchive parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ChartSeriesStyleArchive(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChartSeriesStyleArchive> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChartSeriesStyleArchive> getParserForType() {
      return PARSER;
    }

    public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    public static final int CURRENT_FIELD_NUMBER = 10000;
    /**
     * <code>extend .TSCH.ChartSeriesStyleArchive { ... }</code>
     */
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartSeriesStyleArchive,
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive> current = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive.getDefaultInstance(),
          0,
          org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive.class,
          org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesStyleArchive.getDefaultInstance());
  }

  public interface ChartSeriesNonStyleArchiveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TSCH.Generated.ChartSeriesNonStyleArchive)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional float tschchartseriesbubbleadjustmentscale = 1;</code>
     */
    boolean hasTschchartseriesbubbleadjustmentscale();
    /**
     * <code>optional float tschchartseriesbubbleadjustmentscale = 1;</code>
     */
    float getTschchartseriesbubbleadjustmentscale();

    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 2;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarcustomnegativedata();
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 2;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive getTschchartseriesdefaulterrorbarcustomnegativedata();
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 2;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder getTschchartseriesdefaulterrorbarcustomnegativedataOrBuilder();

    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 3;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarcustomnegativedatascatterx();
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 3;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive getTschchartseriesdefaulterrorbarcustomnegativedatascatterx();
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 3;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder getTschchartseriesdefaulterrorbarcustomnegativedatascatterxOrBuilder();

    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 4;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarcustompositivedata();
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 4;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive getTschchartseriesdefaulterrorbarcustompositivedata();
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 4;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder getTschchartseriesdefaulterrorbarcustompositivedataOrBuilder();

    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 5;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarcustompositivedatascatterx();
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 5;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive getTschchartseriesdefaulterrorbarcustompositivedatascatterx();
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 5;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder getTschchartseriesdefaulterrorbarcustompositivedatascatterxOrBuilder();

    /**
     * <code>optional float tschchartseriesdefaulterrorbarfixedvalue = 6;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarfixedvalue();
    /**
     * <code>optional float tschchartseriesdefaulterrorbarfixedvalue = 6;</code>
     */
    float getTschchartseriesdefaulterrorbarfixedvalue();

    /**
     * <code>optional float tschchartseriesdefaulterrorbarfixedvaluescatterx = 7;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarfixedvaluescatterx();
    /**
     * <code>optional float tschchartseriesdefaulterrorbarfixedvaluescatterx = 7;</code>
     */
    float getTschchartseriesdefaulterrorbarfixedvaluescatterx();

    /**
     * <code>optional float tschchartseriesdefaulterrorbarpercentvalue = 8;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarpercentvalue();
    /**
     * <code>optional float tschchartseriesdefaulterrorbarpercentvalue = 8;</code>
     */
    float getTschchartseriesdefaulterrorbarpercentvalue();

    /**
     * <code>optional float tschchartseriesdefaulterrorbarpercentvaluescatterx = 9;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarpercentvaluescatterx();
    /**
     * <code>optional float tschchartseriesdefaulterrorbarpercentvaluescatterx = 9;</code>
     */
    float getTschchartseriesdefaulterrorbarpercentvaluescatterx();

    /**
     * <code>optional int32 tschchartseriesdefaulterrorbarsetting = 10;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarsetting();
    /**
     * <code>optional int32 tschchartseriesdefaulterrorbarsetting = 10;</code>
     */
    int getTschchartseriesdefaulterrorbarsetting();

    /**
     * <code>optional int32 tschchartseriesdefaulterrorbarsettingscatterx = 11;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarsettingscatterx();
    /**
     * <code>optional int32 tschchartseriesdefaulterrorbarsettingscatterx = 11;</code>
     */
    int getTschchartseriesdefaulterrorbarsettingscatterx();

    /**
     * <code>optional float tschchartseriesdefaulterrorbarstddevvalue = 12;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarstddevvalue();
    /**
     * <code>optional float tschchartseriesdefaulterrorbarstddevvalue = 12;</code>
     */
    float getTschchartseriesdefaulterrorbarstddevvalue();

    /**
     * <code>optional float tschchartseriesdefaulterrorbarstddevvaluescatterx = 13;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarstddevvaluescatterx();
    /**
     * <code>optional float tschchartseriesdefaulterrorbarstddevvaluescatterx = 13;</code>
     */
    float getTschchartseriesdefaulterrorbarstddevvaluescatterx();

    /**
     * <code>optional int32 tschchartseriesdefaulterrorbartype = 14;</code>
     */
    boolean hasTschchartseriesdefaulterrorbartype();
    /**
     * <code>optional int32 tschchartseriesdefaulterrorbartype = 14;</code>
     */
    int getTschchartseriesdefaulterrorbartype();

    /**
     * <code>optional int32 tschchartseriesdefaulterrorbartypescatterx = 15;</code>
     */
    boolean hasTschchartseriesdefaulterrorbartypescatterx();
    /**
     * <code>optional int32 tschchartseriesdefaulterrorbartypescatterx = 15;</code>
     */
    int getTschchartseriesdefaulterrorbartypescatterx();

    /**
     * <code>optional float tschchartseriespielabelexplosion = 16;</code>
     */
    boolean hasTschchartseriespielabelexplosion();
    /**
     * <code>optional float tschchartseriespielabelexplosion = 16;</code>
     */
    float getTschchartseriespielabelexplosion();

    /**
     * <code>optional int32 tschchartseriesbubblelinetype = 17;</code>
     */
    boolean hasTschchartseriesbubblelinetype();
    /**
     * <code>optional int32 tschchartseriesbubblelinetype = 17;</code>
     */
    int getTschchartseriesbubblelinetype();

    /**
     * <code>optional int32 tschchartserieslinelinetype = 18;</code>
     */
    boolean hasTschchartserieslinelinetype();
    /**
     * <code>optional int32 tschchartserieslinelinetype = 18;</code>
     */
    int getTschchartserieslinelinetype();

    /**
     * <code>optional int32 tschchartseriesmixedlinelinetype = 19;</code>
     */
    boolean hasTschchartseriesmixedlinelinetype();
    /**
     * <code>optional int32 tschchartseriesmixedlinelinetype = 19;</code>
     */
    int getTschchartseriesmixedlinelinetype();

    /**
     * <code>optional int32 tschchartseriesscatterlinetype = 20;</code>
     */
    boolean hasTschchartseriesscatterlinetype();
    /**
     * <code>optional int32 tschchartseriesscatterlinetype = 20;</code>
     */
    int getTschchartseriesscatterlinetype();

    /**
     * <code>optional .TSK.FormatStructArchive tschchartseriesdefaultnumberformat = 21;</code>
     */
    boolean hasTschchartseriesdefaultnumberformat();
    /**
     * <code>optional .TSK.FormatStructArchive tschchartseriesdefaultnumberformat = 21;</code>
     */
    org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive getTschchartseriesdefaultnumberformat();
    /**
     * <code>optional .TSK.FormatStructArchive tschchartseriesdefaultnumberformat = 21;</code>
     */
    org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchiveOrBuilder getTschchartseriesdefaultnumberformatOrBuilder();

    /**
     * <code>optional .TSK.FormatStructArchive tschchartseriespienumberformat = 22;</code>
     */
    boolean hasTschchartseriespienumberformat();
    /**
     * <code>optional .TSK.FormatStructArchive tschchartseriespienumberformat = 22;</code>
     */
    org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive getTschchartseriespienumberformat();
    /**
     * <code>optional .TSK.FormatStructArchive tschchartseriespienumberformat = 22;</code>
     */
    org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchiveOrBuilder getTschchartseriespienumberformatOrBuilder();

    /**
     * <code>optional int32 tschchartseriesdefaultnumberformattype = 23;</code>
     */
    boolean hasTschchartseriesdefaultnumberformattype();
    /**
     * <code>optional int32 tschchartseriesdefaultnumberformattype = 23;</code>
     */
    int getTschchartseriesdefaultnumberformattype();

    /**
     * <code>optional int32 tschchartseriespienumberformattype = 24;</code>
     */
    boolean hasTschchartseriespienumberformattype();
    /**
     * <code>optional int32 tschchartseriespienumberformattype = 24;</code>
     */
    int getTschchartseriespienumberformattype();

    /**
     * <code>optional .TSK.FormatStructArchive tschchartseriesstackedpercentnumberformat = 25;</code>
     */
    boolean hasTschchartseriesstackedpercentnumberformat();
    /**
     * <code>optional .TSK.FormatStructArchive tschchartseriesstackedpercentnumberformat = 25;</code>
     */
    org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive getTschchartseriesstackedpercentnumberformat();
    /**
     * <code>optional .TSK.FormatStructArchive tschchartseriesstackedpercentnumberformat = 25;</code>
     */
    org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchiveOrBuilder getTschchartseriesstackedpercentnumberformatOrBuilder();

    /**
     * <code>optional int32 tschchartseriesdefaultseriestype = 26;</code>
     */
    boolean hasTschchartseriesdefaultseriestype();
    /**
     * <code>optional int32 tschchartseriesdefaultseriestype = 26;</code>
     */
    int getTschchartseriesdefaultseriestype();

    /**
     * <code>optional bool tschchartseriesdefaultshowerrorbar = 27;</code>
     */
    boolean hasTschchartseriesdefaultshowerrorbar();
    /**
     * <code>optional bool tschchartseriesdefaultshowerrorbar = 27;</code>
     */
    boolean getTschchartseriesdefaultshowerrorbar();

    /**
     * <code>optional bool tschchartseriesdefaultshowerrorbarscatterx = 28;</code>
     */
    boolean hasTschchartseriesdefaultshowerrorbarscatterx();
    /**
     * <code>optional bool tschchartseriesdefaultshowerrorbarscatterx = 28;</code>
     */
    boolean getTschchartseriesdefaultshowerrorbarscatterx();

    /**
     * <code>optional bool tschchartseriesscattershowline = 29;</code>
     */
    boolean hasTschchartseriesscattershowline();
    /**
     * <code>optional bool tschchartseriesscattershowline = 29;</code>
     */
    boolean getTschchartseriesscattershowline();

    /**
     * <code>optional bool tschchartseriesbubbleshownegativedata = 30;</code>
     */
    boolean hasTschchartseriesbubbleshownegativedata();
    /**
     * <code>optional bool tschchartseriesbubbleshownegativedata = 30;</code>
     */
    boolean getTschchartseriesbubbleshownegativedata();

    /**
     * <code>optional bool tschchartseriespieshowserieslabels = 31;</code>
     */
    boolean hasTschchartseriespieshowserieslabels();
    /**
     * <code>optional bool tschchartseriespieshowserieslabels = 31;</code>
     */
    boolean getTschchartseriespieshowserieslabels();

    /**
     * <code>optional bool tschchartseriesareashowsymbol = 32;</code>
     */
    boolean hasTschchartseriesareashowsymbol();
    /**
     * <code>optional bool tschchartseriesareashowsymbol = 32;</code>
     */
    boolean getTschchartseriesareashowsymbol();

    /**
     * <code>optional bool tschchartserieslineshowsymbol = 33;</code>
     */
    boolean hasTschchartserieslineshowsymbol();
    /**
     * <code>optional bool tschchartserieslineshowsymbol = 33;</code>
     */
    boolean getTschchartserieslineshowsymbol();

    /**
     * <code>optional bool tschchartseriesmixedareashowsymbol = 34;</code>
     */
    boolean hasTschchartseriesmixedareashowsymbol();
    /**
     * <code>optional bool tschchartseriesmixedareashowsymbol = 34;</code>
     */
    boolean getTschchartseriesmixedareashowsymbol();

    /**
     * <code>optional bool tschchartseriesmixedlineshowsymbol = 35;</code>
     */
    boolean hasTschchartseriesmixedlineshowsymbol();
    /**
     * <code>optional bool tschchartseriesmixedlineshowsymbol = 35;</code>
     */
    boolean getTschchartseriesmixedlineshowsymbol();

    /**
     * <code>optional bool tschchartseriesscattershowsymbol = 36;</code>
     */
    boolean hasTschchartseriesscattershowsymbol();
    /**
     * <code>optional bool tschchartseriesscattershowsymbol = 36;</code>
     */
    boolean getTschchartseriesscattershowsymbol();

    /**
     * <code>optional bool tschchartseriesdefaultshowtrendline = 37;</code>
     */
    boolean hasTschchartseriesdefaultshowtrendline();
    /**
     * <code>optional bool tschchartseriesdefaultshowtrendline = 37;</code>
     */
    boolean getTschchartseriesdefaultshowtrendline();

    /**
     * <code>optional bool tschchartseriesareashowvaluelabels = 38;</code>
     */
    boolean hasTschchartseriesareashowvaluelabels();
    /**
     * <code>optional bool tschchartseriesareashowvaluelabels = 38;</code>
     */
    boolean getTschchartseriesareashowvaluelabels();

    /**
     * <code>optional bool tschchartseriesbarshowvaluelabels = 39;</code>
     */
    boolean hasTschchartseriesbarshowvaluelabels();
    /**
     * <code>optional bool tschchartseriesbarshowvaluelabels = 39;</code>
     */
    boolean getTschchartseriesbarshowvaluelabels();

    /**
     * <code>optional bool tschchartseriesbubbleshowvaluelabels = 40;</code>
     */
    boolean hasTschchartseriesbubbleshowvaluelabels();
    /**
     * <code>optional bool tschchartseriesbubbleshowvaluelabels = 40;</code>
     */
    boolean getTschchartseriesbubbleshowvaluelabels();

    /**
     * <code>optional bool tschchartseriesdefaultshowvaluelabels = 41;</code>
     */
    boolean hasTschchartseriesdefaultshowvaluelabels();
    /**
     * <code>optional bool tschchartseriesdefaultshowvaluelabels = 41;</code>
     */
    boolean getTschchartseriesdefaultshowvaluelabels();

    /**
     * <code>optional bool tschchartserieslineshowvaluelabels = 42;</code>
     */
    boolean hasTschchartserieslineshowvaluelabels();
    /**
     * <code>optional bool tschchartserieslineshowvaluelabels = 42;</code>
     */
    boolean getTschchartserieslineshowvaluelabels();

    /**
     * <code>optional bool tschchartseriesmixedshowvaluelabels = 43;</code>
     */
    boolean hasTschchartseriesmixedshowvaluelabels();
    /**
     * <code>optional bool tschchartseriesmixedshowvaluelabels = 43;</code>
     */
    boolean getTschchartseriesmixedshowvaluelabels();

    /**
     * <code>optional bool tschchartseriespieshowvaluelabels = 44;</code>
     */
    boolean hasTschchartseriespieshowvaluelabels();
    /**
     * <code>optional bool tschchartseriespieshowvaluelabels = 44;</code>
     */
    boolean getTschchartseriespieshowvaluelabels();

    /**
     * <code>optional bool tschchartseriesscattershowvaluelabels = 45;</code>
     */
    boolean hasTschchartseriesscattershowvaluelabels();
    /**
     * <code>optional bool tschchartseriesscattershowvaluelabels = 45;</code>
     */
    boolean getTschchartseriesscattershowvaluelabels();

    /**
     * <code>optional int32 tschchartseriesbubblesizedimension = 46;</code>
     */
    boolean hasTschchartseriesbubblesizedimension();
    /**
     * <code>optional int32 tschchartseriesbubblesizedimension = 46;</code>
     */
    int getTschchartseriesbubblesizedimension();

    /**
     * <code>optional int32 tschchartseriesareasymboltype = 47;</code>
     */
    boolean hasTschchartseriesareasymboltype();
    /**
     * <code>optional int32 tschchartseriesareasymboltype = 47;</code>
     */
    int getTschchartseriesareasymboltype();

    /**
     * <code>optional int32 tschchartserieslinesymboltype = 48;</code>
     */
    boolean hasTschchartserieslinesymboltype();
    /**
     * <code>optional int32 tschchartserieslinesymboltype = 48;</code>
     */
    int getTschchartserieslinesymboltype();

    /**
     * <code>optional int32 tschchartseriesmixedareasymboltype = 49;</code>
     */
    boolean hasTschchartseriesmixedareasymboltype();
    /**
     * <code>optional int32 tschchartseriesmixedareasymboltype = 49;</code>
     */
    int getTschchartseriesmixedareasymboltype();

    /**
     * <code>optional int32 tschchartseriesmixedlinesymboltype = 50;</code>
     */
    boolean hasTschchartseriesmixedlinesymboltype();
    /**
     * <code>optional int32 tschchartseriesmixedlinesymboltype = 50;</code>
     */
    int getTschchartseriesmixedlinesymboltype();

    /**
     * <code>optional int32 tschchartseriesscattersymboltype = 51;</code>
     */
    boolean hasTschchartseriesscattersymboltype();
    /**
     * <code>optional int32 tschchartseriesscattersymboltype = 51;</code>
     */
    int getTschchartseriesscattersymboltype();

    /**
     * <code>optional float tschchartseriesdefaulttrendlineequationoffsetx = 52;</code>
     */
    boolean hasTschchartseriesdefaulttrendlineequationoffsetx();
    /**
     * <code>optional float tschchartseriesdefaulttrendlineequationoffsetx = 52;</code>
     */
    float getTschchartseriesdefaulttrendlineequationoffsetx();

    /**
     * <code>optional float tschchartseriesdefaulttrendlineequationoffsety = 53;</code>
     */
    boolean hasTschchartseriesdefaulttrendlineequationoffsety();
    /**
     * <code>optional float tschchartseriesdefaulttrendlineequationoffsety = 53;</code>
     */
    float getTschchartseriesdefaulttrendlineequationoffsety();

    /**
     * <code>optional string tschchartseriesdefaulttrendlinelabelstring = 54;</code>
     */
    boolean hasTschchartseriesdefaulttrendlinelabelstring();
    /**
     * <code>optional string tschchartseriesdefaulttrendlinelabelstring = 54;</code>
     */
    java.lang.String getTschchartseriesdefaulttrendlinelabelstring();
    /**
     * <code>optional string tschchartseriesdefaulttrendlinelabelstring = 54;</code>
     */
    com.google.protobuf.ByteString
        getTschchartseriesdefaulttrendlinelabelstringBytes();

    /**
     * <code>optional int32 tschchartseriesdefaulttrendlineorder = 55;</code>
     */
    boolean hasTschchartseriesdefaulttrendlineorder();
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlineorder = 55;</code>
     */
    int getTschchartseriesdefaulttrendlineorder();

    /**
     * <code>optional int32 tschchartseriesdefaulttrendlineperiod = 56;</code>
     */
    boolean hasTschchartseriesdefaulttrendlineperiod();
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlineperiod = 56;</code>
     */
    int getTschchartseriesdefaulttrendlineperiod();

    /**
     * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsetx = 57;</code>
     */
    boolean hasTschchartseriesdefaulttrendlinersquaredoffsetx();
    /**
     * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsetx = 57;</code>
     */
    float getTschchartseriesdefaulttrendlinersquaredoffsetx();

    /**
     * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsety = 58;</code>
     */
    boolean hasTschchartseriesdefaulttrendlinersquaredoffsety();
    /**
     * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsety = 58;</code>
     */
    float getTschchartseriesdefaulttrendlinersquaredoffsety();

    /**
     * <code>optional bool tschchartseriesdefaulttrendlineshowequation = 59;</code>
     */
    boolean hasTschchartseriesdefaulttrendlineshowequation();
    /**
     * <code>optional bool tschchartseriesdefaulttrendlineshowequation = 59;</code>
     */
    boolean getTschchartseriesdefaulttrendlineshowequation();

    /**
     * <code>optional bool tschchartseriesdefaulttrendlineshowlabel = 60;</code>
     */
    boolean hasTschchartseriesdefaulttrendlineshowlabel();
    /**
     * <code>optional bool tschchartseriesdefaulttrendlineshowlabel = 60;</code>
     */
    boolean getTschchartseriesdefaulttrendlineshowlabel();

    /**
     * <code>optional bool tschchartseriesdefaulttrendlineshowr2value = 61;</code>
     */
    boolean hasTschchartseriesdefaulttrendlineshowr2Value();
    /**
     * <code>optional bool tschchartseriesdefaulttrendlineshowr2value = 61;</code>
     */
    boolean getTschchartseriesdefaulttrendlineshowr2Value();

    /**
     * <code>optional int32 tschchartseriesdefaulttrendlinetype = 62;</code>
     */
    boolean hasTschchartseriesdefaulttrendlinetype();
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlinetype = 62;</code>
     */
    int getTschchartseriesdefaulttrendlinetype();

    /**
     * <code>optional float tschchartseriespiewedgeexplosion = 63;</code>
     */
    boolean hasTschchartseriespiewedgeexplosion();
    /**
     * <code>optional float tschchartseriespiewedgeexplosion = 63;</code>
     */
    float getTschchartseriespiewedgeexplosion();

    /**
     * <code>optional int32 tschchartseriesdefaultyaxisordinal = 64;</code>
     */
    boolean hasTschchartseriesdefaultyaxisordinal();
    /**
     * <code>optional int32 tschchartseriesdefaultyaxisordinal = 64;</code>
     */
    int getTschchartseriesdefaultyaxisordinal();

    /**
     * <code>optional bool tschchartseriesbubbleshowserieslabels = 65;</code>
     */
    boolean hasTschchartseriesbubbleshowserieslabels();
    /**
     * <code>optional bool tschchartseriesbubbleshowserieslabels = 65;</code>
     */
    boolean getTschchartseriesbubbleshowserieslabels();

    /**
     * <code>optional int32 tschchartseriesbubblevaluelabelsaxis = 66;</code>
     */
    boolean hasTschchartseriesbubblevaluelabelsaxis();
    /**
     * <code>optional int32 tschchartseriesbubblevaluelabelsaxis = 66;</code>
     */
    int getTschchartseriesbubblevaluelabelsaxis();

    /**
     * <code>optional bool tschchartseriesscattershowserieslabels = 67;</code>
     */
    boolean hasTschchartseriesscattershowserieslabels();
    /**
     * <code>optional bool tschchartseriesscattershowserieslabels = 67;</code>
     */
    boolean getTschchartseriesscattershowserieslabels();

    /**
     * <code>optional int32 tschchartseriesscattervaluelabelsaxis = 68;</code>
     */
    boolean hasTschchartseriesscattervaluelabelsaxis();
    /**
     * <code>optional int32 tschchartseriesscattervaluelabelsaxis = 68;</code>
     */
    int getTschchartseriesscattervaluelabelsaxis();
  }
  /**
   * Protobuf type {@code TSCH.Generated.ChartSeriesNonStyleArchive}
   */
  public  static final class ChartSeriesNonStyleArchive extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TSCH.Generated.ChartSeriesNonStyleArchive)
      ChartSeriesNonStyleArchiveOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChartSeriesNonStyleArchive.newBuilder() to construct.
    private ChartSeriesNonStyleArchive(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChartSeriesNonStyleArchive() {
      tschchartseriesbubbleadjustmentscale_ = 0F;
      tschchartseriesdefaulterrorbarfixedvalue_ = 0F;
      tschchartseriesdefaulterrorbarfixedvaluescatterx_ = 0F;
      tschchartseriesdefaulterrorbarpercentvalue_ = 0F;
      tschchartseriesdefaulterrorbarpercentvaluescatterx_ = 0F;
      tschchartseriesdefaulterrorbarsetting_ = 0;
      tschchartseriesdefaulterrorbarsettingscatterx_ = 0;
      tschchartseriesdefaulterrorbarstddevvalue_ = 0F;
      tschchartseriesdefaulterrorbarstddevvaluescatterx_ = 0F;
      tschchartseriesdefaulterrorbartype_ = 0;
      tschchartseriesdefaulterrorbartypescatterx_ = 0;
      tschchartseriespielabelexplosion_ = 0F;
      tschchartseriesbubblelinetype_ = 0;
      tschchartserieslinelinetype_ = 0;
      tschchartseriesmixedlinelinetype_ = 0;
      tschchartseriesscatterlinetype_ = 0;
      tschchartseriesdefaultnumberformattype_ = 0;
      tschchartseriespienumberformattype_ = 0;
      tschchartseriesdefaultseriestype_ = 0;
      tschchartseriesdefaultshowerrorbar_ = false;
      tschchartseriesdefaultshowerrorbarscatterx_ = false;
      tschchartseriesscattershowline_ = false;
      tschchartseriesbubbleshownegativedata_ = false;
      tschchartseriespieshowserieslabels_ = false;
      tschchartseriesareashowsymbol_ = false;
      tschchartserieslineshowsymbol_ = false;
      tschchartseriesmixedareashowsymbol_ = false;
      tschchartseriesmixedlineshowsymbol_ = false;
      tschchartseriesscattershowsymbol_ = false;
      tschchartseriesdefaultshowtrendline_ = false;
      tschchartseriesareashowvaluelabels_ = false;
      tschchartseriesbarshowvaluelabels_ = false;
      tschchartseriesbubbleshowvaluelabels_ = false;
      tschchartseriesdefaultshowvaluelabels_ = false;
      tschchartserieslineshowvaluelabels_ = false;
      tschchartseriesmixedshowvaluelabels_ = false;
      tschchartseriespieshowvaluelabels_ = false;
      tschchartseriesscattershowvaluelabels_ = false;
      tschchartseriesbubblesizedimension_ = 0;
      tschchartseriesareasymboltype_ = 0;
      tschchartserieslinesymboltype_ = 0;
      tschchartseriesmixedareasymboltype_ = 0;
      tschchartseriesmixedlinesymboltype_ = 0;
      tschchartseriesscattersymboltype_ = 0;
      tschchartseriesdefaulttrendlineequationoffsetx_ = 0F;
      tschchartseriesdefaulttrendlineequationoffsety_ = 0F;
      tschchartseriesdefaulttrendlinelabelstring_ = "";
      tschchartseriesdefaulttrendlineorder_ = 0;
      tschchartseriesdefaulttrendlineperiod_ = 0;
      tschchartseriesdefaulttrendlinersquaredoffsetx_ = 0F;
      tschchartseriesdefaulttrendlinersquaredoffsety_ = 0F;
      tschchartseriesdefaulttrendlineshowequation_ = false;
      tschchartseriesdefaulttrendlineshowlabel_ = false;
      tschchartseriesdefaulttrendlineshowr2Value_ = false;
      tschchartseriesdefaulttrendlinetype_ = 0;
      tschchartseriespiewedgeexplosion_ = 0F;
      tschchartseriesdefaultyaxisordinal_ = 0;
      tschchartseriesbubbleshowserieslabels_ = false;
      tschchartseriesbubblevaluelabelsaxis_ = 0;
      tschchartseriesscattershowserieslabels_ = false;
      tschchartseriesscattervaluelabelsaxis_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChartSeriesNonStyleArchive(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      int mutable_bitField2_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              tschchartseriesbubbleadjustmentscale_ = input.readFloat();
              break;
            }
            case 18: {
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = tschchartseriesdefaulterrorbarcustomnegativedata_.toBuilder();
              }
              tschchartseriesdefaulterrorbarcustomnegativedata_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaulterrorbarcustomnegativedata_);
                tschchartseriesdefaulterrorbarcustomnegativedata_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = tschchartseriesdefaulterrorbarcustomnegativedatascatterx_.toBuilder();
              }
              tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaulterrorbarcustomnegativedatascatterx_);
                tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = tschchartseriesdefaulterrorbarcustompositivedata_.toBuilder();
              }
              tschchartseriesdefaulterrorbarcustompositivedata_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaulterrorbarcustompositivedata_);
                tschchartseriesdefaulterrorbarcustompositivedata_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = tschchartseriesdefaulterrorbarcustompositivedatascatterx_.toBuilder();
              }
              tschchartseriesdefaulterrorbarcustompositivedatascatterx_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaulterrorbarcustompositivedatascatterx_);
                tschchartseriesdefaulterrorbarcustompositivedatascatterx_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              tschchartseriesdefaulterrorbarfixedvalue_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              tschchartseriesdefaulterrorbarfixedvaluescatterx_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              tschchartseriesdefaulterrorbarpercentvalue_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              tschchartseriesdefaulterrorbarpercentvaluescatterx_ = input.readFloat();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              tschchartseriesdefaulterrorbarsetting_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              tschchartseriesdefaulterrorbarsettingscatterx_ = input.readInt32();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000800;
              tschchartseriesdefaulterrorbarstddevvalue_ = input.readFloat();
              break;
            }
            case 109: {
              bitField0_ |= 0x00001000;
              tschchartseriesdefaulterrorbarstddevvaluescatterx_ = input.readFloat();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              tschchartseriesdefaulterrorbartype_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              tschchartseriesdefaulterrorbartypescatterx_ = input.readInt32();
              break;
            }
            case 133: {
              bitField0_ |= 0x00008000;
              tschchartseriespielabelexplosion_ = input.readFloat();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              tschchartseriesbubblelinetype_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              tschchartserieslinelinetype_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              tschchartseriesmixedlinelinetype_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              tschchartseriesscatterlinetype_ = input.readInt32();
              break;
            }
            case 170: {
              org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00100000) == 0x00100000)) {
                subBuilder = tschchartseriesdefaultnumberformat_.toBuilder();
              }
              tschchartseriesdefaultnumberformat_ = input.readMessage(org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaultnumberformat_);
                tschchartseriesdefaultnumberformat_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00100000;
              break;
            }
            case 178: {
              org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00200000) == 0x00200000)) {
                subBuilder = tschchartseriespienumberformat_.toBuilder();
              }
              tschchartseriespienumberformat_ = input.readMessage(org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriespienumberformat_);
                tschchartseriespienumberformat_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00200000;
              break;
            }
            case 184: {
              bitField0_ |= 0x00400000;
              tschchartseriesdefaultnumberformattype_ = input.readInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00800000;
              tschchartseriespienumberformattype_ = input.readInt32();
              break;
            }
            case 202: {
              org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x01000000) == 0x01000000)) {
                subBuilder = tschchartseriesstackedpercentnumberformat_.toBuilder();
              }
              tschchartseriesstackedpercentnumberformat_ = input.readMessage(org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesstackedpercentnumberformat_);
                tschchartseriesstackedpercentnumberformat_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x01000000;
              break;
            }
            case 208: {
              bitField0_ |= 0x02000000;
              tschchartseriesdefaultseriestype_ = input.readInt32();
              break;
            }
            case 216: {
              bitField0_ |= 0x04000000;
              tschchartseriesdefaultshowerrorbar_ = input.readBool();
              break;
            }
            case 224: {
              bitField0_ |= 0x08000000;
              tschchartseriesdefaultshowerrorbarscatterx_ = input.readBool();
              break;
            }
            case 232: {
              bitField0_ |= 0x10000000;
              tschchartseriesscattershowline_ = input.readBool();
              break;
            }
            case 240: {
              bitField0_ |= 0x20000000;
              tschchartseriesbubbleshownegativedata_ = input.readBool();
              break;
            }
            case 248: {
              bitField0_ |= 0x40000000;
              tschchartseriespieshowserieslabels_ = input.readBool();
              break;
            }
            case 256: {
              bitField0_ |= 0x80000000;
              tschchartseriesareashowsymbol_ = input.readBool();
              break;
            }
            case 264: {
              bitField1_ |= 0x00000001;
              tschchartserieslineshowsymbol_ = input.readBool();
              break;
            }
            case 272: {
              bitField1_ |= 0x00000002;
              tschchartseriesmixedareashowsymbol_ = input.readBool();
              break;
            }
            case 280: {
              bitField1_ |= 0x00000004;
              tschchartseriesmixedlineshowsymbol_ = input.readBool();
              break;
            }
            case 288: {
              bitField1_ |= 0x00000008;
              tschchartseriesscattershowsymbol_ = input.readBool();
              break;
            }
            case 296: {
              bitField1_ |= 0x00000010;
              tschchartseriesdefaultshowtrendline_ = input.readBool();
              break;
            }
            case 304: {
              bitField1_ |= 0x00000020;
              tschchartseriesareashowvaluelabels_ = input.readBool();
              break;
            }
            case 312: {
              bitField1_ |= 0x00000040;
              tschchartseriesbarshowvaluelabels_ = input.readBool();
              break;
            }
            case 320: {
              bitField1_ |= 0x00000080;
              tschchartseriesbubbleshowvaluelabels_ = input.readBool();
              break;
            }
            case 328: {
              bitField1_ |= 0x00000100;
              tschchartseriesdefaultshowvaluelabels_ = input.readBool();
              break;
            }
            case 336: {
              bitField1_ |= 0x00000200;
              tschchartserieslineshowvaluelabels_ = input.readBool();
              break;
            }
            case 344: {
              bitField1_ |= 0x00000400;
              tschchartseriesmixedshowvaluelabels_ = input.readBool();
              break;
            }
            case 352: {
              bitField1_ |= 0x00000800;
              tschchartseriespieshowvaluelabels_ = input.readBool();
              break;
            }
            case 360: {
              bitField1_ |= 0x00001000;
              tschchartseriesscattershowvaluelabels_ = input.readBool();
              break;
            }
            case 368: {
              bitField1_ |= 0x00002000;
              tschchartseriesbubblesizedimension_ = input.readInt32();
              break;
            }
            case 376: {
              bitField1_ |= 0x00004000;
              tschchartseriesareasymboltype_ = input.readInt32();
              break;
            }
            case 384: {
              bitField1_ |= 0x00008000;
              tschchartserieslinesymboltype_ = input.readInt32();
              break;
            }
            case 392: {
              bitField1_ |= 0x00010000;
              tschchartseriesmixedareasymboltype_ = input.readInt32();
              break;
            }
            case 400: {
              bitField1_ |= 0x00020000;
              tschchartseriesmixedlinesymboltype_ = input.readInt32();
              break;
            }
            case 408: {
              bitField1_ |= 0x00040000;
              tschchartseriesscattersymboltype_ = input.readInt32();
              break;
            }
            case 421: {
              bitField1_ |= 0x00080000;
              tschchartseriesdefaulttrendlineequationoffsetx_ = input.readFloat();
              break;
            }
            case 429: {
              bitField1_ |= 0x00100000;
              tschchartseriesdefaulttrendlineequationoffsety_ = input.readFloat();
              break;
            }
            case 434: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField1_ |= 0x00200000;
              tschchartseriesdefaulttrendlinelabelstring_ = bs;
              break;
            }
            case 440: {
              bitField1_ |= 0x00400000;
              tschchartseriesdefaulttrendlineorder_ = input.readInt32();
              break;
            }
            case 448: {
              bitField1_ |= 0x00800000;
              tschchartseriesdefaulttrendlineperiod_ = input.readInt32();
              break;
            }
            case 461: {
              bitField1_ |= 0x01000000;
              tschchartseriesdefaulttrendlinersquaredoffsetx_ = input.readFloat();
              break;
            }
            case 469: {
              bitField1_ |= 0x02000000;
              tschchartseriesdefaulttrendlinersquaredoffsety_ = input.readFloat();
              break;
            }
            case 472: {
              bitField1_ |= 0x04000000;
              tschchartseriesdefaulttrendlineshowequation_ = input.readBool();
              break;
            }
            case 480: {
              bitField1_ |= 0x08000000;
              tschchartseriesdefaulttrendlineshowlabel_ = input.readBool();
              break;
            }
            case 488: {
              bitField1_ |= 0x10000000;
              tschchartseriesdefaulttrendlineshowr2Value_ = input.readBool();
              break;
            }
            case 496: {
              bitField1_ |= 0x20000000;
              tschchartseriesdefaulttrendlinetype_ = input.readInt32();
              break;
            }
            case 509: {
              bitField1_ |= 0x40000000;
              tschchartseriespiewedgeexplosion_ = input.readFloat();
              break;
            }
            case 512: {
              bitField1_ |= 0x80000000;
              tschchartseriesdefaultyaxisordinal_ = input.readInt32();
              break;
            }
            case 520: {
              bitField2_ |= 0x00000001;
              tschchartseriesbubbleshowserieslabels_ = input.readBool();
              break;
            }
            case 528: {
              bitField2_ |= 0x00000002;
              tschchartseriesbubblevaluelabelsaxis_ = input.readInt32();
              break;
            }
            case 536: {
              bitField2_ |= 0x00000004;
              tschchartseriesscattershowserieslabels_ = input.readBool();
              break;
            }
            case 544: {
              bitField2_ |= 0x00000008;
              tschchartseriesscattervaluelabelsaxis_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartSeriesNonStyleArchive_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartSeriesNonStyleArchive_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive.class, org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive.Builder.class);
    }

    private int bitField0_;
    private int bitField1_;
    private int bitField2_;
    public static final int TSCHCHARTSERIESBUBBLEADJUSTMENTSCALE_FIELD_NUMBER = 1;
    private float tschchartseriesbubbleadjustmentscale_;
    /**
     * <code>optional float tschchartseriesbubbleadjustmentscale = 1;</code>
     */
    public boolean hasTschchartseriesbubbleadjustmentscale() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional float tschchartseriesbubbleadjustmentscale = 1;</code>
     */
    public float getTschchartseriesbubbleadjustmentscale() {
      return tschchartseriesbubbleadjustmentscale_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARCUSTOMNEGATIVEDATA_FIELD_NUMBER = 2;
    private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata_;
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 2;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarcustomnegativedata() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 2;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive getTschchartseriesdefaulterrorbarcustomnegativedata() {
      return tschchartseriesdefaulterrorbarcustomnegativedata_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustomnegativedata_;
    }
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 2;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder getTschchartseriesdefaulterrorbarcustomnegativedataOrBuilder() {
      return tschchartseriesdefaulterrorbarcustomnegativedata_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustomnegativedata_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARCUSTOMNEGATIVEDATASCATTERX_FIELD_NUMBER = 3;
    private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx_;
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 3;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarcustomnegativedatascatterx() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 3;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive getTschchartseriesdefaulterrorbarcustomnegativedatascatterx() {
      return tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustomnegativedatascatterx_;
    }
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 3;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder getTschchartseriesdefaulterrorbarcustomnegativedatascatterxOrBuilder() {
      return tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustomnegativedatascatterx_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARCUSTOMPOSITIVEDATA_FIELD_NUMBER = 4;
    private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata_;
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 4;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarcustompositivedata() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 4;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive getTschchartseriesdefaulterrorbarcustompositivedata() {
      return tschchartseriesdefaulterrorbarcustompositivedata_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustompositivedata_;
    }
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 4;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder getTschchartseriesdefaulterrorbarcustompositivedataOrBuilder() {
      return tschchartseriesdefaulterrorbarcustompositivedata_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustompositivedata_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARCUSTOMPOSITIVEDATASCATTERX_FIELD_NUMBER = 5;
    private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx_;
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 5;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarcustompositivedatascatterx() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 5;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive getTschchartseriesdefaulterrorbarcustompositivedatascatterx() {
      return tschchartseriesdefaulterrorbarcustompositivedatascatterx_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustompositivedatascatterx_;
    }
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 5;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder getTschchartseriesdefaulterrorbarcustompositivedatascatterxOrBuilder() {
      return tschchartseriesdefaulterrorbarcustompositivedatascatterx_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustompositivedatascatterx_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARFIXEDVALUE_FIELD_NUMBER = 6;
    private float tschchartseriesdefaulterrorbarfixedvalue_;
    /**
     * <code>optional float tschchartseriesdefaulterrorbarfixedvalue = 6;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarfixedvalue() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float tschchartseriesdefaulterrorbarfixedvalue = 6;</code>
     */
    public float getTschchartseriesdefaulterrorbarfixedvalue() {
      return tschchartseriesdefaulterrorbarfixedvalue_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARFIXEDVALUESCATTERX_FIELD_NUMBER = 7;
    private float tschchartseriesdefaulterrorbarfixedvaluescatterx_;
    /**
     * <code>optional float tschchartseriesdefaulterrorbarfixedvaluescatterx = 7;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarfixedvaluescatterx() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float tschchartseriesdefaulterrorbarfixedvaluescatterx = 7;</code>
     */
    public float getTschchartseriesdefaulterrorbarfixedvaluescatterx() {
      return tschchartseriesdefaulterrorbarfixedvaluescatterx_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARPERCENTVALUE_FIELD_NUMBER = 8;
    private float tschchartseriesdefaulterrorbarpercentvalue_;
    /**
     * <code>optional float tschchartseriesdefaulterrorbarpercentvalue = 8;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarpercentvalue() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float tschchartseriesdefaulterrorbarpercentvalue = 8;</code>
     */
    public float getTschchartseriesdefaulterrorbarpercentvalue() {
      return tschchartseriesdefaulterrorbarpercentvalue_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARPERCENTVALUESCATTERX_FIELD_NUMBER = 9;
    private float tschchartseriesdefaulterrorbarpercentvaluescatterx_;
    /**
     * <code>optional float tschchartseriesdefaulterrorbarpercentvaluescatterx = 9;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarpercentvaluescatterx() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float tschchartseriesdefaulterrorbarpercentvaluescatterx = 9;</code>
     */
    public float getTschchartseriesdefaulterrorbarpercentvaluescatterx() {
      return tschchartseriesdefaulterrorbarpercentvaluescatterx_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARSETTING_FIELD_NUMBER = 10;
    private int tschchartseriesdefaulterrorbarsetting_;
    /**
     * <code>optional int32 tschchartseriesdefaulterrorbarsetting = 10;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarsetting() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 tschchartseriesdefaulterrorbarsetting = 10;</code>
     */
    public int getTschchartseriesdefaulterrorbarsetting() {
      return tschchartseriesdefaulterrorbarsetting_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARSETTINGSCATTERX_FIELD_NUMBER = 11;
    private int tschchartseriesdefaulterrorbarsettingscatterx_;
    /**
     * <code>optional int32 tschchartseriesdefaulterrorbarsettingscatterx = 11;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarsettingscatterx() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 tschchartseriesdefaulterrorbarsettingscatterx = 11;</code>
     */
    public int getTschchartseriesdefaulterrorbarsettingscatterx() {
      return tschchartseriesdefaulterrorbarsettingscatterx_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARSTDDEVVALUE_FIELD_NUMBER = 12;
    private float tschchartseriesdefaulterrorbarstddevvalue_;
    /**
     * <code>optional float tschchartseriesdefaulterrorbarstddevvalue = 12;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarstddevvalue() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional float tschchartseriesdefaulterrorbarstddevvalue = 12;</code>
     */
    public float getTschchartseriesdefaulterrorbarstddevvalue() {
      return tschchartseriesdefaulterrorbarstddevvalue_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARSTDDEVVALUESCATTERX_FIELD_NUMBER = 13;
    private float tschchartseriesdefaulterrorbarstddevvaluescatterx_;
    /**
     * <code>optional float tschchartseriesdefaulterrorbarstddevvaluescatterx = 13;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarstddevvaluescatterx() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional float tschchartseriesdefaulterrorbarstddevvaluescatterx = 13;</code>
     */
    public float getTschchartseriesdefaulterrorbarstddevvaluescatterx() {
      return tschchartseriesdefaulterrorbarstddevvaluescatterx_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARTYPE_FIELD_NUMBER = 14;
    private int tschchartseriesdefaulterrorbartype_;
    /**
     * <code>optional int32 tschchartseriesdefaulterrorbartype = 14;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbartype() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 tschchartseriesdefaulterrorbartype = 14;</code>
     */
    public int getTschchartseriesdefaulterrorbartype() {
      return tschchartseriesdefaulterrorbartype_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARTYPESCATTERX_FIELD_NUMBER = 15;
    private int tschchartseriesdefaulterrorbartypescatterx_;
    /**
     * <code>optional int32 tschchartseriesdefaulterrorbartypescatterx = 15;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbartypescatterx() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 tschchartseriesdefaulterrorbartypescatterx = 15;</code>
     */
    public int getTschchartseriesdefaulterrorbartypescatterx() {
      return tschchartseriesdefaulterrorbartypescatterx_;
    }

    public static final int TSCHCHARTSERIESPIELABELEXPLOSION_FIELD_NUMBER = 16;
    private float tschchartseriespielabelexplosion_;
    /**
     * <code>optional float tschchartseriespielabelexplosion = 16;</code>
     */
    public boolean hasTschchartseriespielabelexplosion() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional float tschchartseriespielabelexplosion = 16;</code>
     */
    public float getTschchartseriespielabelexplosion() {
      return tschchartseriespielabelexplosion_;
    }

    public static final int TSCHCHARTSERIESBUBBLELINETYPE_FIELD_NUMBER = 17;
    private int tschchartseriesbubblelinetype_;
    /**
     * <code>optional int32 tschchartseriesbubblelinetype = 17;</code>
     */
    public boolean hasTschchartseriesbubblelinetype() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 tschchartseriesbubblelinetype = 17;</code>
     */
    public int getTschchartseriesbubblelinetype() {
      return tschchartseriesbubblelinetype_;
    }

    public static final int TSCHCHARTSERIESLINELINETYPE_FIELD_NUMBER = 18;
    private int tschchartserieslinelinetype_;
    /**
     * <code>optional int32 tschchartserieslinelinetype = 18;</code>
     */
    public boolean hasTschchartserieslinelinetype() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 tschchartserieslinelinetype = 18;</code>
     */
    public int getTschchartserieslinelinetype() {
      return tschchartserieslinelinetype_;
    }

    public static final int TSCHCHARTSERIESMIXEDLINELINETYPE_FIELD_NUMBER = 19;
    private int tschchartseriesmixedlinelinetype_;
    /**
     * <code>optional int32 tschchartseriesmixedlinelinetype = 19;</code>
     */
    public boolean hasTschchartseriesmixedlinelinetype() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 tschchartseriesmixedlinelinetype = 19;</code>
     */
    public int getTschchartseriesmixedlinelinetype() {
      return tschchartseriesmixedlinelinetype_;
    }

    public static final int TSCHCHARTSERIESSCATTERLINETYPE_FIELD_NUMBER = 20;
    private int tschchartseriesscatterlinetype_;
    /**
     * <code>optional int32 tschchartseriesscatterlinetype = 20;</code>
     */
    public boolean hasTschchartseriesscatterlinetype() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 tschchartseriesscatterlinetype = 20;</code>
     */
    public int getTschchartseriesscatterlinetype() {
      return tschchartseriesscatterlinetype_;
    }

    public static final int TSCHCHARTSERIESDEFAULTNUMBERFORMAT_FIELD_NUMBER = 21;
    private org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive tschchartseriesdefaultnumberformat_;
    /**
     * <code>optional .TSK.FormatStructArchive tschchartseriesdefaultnumberformat = 21;</code>
     */
    public boolean hasTschchartseriesdefaultnumberformat() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional .TSK.FormatStructArchive tschchartseriesdefaultnumberformat = 21;</code>
     */
    public org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive getTschchartseriesdefaultnumberformat() {
      return tschchartseriesdefaultnumberformat_ == null ? org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.getDefaultInstance() : tschchartseriesdefaultnumberformat_;
    }
    /**
     * <code>optional .TSK.FormatStructArchive tschchartseriesdefaultnumberformat = 21;</code>
     */
    public org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchiveOrBuilder getTschchartseriesdefaultnumberformatOrBuilder() {
      return tschchartseriesdefaultnumberformat_ == null ? org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.getDefaultInstance() : tschchartseriesdefaultnumberformat_;
    }

    public static final int TSCHCHARTSERIESPIENUMBERFORMAT_FIELD_NUMBER = 22;
    private org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive tschchartseriespienumberformat_;
    /**
     * <code>optional .TSK.FormatStructArchive tschchartseriespienumberformat = 22;</code>
     */
    public boolean hasTschchartseriespienumberformat() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional .TSK.FormatStructArchive tschchartseriespienumberformat = 22;</code>
     */
    public org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive getTschchartseriespienumberformat() {
      return tschchartseriespienumberformat_ == null ? org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.getDefaultInstance() : tschchartseriespienumberformat_;
    }
    /**
     * <code>optional .TSK.FormatStructArchive tschchartseriespienumberformat = 22;</code>
     */
    public org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchiveOrBuilder getTschchartseriespienumberformatOrBuilder() {
      return tschchartseriespienumberformat_ == null ? org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.getDefaultInstance() : tschchartseriespienumberformat_;
    }

    public static final int TSCHCHARTSERIESDEFAULTNUMBERFORMATTYPE_FIELD_NUMBER = 23;
    private int tschchartseriesdefaultnumberformattype_;
    /**
     * <code>optional int32 tschchartseriesdefaultnumberformattype = 23;</code>
     */
    public boolean hasTschchartseriesdefaultnumberformattype() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int32 tschchartseriesdefaultnumberformattype = 23;</code>
     */
    public int getTschchartseriesdefaultnumberformattype() {
      return tschchartseriesdefaultnumberformattype_;
    }

    public static final int TSCHCHARTSERIESPIENUMBERFORMATTYPE_FIELD_NUMBER = 24;
    private int tschchartseriespienumberformattype_;
    /**
     * <code>optional int32 tschchartseriespienumberformattype = 24;</code>
     */
    public boolean hasTschchartseriespienumberformattype() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int32 tschchartseriespienumberformattype = 24;</code>
     */
    public int getTschchartseriespienumberformattype() {
      return tschchartseriespienumberformattype_;
    }

    public static final int TSCHCHARTSERIESSTACKEDPERCENTNUMBERFORMAT_FIELD_NUMBER = 25;
    private org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive tschchartseriesstackedpercentnumberformat_;
    /**
     * <code>optional .TSK.FormatStructArchive tschchartseriesstackedpercentnumberformat = 25;</code>
     */
    public boolean hasTschchartseriesstackedpercentnumberformat() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional .TSK.FormatStructArchive tschchartseriesstackedpercentnumberformat = 25;</code>
     */
    public org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive getTschchartseriesstackedpercentnumberformat() {
      return tschchartseriesstackedpercentnumberformat_ == null ? org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.getDefaultInstance() : tschchartseriesstackedpercentnumberformat_;
    }
    /**
     * <code>optional .TSK.FormatStructArchive tschchartseriesstackedpercentnumberformat = 25;</code>
     */
    public org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchiveOrBuilder getTschchartseriesstackedpercentnumberformatOrBuilder() {
      return tschchartseriesstackedpercentnumberformat_ == null ? org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.getDefaultInstance() : tschchartseriesstackedpercentnumberformat_;
    }

    public static final int TSCHCHARTSERIESDEFAULTSERIESTYPE_FIELD_NUMBER = 26;
    private int tschchartseriesdefaultseriestype_;
    /**
     * <code>optional int32 tschchartseriesdefaultseriestype = 26;</code>
     */
    public boolean hasTschchartseriesdefaultseriestype() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int32 tschchartseriesdefaultseriestype = 26;</code>
     */
    public int getTschchartseriesdefaultseriestype() {
      return tschchartseriesdefaultseriestype_;
    }

    public static final int TSCHCHARTSERIESDEFAULTSHOWERRORBAR_FIELD_NUMBER = 27;
    private boolean tschchartseriesdefaultshowerrorbar_;
    /**
     * <code>optional bool tschchartseriesdefaultshowerrorbar = 27;</code>
     */
    public boolean hasTschchartseriesdefaultshowerrorbar() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional bool tschchartseriesdefaultshowerrorbar = 27;</code>
     */
    public boolean getTschchartseriesdefaultshowerrorbar() {
      return tschchartseriesdefaultshowerrorbar_;
    }

    public static final int TSCHCHARTSERIESDEFAULTSHOWERRORBARSCATTERX_FIELD_NUMBER = 28;
    private boolean tschchartseriesdefaultshowerrorbarscatterx_;
    /**
     * <code>optional bool tschchartseriesdefaultshowerrorbarscatterx = 28;</code>
     */
    public boolean hasTschchartseriesdefaultshowerrorbarscatterx() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional bool tschchartseriesdefaultshowerrorbarscatterx = 28;</code>
     */
    public boolean getTschchartseriesdefaultshowerrorbarscatterx() {
      return tschchartseriesdefaultshowerrorbarscatterx_;
    }

    public static final int TSCHCHARTSERIESSCATTERSHOWLINE_FIELD_NUMBER = 29;
    private boolean tschchartseriesscattershowline_;
    /**
     * <code>optional bool tschchartseriesscattershowline = 29;</code>
     */
    public boolean hasTschchartseriesscattershowline() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional bool tschchartseriesscattershowline = 29;</code>
     */
    public boolean getTschchartseriesscattershowline() {
      return tschchartseriesscattershowline_;
    }

    public static final int TSCHCHARTSERIESBUBBLESHOWNEGATIVEDATA_FIELD_NUMBER = 30;
    private boolean tschchartseriesbubbleshownegativedata_;
    /**
     * <code>optional bool tschchartseriesbubbleshownegativedata = 30;</code>
     */
    public boolean hasTschchartseriesbubbleshownegativedata() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional bool tschchartseriesbubbleshownegativedata = 30;</code>
     */
    public boolean getTschchartseriesbubbleshownegativedata() {
      return tschchartseriesbubbleshownegativedata_;
    }

    public static final int TSCHCHARTSERIESPIESHOWSERIESLABELS_FIELD_NUMBER = 31;
    private boolean tschchartseriespieshowserieslabels_;
    /**
     * <code>optional bool tschchartseriespieshowserieslabels = 31;</code>
     */
    public boolean hasTschchartseriespieshowserieslabels() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional bool tschchartseriespieshowserieslabels = 31;</code>
     */
    public boolean getTschchartseriespieshowserieslabels() {
      return tschchartseriespieshowserieslabels_;
    }

    public static final int TSCHCHARTSERIESAREASHOWSYMBOL_FIELD_NUMBER = 32;
    private boolean tschchartseriesareashowsymbol_;
    /**
     * <code>optional bool tschchartseriesareashowsymbol = 32;</code>
     */
    public boolean hasTschchartseriesareashowsymbol() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional bool tschchartseriesareashowsymbol = 32;</code>
     */
    public boolean getTschchartseriesareashowsymbol() {
      return tschchartseriesareashowsymbol_;
    }

    public static final int TSCHCHARTSERIESLINESHOWSYMBOL_FIELD_NUMBER = 33;
    private boolean tschchartserieslineshowsymbol_;
    /**
     * <code>optional bool tschchartserieslineshowsymbol = 33;</code>
     */
    public boolean hasTschchartserieslineshowsymbol() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool tschchartserieslineshowsymbol = 33;</code>
     */
    public boolean getTschchartserieslineshowsymbol() {
      return tschchartserieslineshowsymbol_;
    }

    public static final int TSCHCHARTSERIESMIXEDAREASHOWSYMBOL_FIELD_NUMBER = 34;
    private boolean tschchartseriesmixedareashowsymbol_;
    /**
     * <code>optional bool tschchartseriesmixedareashowsymbol = 34;</code>
     */
    public boolean hasTschchartseriesmixedareashowsymbol() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool tschchartseriesmixedareashowsymbol = 34;</code>
     */
    public boolean getTschchartseriesmixedareashowsymbol() {
      return tschchartseriesmixedareashowsymbol_;
    }

    public static final int TSCHCHARTSERIESMIXEDLINESHOWSYMBOL_FIELD_NUMBER = 35;
    private boolean tschchartseriesmixedlineshowsymbol_;
    /**
     * <code>optional bool tschchartseriesmixedlineshowsymbol = 35;</code>
     */
    public boolean hasTschchartseriesmixedlineshowsymbol() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool tschchartseriesmixedlineshowsymbol = 35;</code>
     */
    public boolean getTschchartseriesmixedlineshowsymbol() {
      return tschchartseriesmixedlineshowsymbol_;
    }

    public static final int TSCHCHARTSERIESSCATTERSHOWSYMBOL_FIELD_NUMBER = 36;
    private boolean tschchartseriesscattershowsymbol_;
    /**
     * <code>optional bool tschchartseriesscattershowsymbol = 36;</code>
     */
    public boolean hasTschchartseriesscattershowsymbol() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool tschchartseriesscattershowsymbol = 36;</code>
     */
    public boolean getTschchartseriesscattershowsymbol() {
      return tschchartseriesscattershowsymbol_;
    }

    public static final int TSCHCHARTSERIESDEFAULTSHOWTRENDLINE_FIELD_NUMBER = 37;
    private boolean tschchartseriesdefaultshowtrendline_;
    /**
     * <code>optional bool tschchartseriesdefaultshowtrendline = 37;</code>
     */
    public boolean hasTschchartseriesdefaultshowtrendline() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool tschchartseriesdefaultshowtrendline = 37;</code>
     */
    public boolean getTschchartseriesdefaultshowtrendline() {
      return tschchartseriesdefaultshowtrendline_;
    }

    public static final int TSCHCHARTSERIESAREASHOWVALUELABELS_FIELD_NUMBER = 38;
    private boolean tschchartseriesareashowvaluelabels_;
    /**
     * <code>optional bool tschchartseriesareashowvaluelabels = 38;</code>
     */
    public boolean hasTschchartseriesareashowvaluelabels() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool tschchartseriesareashowvaluelabels = 38;</code>
     */
    public boolean getTschchartseriesareashowvaluelabels() {
      return tschchartseriesareashowvaluelabels_;
    }

    public static final int TSCHCHARTSERIESBARSHOWVALUELABELS_FIELD_NUMBER = 39;
    private boolean tschchartseriesbarshowvaluelabels_;
    /**
     * <code>optional bool tschchartseriesbarshowvaluelabels = 39;</code>
     */
    public boolean hasTschchartseriesbarshowvaluelabels() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool tschchartseriesbarshowvaluelabels = 39;</code>
     */
    public boolean getTschchartseriesbarshowvaluelabels() {
      return tschchartseriesbarshowvaluelabels_;
    }

    public static final int TSCHCHARTSERIESBUBBLESHOWVALUELABELS_FIELD_NUMBER = 40;
    private boolean tschchartseriesbubbleshowvaluelabels_;
    /**
     * <code>optional bool tschchartseriesbubbleshowvaluelabels = 40;</code>
     */
    public boolean hasTschchartseriesbubbleshowvaluelabels() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool tschchartseriesbubbleshowvaluelabels = 40;</code>
     */
    public boolean getTschchartseriesbubbleshowvaluelabels() {
      return tschchartseriesbubbleshowvaluelabels_;
    }

    public static final int TSCHCHARTSERIESDEFAULTSHOWVALUELABELS_FIELD_NUMBER = 41;
    private boolean tschchartseriesdefaultshowvaluelabels_;
    /**
     * <code>optional bool tschchartseriesdefaultshowvaluelabels = 41;</code>
     */
    public boolean hasTschchartseriesdefaultshowvaluelabels() {
      return ((bitField1_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool tschchartseriesdefaultshowvaluelabels = 41;</code>
     */
    public boolean getTschchartseriesdefaultshowvaluelabels() {
      return tschchartseriesdefaultshowvaluelabels_;
    }

    public static final int TSCHCHARTSERIESLINESHOWVALUELABELS_FIELD_NUMBER = 42;
    private boolean tschchartserieslineshowvaluelabels_;
    /**
     * <code>optional bool tschchartserieslineshowvaluelabels = 42;</code>
     */
    public boolean hasTschchartserieslineshowvaluelabels() {
      return ((bitField1_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool tschchartserieslineshowvaluelabels = 42;</code>
     */
    public boolean getTschchartserieslineshowvaluelabels() {
      return tschchartserieslineshowvaluelabels_;
    }

    public static final int TSCHCHARTSERIESMIXEDSHOWVALUELABELS_FIELD_NUMBER = 43;
    private boolean tschchartseriesmixedshowvaluelabels_;
    /**
     * <code>optional bool tschchartseriesmixedshowvaluelabels = 43;</code>
     */
    public boolean hasTschchartseriesmixedshowvaluelabels() {
      return ((bitField1_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool tschchartseriesmixedshowvaluelabels = 43;</code>
     */
    public boolean getTschchartseriesmixedshowvaluelabels() {
      return tschchartseriesmixedshowvaluelabels_;
    }

    public static final int TSCHCHARTSERIESPIESHOWVALUELABELS_FIELD_NUMBER = 44;
    private boolean tschchartseriespieshowvaluelabels_;
    /**
     * <code>optional bool tschchartseriespieshowvaluelabels = 44;</code>
     */
    public boolean hasTschchartseriespieshowvaluelabels() {
      return ((bitField1_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool tschchartseriespieshowvaluelabels = 44;</code>
     */
    public boolean getTschchartseriespieshowvaluelabels() {
      return tschchartseriespieshowvaluelabels_;
    }

    public static final int TSCHCHARTSERIESSCATTERSHOWVALUELABELS_FIELD_NUMBER = 45;
    private boolean tschchartseriesscattershowvaluelabels_;
    /**
     * <code>optional bool tschchartseriesscattershowvaluelabels = 45;</code>
     */
    public boolean hasTschchartseriesscattershowvaluelabels() {
      return ((bitField1_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional bool tschchartseriesscattershowvaluelabels = 45;</code>
     */
    public boolean getTschchartseriesscattershowvaluelabels() {
      return tschchartseriesscattershowvaluelabels_;
    }

    public static final int TSCHCHARTSERIESBUBBLESIZEDIMENSION_FIELD_NUMBER = 46;
    private int tschchartseriesbubblesizedimension_;
    /**
     * <code>optional int32 tschchartseriesbubblesizedimension = 46;</code>
     */
    public boolean hasTschchartseriesbubblesizedimension() {
      return ((bitField1_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 tschchartseriesbubblesizedimension = 46;</code>
     */
    public int getTschchartseriesbubblesizedimension() {
      return tschchartseriesbubblesizedimension_;
    }

    public static final int TSCHCHARTSERIESAREASYMBOLTYPE_FIELD_NUMBER = 47;
    private int tschchartseriesareasymboltype_;
    /**
     * <code>optional int32 tschchartseriesareasymboltype = 47;</code>
     */
    public boolean hasTschchartseriesareasymboltype() {
      return ((bitField1_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 tschchartseriesareasymboltype = 47;</code>
     */
    public int getTschchartseriesareasymboltype() {
      return tschchartseriesareasymboltype_;
    }

    public static final int TSCHCHARTSERIESLINESYMBOLTYPE_FIELD_NUMBER = 48;
    private int tschchartserieslinesymboltype_;
    /**
     * <code>optional int32 tschchartserieslinesymboltype = 48;</code>
     */
    public boolean hasTschchartserieslinesymboltype() {
      return ((bitField1_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 tschchartserieslinesymboltype = 48;</code>
     */
    public int getTschchartserieslinesymboltype() {
      return tschchartserieslinesymboltype_;
    }

    public static final int TSCHCHARTSERIESMIXEDAREASYMBOLTYPE_FIELD_NUMBER = 49;
    private int tschchartseriesmixedareasymboltype_;
    /**
     * <code>optional int32 tschchartseriesmixedareasymboltype = 49;</code>
     */
    public boolean hasTschchartseriesmixedareasymboltype() {
      return ((bitField1_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 tschchartseriesmixedareasymboltype = 49;</code>
     */
    public int getTschchartseriesmixedareasymboltype() {
      return tschchartseriesmixedareasymboltype_;
    }

    public static final int TSCHCHARTSERIESMIXEDLINESYMBOLTYPE_FIELD_NUMBER = 50;
    private int tschchartseriesmixedlinesymboltype_;
    /**
     * <code>optional int32 tschchartseriesmixedlinesymboltype = 50;</code>
     */
    public boolean hasTschchartseriesmixedlinesymboltype() {
      return ((bitField1_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 tschchartseriesmixedlinesymboltype = 50;</code>
     */
    public int getTschchartseriesmixedlinesymboltype() {
      return tschchartseriesmixedlinesymboltype_;
    }

    public static final int TSCHCHARTSERIESSCATTERSYMBOLTYPE_FIELD_NUMBER = 51;
    private int tschchartseriesscattersymboltype_;
    /**
     * <code>optional int32 tschchartseriesscattersymboltype = 51;</code>
     */
    public boolean hasTschchartseriesscattersymboltype() {
      return ((bitField1_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 tschchartseriesscattersymboltype = 51;</code>
     */
    public int getTschchartseriesscattersymboltype() {
      return tschchartseriesscattersymboltype_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINEEQUATIONOFFSETX_FIELD_NUMBER = 52;
    private float tschchartseriesdefaulttrendlineequationoffsetx_;
    /**
     * <code>optional float tschchartseriesdefaulttrendlineequationoffsetx = 52;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlineequationoffsetx() {
      return ((bitField1_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional float tschchartseriesdefaulttrendlineequationoffsetx = 52;</code>
     */
    public float getTschchartseriesdefaulttrendlineequationoffsetx() {
      return tschchartseriesdefaulttrendlineequationoffsetx_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINEEQUATIONOFFSETY_FIELD_NUMBER = 53;
    private float tschchartseriesdefaulttrendlineequationoffsety_;
    /**
     * <code>optional float tschchartseriesdefaulttrendlineequationoffsety = 53;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlineequationoffsety() {
      return ((bitField1_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional float tschchartseriesdefaulttrendlineequationoffsety = 53;</code>
     */
    public float getTschchartseriesdefaulttrendlineequationoffsety() {
      return tschchartseriesdefaulttrendlineequationoffsety_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINELABELSTRING_FIELD_NUMBER = 54;
    private volatile java.lang.Object tschchartseriesdefaulttrendlinelabelstring_;
    /**
     * <code>optional string tschchartseriesdefaulttrendlinelabelstring = 54;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlinelabelstring() {
      return ((bitField1_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional string tschchartseriesdefaulttrendlinelabelstring = 54;</code>
     */
    public java.lang.String getTschchartseriesdefaulttrendlinelabelstring() {
      java.lang.Object ref = tschchartseriesdefaulttrendlinelabelstring_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tschchartseriesdefaulttrendlinelabelstring_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string tschchartseriesdefaulttrendlinelabelstring = 54;</code>
     */
    public com.google.protobuf.ByteString
        getTschchartseriesdefaulttrendlinelabelstringBytes() {
      java.lang.Object ref = tschchartseriesdefaulttrendlinelabelstring_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tschchartseriesdefaulttrendlinelabelstring_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINEORDER_FIELD_NUMBER = 55;
    private int tschchartseriesdefaulttrendlineorder_;
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlineorder = 55;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlineorder() {
      return ((bitField1_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlineorder = 55;</code>
     */
    public int getTschchartseriesdefaulttrendlineorder() {
      return tschchartseriesdefaulttrendlineorder_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINEPERIOD_FIELD_NUMBER = 56;
    private int tschchartseriesdefaulttrendlineperiod_;
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlineperiod = 56;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlineperiod() {
      return ((bitField1_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlineperiod = 56;</code>
     */
    public int getTschchartseriesdefaulttrendlineperiod() {
      return tschchartseriesdefaulttrendlineperiod_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINERSQUAREDOFFSETX_FIELD_NUMBER = 57;
    private float tschchartseriesdefaulttrendlinersquaredoffsetx_;
    /**
     * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsetx = 57;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlinersquaredoffsetx() {
      return ((bitField1_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsetx = 57;</code>
     */
    public float getTschchartseriesdefaulttrendlinersquaredoffsetx() {
      return tschchartseriesdefaulttrendlinersquaredoffsetx_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINERSQUAREDOFFSETY_FIELD_NUMBER = 58;
    private float tschchartseriesdefaulttrendlinersquaredoffsety_;
    /**
     * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsety = 58;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlinersquaredoffsety() {
      return ((bitField1_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsety = 58;</code>
     */
    public float getTschchartseriesdefaulttrendlinersquaredoffsety() {
      return tschchartseriesdefaulttrendlinersquaredoffsety_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINESHOWEQUATION_FIELD_NUMBER = 59;
    private boolean tschchartseriesdefaulttrendlineshowequation_;
    /**
     * <code>optional bool tschchartseriesdefaulttrendlineshowequation = 59;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlineshowequation() {
      return ((bitField1_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional bool tschchartseriesdefaulttrendlineshowequation = 59;</code>
     */
    public boolean getTschchartseriesdefaulttrendlineshowequation() {
      return tschchartseriesdefaulttrendlineshowequation_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINESHOWLABEL_FIELD_NUMBER = 60;
    private boolean tschchartseriesdefaulttrendlineshowlabel_;
    /**
     * <code>optional bool tschchartseriesdefaulttrendlineshowlabel = 60;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlineshowlabel() {
      return ((bitField1_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional bool tschchartseriesdefaulttrendlineshowlabel = 60;</code>
     */
    public boolean getTschchartseriesdefaulttrendlineshowlabel() {
      return tschchartseriesdefaulttrendlineshowlabel_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINESHOWR2VALUE_FIELD_NUMBER = 61;
    private boolean tschchartseriesdefaulttrendlineshowr2Value_;
    /**
     * <code>optional bool tschchartseriesdefaulttrendlineshowr2value = 61;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlineshowr2Value() {
      return ((bitField1_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional bool tschchartseriesdefaulttrendlineshowr2value = 61;</code>
     */
    public boolean getTschchartseriesdefaulttrendlineshowr2Value() {
      return tschchartseriesdefaulttrendlineshowr2Value_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINETYPE_FIELD_NUMBER = 62;
    private int tschchartseriesdefaulttrendlinetype_;
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlinetype = 62;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlinetype() {
      return ((bitField1_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlinetype = 62;</code>
     */
    public int getTschchartseriesdefaulttrendlinetype() {
      return tschchartseriesdefaulttrendlinetype_;
    }

    public static final int TSCHCHARTSERIESPIEWEDGEEXPLOSION_FIELD_NUMBER = 63;
    private float tschchartseriespiewedgeexplosion_;
    /**
     * <code>optional float tschchartseriespiewedgeexplosion = 63;</code>
     */
    public boolean hasTschchartseriespiewedgeexplosion() {
      return ((bitField1_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional float tschchartseriespiewedgeexplosion = 63;</code>
     */
    public float getTschchartseriespiewedgeexplosion() {
      return tschchartseriespiewedgeexplosion_;
    }

    public static final int TSCHCHARTSERIESDEFAULTYAXISORDINAL_FIELD_NUMBER = 64;
    private int tschchartseriesdefaultyaxisordinal_;
    /**
     * <code>optional int32 tschchartseriesdefaultyaxisordinal = 64;</code>
     */
    public boolean hasTschchartseriesdefaultyaxisordinal() {
      return ((bitField1_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional int32 tschchartseriesdefaultyaxisordinal = 64;</code>
     */
    public int getTschchartseriesdefaultyaxisordinal() {
      return tschchartseriesdefaultyaxisordinal_;
    }

    public static final int TSCHCHARTSERIESBUBBLESHOWSERIESLABELS_FIELD_NUMBER = 65;
    private boolean tschchartseriesbubbleshowserieslabels_;
    /**
     * <code>optional bool tschchartseriesbubbleshowserieslabels = 65;</code>
     */
    public boolean hasTschchartseriesbubbleshowserieslabels() {
      return ((bitField2_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool tschchartseriesbubbleshowserieslabels = 65;</code>
     */
    public boolean getTschchartseriesbubbleshowserieslabels() {
      return tschchartseriesbubbleshowserieslabels_;
    }

    public static final int TSCHCHARTSERIESBUBBLEVALUELABELSAXIS_FIELD_NUMBER = 66;
    private int tschchartseriesbubblevaluelabelsaxis_;
    /**
     * <code>optional int32 tschchartseriesbubblevaluelabelsaxis = 66;</code>
     */
    public boolean hasTschchartseriesbubblevaluelabelsaxis() {
      return ((bitField2_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 tschchartseriesbubblevaluelabelsaxis = 66;</code>
     */
    public int getTschchartseriesbubblevaluelabelsaxis() {
      return tschchartseriesbubblevaluelabelsaxis_;
    }

    public static final int TSCHCHARTSERIESSCATTERSHOWSERIESLABELS_FIELD_NUMBER = 67;
    private boolean tschchartseriesscattershowserieslabels_;
    /**
     * <code>optional bool tschchartseriesscattershowserieslabels = 67;</code>
     */
    public boolean hasTschchartseriesscattershowserieslabels() {
      return ((bitField2_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool tschchartseriesscattershowserieslabels = 67;</code>
     */
    public boolean getTschchartseriesscattershowserieslabels() {
      return tschchartseriesscattershowserieslabels_;
    }

    public static final int TSCHCHARTSERIESSCATTERVALUELABELSAXIS_FIELD_NUMBER = 68;
    private int tschchartseriesscattervaluelabelsaxis_;
    /**
     * <code>optional int32 tschchartseriesscattervaluelabelsaxis = 68;</code>
     */
    public boolean hasTschchartseriesscattervaluelabelsaxis() {
      return ((bitField2_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 tschchartseriesscattervaluelabelsaxis = 68;</code>
     */
    public int getTschchartseriesscattervaluelabelsaxis() {
      return tschchartseriesscattervaluelabelsaxis_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasTschchartseriesdefaultnumberformat()) {
        if (!getTschchartseriesdefaultnumberformat().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriespienumberformat()) {
        if (!getTschchartseriespienumberformat().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesstackedpercentnumberformat()) {
        if (!getTschchartseriesstackedpercentnumberformat().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, tschchartseriesbubbleadjustmentscale_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getTschchartseriesdefaulterrorbarcustomnegativedata());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getTschchartseriesdefaulterrorbarcustomnegativedatascatterx());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getTschchartseriesdefaulterrorbarcustompositivedata());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, getTschchartseriesdefaulterrorbarcustompositivedatascatterx());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, tschchartseriesdefaulterrorbarfixedvalue_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, tschchartseriesdefaulterrorbarfixedvaluescatterx_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, tschchartseriesdefaulterrorbarpercentvalue_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, tschchartseriesdefaulterrorbarpercentvaluescatterx_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, tschchartseriesdefaulterrorbarsetting_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, tschchartseriesdefaulterrorbarsettingscatterx_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(12, tschchartseriesdefaulterrorbarstddevvalue_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeFloat(13, tschchartseriesdefaulterrorbarstddevvaluescatterx_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, tschchartseriesdefaulterrorbartype_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, tschchartseriesdefaulterrorbartypescatterx_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeFloat(16, tschchartseriespielabelexplosion_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, tschchartseriesbubblelinetype_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, tschchartserieslinelinetype_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(19, tschchartseriesmixedlinelinetype_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(20, tschchartseriesscatterlinetype_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeMessage(21, getTschchartseriesdefaultnumberformat());
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeMessage(22, getTschchartseriespienumberformat());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(23, tschchartseriesdefaultnumberformattype_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(24, tschchartseriespienumberformattype_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeMessage(25, getTschchartseriesstackedpercentnumberformat());
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(26, tschchartseriesdefaultseriestype_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeBool(27, tschchartseriesdefaultshowerrorbar_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeBool(28, tschchartseriesdefaultshowerrorbarscatterx_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeBool(29, tschchartseriesscattershowline_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeBool(30, tschchartseriesbubbleshownegativedata_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeBool(31, tschchartseriespieshowserieslabels_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeBool(32, tschchartseriesareashowsymbol_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeBool(33, tschchartserieslineshowsymbol_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeBool(34, tschchartseriesmixedareashowsymbol_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeBool(35, tschchartseriesmixedlineshowsymbol_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeBool(36, tschchartseriesscattershowsymbol_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeBool(37, tschchartseriesdefaultshowtrendline_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeBool(38, tschchartseriesareashowvaluelabels_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeBool(39, tschchartseriesbarshowvaluelabels_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeBool(40, tschchartseriesbubbleshowvaluelabels_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        output.writeBool(41, tschchartseriesdefaultshowvaluelabels_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        output.writeBool(42, tschchartserieslineshowvaluelabels_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        output.writeBool(43, tschchartseriesmixedshowvaluelabels_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        output.writeBool(44, tschchartseriespieshowvaluelabels_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        output.writeBool(45, tschchartseriesscattershowvaluelabels_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(46, tschchartseriesbubblesizedimension_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(47, tschchartseriesareasymboltype_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(48, tschchartserieslinesymboltype_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(49, tschchartseriesmixedareasymboltype_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(50, tschchartseriesmixedlinesymboltype_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(51, tschchartseriesscattersymboltype_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        output.writeFloat(52, tschchartseriesdefaulttrendlineequationoffsetx_);
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        output.writeFloat(53, tschchartseriesdefaulttrendlineequationoffsety_);
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 54, tschchartseriesdefaulttrendlinelabelstring_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(55, tschchartseriesdefaulttrendlineorder_);
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(56, tschchartseriesdefaulttrendlineperiod_);
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        output.writeFloat(57, tschchartseriesdefaulttrendlinersquaredoffsetx_);
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        output.writeFloat(58, tschchartseriesdefaulttrendlinersquaredoffsety_);
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        output.writeBool(59, tschchartseriesdefaulttrendlineshowequation_);
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        output.writeBool(60, tschchartseriesdefaulttrendlineshowlabel_);
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        output.writeBool(61, tschchartseriesdefaulttrendlineshowr2Value_);
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        output.writeInt32(62, tschchartseriesdefaulttrendlinetype_);
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        output.writeFloat(63, tschchartseriespiewedgeexplosion_);
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        output.writeInt32(64, tschchartseriesdefaultyaxisordinal_);
      }
      if (((bitField2_ & 0x00000001) == 0x00000001)) {
        output.writeBool(65, tschchartseriesbubbleshowserieslabels_);
      }
      if (((bitField2_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(66, tschchartseriesbubblevaluelabelsaxis_);
      }
      if (((bitField2_ & 0x00000004) == 0x00000004)) {
        output.writeBool(67, tschchartseriesscattershowserieslabels_);
      }
      if (((bitField2_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(68, tschchartseriesscattervaluelabelsaxis_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, tschchartseriesbubbleadjustmentscale_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTschchartseriesdefaulterrorbarcustomnegativedata());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTschchartseriesdefaulterrorbarcustomnegativedatascatterx());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTschchartseriesdefaulterrorbarcustompositivedata());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getTschchartseriesdefaulterrorbarcustompositivedatascatterx());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, tschchartseriesdefaulterrorbarfixedvalue_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, tschchartseriesdefaulterrorbarfixedvaluescatterx_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, tschchartseriesdefaulterrorbarpercentvalue_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, tschchartseriesdefaulterrorbarpercentvaluescatterx_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, tschchartseriesdefaulterrorbarsetting_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, tschchartseriesdefaulterrorbarsettingscatterx_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, tschchartseriesdefaulterrorbarstddevvalue_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, tschchartseriesdefaulterrorbarstddevvaluescatterx_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, tschchartseriesdefaulterrorbartype_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, tschchartseriesdefaulterrorbartypescatterx_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(16, tschchartseriespielabelexplosion_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, tschchartseriesbubblelinetype_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, tschchartserieslinelinetype_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, tschchartseriesmixedlinelinetype_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, tschchartseriesscatterlinetype_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, getTschchartseriesdefaultnumberformat());
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, getTschchartseriespienumberformat());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, tschchartseriesdefaultnumberformattype_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, tschchartseriespienumberformattype_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, getTschchartseriesstackedpercentnumberformat());
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(26, tschchartseriesdefaultseriestype_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(27, tschchartseriesdefaultshowerrorbar_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(28, tschchartseriesdefaultshowerrorbarscatterx_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(29, tschchartseriesscattershowline_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(30, tschchartseriesbubbleshownegativedata_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(31, tschchartseriespieshowserieslabels_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(32, tschchartseriesareashowsymbol_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(33, tschchartserieslineshowsymbol_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(34, tschchartseriesmixedareashowsymbol_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(35, tschchartseriesmixedlineshowsymbol_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(36, tschchartseriesscattershowsymbol_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(37, tschchartseriesdefaultshowtrendline_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(38, tschchartseriesareashowvaluelabels_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(39, tschchartseriesbarshowvaluelabels_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(40, tschchartseriesbubbleshowvaluelabels_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(41, tschchartseriesdefaultshowvaluelabels_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(42, tschchartserieslineshowvaluelabels_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(43, tschchartseriesmixedshowvaluelabels_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(44, tschchartseriespieshowvaluelabels_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(45, tschchartseriesscattershowvaluelabels_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(46, tschchartseriesbubblesizedimension_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(47, tschchartseriesareasymboltype_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(48, tschchartserieslinesymboltype_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(49, tschchartseriesmixedareasymboltype_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(50, tschchartseriesmixedlinesymboltype_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(51, tschchartseriesscattersymboltype_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(52, tschchartseriesdefaulttrendlineequationoffsetx_);
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(53, tschchartseriesdefaulttrendlineequationoffsety_);
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(54, tschchartseriesdefaulttrendlinelabelstring_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(55, tschchartseriesdefaulttrendlineorder_);
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(56, tschchartseriesdefaulttrendlineperiod_);
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(57, tschchartseriesdefaulttrendlinersquaredoffsetx_);
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(58, tschchartseriesdefaulttrendlinersquaredoffsety_);
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(59, tschchartseriesdefaulttrendlineshowequation_);
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(60, tschchartseriesdefaulttrendlineshowlabel_);
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(61, tschchartseriesdefaulttrendlineshowr2Value_);
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(62, tschchartseriesdefaulttrendlinetype_);
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(63, tschchartseriespiewedgeexplosion_);
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(64, tschchartseriesdefaultyaxisordinal_);
      }
      if (((bitField2_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(65, tschchartseriesbubbleshowserieslabels_);
      }
      if (((bitField2_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(66, tschchartseriesbubblevaluelabelsaxis_);
      }
      if (((bitField2_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(67, tschchartseriesscattershowserieslabels_);
      }
      if (((bitField2_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(68, tschchartseriesscattervaluelabelsaxis_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive)) {
        return super.equals(obj);
      }
      org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive other = (org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive) obj;

      boolean result = true;
      result = result && (hasTschchartseriesbubbleadjustmentscale() == other.hasTschchartseriesbubbleadjustmentscale());
      if (hasTschchartseriesbubbleadjustmentscale()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesbubbleadjustmentscale())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesbubbleadjustmentscale()));
      }
      result = result && (hasTschchartseriesdefaulterrorbarcustomnegativedata() == other.hasTschchartseriesdefaulterrorbarcustomnegativedata());
      if (hasTschchartseriesdefaulterrorbarcustomnegativedata()) {
        result = result && getTschchartseriesdefaulterrorbarcustomnegativedata()
            .equals(other.getTschchartseriesdefaulterrorbarcustomnegativedata());
      }
      result = result && (hasTschchartseriesdefaulterrorbarcustomnegativedatascatterx() == other.hasTschchartseriesdefaulterrorbarcustomnegativedatascatterx());
      if (hasTschchartseriesdefaulterrorbarcustomnegativedatascatterx()) {
        result = result && getTschchartseriesdefaulterrorbarcustomnegativedatascatterx()
            .equals(other.getTschchartseriesdefaulterrorbarcustomnegativedatascatterx());
      }
      result = result && (hasTschchartseriesdefaulterrorbarcustompositivedata() == other.hasTschchartseriesdefaulterrorbarcustompositivedata());
      if (hasTschchartseriesdefaulterrorbarcustompositivedata()) {
        result = result && getTschchartseriesdefaulterrorbarcustompositivedata()
            .equals(other.getTschchartseriesdefaulterrorbarcustompositivedata());
      }
      result = result && (hasTschchartseriesdefaulterrorbarcustompositivedatascatterx() == other.hasTschchartseriesdefaulterrorbarcustompositivedatascatterx());
      if (hasTschchartseriesdefaulterrorbarcustompositivedatascatterx()) {
        result = result && getTschchartseriesdefaulterrorbarcustompositivedatascatterx()
            .equals(other.getTschchartseriesdefaulterrorbarcustompositivedatascatterx());
      }
      result = result && (hasTschchartseriesdefaulterrorbarfixedvalue() == other.hasTschchartseriesdefaulterrorbarfixedvalue());
      if (hasTschchartseriesdefaulterrorbarfixedvalue()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaulterrorbarfixedvalue())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaulterrorbarfixedvalue()));
      }
      result = result && (hasTschchartseriesdefaulterrorbarfixedvaluescatterx() == other.hasTschchartseriesdefaulterrorbarfixedvaluescatterx());
      if (hasTschchartseriesdefaulterrorbarfixedvaluescatterx()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaulterrorbarfixedvaluescatterx())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaulterrorbarfixedvaluescatterx()));
      }
      result = result && (hasTschchartseriesdefaulterrorbarpercentvalue() == other.hasTschchartseriesdefaulterrorbarpercentvalue());
      if (hasTschchartseriesdefaulterrorbarpercentvalue()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaulterrorbarpercentvalue())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaulterrorbarpercentvalue()));
      }
      result = result && (hasTschchartseriesdefaulterrorbarpercentvaluescatterx() == other.hasTschchartseriesdefaulterrorbarpercentvaluescatterx());
      if (hasTschchartseriesdefaulterrorbarpercentvaluescatterx()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaulterrorbarpercentvaluescatterx())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaulterrorbarpercentvaluescatterx()));
      }
      result = result && (hasTschchartseriesdefaulterrorbarsetting() == other.hasTschchartseriesdefaulterrorbarsetting());
      if (hasTschchartseriesdefaulterrorbarsetting()) {
        result = result && (getTschchartseriesdefaulterrorbarsetting()
            == other.getTschchartseriesdefaulterrorbarsetting());
      }
      result = result && (hasTschchartseriesdefaulterrorbarsettingscatterx() == other.hasTschchartseriesdefaulterrorbarsettingscatterx());
      if (hasTschchartseriesdefaulterrorbarsettingscatterx()) {
        result = result && (getTschchartseriesdefaulterrorbarsettingscatterx()
            == other.getTschchartseriesdefaulterrorbarsettingscatterx());
      }
      result = result && (hasTschchartseriesdefaulterrorbarstddevvalue() == other.hasTschchartseriesdefaulterrorbarstddevvalue());
      if (hasTschchartseriesdefaulterrorbarstddevvalue()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaulterrorbarstddevvalue())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaulterrorbarstddevvalue()));
      }
      result = result && (hasTschchartseriesdefaulterrorbarstddevvaluescatterx() == other.hasTschchartseriesdefaulterrorbarstddevvaluescatterx());
      if (hasTschchartseriesdefaulterrorbarstddevvaluescatterx()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaulterrorbarstddevvaluescatterx())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaulterrorbarstddevvaluescatterx()));
      }
      result = result && (hasTschchartseriesdefaulterrorbartype() == other.hasTschchartseriesdefaulterrorbartype());
      if (hasTschchartseriesdefaulterrorbartype()) {
        result = result && (getTschchartseriesdefaulterrorbartype()
            == other.getTschchartseriesdefaulterrorbartype());
      }
      result = result && (hasTschchartseriesdefaulterrorbartypescatterx() == other.hasTschchartseriesdefaulterrorbartypescatterx());
      if (hasTschchartseriesdefaulterrorbartypescatterx()) {
        result = result && (getTschchartseriesdefaulterrorbartypescatterx()
            == other.getTschchartseriesdefaulterrorbartypescatterx());
      }
      result = result && (hasTschchartseriespielabelexplosion() == other.hasTschchartseriespielabelexplosion());
      if (hasTschchartseriespielabelexplosion()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriespielabelexplosion())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriespielabelexplosion()));
      }
      result = result && (hasTschchartseriesbubblelinetype() == other.hasTschchartseriesbubblelinetype());
      if (hasTschchartseriesbubblelinetype()) {
        result = result && (getTschchartseriesbubblelinetype()
            == other.getTschchartseriesbubblelinetype());
      }
      result = result && (hasTschchartserieslinelinetype() == other.hasTschchartserieslinelinetype());
      if (hasTschchartserieslinelinetype()) {
        result = result && (getTschchartserieslinelinetype()
            == other.getTschchartserieslinelinetype());
      }
      result = result && (hasTschchartseriesmixedlinelinetype() == other.hasTschchartseriesmixedlinelinetype());
      if (hasTschchartseriesmixedlinelinetype()) {
        result = result && (getTschchartseriesmixedlinelinetype()
            == other.getTschchartseriesmixedlinelinetype());
      }
      result = result && (hasTschchartseriesscatterlinetype() == other.hasTschchartseriesscatterlinetype());
      if (hasTschchartseriesscatterlinetype()) {
        result = result && (getTschchartseriesscatterlinetype()
            == other.getTschchartseriesscatterlinetype());
      }
      result = result && (hasTschchartseriesdefaultnumberformat() == other.hasTschchartseriesdefaultnumberformat());
      if (hasTschchartseriesdefaultnumberformat()) {
        result = result && getTschchartseriesdefaultnumberformat()
            .equals(other.getTschchartseriesdefaultnumberformat());
      }
      result = result && (hasTschchartseriespienumberformat() == other.hasTschchartseriespienumberformat());
      if (hasTschchartseriespienumberformat()) {
        result = result && getTschchartseriespienumberformat()
            .equals(other.getTschchartseriespienumberformat());
      }
      result = result && (hasTschchartseriesdefaultnumberformattype() == other.hasTschchartseriesdefaultnumberformattype());
      if (hasTschchartseriesdefaultnumberformattype()) {
        result = result && (getTschchartseriesdefaultnumberformattype()
            == other.getTschchartseriesdefaultnumberformattype());
      }
      result = result && (hasTschchartseriespienumberformattype() == other.hasTschchartseriespienumberformattype());
      if (hasTschchartseriespienumberformattype()) {
        result = result && (getTschchartseriespienumberformattype()
            == other.getTschchartseriespienumberformattype());
      }
      result = result && (hasTschchartseriesstackedpercentnumberformat() == other.hasTschchartseriesstackedpercentnumberformat());
      if (hasTschchartseriesstackedpercentnumberformat()) {
        result = result && getTschchartseriesstackedpercentnumberformat()
            .equals(other.getTschchartseriesstackedpercentnumberformat());
      }
      result = result && (hasTschchartseriesdefaultseriestype() == other.hasTschchartseriesdefaultseriestype());
      if (hasTschchartseriesdefaultseriestype()) {
        result = result && (getTschchartseriesdefaultseriestype()
            == other.getTschchartseriesdefaultseriestype());
      }
      result = result && (hasTschchartseriesdefaultshowerrorbar() == other.hasTschchartseriesdefaultshowerrorbar());
      if (hasTschchartseriesdefaultshowerrorbar()) {
        result = result && (getTschchartseriesdefaultshowerrorbar()
            == other.getTschchartseriesdefaultshowerrorbar());
      }
      result = result && (hasTschchartseriesdefaultshowerrorbarscatterx() == other.hasTschchartseriesdefaultshowerrorbarscatterx());
      if (hasTschchartseriesdefaultshowerrorbarscatterx()) {
        result = result && (getTschchartseriesdefaultshowerrorbarscatterx()
            == other.getTschchartseriesdefaultshowerrorbarscatterx());
      }
      result = result && (hasTschchartseriesscattershowline() == other.hasTschchartseriesscattershowline());
      if (hasTschchartseriesscattershowline()) {
        result = result && (getTschchartseriesscattershowline()
            == other.getTschchartseriesscattershowline());
      }
      result = result && (hasTschchartseriesbubbleshownegativedata() == other.hasTschchartseriesbubbleshownegativedata());
      if (hasTschchartseriesbubbleshownegativedata()) {
        result = result && (getTschchartseriesbubbleshownegativedata()
            == other.getTschchartseriesbubbleshownegativedata());
      }
      result = result && (hasTschchartseriespieshowserieslabels() == other.hasTschchartseriespieshowserieslabels());
      if (hasTschchartseriespieshowserieslabels()) {
        result = result && (getTschchartseriespieshowserieslabels()
            == other.getTschchartseriespieshowserieslabels());
      }
      result = result && (hasTschchartseriesareashowsymbol() == other.hasTschchartseriesareashowsymbol());
      if (hasTschchartseriesareashowsymbol()) {
        result = result && (getTschchartseriesareashowsymbol()
            == other.getTschchartseriesareashowsymbol());
      }
      result = result && (hasTschchartserieslineshowsymbol() == other.hasTschchartserieslineshowsymbol());
      if (hasTschchartserieslineshowsymbol()) {
        result = result && (getTschchartserieslineshowsymbol()
            == other.getTschchartserieslineshowsymbol());
      }
      result = result && (hasTschchartseriesmixedareashowsymbol() == other.hasTschchartseriesmixedareashowsymbol());
      if (hasTschchartseriesmixedareashowsymbol()) {
        result = result && (getTschchartseriesmixedareashowsymbol()
            == other.getTschchartseriesmixedareashowsymbol());
      }
      result = result && (hasTschchartseriesmixedlineshowsymbol() == other.hasTschchartseriesmixedlineshowsymbol());
      if (hasTschchartseriesmixedlineshowsymbol()) {
        result = result && (getTschchartseriesmixedlineshowsymbol()
            == other.getTschchartseriesmixedlineshowsymbol());
      }
      result = result && (hasTschchartseriesscattershowsymbol() == other.hasTschchartseriesscattershowsymbol());
      if (hasTschchartseriesscattershowsymbol()) {
        result = result && (getTschchartseriesscattershowsymbol()
            == other.getTschchartseriesscattershowsymbol());
      }
      result = result && (hasTschchartseriesdefaultshowtrendline() == other.hasTschchartseriesdefaultshowtrendline());
      if (hasTschchartseriesdefaultshowtrendline()) {
        result = result && (getTschchartseriesdefaultshowtrendline()
            == other.getTschchartseriesdefaultshowtrendline());
      }
      result = result && (hasTschchartseriesareashowvaluelabels() == other.hasTschchartseriesareashowvaluelabels());
      if (hasTschchartseriesareashowvaluelabels()) {
        result = result && (getTschchartseriesareashowvaluelabels()
            == other.getTschchartseriesareashowvaluelabels());
      }
      result = result && (hasTschchartseriesbarshowvaluelabels() == other.hasTschchartseriesbarshowvaluelabels());
      if (hasTschchartseriesbarshowvaluelabels()) {
        result = result && (getTschchartseriesbarshowvaluelabels()
            == other.getTschchartseriesbarshowvaluelabels());
      }
      result = result && (hasTschchartseriesbubbleshowvaluelabels() == other.hasTschchartseriesbubbleshowvaluelabels());
      if (hasTschchartseriesbubbleshowvaluelabels()) {
        result = result && (getTschchartseriesbubbleshowvaluelabels()
            == other.getTschchartseriesbubbleshowvaluelabels());
      }
      result = result && (hasTschchartseriesdefaultshowvaluelabels() == other.hasTschchartseriesdefaultshowvaluelabels());
      if (hasTschchartseriesdefaultshowvaluelabels()) {
        result = result && (getTschchartseriesdefaultshowvaluelabels()
            == other.getTschchartseriesdefaultshowvaluelabels());
      }
      result = result && (hasTschchartserieslineshowvaluelabels() == other.hasTschchartserieslineshowvaluelabels());
      if (hasTschchartserieslineshowvaluelabels()) {
        result = result && (getTschchartserieslineshowvaluelabels()
            == other.getTschchartserieslineshowvaluelabels());
      }
      result = result && (hasTschchartseriesmixedshowvaluelabels() == other.hasTschchartseriesmixedshowvaluelabels());
      if (hasTschchartseriesmixedshowvaluelabels()) {
        result = result && (getTschchartseriesmixedshowvaluelabels()
            == other.getTschchartseriesmixedshowvaluelabels());
      }
      result = result && (hasTschchartseriespieshowvaluelabels() == other.hasTschchartseriespieshowvaluelabels());
      if (hasTschchartseriespieshowvaluelabels()) {
        result = result && (getTschchartseriespieshowvaluelabels()
            == other.getTschchartseriespieshowvaluelabels());
      }
      result = result && (hasTschchartseriesscattershowvaluelabels() == other.hasTschchartseriesscattershowvaluelabels());
      if (hasTschchartseriesscattershowvaluelabels()) {
        result = result && (getTschchartseriesscattershowvaluelabels()
            == other.getTschchartseriesscattershowvaluelabels());
      }
      result = result && (hasTschchartseriesbubblesizedimension() == other.hasTschchartseriesbubblesizedimension());
      if (hasTschchartseriesbubblesizedimension()) {
        result = result && (getTschchartseriesbubblesizedimension()
            == other.getTschchartseriesbubblesizedimension());
      }
      result = result && (hasTschchartseriesareasymboltype() == other.hasTschchartseriesareasymboltype());
      if (hasTschchartseriesareasymboltype()) {
        result = result && (getTschchartseriesareasymboltype()
            == other.getTschchartseriesareasymboltype());
      }
      result = result && (hasTschchartserieslinesymboltype() == other.hasTschchartserieslinesymboltype());
      if (hasTschchartserieslinesymboltype()) {
        result = result && (getTschchartserieslinesymboltype()
            == other.getTschchartserieslinesymboltype());
      }
      result = result && (hasTschchartseriesmixedareasymboltype() == other.hasTschchartseriesmixedareasymboltype());
      if (hasTschchartseriesmixedareasymboltype()) {
        result = result && (getTschchartseriesmixedareasymboltype()
            == other.getTschchartseriesmixedareasymboltype());
      }
      result = result && (hasTschchartseriesmixedlinesymboltype() == other.hasTschchartseriesmixedlinesymboltype());
      if (hasTschchartseriesmixedlinesymboltype()) {
        result = result && (getTschchartseriesmixedlinesymboltype()
            == other.getTschchartseriesmixedlinesymboltype());
      }
      result = result && (hasTschchartseriesscattersymboltype() == other.hasTschchartseriesscattersymboltype());
      if (hasTschchartseriesscattersymboltype()) {
        result = result && (getTschchartseriesscattersymboltype()
            == other.getTschchartseriesscattersymboltype());
      }
      result = result && (hasTschchartseriesdefaulttrendlineequationoffsetx() == other.hasTschchartseriesdefaulttrendlineequationoffsetx());
      if (hasTschchartseriesdefaulttrendlineequationoffsetx()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaulttrendlineequationoffsetx())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaulttrendlineequationoffsetx()));
      }
      result = result && (hasTschchartseriesdefaulttrendlineequationoffsety() == other.hasTschchartseriesdefaulttrendlineequationoffsety());
      if (hasTschchartseriesdefaulttrendlineequationoffsety()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaulttrendlineequationoffsety())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaulttrendlineequationoffsety()));
      }
      result = result && (hasTschchartseriesdefaulttrendlinelabelstring() == other.hasTschchartseriesdefaulttrendlinelabelstring());
      if (hasTschchartseriesdefaulttrendlinelabelstring()) {
        result = result && getTschchartseriesdefaulttrendlinelabelstring()
            .equals(other.getTschchartseriesdefaulttrendlinelabelstring());
      }
      result = result && (hasTschchartseriesdefaulttrendlineorder() == other.hasTschchartseriesdefaulttrendlineorder());
      if (hasTschchartseriesdefaulttrendlineorder()) {
        result = result && (getTschchartseriesdefaulttrendlineorder()
            == other.getTschchartseriesdefaulttrendlineorder());
      }
      result = result && (hasTschchartseriesdefaulttrendlineperiod() == other.hasTschchartseriesdefaulttrendlineperiod());
      if (hasTschchartseriesdefaulttrendlineperiod()) {
        result = result && (getTschchartseriesdefaulttrendlineperiod()
            == other.getTschchartseriesdefaulttrendlineperiod());
      }
      result = result && (hasTschchartseriesdefaulttrendlinersquaredoffsetx() == other.hasTschchartseriesdefaulttrendlinersquaredoffsetx());
      if (hasTschchartseriesdefaulttrendlinersquaredoffsetx()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaulttrendlinersquaredoffsetx())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaulttrendlinersquaredoffsetx()));
      }
      result = result && (hasTschchartseriesdefaulttrendlinersquaredoffsety() == other.hasTschchartseriesdefaulttrendlinersquaredoffsety());
      if (hasTschchartseriesdefaulttrendlinersquaredoffsety()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaulttrendlinersquaredoffsety())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaulttrendlinersquaredoffsety()));
      }
      result = result && (hasTschchartseriesdefaulttrendlineshowequation() == other.hasTschchartseriesdefaulttrendlineshowequation());
      if (hasTschchartseriesdefaulttrendlineshowequation()) {
        result = result && (getTschchartseriesdefaulttrendlineshowequation()
            == other.getTschchartseriesdefaulttrendlineshowequation());
      }
      result = result && (hasTschchartseriesdefaulttrendlineshowlabel() == other.hasTschchartseriesdefaulttrendlineshowlabel());
      if (hasTschchartseriesdefaulttrendlineshowlabel()) {
        result = result && (getTschchartseriesdefaulttrendlineshowlabel()
            == other.getTschchartseriesdefaulttrendlineshowlabel());
      }
      result = result && (hasTschchartseriesdefaulttrendlineshowr2Value() == other.hasTschchartseriesdefaulttrendlineshowr2Value());
      if (hasTschchartseriesdefaulttrendlineshowr2Value()) {
        result = result && (getTschchartseriesdefaulttrendlineshowr2Value()
            == other.getTschchartseriesdefaulttrendlineshowr2Value());
      }
      result = result && (hasTschchartseriesdefaulttrendlinetype() == other.hasTschchartseriesdefaulttrendlinetype());
      if (hasTschchartseriesdefaulttrendlinetype()) {
        result = result && (getTschchartseriesdefaulttrendlinetype()
            == other.getTschchartseriesdefaulttrendlinetype());
      }
      result = result && (hasTschchartseriespiewedgeexplosion() == other.hasTschchartseriespiewedgeexplosion());
      if (hasTschchartseriespiewedgeexplosion()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriespiewedgeexplosion())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriespiewedgeexplosion()));
      }
      result = result && (hasTschchartseriesdefaultyaxisordinal() == other.hasTschchartseriesdefaultyaxisordinal());
      if (hasTschchartseriesdefaultyaxisordinal()) {
        result = result && (getTschchartseriesdefaultyaxisordinal()
            == other.getTschchartseriesdefaultyaxisordinal());
      }
      result = result && (hasTschchartseriesbubbleshowserieslabels() == other.hasTschchartseriesbubbleshowserieslabels());
      if (hasTschchartseriesbubbleshowserieslabels()) {
        result = result && (getTschchartseriesbubbleshowserieslabels()
            == other.getTschchartseriesbubbleshowserieslabels());
      }
      result = result && (hasTschchartseriesbubblevaluelabelsaxis() == other.hasTschchartseriesbubblevaluelabelsaxis());
      if (hasTschchartseriesbubblevaluelabelsaxis()) {
        result = result && (getTschchartseriesbubblevaluelabelsaxis()
            == other.getTschchartseriesbubblevaluelabelsaxis());
      }
      result = result && (hasTschchartseriesscattershowserieslabels() == other.hasTschchartseriesscattershowserieslabels());
      if (hasTschchartseriesscattershowserieslabels()) {
        result = result && (getTschchartseriesscattershowserieslabels()
            == other.getTschchartseriesscattershowserieslabels());
      }
      result = result && (hasTschchartseriesscattervaluelabelsaxis() == other.hasTschchartseriesscattervaluelabelsaxis());
      if (hasTschchartseriesscattervaluelabelsaxis()) {
        result = result && (getTschchartseriesscattervaluelabelsaxis()
            == other.getTschchartseriesscattervaluelabelsaxis());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTschchartseriesbubbleadjustmentscale()) {
        hash = (37 * hash) + TSCHCHARTSERIESBUBBLEADJUSTMENTSCALE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesbubbleadjustmentscale());
      }
      if (hasTschchartseriesdefaulterrorbarcustomnegativedata()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARCUSTOMNEGATIVEDATA_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbarcustomnegativedata().hashCode();
      }
      if (hasTschchartseriesdefaulterrorbarcustomnegativedatascatterx()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARCUSTOMNEGATIVEDATASCATTERX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbarcustomnegativedatascatterx().hashCode();
      }
      if (hasTschchartseriesdefaulterrorbarcustompositivedata()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARCUSTOMPOSITIVEDATA_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbarcustompositivedata().hashCode();
      }
      if (hasTschchartseriesdefaulterrorbarcustompositivedatascatterx()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARCUSTOMPOSITIVEDATASCATTERX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbarcustompositivedatascatterx().hashCode();
      }
      if (hasTschchartseriesdefaulterrorbarfixedvalue()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARFIXEDVALUE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaulterrorbarfixedvalue());
      }
      if (hasTschchartseriesdefaulterrorbarfixedvaluescatterx()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARFIXEDVALUESCATTERX_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaulterrorbarfixedvaluescatterx());
      }
      if (hasTschchartseriesdefaulterrorbarpercentvalue()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARPERCENTVALUE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaulterrorbarpercentvalue());
      }
      if (hasTschchartseriesdefaulterrorbarpercentvaluescatterx()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARPERCENTVALUESCATTERX_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaulterrorbarpercentvaluescatterx());
      }
      if (hasTschchartseriesdefaulterrorbarsetting()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARSETTING_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbarsetting();
      }
      if (hasTschchartseriesdefaulterrorbarsettingscatterx()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARSETTINGSCATTERX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbarsettingscatterx();
      }
      if (hasTschchartseriesdefaulterrorbarstddevvalue()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARSTDDEVVALUE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaulterrorbarstddevvalue());
      }
      if (hasTschchartseriesdefaulterrorbarstddevvaluescatterx()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARSTDDEVVALUESCATTERX_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaulterrorbarstddevvaluescatterx());
      }
      if (hasTschchartseriesdefaulterrorbartype()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbartype();
      }
      if (hasTschchartseriesdefaulterrorbartypescatterx()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARTYPESCATTERX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbartypescatterx();
      }
      if (hasTschchartseriespielabelexplosion()) {
        hash = (37 * hash) + TSCHCHARTSERIESPIELABELEXPLOSION_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriespielabelexplosion());
      }
      if (hasTschchartseriesbubblelinetype()) {
        hash = (37 * hash) + TSCHCHARTSERIESBUBBLELINETYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbubblelinetype();
      }
      if (hasTschchartserieslinelinetype()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINELINETYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartserieslinelinetype();
      }
      if (hasTschchartseriesmixedlinelinetype()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDLINELINETYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedlinelinetype();
      }
      if (hasTschchartseriesscatterlinetype()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERLINETYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesscatterlinetype();
      }
      if (hasTschchartseriesdefaultnumberformat()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTNUMBERFORMAT_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaultnumberformat().hashCode();
      }
      if (hasTschchartseriespienumberformat()) {
        hash = (37 * hash) + TSCHCHARTSERIESPIENUMBERFORMAT_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriespienumberformat().hashCode();
      }
      if (hasTschchartseriesdefaultnumberformattype()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTNUMBERFORMATTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaultnumberformattype();
      }
      if (hasTschchartseriespienumberformattype()) {
        hash = (37 * hash) + TSCHCHARTSERIESPIENUMBERFORMATTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriespienumberformattype();
      }
      if (hasTschchartseriesstackedpercentnumberformat()) {
        hash = (37 * hash) + TSCHCHARTSERIESSTACKEDPERCENTNUMBERFORMAT_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesstackedpercentnumberformat().hashCode();
      }
      if (hasTschchartseriesdefaultseriestype()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTSERIESTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaultseriestype();
      }
      if (hasTschchartseriesdefaultshowerrorbar()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTSHOWERRORBAR_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesdefaultshowerrorbar());
      }
      if (hasTschchartseriesdefaultshowerrorbarscatterx()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTSHOWERRORBARSCATTERX_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesdefaultshowerrorbarscatterx());
      }
      if (hasTschchartseriesscattershowline()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERSHOWLINE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesscattershowline());
      }
      if (hasTschchartseriesbubbleshownegativedata()) {
        hash = (37 * hash) + TSCHCHARTSERIESBUBBLESHOWNEGATIVEDATA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesbubbleshownegativedata());
      }
      if (hasTschchartseriespieshowserieslabels()) {
        hash = (37 * hash) + TSCHCHARTSERIESPIESHOWSERIESLABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriespieshowserieslabels());
      }
      if (hasTschchartseriesareashowsymbol()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREASHOWSYMBOL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesareashowsymbol());
      }
      if (hasTschchartserieslineshowsymbol()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINESHOWSYMBOL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartserieslineshowsymbol());
      }
      if (hasTschchartseriesmixedareashowsymbol()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDAREASHOWSYMBOL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesmixedareashowsymbol());
      }
      if (hasTschchartseriesmixedlineshowsymbol()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDLINESHOWSYMBOL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesmixedlineshowsymbol());
      }
      if (hasTschchartseriesscattershowsymbol()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERSHOWSYMBOL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesscattershowsymbol());
      }
      if (hasTschchartseriesdefaultshowtrendline()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTSHOWTRENDLINE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesdefaultshowtrendline());
      }
      if (hasTschchartseriesareashowvaluelabels()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREASHOWVALUELABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesareashowvaluelabels());
      }
      if (hasTschchartseriesbarshowvaluelabels()) {
        hash = (37 * hash) + TSCHCHARTSERIESBARSHOWVALUELABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesbarshowvaluelabels());
      }
      if (hasTschchartseriesbubbleshowvaluelabels()) {
        hash = (37 * hash) + TSCHCHARTSERIESBUBBLESHOWVALUELABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesbubbleshowvaluelabels());
      }
      if (hasTschchartseriesdefaultshowvaluelabels()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTSHOWVALUELABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesdefaultshowvaluelabels());
      }
      if (hasTschchartserieslineshowvaluelabels()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINESHOWVALUELABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartserieslineshowvaluelabels());
      }
      if (hasTschchartseriesmixedshowvaluelabels()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDSHOWVALUELABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesmixedshowvaluelabels());
      }
      if (hasTschchartseriespieshowvaluelabels()) {
        hash = (37 * hash) + TSCHCHARTSERIESPIESHOWVALUELABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriespieshowvaluelabels());
      }
      if (hasTschchartseriesscattershowvaluelabels()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERSHOWVALUELABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesscattershowvaluelabels());
      }
      if (hasTschchartseriesbubblesizedimension()) {
        hash = (37 * hash) + TSCHCHARTSERIESBUBBLESIZEDIMENSION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbubblesizedimension();
      }
      if (hasTschchartseriesareasymboltype()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREASYMBOLTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesareasymboltype();
      }
      if (hasTschchartserieslinesymboltype()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINESYMBOLTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartserieslinesymboltype();
      }
      if (hasTschchartseriesmixedareasymboltype()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDAREASYMBOLTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedareasymboltype();
      }
      if (hasTschchartseriesmixedlinesymboltype()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDLINESYMBOLTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedlinesymboltype();
      }
      if (hasTschchartseriesscattersymboltype()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERSYMBOLTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesscattersymboltype();
      }
      if (hasTschchartseriesdefaulttrendlineequationoffsetx()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINEEQUATIONOFFSETX_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaulttrendlineequationoffsetx());
      }
      if (hasTschchartseriesdefaulttrendlineequationoffsety()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINEEQUATIONOFFSETY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaulttrendlineequationoffsety());
      }
      if (hasTschchartseriesdefaulttrendlinelabelstring()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINELABELSTRING_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulttrendlinelabelstring().hashCode();
      }
      if (hasTschchartseriesdefaulttrendlineorder()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINEORDER_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulttrendlineorder();
      }
      if (hasTschchartseriesdefaulttrendlineperiod()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINEPERIOD_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulttrendlineperiod();
      }
      if (hasTschchartseriesdefaulttrendlinersquaredoffsetx()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINERSQUAREDOFFSETX_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaulttrendlinersquaredoffsetx());
      }
      if (hasTschchartseriesdefaulttrendlinersquaredoffsety()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINERSQUAREDOFFSETY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaulttrendlinersquaredoffsety());
      }
      if (hasTschchartseriesdefaulttrendlineshowequation()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINESHOWEQUATION_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesdefaulttrendlineshowequation());
      }
      if (hasTschchartseriesdefaulttrendlineshowlabel()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINESHOWLABEL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesdefaulttrendlineshowlabel());
      }
      if (hasTschchartseriesdefaulttrendlineshowr2Value()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINESHOWR2VALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesdefaulttrendlineshowr2Value());
      }
      if (hasTschchartseriesdefaulttrendlinetype()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINETYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulttrendlinetype();
      }
      if (hasTschchartseriespiewedgeexplosion()) {
        hash = (37 * hash) + TSCHCHARTSERIESPIEWEDGEEXPLOSION_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriespiewedgeexplosion());
      }
      if (hasTschchartseriesdefaultyaxisordinal()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTYAXISORDINAL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaultyaxisordinal();
      }
      if (hasTschchartseriesbubbleshowserieslabels()) {
        hash = (37 * hash) + TSCHCHARTSERIESBUBBLESHOWSERIESLABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesbubbleshowserieslabels());
      }
      if (hasTschchartseriesbubblevaluelabelsaxis()) {
        hash = (37 * hash) + TSCHCHARTSERIESBUBBLEVALUELABELSAXIS_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbubblevaluelabelsaxis();
      }
      if (hasTschchartseriesscattershowserieslabels()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERSHOWSERIESLABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesscattershowserieslabels());
      }
      if (hasTschchartseriesscattervaluelabelsaxis()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERVALUELABELSAXIS_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesscattervaluelabelsaxis();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TSCH.Generated.ChartSeriesNonStyleArchive}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TSCH.Generated.ChartSeriesNonStyleArchive)
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchiveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartSeriesNonStyleArchive_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartSeriesNonStyleArchive_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive.class, org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive.Builder.class);
      }

      // Construct using TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTschchartseriesdefaulterrorbarcustomnegativedataFieldBuilder();
          getTschchartseriesdefaulterrorbarcustomnegativedatascatterxFieldBuilder();
          getTschchartseriesdefaulterrorbarcustompositivedataFieldBuilder();
          getTschchartseriesdefaulterrorbarcustompositivedatascatterxFieldBuilder();
          getTschchartseriesdefaultnumberformatFieldBuilder();
          getTschchartseriespienumberformatFieldBuilder();
          getTschchartseriesstackedpercentnumberformatFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        tschchartseriesbubbleadjustmentscale_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (tschchartseriesdefaulterrorbarcustomnegativedataBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustomnegativedata_ = null;
        } else {
          tschchartseriesdefaulterrorbarcustomnegativedataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ = null;
        } else {
          tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (tschchartseriesdefaulterrorbarcustompositivedataBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustompositivedata_ = null;
        } else {
          tschchartseriesdefaulterrorbarcustompositivedataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustompositivedatascatterx_ = null;
        } else {
          tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        tschchartseriesdefaulterrorbarfixedvalue_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        tschchartseriesdefaulterrorbarfixedvaluescatterx_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        tschchartseriesdefaulterrorbarpercentvalue_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        tschchartseriesdefaulterrorbarpercentvaluescatterx_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        tschchartseriesdefaulterrorbarsetting_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        tschchartseriesdefaulterrorbarsettingscatterx_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        tschchartseriesdefaulterrorbarstddevvalue_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000800);
        tschchartseriesdefaulterrorbarstddevvaluescatterx_ = 0F;
        bitField0_ = (bitField0_ & ~0x00001000);
        tschchartseriesdefaulterrorbartype_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        tschchartseriesdefaulterrorbartypescatterx_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        tschchartseriespielabelexplosion_ = 0F;
        bitField0_ = (bitField0_ & ~0x00008000);
        tschchartseriesbubblelinetype_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        tschchartserieslinelinetype_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        tschchartseriesmixedlinelinetype_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        tschchartseriesscatterlinetype_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        if (tschchartseriesdefaultnumberformatBuilder_ == null) {
          tschchartseriesdefaultnumberformat_ = null;
        } else {
          tschchartseriesdefaultnumberformatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00100000);
        if (tschchartseriespienumberformatBuilder_ == null) {
          tschchartseriespienumberformat_ = null;
        } else {
          tschchartseriespienumberformatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00200000);
        tschchartseriesdefaultnumberformattype_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        tschchartseriespienumberformattype_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        if (tschchartseriesstackedpercentnumberformatBuilder_ == null) {
          tschchartseriesstackedpercentnumberformat_ = null;
        } else {
          tschchartseriesstackedpercentnumberformatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x01000000);
        tschchartseriesdefaultseriestype_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        tschchartseriesdefaultshowerrorbar_ = false;
        bitField0_ = (bitField0_ & ~0x04000000);
        tschchartseriesdefaultshowerrorbarscatterx_ = false;
        bitField0_ = (bitField0_ & ~0x08000000);
        tschchartseriesscattershowline_ = false;
        bitField0_ = (bitField0_ & ~0x10000000);
        tschchartseriesbubbleshownegativedata_ = false;
        bitField0_ = (bitField0_ & ~0x20000000);
        tschchartseriespieshowserieslabels_ = false;
        bitField0_ = (bitField0_ & ~0x40000000);
        tschchartseriesareashowsymbol_ = false;
        bitField0_ = (bitField0_ & ~0x80000000);
        tschchartserieslineshowsymbol_ = false;
        bitField1_ = (bitField1_ & ~0x00000001);
        tschchartseriesmixedareashowsymbol_ = false;
        bitField1_ = (bitField1_ & ~0x00000002);
        tschchartseriesmixedlineshowsymbol_ = false;
        bitField1_ = (bitField1_ & ~0x00000004);
        tschchartseriesscattershowsymbol_ = false;
        bitField1_ = (bitField1_ & ~0x00000008);
        tschchartseriesdefaultshowtrendline_ = false;
        bitField1_ = (bitField1_ & ~0x00000010);
        tschchartseriesareashowvaluelabels_ = false;
        bitField1_ = (bitField1_ & ~0x00000020);
        tschchartseriesbarshowvaluelabels_ = false;
        bitField1_ = (bitField1_ & ~0x00000040);
        tschchartseriesbubbleshowvaluelabels_ = false;
        bitField1_ = (bitField1_ & ~0x00000080);
        tschchartseriesdefaultshowvaluelabels_ = false;
        bitField1_ = (bitField1_ & ~0x00000100);
        tschchartserieslineshowvaluelabels_ = false;
        bitField1_ = (bitField1_ & ~0x00000200);
        tschchartseriesmixedshowvaluelabels_ = false;
        bitField1_ = (bitField1_ & ~0x00000400);
        tschchartseriespieshowvaluelabels_ = false;
        bitField1_ = (bitField1_ & ~0x00000800);
        tschchartseriesscattershowvaluelabels_ = false;
        bitField1_ = (bitField1_ & ~0x00001000);
        tschchartseriesbubblesizedimension_ = 0;
        bitField1_ = (bitField1_ & ~0x00002000);
        tschchartseriesareasymboltype_ = 0;
        bitField1_ = (bitField1_ & ~0x00004000);
        tschchartserieslinesymboltype_ = 0;
        bitField1_ = (bitField1_ & ~0x00008000);
        tschchartseriesmixedareasymboltype_ = 0;
        bitField1_ = (bitField1_ & ~0x00010000);
        tschchartseriesmixedlinesymboltype_ = 0;
        bitField1_ = (bitField1_ & ~0x00020000);
        tschchartseriesscattersymboltype_ = 0;
        bitField1_ = (bitField1_ & ~0x00040000);
        tschchartseriesdefaulttrendlineequationoffsetx_ = 0F;
        bitField1_ = (bitField1_ & ~0x00080000);
        tschchartseriesdefaulttrendlineequationoffsety_ = 0F;
        bitField1_ = (bitField1_ & ~0x00100000);
        tschchartseriesdefaulttrendlinelabelstring_ = "";
        bitField1_ = (bitField1_ & ~0x00200000);
        tschchartseriesdefaulttrendlineorder_ = 0;
        bitField1_ = (bitField1_ & ~0x00400000);
        tschchartseriesdefaulttrendlineperiod_ = 0;
        bitField1_ = (bitField1_ & ~0x00800000);
        tschchartseriesdefaulttrendlinersquaredoffsetx_ = 0F;
        bitField1_ = (bitField1_ & ~0x01000000);
        tschchartseriesdefaulttrendlinersquaredoffsety_ = 0F;
        bitField1_ = (bitField1_ & ~0x02000000);
        tschchartseriesdefaulttrendlineshowequation_ = false;
        bitField1_ = (bitField1_ & ~0x04000000);
        tschchartseriesdefaulttrendlineshowlabel_ = false;
        bitField1_ = (bitField1_ & ~0x08000000);
        tschchartseriesdefaulttrendlineshowr2Value_ = false;
        bitField1_ = (bitField1_ & ~0x10000000);
        tschchartseriesdefaulttrendlinetype_ = 0;
        bitField1_ = (bitField1_ & ~0x20000000);
        tschchartseriespiewedgeexplosion_ = 0F;
        bitField1_ = (bitField1_ & ~0x40000000);
        tschchartseriesdefaultyaxisordinal_ = 0;
        bitField1_ = (bitField1_ & ~0x80000000);
        tschchartseriesbubbleshowserieslabels_ = false;
        bitField2_ = (bitField2_ & ~0x00000001);
        tschchartseriesbubblevaluelabelsaxis_ = 0;
        bitField2_ = (bitField2_ & ~0x00000002);
        tschchartseriesscattershowserieslabels_ = false;
        bitField2_ = (bitField2_ & ~0x00000004);
        tschchartseriesscattervaluelabelsaxis_ = 0;
        bitField2_ = (bitField2_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.internal_static_TSCH_Generated_ChartSeriesNonStyleArchive_descriptor;
      }

      public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive getDefaultInstanceForType() {
        return org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive.getDefaultInstance();
      }

      public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive build() {
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive buildPartial() {
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive result = new org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int from_bitField2_ = bitField2_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        int to_bitField2_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tschchartseriesbubbleadjustmentscale_ = tschchartseriesbubbleadjustmentscale_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (tschchartseriesdefaulterrorbarcustomnegativedataBuilder_ == null) {
          result.tschchartseriesdefaulterrorbarcustomnegativedata_ = tschchartseriesdefaulterrorbarcustomnegativedata_;
        } else {
          result.tschchartseriesdefaulterrorbarcustomnegativedata_ = tschchartseriesdefaulterrorbarcustomnegativedataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_ == null) {
          result.tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ = tschchartseriesdefaulterrorbarcustomnegativedatascatterx_;
        } else {
          result.tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ = tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (tschchartseriesdefaulterrorbarcustompositivedataBuilder_ == null) {
          result.tschchartseriesdefaulterrorbarcustompositivedata_ = tschchartseriesdefaulterrorbarcustompositivedata_;
        } else {
          result.tschchartseriesdefaulterrorbarcustompositivedata_ = tschchartseriesdefaulterrorbarcustompositivedataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_ == null) {
          result.tschchartseriesdefaulterrorbarcustompositivedatascatterx_ = tschchartseriesdefaulterrorbarcustompositivedatascatterx_;
        } else {
          result.tschchartseriesdefaulterrorbarcustompositivedatascatterx_ = tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.tschchartseriesdefaulterrorbarfixedvalue_ = tschchartseriesdefaulterrorbarfixedvalue_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.tschchartseriesdefaulterrorbarfixedvaluescatterx_ = tschchartseriesdefaulterrorbarfixedvaluescatterx_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.tschchartseriesdefaulterrorbarpercentvalue_ = tschchartseriesdefaulterrorbarpercentvalue_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.tschchartseriesdefaulterrorbarpercentvaluescatterx_ = tschchartseriesdefaulterrorbarpercentvaluescatterx_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.tschchartseriesdefaulterrorbarsetting_ = tschchartseriesdefaulterrorbarsetting_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.tschchartseriesdefaulterrorbarsettingscatterx_ = tschchartseriesdefaulterrorbarsettingscatterx_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.tschchartseriesdefaulterrorbarstddevvalue_ = tschchartseriesdefaulterrorbarstddevvalue_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.tschchartseriesdefaulterrorbarstddevvaluescatterx_ = tschchartseriesdefaulterrorbarstddevvaluescatterx_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.tschchartseriesdefaulterrorbartype_ = tschchartseriesdefaulterrorbartype_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.tschchartseriesdefaulterrorbartypescatterx_ = tschchartseriesdefaulterrorbartypescatterx_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.tschchartseriespielabelexplosion_ = tschchartseriespielabelexplosion_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.tschchartseriesbubblelinetype_ = tschchartseriesbubblelinetype_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.tschchartserieslinelinetype_ = tschchartserieslinelinetype_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.tschchartseriesmixedlinelinetype_ = tschchartseriesmixedlinelinetype_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.tschchartseriesscatterlinetype_ = tschchartseriesscatterlinetype_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        if (tschchartseriesdefaultnumberformatBuilder_ == null) {
          result.tschchartseriesdefaultnumberformat_ = tschchartseriesdefaultnumberformat_;
        } else {
          result.tschchartseriesdefaultnumberformat_ = tschchartseriesdefaultnumberformatBuilder_.build();
        }
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        if (tschchartseriespienumberformatBuilder_ == null) {
          result.tschchartseriespienumberformat_ = tschchartseriespienumberformat_;
        } else {
          result.tschchartseriespienumberformat_ = tschchartseriespienumberformatBuilder_.build();
        }
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.tschchartseriesdefaultnumberformattype_ = tschchartseriesdefaultnumberformattype_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.tschchartseriespienumberformattype_ = tschchartseriespienumberformattype_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        if (tschchartseriesstackedpercentnumberformatBuilder_ == null) {
          result.tschchartseriesstackedpercentnumberformat_ = tschchartseriesstackedpercentnumberformat_;
        } else {
          result.tschchartseriesstackedpercentnumberformat_ = tschchartseriesstackedpercentnumberformatBuilder_.build();
        }
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.tschchartseriesdefaultseriestype_ = tschchartseriesdefaultseriestype_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.tschchartseriesdefaultshowerrorbar_ = tschchartseriesdefaultshowerrorbar_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.tschchartseriesdefaultshowerrorbarscatterx_ = tschchartseriesdefaultshowerrorbarscatterx_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.tschchartseriesscattershowline_ = tschchartseriesscattershowline_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.tschchartseriesbubbleshownegativedata_ = tschchartseriesbubbleshownegativedata_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.tschchartseriespieshowserieslabels_ = tschchartseriespieshowserieslabels_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        result.tschchartseriesareashowsymbol_ = tschchartseriesareashowsymbol_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        result.tschchartserieslineshowsymbol_ = tschchartserieslineshowsymbol_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000002;
        }
        result.tschchartseriesmixedareashowsymbol_ = tschchartseriesmixedareashowsymbol_;
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000004;
        }
        result.tschchartseriesmixedlineshowsymbol_ = tschchartseriesmixedlineshowsymbol_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000008;
        }
        result.tschchartseriesscattershowsymbol_ = tschchartseriesscattershowsymbol_;
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000010;
        }
        result.tschchartseriesdefaultshowtrendline_ = tschchartseriesdefaultshowtrendline_;
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000020;
        }
        result.tschchartseriesareashowvaluelabels_ = tschchartseriesareashowvaluelabels_;
        if (((from_bitField1_ & 0x00000040) == 0x00000040)) {
          to_bitField1_ |= 0x00000040;
        }
        result.tschchartseriesbarshowvaluelabels_ = tschchartseriesbarshowvaluelabels_;
        if (((from_bitField1_ & 0x00000080) == 0x00000080)) {
          to_bitField1_ |= 0x00000080;
        }
        result.tschchartseriesbubbleshowvaluelabels_ = tschchartseriesbubbleshowvaluelabels_;
        if (((from_bitField1_ & 0x00000100) == 0x00000100)) {
          to_bitField1_ |= 0x00000100;
        }
        result.tschchartseriesdefaultshowvaluelabels_ = tschchartseriesdefaultshowvaluelabels_;
        if (((from_bitField1_ & 0x00000200) == 0x00000200)) {
          to_bitField1_ |= 0x00000200;
        }
        result.tschchartserieslineshowvaluelabels_ = tschchartserieslineshowvaluelabels_;
        if (((from_bitField1_ & 0x00000400) == 0x00000400)) {
          to_bitField1_ |= 0x00000400;
        }
        result.tschchartseriesmixedshowvaluelabels_ = tschchartseriesmixedshowvaluelabels_;
        if (((from_bitField1_ & 0x00000800) == 0x00000800)) {
          to_bitField1_ |= 0x00000800;
        }
        result.tschchartseriespieshowvaluelabels_ = tschchartseriespieshowvaluelabels_;
        if (((from_bitField1_ & 0x00001000) == 0x00001000)) {
          to_bitField1_ |= 0x00001000;
        }
        result.tschchartseriesscattershowvaluelabels_ = tschchartseriesscattershowvaluelabels_;
        if (((from_bitField1_ & 0x00002000) == 0x00002000)) {
          to_bitField1_ |= 0x00002000;
        }
        result.tschchartseriesbubblesizedimension_ = tschchartseriesbubblesizedimension_;
        if (((from_bitField1_ & 0x00004000) == 0x00004000)) {
          to_bitField1_ |= 0x00004000;
        }
        result.tschchartseriesareasymboltype_ = tschchartseriesareasymboltype_;
        if (((from_bitField1_ & 0x00008000) == 0x00008000)) {
          to_bitField1_ |= 0x00008000;
        }
        result.tschchartserieslinesymboltype_ = tschchartserieslinesymboltype_;
        if (((from_bitField1_ & 0x00010000) == 0x00010000)) {
          to_bitField1_ |= 0x00010000;
        }
        result.tschchartseriesmixedareasymboltype_ = tschchartseriesmixedareasymboltype_;
        if (((from_bitField1_ & 0x00020000) == 0x00020000)) {
          to_bitField1_ |= 0x00020000;
        }
        result.tschchartseriesmixedlinesymboltype_ = tschchartseriesmixedlinesymboltype_;
        if (((from_bitField1_ & 0x00040000) == 0x00040000)) {
          to_bitField1_ |= 0x00040000;
        }
        result.tschchartseriesscattersymboltype_ = tschchartseriesscattersymboltype_;
        if (((from_bitField1_ & 0x00080000) == 0x00080000)) {
          to_bitField1_ |= 0x00080000;
        }
        result.tschchartseriesdefaulttrendlineequationoffsetx_ = tschchartseriesdefaulttrendlineequationoffsetx_;
        if (((from_bitField1_ & 0x00100000) == 0x00100000)) {
          to_bitField1_ |= 0x00100000;
        }
        result.tschchartseriesdefaulttrendlineequationoffsety_ = tschchartseriesdefaulttrendlineequationoffsety_;
        if (((from_bitField1_ & 0x00200000) == 0x00200000)) {
          to_bitField1_ |= 0x00200000;
        }
        result.tschchartseriesdefaulttrendlinelabelstring_ = tschchartseriesdefaulttrendlinelabelstring_;
        if (((from_bitField1_ & 0x00400000) == 0x00400000)) {
          to_bitField1_ |= 0x00400000;
        }
        result.tschchartseriesdefaulttrendlineorder_ = tschchartseriesdefaulttrendlineorder_;
        if (((from_bitField1_ & 0x00800000) == 0x00800000)) {
          to_bitField1_ |= 0x00800000;
        }
        result.tschchartseriesdefaulttrendlineperiod_ = tschchartseriesdefaulttrendlineperiod_;
        if (((from_bitField1_ & 0x01000000) == 0x01000000)) {
          to_bitField1_ |= 0x01000000;
        }
        result.tschchartseriesdefaulttrendlinersquaredoffsetx_ = tschchartseriesdefaulttrendlinersquaredoffsetx_;
        if (((from_bitField1_ & 0x02000000) == 0x02000000)) {
          to_bitField1_ |= 0x02000000;
        }
        result.tschchartseriesdefaulttrendlinersquaredoffsety_ = tschchartseriesdefaulttrendlinersquaredoffsety_;
        if (((from_bitField1_ & 0x04000000) == 0x04000000)) {
          to_bitField1_ |= 0x04000000;
        }
        result.tschchartseriesdefaulttrendlineshowequation_ = tschchartseriesdefaulttrendlineshowequation_;
        if (((from_bitField1_ & 0x08000000) == 0x08000000)) {
          to_bitField1_ |= 0x08000000;
        }
        result.tschchartseriesdefaulttrendlineshowlabel_ = tschchartseriesdefaulttrendlineshowlabel_;
        if (((from_bitField1_ & 0x10000000) == 0x10000000)) {
          to_bitField1_ |= 0x10000000;
        }
        result.tschchartseriesdefaulttrendlineshowr2Value_ = tschchartseriesdefaulttrendlineshowr2Value_;
        if (((from_bitField1_ & 0x20000000) == 0x20000000)) {
          to_bitField1_ |= 0x20000000;
        }
        result.tschchartseriesdefaulttrendlinetype_ = tschchartseriesdefaulttrendlinetype_;
        if (((from_bitField1_ & 0x40000000) == 0x40000000)) {
          to_bitField1_ |= 0x40000000;
        }
        result.tschchartseriespiewedgeexplosion_ = tschchartseriespiewedgeexplosion_;
        if (((from_bitField1_ & 0x80000000) == 0x80000000)) {
          to_bitField1_ |= 0x80000000;
        }
        result.tschchartseriesdefaultyaxisordinal_ = tschchartseriesdefaultyaxisordinal_;
        if (((from_bitField2_ & 0x00000001) == 0x00000001)) {
          to_bitField2_ |= 0x00000001;
        }
        result.tschchartseriesbubbleshowserieslabels_ = tschchartseriesbubbleshowserieslabels_;
        if (((from_bitField2_ & 0x00000002) == 0x00000002)) {
          to_bitField2_ |= 0x00000002;
        }
        result.tschchartseriesbubblevaluelabelsaxis_ = tschchartseriesbubblevaluelabelsaxis_;
        if (((from_bitField2_ & 0x00000004) == 0x00000004)) {
          to_bitField2_ |= 0x00000004;
        }
        result.tschchartseriesscattershowserieslabels_ = tschchartseriesscattershowserieslabels_;
        if (((from_bitField2_ & 0x00000008) == 0x00000008)) {
          to_bitField2_ |= 0x00000008;
        }
        result.tschchartseriesscattervaluelabelsaxis_ = tschchartseriesscattervaluelabelsaxis_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        result.bitField2_ = to_bitField2_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive) {
          return mergeFrom((org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive other) {
        if (other == org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive.getDefaultInstance()) return this;
        if (other.hasTschchartseriesbubbleadjustmentscale()) {
          setTschchartseriesbubbleadjustmentscale(other.getTschchartseriesbubbleadjustmentscale());
        }
        if (other.hasTschchartseriesdefaulterrorbarcustomnegativedata()) {
          mergeTschchartseriesdefaulterrorbarcustomnegativedata(other.getTschchartseriesdefaulterrorbarcustomnegativedata());
        }
        if (other.hasTschchartseriesdefaulterrorbarcustomnegativedatascatterx()) {
          mergeTschchartseriesdefaulterrorbarcustomnegativedatascatterx(other.getTschchartseriesdefaulterrorbarcustomnegativedatascatterx());
        }
        if (other.hasTschchartseriesdefaulterrorbarcustompositivedata()) {
          mergeTschchartseriesdefaulterrorbarcustompositivedata(other.getTschchartseriesdefaulterrorbarcustompositivedata());
        }
        if (other.hasTschchartseriesdefaulterrorbarcustompositivedatascatterx()) {
          mergeTschchartseriesdefaulterrorbarcustompositivedatascatterx(other.getTschchartseriesdefaulterrorbarcustompositivedatascatterx());
        }
        if (other.hasTschchartseriesdefaulterrorbarfixedvalue()) {
          setTschchartseriesdefaulterrorbarfixedvalue(other.getTschchartseriesdefaulterrorbarfixedvalue());
        }
        if (other.hasTschchartseriesdefaulterrorbarfixedvaluescatterx()) {
          setTschchartseriesdefaulterrorbarfixedvaluescatterx(other.getTschchartseriesdefaulterrorbarfixedvaluescatterx());
        }
        if (other.hasTschchartseriesdefaulterrorbarpercentvalue()) {
          setTschchartseriesdefaulterrorbarpercentvalue(other.getTschchartseriesdefaulterrorbarpercentvalue());
        }
        if (other.hasTschchartseriesdefaulterrorbarpercentvaluescatterx()) {
          setTschchartseriesdefaulterrorbarpercentvaluescatterx(other.getTschchartseriesdefaulterrorbarpercentvaluescatterx());
        }
        if (other.hasTschchartseriesdefaulterrorbarsetting()) {
          setTschchartseriesdefaulterrorbarsetting(other.getTschchartseriesdefaulterrorbarsetting());
        }
        if (other.hasTschchartseriesdefaulterrorbarsettingscatterx()) {
          setTschchartseriesdefaulterrorbarsettingscatterx(other.getTschchartseriesdefaulterrorbarsettingscatterx());
        }
        if (other.hasTschchartseriesdefaulterrorbarstddevvalue()) {
          setTschchartseriesdefaulterrorbarstddevvalue(other.getTschchartseriesdefaulterrorbarstddevvalue());
        }
        if (other.hasTschchartseriesdefaulterrorbarstddevvaluescatterx()) {
          setTschchartseriesdefaulterrorbarstddevvaluescatterx(other.getTschchartseriesdefaulterrorbarstddevvaluescatterx());
        }
        if (other.hasTschchartseriesdefaulterrorbartype()) {
          setTschchartseriesdefaulterrorbartype(other.getTschchartseriesdefaulterrorbartype());
        }
        if (other.hasTschchartseriesdefaulterrorbartypescatterx()) {
          setTschchartseriesdefaulterrorbartypescatterx(other.getTschchartseriesdefaulterrorbartypescatterx());
        }
        if (other.hasTschchartseriespielabelexplosion()) {
          setTschchartseriespielabelexplosion(other.getTschchartseriespielabelexplosion());
        }
        if (other.hasTschchartseriesbubblelinetype()) {
          setTschchartseriesbubblelinetype(other.getTschchartseriesbubblelinetype());
        }
        if (other.hasTschchartserieslinelinetype()) {
          setTschchartserieslinelinetype(other.getTschchartserieslinelinetype());
        }
        if (other.hasTschchartseriesmixedlinelinetype()) {
          setTschchartseriesmixedlinelinetype(other.getTschchartseriesmixedlinelinetype());
        }
        if (other.hasTschchartseriesscatterlinetype()) {
          setTschchartseriesscatterlinetype(other.getTschchartseriesscatterlinetype());
        }
        if (other.hasTschchartseriesdefaultnumberformat()) {
          mergeTschchartseriesdefaultnumberformat(other.getTschchartseriesdefaultnumberformat());
        }
        if (other.hasTschchartseriespienumberformat()) {
          mergeTschchartseriespienumberformat(other.getTschchartseriespienumberformat());
        }
        if (other.hasTschchartseriesdefaultnumberformattype()) {
          setTschchartseriesdefaultnumberformattype(other.getTschchartseriesdefaultnumberformattype());
        }
        if (other.hasTschchartseriespienumberformattype()) {
          setTschchartseriespienumberformattype(other.getTschchartseriespienumberformattype());
        }
        if (other.hasTschchartseriesstackedpercentnumberformat()) {
          mergeTschchartseriesstackedpercentnumberformat(other.getTschchartseriesstackedpercentnumberformat());
        }
        if (other.hasTschchartseriesdefaultseriestype()) {
          setTschchartseriesdefaultseriestype(other.getTschchartseriesdefaultseriestype());
        }
        if (other.hasTschchartseriesdefaultshowerrorbar()) {
          setTschchartseriesdefaultshowerrorbar(other.getTschchartseriesdefaultshowerrorbar());
        }
        if (other.hasTschchartseriesdefaultshowerrorbarscatterx()) {
          setTschchartseriesdefaultshowerrorbarscatterx(other.getTschchartseriesdefaultshowerrorbarscatterx());
        }
        if (other.hasTschchartseriesscattershowline()) {
          setTschchartseriesscattershowline(other.getTschchartseriesscattershowline());
        }
        if (other.hasTschchartseriesbubbleshownegativedata()) {
          setTschchartseriesbubbleshownegativedata(other.getTschchartseriesbubbleshownegativedata());
        }
        if (other.hasTschchartseriespieshowserieslabels()) {
          setTschchartseriespieshowserieslabels(other.getTschchartseriespieshowserieslabels());
        }
        if (other.hasTschchartseriesareashowsymbol()) {
          setTschchartseriesareashowsymbol(other.getTschchartseriesareashowsymbol());
        }
        if (other.hasTschchartserieslineshowsymbol()) {
          setTschchartserieslineshowsymbol(other.getTschchartserieslineshowsymbol());
        }
        if (other.hasTschchartseriesmixedareashowsymbol()) {
          setTschchartseriesmixedareashowsymbol(other.getTschchartseriesmixedareashowsymbol());
        }
        if (other.hasTschchartseriesmixedlineshowsymbol()) {
          setTschchartseriesmixedlineshowsymbol(other.getTschchartseriesmixedlineshowsymbol());
        }
        if (other.hasTschchartseriesscattershowsymbol()) {
          setTschchartseriesscattershowsymbol(other.getTschchartseriesscattershowsymbol());
        }
        if (other.hasTschchartseriesdefaultshowtrendline()) {
          setTschchartseriesdefaultshowtrendline(other.getTschchartseriesdefaultshowtrendline());
        }
        if (other.hasTschchartseriesareashowvaluelabels()) {
          setTschchartseriesareashowvaluelabels(other.getTschchartseriesareashowvaluelabels());
        }
        if (other.hasTschchartseriesbarshowvaluelabels()) {
          setTschchartseriesbarshowvaluelabels(other.getTschchartseriesbarshowvaluelabels());
        }
        if (other.hasTschchartseriesbubbleshowvaluelabels()) {
          setTschchartseriesbubbleshowvaluelabels(other.getTschchartseriesbubbleshowvaluelabels());
        }
        if (other.hasTschchartseriesdefaultshowvaluelabels()) {
          setTschchartseriesdefaultshowvaluelabels(other.getTschchartseriesdefaultshowvaluelabels());
        }
        if (other.hasTschchartserieslineshowvaluelabels()) {
          setTschchartserieslineshowvaluelabels(other.getTschchartserieslineshowvaluelabels());
        }
        if (other.hasTschchartseriesmixedshowvaluelabels()) {
          setTschchartseriesmixedshowvaluelabels(other.getTschchartseriesmixedshowvaluelabels());
        }
        if (other.hasTschchartseriespieshowvaluelabels()) {
          setTschchartseriespieshowvaluelabels(other.getTschchartseriespieshowvaluelabels());
        }
        if (other.hasTschchartseriesscattershowvaluelabels()) {
          setTschchartseriesscattershowvaluelabels(other.getTschchartseriesscattershowvaluelabels());
        }
        if (other.hasTschchartseriesbubblesizedimension()) {
          setTschchartseriesbubblesizedimension(other.getTschchartseriesbubblesizedimension());
        }
        if (other.hasTschchartseriesareasymboltype()) {
          setTschchartseriesareasymboltype(other.getTschchartseriesareasymboltype());
        }
        if (other.hasTschchartserieslinesymboltype()) {
          setTschchartserieslinesymboltype(other.getTschchartserieslinesymboltype());
        }
        if (other.hasTschchartseriesmixedareasymboltype()) {
          setTschchartseriesmixedareasymboltype(other.getTschchartseriesmixedareasymboltype());
        }
        if (other.hasTschchartseriesmixedlinesymboltype()) {
          setTschchartseriesmixedlinesymboltype(other.getTschchartseriesmixedlinesymboltype());
        }
        if (other.hasTschchartseriesscattersymboltype()) {
          setTschchartseriesscattersymboltype(other.getTschchartseriesscattersymboltype());
        }
        if (other.hasTschchartseriesdefaulttrendlineequationoffsetx()) {
          setTschchartseriesdefaulttrendlineequationoffsetx(other.getTschchartseriesdefaulttrendlineequationoffsetx());
        }
        if (other.hasTschchartseriesdefaulttrendlineequationoffsety()) {
          setTschchartseriesdefaulttrendlineequationoffsety(other.getTschchartseriesdefaulttrendlineequationoffsety());
        }
        if (other.hasTschchartseriesdefaulttrendlinelabelstring()) {
          bitField1_ |= 0x00200000;
          tschchartseriesdefaulttrendlinelabelstring_ = other.tschchartseriesdefaulttrendlinelabelstring_;
          onChanged();
        }
        if (other.hasTschchartseriesdefaulttrendlineorder()) {
          setTschchartseriesdefaulttrendlineorder(other.getTschchartseriesdefaulttrendlineorder());
        }
        if (other.hasTschchartseriesdefaulttrendlineperiod()) {
          setTschchartseriesdefaulttrendlineperiod(other.getTschchartseriesdefaulttrendlineperiod());
        }
        if (other.hasTschchartseriesdefaulttrendlinersquaredoffsetx()) {
          setTschchartseriesdefaulttrendlinersquaredoffsetx(other.getTschchartseriesdefaulttrendlinersquaredoffsetx());
        }
        if (other.hasTschchartseriesdefaulttrendlinersquaredoffsety()) {
          setTschchartseriesdefaulttrendlinersquaredoffsety(other.getTschchartseriesdefaulttrendlinersquaredoffsety());
        }
        if (other.hasTschchartseriesdefaulttrendlineshowequation()) {
          setTschchartseriesdefaulttrendlineshowequation(other.getTschchartseriesdefaulttrendlineshowequation());
        }
        if (other.hasTschchartseriesdefaulttrendlineshowlabel()) {
          setTschchartseriesdefaulttrendlineshowlabel(other.getTschchartseriesdefaulttrendlineshowlabel());
        }
        if (other.hasTschchartseriesdefaulttrendlineshowr2Value()) {
          setTschchartseriesdefaulttrendlineshowr2Value(other.getTschchartseriesdefaulttrendlineshowr2Value());
        }
        if (other.hasTschchartseriesdefaulttrendlinetype()) {
          setTschchartseriesdefaulttrendlinetype(other.getTschchartseriesdefaulttrendlinetype());
        }
        if (other.hasTschchartseriespiewedgeexplosion()) {
          setTschchartseriespiewedgeexplosion(other.getTschchartseriespiewedgeexplosion());
        }
        if (other.hasTschchartseriesdefaultyaxisordinal()) {
          setTschchartseriesdefaultyaxisordinal(other.getTschchartseriesdefaultyaxisordinal());
        }
        if (other.hasTschchartseriesbubbleshowserieslabels()) {
          setTschchartseriesbubbleshowserieslabels(other.getTschchartseriesbubbleshowserieslabels());
        }
        if (other.hasTschchartseriesbubblevaluelabelsaxis()) {
          setTschchartseriesbubblevaluelabelsaxis(other.getTschchartseriesbubblevaluelabelsaxis());
        }
        if (other.hasTschchartseriesscattershowserieslabels()) {
          setTschchartseriesscattershowserieslabels(other.getTschchartseriesscattershowserieslabels());
        }
        if (other.hasTschchartseriesscattervaluelabelsaxis()) {
          setTschchartseriesscattervaluelabelsaxis(other.getTschchartseriesscattervaluelabelsaxis());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (hasTschchartseriesdefaultnumberformat()) {
          if (!getTschchartseriesdefaultnumberformat().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriespienumberformat()) {
          if (!getTschchartseriespienumberformat().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesstackedpercentnumberformat()) {
          if (!getTschchartseriesstackedpercentnumberformat().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;
      private int bitField2_;

      private float tschchartseriesbubbleadjustmentscale_ ;
      /**
       * <code>optional float tschchartseriesbubbleadjustmentscale = 1;</code>
       */
      public boolean hasTschchartseriesbubbleadjustmentscale() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional float tschchartseriesbubbleadjustmentscale = 1;</code>
       */
      public float getTschchartseriesbubbleadjustmentscale() {
        return tschchartseriesbubbleadjustmentscale_;
      }
      /**
       * <code>optional float tschchartseriesbubbleadjustmentscale = 1;</code>
       */
      public Builder setTschchartseriesbubbleadjustmentscale(float value) {
        bitField0_ |= 0x00000001;
        tschchartseriesbubbleadjustmentscale_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesbubbleadjustmentscale = 1;</code>
       */
      public Builder clearTschchartseriesbubbleadjustmentscale() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tschchartseriesbubbleadjustmentscale_ = 0F;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder> tschchartseriesdefaulterrorbarcustomnegativedataBuilder_;
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 2;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarcustomnegativedata() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 2;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive getTschchartseriesdefaulterrorbarcustomnegativedata() {
        if (tschchartseriesdefaulterrorbarcustomnegativedataBuilder_ == null) {
          return tschchartseriesdefaulterrorbarcustomnegativedata_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustomnegativedata_;
        } else {
          return tschchartseriesdefaulterrorbarcustomnegativedataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 2;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarcustomnegativedata(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive value) {
        if (tschchartseriesdefaulterrorbarcustomnegativedataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaulterrorbarcustomnegativedata_ = value;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustomnegativedataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 2;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarcustomnegativedata(
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder builderForValue) {
        if (tschchartseriesdefaulterrorbarcustomnegativedataBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustomnegativedata_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustomnegativedataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 2;</code>
       */
      public Builder mergeTschchartseriesdefaulterrorbarcustomnegativedata(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive value) {
        if (tschchartseriesdefaulterrorbarcustomnegativedataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              tschchartseriesdefaulterrorbarcustomnegativedata_ != null &&
              tschchartseriesdefaulterrorbarcustomnegativedata_ != org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance()) {
            tschchartseriesdefaulterrorbarcustomnegativedata_ =
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.newBuilder(tschchartseriesdefaulterrorbarcustomnegativedata_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaulterrorbarcustomnegativedata_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustomnegativedataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 2;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarcustomnegativedata() {
        if (tschchartseriesdefaulterrorbarcustomnegativedataBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustomnegativedata_ = null;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustomnegativedataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 2;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder getTschchartseriesdefaulterrorbarcustomnegativedataBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTschchartseriesdefaulterrorbarcustomnegativedataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 2;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder getTschchartseriesdefaulterrorbarcustomnegativedataOrBuilder() {
        if (tschchartseriesdefaulterrorbarcustomnegativedataBuilder_ != null) {
          return tschchartseriesdefaulterrorbarcustomnegativedataBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaulterrorbarcustomnegativedata_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustomnegativedata_;
        }
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder> 
          getTschchartseriesdefaulterrorbarcustomnegativedataFieldBuilder() {
        if (tschchartseriesdefaulterrorbarcustomnegativedataBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustomnegativedataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder>(
                  getTschchartseriesdefaulterrorbarcustomnegativedata(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaulterrorbarcustomnegativedata_ = null;
        }
        return tschchartseriesdefaulterrorbarcustomnegativedataBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder> tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_;
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 3;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarcustomnegativedatascatterx() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 3;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive getTschchartseriesdefaulterrorbarcustomnegativedatascatterx() {
        if (tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_ == null) {
          return tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustomnegativedatascatterx_;
        } else {
          return tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 3;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarcustomnegativedatascatterx(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive value) {
        if (tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ = value;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 3;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarcustomnegativedatascatterx(
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder builderForValue) {
        if (tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 3;</code>
       */
      public Builder mergeTschchartseriesdefaulterrorbarcustomnegativedatascatterx(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive value) {
        if (tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ != null &&
              tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ != org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance()) {
            tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ =
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.newBuilder(tschchartseriesdefaulterrorbarcustomnegativedatascatterx_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 3;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarcustomnegativedatascatterx() {
        if (tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ = null;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 3;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder getTschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getTschchartseriesdefaulterrorbarcustomnegativedatascatterxFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 3;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder getTschchartseriesdefaulterrorbarcustomnegativedatascatterxOrBuilder() {
        if (tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_ != null) {
          return tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustomnegativedatascatterx_;
        }
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder> 
          getTschchartseriesdefaulterrorbarcustomnegativedatascatterxFieldBuilder() {
        if (tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder>(
                  getTschchartseriesdefaulterrorbarcustomnegativedatascatterx(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ = null;
        }
        return tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder> tschchartseriesdefaulterrorbarcustompositivedataBuilder_;
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 4;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarcustompositivedata() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 4;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive getTschchartseriesdefaulterrorbarcustompositivedata() {
        if (tschchartseriesdefaulterrorbarcustompositivedataBuilder_ == null) {
          return tschchartseriesdefaulterrorbarcustompositivedata_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustompositivedata_;
        } else {
          return tschchartseriesdefaulterrorbarcustompositivedataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 4;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarcustompositivedata(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive value) {
        if (tschchartseriesdefaulterrorbarcustompositivedataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaulterrorbarcustompositivedata_ = value;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustompositivedataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 4;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarcustompositivedata(
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder builderForValue) {
        if (tschchartseriesdefaulterrorbarcustompositivedataBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustompositivedata_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustompositivedataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 4;</code>
       */
      public Builder mergeTschchartseriesdefaulterrorbarcustompositivedata(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive value) {
        if (tschchartseriesdefaulterrorbarcustompositivedataBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              tschchartseriesdefaulterrorbarcustompositivedata_ != null &&
              tschchartseriesdefaulterrorbarcustompositivedata_ != org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance()) {
            tschchartseriesdefaulterrorbarcustompositivedata_ =
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.newBuilder(tschchartseriesdefaulterrorbarcustompositivedata_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaulterrorbarcustompositivedata_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustompositivedataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 4;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarcustompositivedata() {
        if (tschchartseriesdefaulterrorbarcustompositivedataBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustompositivedata_ = null;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustompositivedataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 4;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder getTschchartseriesdefaulterrorbarcustompositivedataBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getTschchartseriesdefaulterrorbarcustompositivedataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 4;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder getTschchartseriesdefaulterrorbarcustompositivedataOrBuilder() {
        if (tschchartseriesdefaulterrorbarcustompositivedataBuilder_ != null) {
          return tschchartseriesdefaulterrorbarcustompositivedataBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaulterrorbarcustompositivedata_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustompositivedata_;
        }
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder> 
          getTschchartseriesdefaulterrorbarcustompositivedataFieldBuilder() {
        if (tschchartseriesdefaulterrorbarcustompositivedataBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustompositivedataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder>(
                  getTschchartseriesdefaulterrorbarcustompositivedata(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaulterrorbarcustompositivedata_ = null;
        }
        return tschchartseriesdefaulterrorbarcustompositivedataBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder> tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_;
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 5;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarcustompositivedatascatterx() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 5;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive getTschchartseriesdefaulterrorbarcustompositivedatascatterx() {
        if (tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_ == null) {
          return tschchartseriesdefaulterrorbarcustompositivedatascatterx_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustompositivedatascatterx_;
        } else {
          return tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 5;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarcustompositivedatascatterx(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive value) {
        if (tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaulterrorbarcustompositivedatascatterx_ = value;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 5;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarcustompositivedatascatterx(
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder builderForValue) {
        if (tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustompositivedatascatterx_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 5;</code>
       */
      public Builder mergeTschchartseriesdefaulterrorbarcustompositivedatascatterx(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive value) {
        if (tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              tschchartseriesdefaulterrorbarcustompositivedatascatterx_ != null &&
              tschchartseriesdefaulterrorbarcustompositivedatascatterx_ != org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance()) {
            tschchartseriesdefaulterrorbarcustompositivedatascatterx_ =
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.newBuilder(tschchartseriesdefaulterrorbarcustompositivedatascatterx_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaulterrorbarcustompositivedatascatterx_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 5;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarcustompositivedatascatterx() {
        if (tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustompositivedatascatterx_ = null;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 5;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder getTschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getTschchartseriesdefaulterrorbarcustompositivedatascatterxFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 5;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder getTschchartseriesdefaulterrorbarcustompositivedatascatterxOrBuilder() {
        if (tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_ != null) {
          return tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaulterrorbarcustompositivedatascatterx_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustompositivedatascatterx_;
        }
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder> 
          getTschchartseriesdefaulterrorbarcustompositivedatascatterxFieldBuilder() {
        if (tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder>(
                  getTschchartseriesdefaulterrorbarcustompositivedatascatterx(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaulterrorbarcustompositivedatascatterx_ = null;
        }
        return tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_;
      }

      private float tschchartseriesdefaulterrorbarfixedvalue_ ;
      /**
       * <code>optional float tschchartseriesdefaulterrorbarfixedvalue = 6;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarfixedvalue() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarfixedvalue = 6;</code>
       */
      public float getTschchartseriesdefaulterrorbarfixedvalue() {
        return tschchartseriesdefaulterrorbarfixedvalue_;
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarfixedvalue = 6;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarfixedvalue(float value) {
        bitField0_ |= 0x00000020;
        tschchartseriesdefaulterrorbarfixedvalue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarfixedvalue = 6;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarfixedvalue() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tschchartseriesdefaulterrorbarfixedvalue_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartseriesdefaulterrorbarfixedvaluescatterx_ ;
      /**
       * <code>optional float tschchartseriesdefaulterrorbarfixedvaluescatterx = 7;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarfixedvaluescatterx() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarfixedvaluescatterx = 7;</code>
       */
      public float getTschchartseriesdefaulterrorbarfixedvaluescatterx() {
        return tschchartseriesdefaulterrorbarfixedvaluescatterx_;
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarfixedvaluescatterx = 7;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarfixedvaluescatterx(float value) {
        bitField0_ |= 0x00000040;
        tschchartseriesdefaulterrorbarfixedvaluescatterx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarfixedvaluescatterx = 7;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarfixedvaluescatterx() {
        bitField0_ = (bitField0_ & ~0x00000040);
        tschchartseriesdefaulterrorbarfixedvaluescatterx_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartseriesdefaulterrorbarpercentvalue_ ;
      /**
       * <code>optional float tschchartseriesdefaulterrorbarpercentvalue = 8;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarpercentvalue() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarpercentvalue = 8;</code>
       */
      public float getTschchartseriesdefaulterrorbarpercentvalue() {
        return tschchartseriesdefaulterrorbarpercentvalue_;
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarpercentvalue = 8;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarpercentvalue(float value) {
        bitField0_ |= 0x00000080;
        tschchartseriesdefaulterrorbarpercentvalue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarpercentvalue = 8;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarpercentvalue() {
        bitField0_ = (bitField0_ & ~0x00000080);
        tschchartseriesdefaulterrorbarpercentvalue_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartseriesdefaulterrorbarpercentvaluescatterx_ ;
      /**
       * <code>optional float tschchartseriesdefaulterrorbarpercentvaluescatterx = 9;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarpercentvaluescatterx() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarpercentvaluescatterx = 9;</code>
       */
      public float getTschchartseriesdefaulterrorbarpercentvaluescatterx() {
        return tschchartseriesdefaulterrorbarpercentvaluescatterx_;
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarpercentvaluescatterx = 9;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarpercentvaluescatterx(float value) {
        bitField0_ |= 0x00000100;
        tschchartseriesdefaulterrorbarpercentvaluescatterx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarpercentvaluescatterx = 9;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarpercentvaluescatterx() {
        bitField0_ = (bitField0_ & ~0x00000100);
        tschchartseriesdefaulterrorbarpercentvaluescatterx_ = 0F;
        onChanged();
        return this;
      }

      private int tschchartseriesdefaulterrorbarsetting_ ;
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbarsetting = 10;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarsetting() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbarsetting = 10;</code>
       */
      public int getTschchartseriesdefaulterrorbarsetting() {
        return tschchartseriesdefaulterrorbarsetting_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbarsetting = 10;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarsetting(int value) {
        bitField0_ |= 0x00000200;
        tschchartseriesdefaulterrorbarsetting_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbarsetting = 10;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarsetting() {
        bitField0_ = (bitField0_ & ~0x00000200);
        tschchartseriesdefaulterrorbarsetting_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesdefaulterrorbarsettingscatterx_ ;
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbarsettingscatterx = 11;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarsettingscatterx() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbarsettingscatterx = 11;</code>
       */
      public int getTschchartseriesdefaulterrorbarsettingscatterx() {
        return tschchartseriesdefaulterrorbarsettingscatterx_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbarsettingscatterx = 11;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarsettingscatterx(int value) {
        bitField0_ |= 0x00000400;
        tschchartseriesdefaulterrorbarsettingscatterx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbarsettingscatterx = 11;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarsettingscatterx() {
        bitField0_ = (bitField0_ & ~0x00000400);
        tschchartseriesdefaulterrorbarsettingscatterx_ = 0;
        onChanged();
        return this;
      }

      private float tschchartseriesdefaulterrorbarstddevvalue_ ;
      /**
       * <code>optional float tschchartseriesdefaulterrorbarstddevvalue = 12;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarstddevvalue() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarstddevvalue = 12;</code>
       */
      public float getTschchartseriesdefaulterrorbarstddevvalue() {
        return tschchartseriesdefaulterrorbarstddevvalue_;
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarstddevvalue = 12;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarstddevvalue(float value) {
        bitField0_ |= 0x00000800;
        tschchartseriesdefaulterrorbarstddevvalue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarstddevvalue = 12;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarstddevvalue() {
        bitField0_ = (bitField0_ & ~0x00000800);
        tschchartseriesdefaulterrorbarstddevvalue_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartseriesdefaulterrorbarstddevvaluescatterx_ ;
      /**
       * <code>optional float tschchartseriesdefaulterrorbarstddevvaluescatterx = 13;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarstddevvaluescatterx() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarstddevvaluescatterx = 13;</code>
       */
      public float getTschchartseriesdefaulterrorbarstddevvaluescatterx() {
        return tschchartseriesdefaulterrorbarstddevvaluescatterx_;
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarstddevvaluescatterx = 13;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarstddevvaluescatterx(float value) {
        bitField0_ |= 0x00001000;
        tschchartseriesdefaulterrorbarstddevvaluescatterx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarstddevvaluescatterx = 13;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarstddevvaluescatterx() {
        bitField0_ = (bitField0_ & ~0x00001000);
        tschchartseriesdefaulterrorbarstddevvaluescatterx_ = 0F;
        onChanged();
        return this;
      }

      private int tschchartseriesdefaulterrorbartype_ ;
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbartype = 14;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbartype() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbartype = 14;</code>
       */
      public int getTschchartseriesdefaulterrorbartype() {
        return tschchartseriesdefaulterrorbartype_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbartype = 14;</code>
       */
      public Builder setTschchartseriesdefaulterrorbartype(int value) {
        bitField0_ |= 0x00002000;
        tschchartseriesdefaulterrorbartype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbartype = 14;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbartype() {
        bitField0_ = (bitField0_ & ~0x00002000);
        tschchartseriesdefaulterrorbartype_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesdefaulterrorbartypescatterx_ ;
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbartypescatterx = 15;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbartypescatterx() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbartypescatterx = 15;</code>
       */
      public int getTschchartseriesdefaulterrorbartypescatterx() {
        return tschchartseriesdefaulterrorbartypescatterx_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbartypescatterx = 15;</code>
       */
      public Builder setTschchartseriesdefaulterrorbartypescatterx(int value) {
        bitField0_ |= 0x00004000;
        tschchartseriesdefaulterrorbartypescatterx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbartypescatterx = 15;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbartypescatterx() {
        bitField0_ = (bitField0_ & ~0x00004000);
        tschchartseriesdefaulterrorbartypescatterx_ = 0;
        onChanged();
        return this;
      }

      private float tschchartseriespielabelexplosion_ ;
      /**
       * <code>optional float tschchartseriespielabelexplosion = 16;</code>
       */
      public boolean hasTschchartseriespielabelexplosion() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional float tschchartseriespielabelexplosion = 16;</code>
       */
      public float getTschchartseriespielabelexplosion() {
        return tschchartseriespielabelexplosion_;
      }
      /**
       * <code>optional float tschchartseriespielabelexplosion = 16;</code>
       */
      public Builder setTschchartseriespielabelexplosion(float value) {
        bitField0_ |= 0x00008000;
        tschchartseriespielabelexplosion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriespielabelexplosion = 16;</code>
       */
      public Builder clearTschchartseriespielabelexplosion() {
        bitField0_ = (bitField0_ & ~0x00008000);
        tschchartseriespielabelexplosion_ = 0F;
        onChanged();
        return this;
      }

      private int tschchartseriesbubblelinetype_ ;
      /**
       * <code>optional int32 tschchartseriesbubblelinetype = 17;</code>
       */
      public boolean hasTschchartseriesbubblelinetype() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 tschchartseriesbubblelinetype = 17;</code>
       */
      public int getTschchartseriesbubblelinetype() {
        return tschchartseriesbubblelinetype_;
      }
      /**
       * <code>optional int32 tschchartseriesbubblelinetype = 17;</code>
       */
      public Builder setTschchartseriesbubblelinetype(int value) {
        bitField0_ |= 0x00010000;
        tschchartseriesbubblelinetype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesbubblelinetype = 17;</code>
       */
      public Builder clearTschchartseriesbubblelinetype() {
        bitField0_ = (bitField0_ & ~0x00010000);
        tschchartseriesbubblelinetype_ = 0;
        onChanged();
        return this;
      }

      private int tschchartserieslinelinetype_ ;
      /**
       * <code>optional int32 tschchartserieslinelinetype = 18;</code>
       */
      public boolean hasTschchartserieslinelinetype() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 tschchartserieslinelinetype = 18;</code>
       */
      public int getTschchartserieslinelinetype() {
        return tschchartserieslinelinetype_;
      }
      /**
       * <code>optional int32 tschchartserieslinelinetype = 18;</code>
       */
      public Builder setTschchartserieslinelinetype(int value) {
        bitField0_ |= 0x00020000;
        tschchartserieslinelinetype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartserieslinelinetype = 18;</code>
       */
      public Builder clearTschchartserieslinelinetype() {
        bitField0_ = (bitField0_ & ~0x00020000);
        tschchartserieslinelinetype_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesmixedlinelinetype_ ;
      /**
       * <code>optional int32 tschchartseriesmixedlinelinetype = 19;</code>
       */
      public boolean hasTschchartseriesmixedlinelinetype() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 tschchartseriesmixedlinelinetype = 19;</code>
       */
      public int getTschchartseriesmixedlinelinetype() {
        return tschchartseriesmixedlinelinetype_;
      }
      /**
       * <code>optional int32 tschchartseriesmixedlinelinetype = 19;</code>
       */
      public Builder setTschchartseriesmixedlinelinetype(int value) {
        bitField0_ |= 0x00040000;
        tschchartseriesmixedlinelinetype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesmixedlinelinetype = 19;</code>
       */
      public Builder clearTschchartseriesmixedlinelinetype() {
        bitField0_ = (bitField0_ & ~0x00040000);
        tschchartseriesmixedlinelinetype_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesscatterlinetype_ ;
      /**
       * <code>optional int32 tschchartseriesscatterlinetype = 20;</code>
       */
      public boolean hasTschchartseriesscatterlinetype() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 tschchartseriesscatterlinetype = 20;</code>
       */
      public int getTschchartseriesscatterlinetype() {
        return tschchartseriesscatterlinetype_;
      }
      /**
       * <code>optional int32 tschchartseriesscatterlinetype = 20;</code>
       */
      public Builder setTschchartseriesscatterlinetype(int value) {
        bitField0_ |= 0x00080000;
        tschchartseriesscatterlinetype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesscatterlinetype = 20;</code>
       */
      public Builder clearTschchartseriesscatterlinetype() {
        bitField0_ = (bitField0_ & ~0x00080000);
        tschchartseriesscatterlinetype_ = 0;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive tschchartseriesdefaultnumberformat_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive, org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.Builder, org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchiveOrBuilder> tschchartseriesdefaultnumberformatBuilder_;
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriesdefaultnumberformat = 21;</code>
       */
      public boolean hasTschchartseriesdefaultnumberformat() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriesdefaultnumberformat = 21;</code>
       */
      public org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive getTschchartseriesdefaultnumberformat() {
        if (tschchartseriesdefaultnumberformatBuilder_ == null) {
          return tschchartseriesdefaultnumberformat_ == null ? org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.getDefaultInstance() : tschchartseriesdefaultnumberformat_;
        } else {
          return tschchartseriesdefaultnumberformatBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriesdefaultnumberformat = 21;</code>
       */
      public Builder setTschchartseriesdefaultnumberformat(org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive value) {
        if (tschchartseriesdefaultnumberformatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaultnumberformat_ = value;
          onChanged();
        } else {
          tschchartseriesdefaultnumberformatBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriesdefaultnumberformat = 21;</code>
       */
      public Builder setTschchartseriesdefaultnumberformat(
          org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.Builder builderForValue) {
        if (tschchartseriesdefaultnumberformatBuilder_ == null) {
          tschchartseriesdefaultnumberformat_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaultnumberformatBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriesdefaultnumberformat = 21;</code>
       */
      public Builder mergeTschchartseriesdefaultnumberformat(org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive value) {
        if (tschchartseriesdefaultnumberformatBuilder_ == null) {
          if (((bitField0_ & 0x00100000) == 0x00100000) &&
              tschchartseriesdefaultnumberformat_ != null &&
              tschchartseriesdefaultnumberformat_ != org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.getDefaultInstance()) {
            tschchartseriesdefaultnumberformat_ =
              org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.newBuilder(tschchartseriesdefaultnumberformat_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaultnumberformat_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaultnumberformatBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriesdefaultnumberformat = 21;</code>
       */
      public Builder clearTschchartseriesdefaultnumberformat() {
        if (tschchartseriesdefaultnumberformatBuilder_ == null) {
          tschchartseriesdefaultnumberformat_ = null;
          onChanged();
        } else {
          tschchartseriesdefaultnumberformatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00100000);
        return this;
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriesdefaultnumberformat = 21;</code>
       */
      public org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.Builder getTschchartseriesdefaultnumberformatBuilder() {
        bitField0_ |= 0x00100000;
        onChanged();
        return getTschchartseriesdefaultnumberformatFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriesdefaultnumberformat = 21;</code>
       */
      public org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchiveOrBuilder getTschchartseriesdefaultnumberformatOrBuilder() {
        if (tschchartseriesdefaultnumberformatBuilder_ != null) {
          return tschchartseriesdefaultnumberformatBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaultnumberformat_ == null ?
              org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.getDefaultInstance() : tschchartseriesdefaultnumberformat_;
        }
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriesdefaultnumberformat = 21;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive, org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.Builder, org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchiveOrBuilder> 
          getTschchartseriesdefaultnumberformatFieldBuilder() {
        if (tschchartseriesdefaultnumberformatBuilder_ == null) {
          tschchartseriesdefaultnumberformatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive, org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.Builder, org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchiveOrBuilder>(
                  getTschchartseriesdefaultnumberformat(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaultnumberformat_ = null;
        }
        return tschchartseriesdefaultnumberformatBuilder_;
      }

      private org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive tschchartseriespienumberformat_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive, org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.Builder, org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchiveOrBuilder> tschchartseriespienumberformatBuilder_;
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriespienumberformat = 22;</code>
       */
      public boolean hasTschchartseriespienumberformat() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriespienumberformat = 22;</code>
       */
      public org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive getTschchartseriespienumberformat() {
        if (tschchartseriespienumberformatBuilder_ == null) {
          return tschchartseriespienumberformat_ == null ? org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.getDefaultInstance() : tschchartseriespienumberformat_;
        } else {
          return tschchartseriespienumberformatBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriespienumberformat = 22;</code>
       */
      public Builder setTschchartseriespienumberformat(org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive value) {
        if (tschchartseriespienumberformatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriespienumberformat_ = value;
          onChanged();
        } else {
          tschchartseriespienumberformatBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriespienumberformat = 22;</code>
       */
      public Builder setTschchartseriespienumberformat(
          org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.Builder builderForValue) {
        if (tschchartseriespienumberformatBuilder_ == null) {
          tschchartseriespienumberformat_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriespienumberformatBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriespienumberformat = 22;</code>
       */
      public Builder mergeTschchartseriespienumberformat(org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive value) {
        if (tschchartseriespienumberformatBuilder_ == null) {
          if (((bitField0_ & 0x00200000) == 0x00200000) &&
              tschchartseriespienumberformat_ != null &&
              tschchartseriespienumberformat_ != org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.getDefaultInstance()) {
            tschchartseriespienumberformat_ =
              org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.newBuilder(tschchartseriespienumberformat_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriespienumberformat_ = value;
          }
          onChanged();
        } else {
          tschchartseriespienumberformatBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriespienumberformat = 22;</code>
       */
      public Builder clearTschchartseriespienumberformat() {
        if (tschchartseriespienumberformatBuilder_ == null) {
          tschchartseriespienumberformat_ = null;
          onChanged();
        } else {
          tschchartseriespienumberformatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriespienumberformat = 22;</code>
       */
      public org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.Builder getTschchartseriespienumberformatBuilder() {
        bitField0_ |= 0x00200000;
        onChanged();
        return getTschchartseriespienumberformatFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriespienumberformat = 22;</code>
       */
      public org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchiveOrBuilder getTschchartseriespienumberformatOrBuilder() {
        if (tschchartseriespienumberformatBuilder_ != null) {
          return tschchartseriespienumberformatBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriespienumberformat_ == null ?
              org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.getDefaultInstance() : tschchartseriespienumberformat_;
        }
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriespienumberformat = 22;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive, org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.Builder, org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchiveOrBuilder> 
          getTschchartseriespienumberformatFieldBuilder() {
        if (tschchartseriespienumberformatBuilder_ == null) {
          tschchartseriespienumberformatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive, org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.Builder, org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchiveOrBuilder>(
                  getTschchartseriespienumberformat(),
                  getParentForChildren(),
                  isClean());
          tschchartseriespienumberformat_ = null;
        }
        return tschchartseriespienumberformatBuilder_;
      }

      private int tschchartseriesdefaultnumberformattype_ ;
      /**
       * <code>optional int32 tschchartseriesdefaultnumberformattype = 23;</code>
       */
      public boolean hasTschchartseriesdefaultnumberformattype() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 tschchartseriesdefaultnumberformattype = 23;</code>
       */
      public int getTschchartseriesdefaultnumberformattype() {
        return tschchartseriesdefaultnumberformattype_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaultnumberformattype = 23;</code>
       */
      public Builder setTschchartseriesdefaultnumberformattype(int value) {
        bitField0_ |= 0x00400000;
        tschchartseriesdefaultnumberformattype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaultnumberformattype = 23;</code>
       */
      public Builder clearTschchartseriesdefaultnumberformattype() {
        bitField0_ = (bitField0_ & ~0x00400000);
        tschchartseriesdefaultnumberformattype_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriespienumberformattype_ ;
      /**
       * <code>optional int32 tschchartseriespienumberformattype = 24;</code>
       */
      public boolean hasTschchartseriespienumberformattype() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int32 tschchartseriespienumberformattype = 24;</code>
       */
      public int getTschchartseriespienumberformattype() {
        return tschchartseriespienumberformattype_;
      }
      /**
       * <code>optional int32 tschchartseriespienumberformattype = 24;</code>
       */
      public Builder setTschchartseriespienumberformattype(int value) {
        bitField0_ |= 0x00800000;
        tschchartseriespienumberformattype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriespienumberformattype = 24;</code>
       */
      public Builder clearTschchartseriespienumberformattype() {
        bitField0_ = (bitField0_ & ~0x00800000);
        tschchartseriespienumberformattype_ = 0;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive tschchartseriesstackedpercentnumberformat_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive, org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.Builder, org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchiveOrBuilder> tschchartseriesstackedpercentnumberformatBuilder_;
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriesstackedpercentnumberformat = 25;</code>
       */
      public boolean hasTschchartseriesstackedpercentnumberformat() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriesstackedpercentnumberformat = 25;</code>
       */
      public org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive getTschchartseriesstackedpercentnumberformat() {
        if (tschchartseriesstackedpercentnumberformatBuilder_ == null) {
          return tschchartseriesstackedpercentnumberformat_ == null ? org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.getDefaultInstance() : tschchartseriesstackedpercentnumberformat_;
        } else {
          return tschchartseriesstackedpercentnumberformatBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriesstackedpercentnumberformat = 25;</code>
       */
      public Builder setTschchartseriesstackedpercentnumberformat(org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive value) {
        if (tschchartseriesstackedpercentnumberformatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesstackedpercentnumberformat_ = value;
          onChanged();
        } else {
          tschchartseriesstackedpercentnumberformatBuilder_.setMessage(value);
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriesstackedpercentnumberformat = 25;</code>
       */
      public Builder setTschchartseriesstackedpercentnumberformat(
          org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.Builder builderForValue) {
        if (tschchartseriesstackedpercentnumberformatBuilder_ == null) {
          tschchartseriesstackedpercentnumberformat_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesstackedpercentnumberformatBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriesstackedpercentnumberformat = 25;</code>
       */
      public Builder mergeTschchartseriesstackedpercentnumberformat(org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive value) {
        if (tschchartseriesstackedpercentnumberformatBuilder_ == null) {
          if (((bitField0_ & 0x01000000) == 0x01000000) &&
              tschchartseriesstackedpercentnumberformat_ != null &&
              tschchartseriesstackedpercentnumberformat_ != org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.getDefaultInstance()) {
            tschchartseriesstackedpercentnumberformat_ =
              org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.newBuilder(tschchartseriesstackedpercentnumberformat_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesstackedpercentnumberformat_ = value;
          }
          onChanged();
        } else {
          tschchartseriesstackedpercentnumberformatBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriesstackedpercentnumberformat = 25;</code>
       */
      public Builder clearTschchartseriesstackedpercentnumberformat() {
        if (tschchartseriesstackedpercentnumberformatBuilder_ == null) {
          tschchartseriesstackedpercentnumberformat_ = null;
          onChanged();
        } else {
          tschchartseriesstackedpercentnumberformatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x01000000);
        return this;
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriesstackedpercentnumberformat = 25;</code>
       */
      public org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.Builder getTschchartseriesstackedpercentnumberformatBuilder() {
        bitField0_ |= 0x01000000;
        onChanged();
        return getTschchartseriesstackedpercentnumberformatFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriesstackedpercentnumberformat = 25;</code>
       */
      public org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchiveOrBuilder getTschchartseriesstackedpercentnumberformatOrBuilder() {
        if (tschchartseriesstackedpercentnumberformatBuilder_ != null) {
          return tschchartseriesstackedpercentnumberformatBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesstackedpercentnumberformat_ == null ?
              org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.getDefaultInstance() : tschchartseriesstackedpercentnumberformat_;
        }
      }
      /**
       * <code>optional .TSK.FormatStructArchive tschchartseriesstackedpercentnumberformat = 25;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive, org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.Builder, org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchiveOrBuilder> 
          getTschchartseriesstackedpercentnumberformatFieldBuilder() {
        if (tschchartseriesstackedpercentnumberformatBuilder_ == null) {
          tschchartseriesstackedpercentnumberformatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive, org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchive.Builder, org.techforumist.keynote.proto.TSK.TSKArchives.FormatStructArchiveOrBuilder>(
                  getTschchartseriesstackedpercentnumberformat(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesstackedpercentnumberformat_ = null;
        }
        return tschchartseriesstackedpercentnumberformatBuilder_;
      }

      private int tschchartseriesdefaultseriestype_ ;
      /**
       * <code>optional int32 tschchartseriesdefaultseriestype = 26;</code>
       */
      public boolean hasTschchartseriesdefaultseriestype() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int32 tschchartseriesdefaultseriestype = 26;</code>
       */
      public int getTschchartseriesdefaultseriestype() {
        return tschchartseriesdefaultseriestype_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaultseriestype = 26;</code>
       */
      public Builder setTschchartseriesdefaultseriestype(int value) {
        bitField0_ |= 0x02000000;
        tschchartseriesdefaultseriestype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaultseriestype = 26;</code>
       */
      public Builder clearTschchartseriesdefaultseriestype() {
        bitField0_ = (bitField0_ & ~0x02000000);
        tschchartseriesdefaultseriestype_ = 0;
        onChanged();
        return this;
      }

      private boolean tschchartseriesdefaultshowerrorbar_ ;
      /**
       * <code>optional bool tschchartseriesdefaultshowerrorbar = 27;</code>
       */
      public boolean hasTschchartseriesdefaultshowerrorbar() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional bool tschchartseriesdefaultshowerrorbar = 27;</code>
       */
      public boolean getTschchartseriesdefaultshowerrorbar() {
        return tschchartseriesdefaultshowerrorbar_;
      }
      /**
       * <code>optional bool tschchartseriesdefaultshowerrorbar = 27;</code>
       */
      public Builder setTschchartseriesdefaultshowerrorbar(boolean value) {
        bitField0_ |= 0x04000000;
        tschchartseriesdefaultshowerrorbar_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesdefaultshowerrorbar = 27;</code>
       */
      public Builder clearTschchartseriesdefaultshowerrorbar() {
        bitField0_ = (bitField0_ & ~0x04000000);
        tschchartseriesdefaultshowerrorbar_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesdefaultshowerrorbarscatterx_ ;
      /**
       * <code>optional bool tschchartseriesdefaultshowerrorbarscatterx = 28;</code>
       */
      public boolean hasTschchartseriesdefaultshowerrorbarscatterx() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional bool tschchartseriesdefaultshowerrorbarscatterx = 28;</code>
       */
      public boolean getTschchartseriesdefaultshowerrorbarscatterx() {
        return tschchartseriesdefaultshowerrorbarscatterx_;
      }
      /**
       * <code>optional bool tschchartseriesdefaultshowerrorbarscatterx = 28;</code>
       */
      public Builder setTschchartseriesdefaultshowerrorbarscatterx(boolean value) {
        bitField0_ |= 0x08000000;
        tschchartseriesdefaultshowerrorbarscatterx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesdefaultshowerrorbarscatterx = 28;</code>
       */
      public Builder clearTschchartseriesdefaultshowerrorbarscatterx() {
        bitField0_ = (bitField0_ & ~0x08000000);
        tschchartseriesdefaultshowerrorbarscatterx_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesscattershowline_ ;
      /**
       * <code>optional bool tschchartseriesscattershowline = 29;</code>
       */
      public boolean hasTschchartseriesscattershowline() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional bool tschchartseriesscattershowline = 29;</code>
       */
      public boolean getTschchartseriesscattershowline() {
        return tschchartseriesscattershowline_;
      }
      /**
       * <code>optional bool tschchartseriesscattershowline = 29;</code>
       */
      public Builder setTschchartseriesscattershowline(boolean value) {
        bitField0_ |= 0x10000000;
        tschchartseriesscattershowline_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesscattershowline = 29;</code>
       */
      public Builder clearTschchartseriesscattershowline() {
        bitField0_ = (bitField0_ & ~0x10000000);
        tschchartseriesscattershowline_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesbubbleshownegativedata_ ;
      /**
       * <code>optional bool tschchartseriesbubbleshownegativedata = 30;</code>
       */
      public boolean hasTschchartseriesbubbleshownegativedata() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional bool tschchartseriesbubbleshownegativedata = 30;</code>
       */
      public boolean getTschchartseriesbubbleshownegativedata() {
        return tschchartseriesbubbleshownegativedata_;
      }
      /**
       * <code>optional bool tschchartseriesbubbleshownegativedata = 30;</code>
       */
      public Builder setTschchartseriesbubbleshownegativedata(boolean value) {
        bitField0_ |= 0x20000000;
        tschchartseriesbubbleshownegativedata_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesbubbleshownegativedata = 30;</code>
       */
      public Builder clearTschchartseriesbubbleshownegativedata() {
        bitField0_ = (bitField0_ & ~0x20000000);
        tschchartseriesbubbleshownegativedata_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriespieshowserieslabels_ ;
      /**
       * <code>optional bool tschchartseriespieshowserieslabels = 31;</code>
       */
      public boolean hasTschchartseriespieshowserieslabels() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional bool tschchartseriespieshowserieslabels = 31;</code>
       */
      public boolean getTschchartseriespieshowserieslabels() {
        return tschchartseriespieshowserieslabels_;
      }
      /**
       * <code>optional bool tschchartseriespieshowserieslabels = 31;</code>
       */
      public Builder setTschchartseriespieshowserieslabels(boolean value) {
        bitField0_ |= 0x40000000;
        tschchartseriespieshowserieslabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriespieshowserieslabels = 31;</code>
       */
      public Builder clearTschchartseriespieshowserieslabels() {
        bitField0_ = (bitField0_ & ~0x40000000);
        tschchartseriespieshowserieslabels_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesareashowsymbol_ ;
      /**
       * <code>optional bool tschchartseriesareashowsymbol = 32;</code>
       */
      public boolean hasTschchartseriesareashowsymbol() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional bool tschchartseriesareashowsymbol = 32;</code>
       */
      public boolean getTschchartseriesareashowsymbol() {
        return tschchartseriesareashowsymbol_;
      }
      /**
       * <code>optional bool tschchartseriesareashowsymbol = 32;</code>
       */
      public Builder setTschchartseriesareashowsymbol(boolean value) {
        bitField0_ |= 0x80000000;
        tschchartseriesareashowsymbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesareashowsymbol = 32;</code>
       */
      public Builder clearTschchartseriesareashowsymbol() {
        bitField0_ = (bitField0_ & ~0x80000000);
        tschchartseriesareashowsymbol_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartserieslineshowsymbol_ ;
      /**
       * <code>optional bool tschchartserieslineshowsymbol = 33;</code>
       */
      public boolean hasTschchartserieslineshowsymbol() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool tschchartserieslineshowsymbol = 33;</code>
       */
      public boolean getTschchartserieslineshowsymbol() {
        return tschchartserieslineshowsymbol_;
      }
      /**
       * <code>optional bool tschchartserieslineshowsymbol = 33;</code>
       */
      public Builder setTschchartserieslineshowsymbol(boolean value) {
        bitField1_ |= 0x00000001;
        tschchartserieslineshowsymbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartserieslineshowsymbol = 33;</code>
       */
      public Builder clearTschchartserieslineshowsymbol() {
        bitField1_ = (bitField1_ & ~0x00000001);
        tschchartserieslineshowsymbol_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesmixedareashowsymbol_ ;
      /**
       * <code>optional bool tschchartseriesmixedareashowsymbol = 34;</code>
       */
      public boolean hasTschchartseriesmixedareashowsymbol() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool tschchartseriesmixedareashowsymbol = 34;</code>
       */
      public boolean getTschchartseriesmixedareashowsymbol() {
        return tschchartseriesmixedareashowsymbol_;
      }
      /**
       * <code>optional bool tschchartseriesmixedareashowsymbol = 34;</code>
       */
      public Builder setTschchartseriesmixedareashowsymbol(boolean value) {
        bitField1_ |= 0x00000002;
        tschchartseriesmixedareashowsymbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesmixedareashowsymbol = 34;</code>
       */
      public Builder clearTschchartseriesmixedareashowsymbol() {
        bitField1_ = (bitField1_ & ~0x00000002);
        tschchartseriesmixedareashowsymbol_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesmixedlineshowsymbol_ ;
      /**
       * <code>optional bool tschchartseriesmixedlineshowsymbol = 35;</code>
       */
      public boolean hasTschchartseriesmixedlineshowsymbol() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool tschchartseriesmixedlineshowsymbol = 35;</code>
       */
      public boolean getTschchartseriesmixedlineshowsymbol() {
        return tschchartseriesmixedlineshowsymbol_;
      }
      /**
       * <code>optional bool tschchartseriesmixedlineshowsymbol = 35;</code>
       */
      public Builder setTschchartseriesmixedlineshowsymbol(boolean value) {
        bitField1_ |= 0x00000004;
        tschchartseriesmixedlineshowsymbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesmixedlineshowsymbol = 35;</code>
       */
      public Builder clearTschchartseriesmixedlineshowsymbol() {
        bitField1_ = (bitField1_ & ~0x00000004);
        tschchartseriesmixedlineshowsymbol_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesscattershowsymbol_ ;
      /**
       * <code>optional bool tschchartseriesscattershowsymbol = 36;</code>
       */
      public boolean hasTschchartseriesscattershowsymbol() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool tschchartseriesscattershowsymbol = 36;</code>
       */
      public boolean getTschchartseriesscattershowsymbol() {
        return tschchartseriesscattershowsymbol_;
      }
      /**
       * <code>optional bool tschchartseriesscattershowsymbol = 36;</code>
       */
      public Builder setTschchartseriesscattershowsymbol(boolean value) {
        bitField1_ |= 0x00000008;
        tschchartseriesscattershowsymbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesscattershowsymbol = 36;</code>
       */
      public Builder clearTschchartseriesscattershowsymbol() {
        bitField1_ = (bitField1_ & ~0x00000008);
        tschchartseriesscattershowsymbol_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesdefaultshowtrendline_ ;
      /**
       * <code>optional bool tschchartseriesdefaultshowtrendline = 37;</code>
       */
      public boolean hasTschchartseriesdefaultshowtrendline() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool tschchartseriesdefaultshowtrendline = 37;</code>
       */
      public boolean getTschchartseriesdefaultshowtrendline() {
        return tschchartseriesdefaultshowtrendline_;
      }
      /**
       * <code>optional bool tschchartseriesdefaultshowtrendline = 37;</code>
       */
      public Builder setTschchartseriesdefaultshowtrendline(boolean value) {
        bitField1_ |= 0x00000010;
        tschchartseriesdefaultshowtrendline_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesdefaultshowtrendline = 37;</code>
       */
      public Builder clearTschchartseriesdefaultshowtrendline() {
        bitField1_ = (bitField1_ & ~0x00000010);
        tschchartseriesdefaultshowtrendline_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesareashowvaluelabels_ ;
      /**
       * <code>optional bool tschchartseriesareashowvaluelabels = 38;</code>
       */
      public boolean hasTschchartseriesareashowvaluelabels() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool tschchartseriesareashowvaluelabels = 38;</code>
       */
      public boolean getTschchartseriesareashowvaluelabels() {
        return tschchartseriesareashowvaluelabels_;
      }
      /**
       * <code>optional bool tschchartseriesareashowvaluelabels = 38;</code>
       */
      public Builder setTschchartseriesareashowvaluelabels(boolean value) {
        bitField1_ |= 0x00000020;
        tschchartseriesareashowvaluelabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesareashowvaluelabels = 38;</code>
       */
      public Builder clearTschchartseriesareashowvaluelabels() {
        bitField1_ = (bitField1_ & ~0x00000020);
        tschchartseriesareashowvaluelabels_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesbarshowvaluelabels_ ;
      /**
       * <code>optional bool tschchartseriesbarshowvaluelabels = 39;</code>
       */
      public boolean hasTschchartseriesbarshowvaluelabels() {
        return ((bitField1_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool tschchartseriesbarshowvaluelabels = 39;</code>
       */
      public boolean getTschchartseriesbarshowvaluelabels() {
        return tschchartseriesbarshowvaluelabels_;
      }
      /**
       * <code>optional bool tschchartseriesbarshowvaluelabels = 39;</code>
       */
      public Builder setTschchartseriesbarshowvaluelabels(boolean value) {
        bitField1_ |= 0x00000040;
        tschchartseriesbarshowvaluelabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesbarshowvaluelabels = 39;</code>
       */
      public Builder clearTschchartseriesbarshowvaluelabels() {
        bitField1_ = (bitField1_ & ~0x00000040);
        tschchartseriesbarshowvaluelabels_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesbubbleshowvaluelabels_ ;
      /**
       * <code>optional bool tschchartseriesbubbleshowvaluelabels = 40;</code>
       */
      public boolean hasTschchartseriesbubbleshowvaluelabels() {
        return ((bitField1_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool tschchartseriesbubbleshowvaluelabels = 40;</code>
       */
      public boolean getTschchartseriesbubbleshowvaluelabels() {
        return tschchartseriesbubbleshowvaluelabels_;
      }
      /**
       * <code>optional bool tschchartseriesbubbleshowvaluelabels = 40;</code>
       */
      public Builder setTschchartseriesbubbleshowvaluelabels(boolean value) {
        bitField1_ |= 0x00000080;
        tschchartseriesbubbleshowvaluelabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesbubbleshowvaluelabels = 40;</code>
       */
      public Builder clearTschchartseriesbubbleshowvaluelabels() {
        bitField1_ = (bitField1_ & ~0x00000080);
        tschchartseriesbubbleshowvaluelabels_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesdefaultshowvaluelabels_ ;
      /**
       * <code>optional bool tschchartseriesdefaultshowvaluelabels = 41;</code>
       */
      public boolean hasTschchartseriesdefaultshowvaluelabels() {
        return ((bitField1_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool tschchartseriesdefaultshowvaluelabels = 41;</code>
       */
      public boolean getTschchartseriesdefaultshowvaluelabels() {
        return tschchartseriesdefaultshowvaluelabels_;
      }
      /**
       * <code>optional bool tschchartseriesdefaultshowvaluelabels = 41;</code>
       */
      public Builder setTschchartseriesdefaultshowvaluelabels(boolean value) {
        bitField1_ |= 0x00000100;
        tschchartseriesdefaultshowvaluelabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesdefaultshowvaluelabels = 41;</code>
       */
      public Builder clearTschchartseriesdefaultshowvaluelabels() {
        bitField1_ = (bitField1_ & ~0x00000100);
        tschchartseriesdefaultshowvaluelabels_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartserieslineshowvaluelabels_ ;
      /**
       * <code>optional bool tschchartserieslineshowvaluelabels = 42;</code>
       */
      public boolean hasTschchartserieslineshowvaluelabels() {
        return ((bitField1_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool tschchartserieslineshowvaluelabels = 42;</code>
       */
      public boolean getTschchartserieslineshowvaluelabels() {
        return tschchartserieslineshowvaluelabels_;
      }
      /**
       * <code>optional bool tschchartserieslineshowvaluelabels = 42;</code>
       */
      public Builder setTschchartserieslineshowvaluelabels(boolean value) {
        bitField1_ |= 0x00000200;
        tschchartserieslineshowvaluelabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartserieslineshowvaluelabels = 42;</code>
       */
      public Builder clearTschchartserieslineshowvaluelabels() {
        bitField1_ = (bitField1_ & ~0x00000200);
        tschchartserieslineshowvaluelabels_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesmixedshowvaluelabels_ ;
      /**
       * <code>optional bool tschchartseriesmixedshowvaluelabels = 43;</code>
       */
      public boolean hasTschchartseriesmixedshowvaluelabels() {
        return ((bitField1_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool tschchartseriesmixedshowvaluelabels = 43;</code>
       */
      public boolean getTschchartseriesmixedshowvaluelabels() {
        return tschchartseriesmixedshowvaluelabels_;
      }
      /**
       * <code>optional bool tschchartseriesmixedshowvaluelabels = 43;</code>
       */
      public Builder setTschchartseriesmixedshowvaluelabels(boolean value) {
        bitField1_ |= 0x00000400;
        tschchartseriesmixedshowvaluelabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesmixedshowvaluelabels = 43;</code>
       */
      public Builder clearTschchartseriesmixedshowvaluelabels() {
        bitField1_ = (bitField1_ & ~0x00000400);
        tschchartseriesmixedshowvaluelabels_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriespieshowvaluelabels_ ;
      /**
       * <code>optional bool tschchartseriespieshowvaluelabels = 44;</code>
       */
      public boolean hasTschchartseriespieshowvaluelabels() {
        return ((bitField1_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool tschchartseriespieshowvaluelabels = 44;</code>
       */
      public boolean getTschchartseriespieshowvaluelabels() {
        return tschchartseriespieshowvaluelabels_;
      }
      /**
       * <code>optional bool tschchartseriespieshowvaluelabels = 44;</code>
       */
      public Builder setTschchartseriespieshowvaluelabels(boolean value) {
        bitField1_ |= 0x00000800;
        tschchartseriespieshowvaluelabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriespieshowvaluelabels = 44;</code>
       */
      public Builder clearTschchartseriespieshowvaluelabels() {
        bitField1_ = (bitField1_ & ~0x00000800);
        tschchartseriespieshowvaluelabels_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesscattershowvaluelabels_ ;
      /**
       * <code>optional bool tschchartseriesscattershowvaluelabels = 45;</code>
       */
      public boolean hasTschchartseriesscattershowvaluelabels() {
        return ((bitField1_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bool tschchartseriesscattershowvaluelabels = 45;</code>
       */
      public boolean getTschchartseriesscattershowvaluelabels() {
        return tschchartseriesscattershowvaluelabels_;
      }
      /**
       * <code>optional bool tschchartseriesscattershowvaluelabels = 45;</code>
       */
      public Builder setTschchartseriesscattershowvaluelabels(boolean value) {
        bitField1_ |= 0x00001000;
        tschchartseriesscattershowvaluelabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesscattershowvaluelabels = 45;</code>
       */
      public Builder clearTschchartseriesscattershowvaluelabels() {
        bitField1_ = (bitField1_ & ~0x00001000);
        tschchartseriesscattershowvaluelabels_ = false;
        onChanged();
        return this;
      }

      private int tschchartseriesbubblesizedimension_ ;
      /**
       * <code>optional int32 tschchartseriesbubblesizedimension = 46;</code>
       */
      public boolean hasTschchartseriesbubblesizedimension() {
        return ((bitField1_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 tschchartseriesbubblesizedimension = 46;</code>
       */
      public int getTschchartseriesbubblesizedimension() {
        return tschchartseriesbubblesizedimension_;
      }
      /**
       * <code>optional int32 tschchartseriesbubblesizedimension = 46;</code>
       */
      public Builder setTschchartseriesbubblesizedimension(int value) {
        bitField1_ |= 0x00002000;
        tschchartseriesbubblesizedimension_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesbubblesizedimension = 46;</code>
       */
      public Builder clearTschchartseriesbubblesizedimension() {
        bitField1_ = (bitField1_ & ~0x00002000);
        tschchartseriesbubblesizedimension_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesareasymboltype_ ;
      /**
       * <code>optional int32 tschchartseriesareasymboltype = 47;</code>
       */
      public boolean hasTschchartseriesareasymboltype() {
        return ((bitField1_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 tschchartseriesareasymboltype = 47;</code>
       */
      public int getTschchartseriesareasymboltype() {
        return tschchartseriesareasymboltype_;
      }
      /**
       * <code>optional int32 tschchartseriesareasymboltype = 47;</code>
       */
      public Builder setTschchartseriesareasymboltype(int value) {
        bitField1_ |= 0x00004000;
        tschchartseriesareasymboltype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesareasymboltype = 47;</code>
       */
      public Builder clearTschchartseriesareasymboltype() {
        bitField1_ = (bitField1_ & ~0x00004000);
        tschchartseriesareasymboltype_ = 0;
        onChanged();
        return this;
      }

      private int tschchartserieslinesymboltype_ ;
      /**
       * <code>optional int32 tschchartserieslinesymboltype = 48;</code>
       */
      public boolean hasTschchartserieslinesymboltype() {
        return ((bitField1_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 tschchartserieslinesymboltype = 48;</code>
       */
      public int getTschchartserieslinesymboltype() {
        return tschchartserieslinesymboltype_;
      }
      /**
       * <code>optional int32 tschchartserieslinesymboltype = 48;</code>
       */
      public Builder setTschchartserieslinesymboltype(int value) {
        bitField1_ |= 0x00008000;
        tschchartserieslinesymboltype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartserieslinesymboltype = 48;</code>
       */
      public Builder clearTschchartserieslinesymboltype() {
        bitField1_ = (bitField1_ & ~0x00008000);
        tschchartserieslinesymboltype_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesmixedareasymboltype_ ;
      /**
       * <code>optional int32 tschchartseriesmixedareasymboltype = 49;</code>
       */
      public boolean hasTschchartseriesmixedareasymboltype() {
        return ((bitField1_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 tschchartseriesmixedareasymboltype = 49;</code>
       */
      public int getTschchartseriesmixedareasymboltype() {
        return tschchartseriesmixedareasymboltype_;
      }
      /**
       * <code>optional int32 tschchartseriesmixedareasymboltype = 49;</code>
       */
      public Builder setTschchartseriesmixedareasymboltype(int value) {
        bitField1_ |= 0x00010000;
        tschchartseriesmixedareasymboltype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesmixedareasymboltype = 49;</code>
       */
      public Builder clearTschchartseriesmixedareasymboltype() {
        bitField1_ = (bitField1_ & ~0x00010000);
        tschchartseriesmixedareasymboltype_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesmixedlinesymboltype_ ;
      /**
       * <code>optional int32 tschchartseriesmixedlinesymboltype = 50;</code>
       */
      public boolean hasTschchartseriesmixedlinesymboltype() {
        return ((bitField1_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 tschchartseriesmixedlinesymboltype = 50;</code>
       */
      public int getTschchartseriesmixedlinesymboltype() {
        return tschchartseriesmixedlinesymboltype_;
      }
      /**
       * <code>optional int32 tschchartseriesmixedlinesymboltype = 50;</code>
       */
      public Builder setTschchartseriesmixedlinesymboltype(int value) {
        bitField1_ |= 0x00020000;
        tschchartseriesmixedlinesymboltype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesmixedlinesymboltype = 50;</code>
       */
      public Builder clearTschchartseriesmixedlinesymboltype() {
        bitField1_ = (bitField1_ & ~0x00020000);
        tschchartseriesmixedlinesymboltype_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesscattersymboltype_ ;
      /**
       * <code>optional int32 tschchartseriesscattersymboltype = 51;</code>
       */
      public boolean hasTschchartseriesscattersymboltype() {
        return ((bitField1_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 tschchartseriesscattersymboltype = 51;</code>
       */
      public int getTschchartseriesscattersymboltype() {
        return tschchartseriesscattersymboltype_;
      }
      /**
       * <code>optional int32 tschchartseriesscattersymboltype = 51;</code>
       */
      public Builder setTschchartseriesscattersymboltype(int value) {
        bitField1_ |= 0x00040000;
        tschchartseriesscattersymboltype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesscattersymboltype = 51;</code>
       */
      public Builder clearTschchartseriesscattersymboltype() {
        bitField1_ = (bitField1_ & ~0x00040000);
        tschchartseriesscattersymboltype_ = 0;
        onChanged();
        return this;
      }

      private float tschchartseriesdefaulttrendlineequationoffsetx_ ;
      /**
       * <code>optional float tschchartseriesdefaulttrendlineequationoffsetx = 52;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlineequationoffsetx() {
        return ((bitField1_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlineequationoffsetx = 52;</code>
       */
      public float getTschchartseriesdefaulttrendlineequationoffsetx() {
        return tschchartseriesdefaulttrendlineequationoffsetx_;
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlineequationoffsetx = 52;</code>
       */
      public Builder setTschchartseriesdefaulttrendlineequationoffsetx(float value) {
        bitField1_ |= 0x00080000;
        tschchartseriesdefaulttrendlineequationoffsetx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlineequationoffsetx = 52;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlineequationoffsetx() {
        bitField1_ = (bitField1_ & ~0x00080000);
        tschchartseriesdefaulttrendlineequationoffsetx_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartseriesdefaulttrendlineequationoffsety_ ;
      /**
       * <code>optional float tschchartseriesdefaulttrendlineequationoffsety = 53;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlineequationoffsety() {
        return ((bitField1_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlineequationoffsety = 53;</code>
       */
      public float getTschchartseriesdefaulttrendlineequationoffsety() {
        return tschchartseriesdefaulttrendlineequationoffsety_;
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlineequationoffsety = 53;</code>
       */
      public Builder setTschchartseriesdefaulttrendlineequationoffsety(float value) {
        bitField1_ |= 0x00100000;
        tschchartseriesdefaulttrendlineequationoffsety_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlineequationoffsety = 53;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlineequationoffsety() {
        bitField1_ = (bitField1_ & ~0x00100000);
        tschchartseriesdefaulttrendlineequationoffsety_ = 0F;
        onChanged();
        return this;
      }

      private java.lang.Object tschchartseriesdefaulttrendlinelabelstring_ = "";
      /**
       * <code>optional string tschchartseriesdefaulttrendlinelabelstring = 54;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlinelabelstring() {
        return ((bitField1_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional string tschchartseriesdefaulttrendlinelabelstring = 54;</code>
       */
      public java.lang.String getTschchartseriesdefaulttrendlinelabelstring() {
        java.lang.Object ref = tschchartseriesdefaulttrendlinelabelstring_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tschchartseriesdefaulttrendlinelabelstring_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string tschchartseriesdefaulttrendlinelabelstring = 54;</code>
       */
      public com.google.protobuf.ByteString
          getTschchartseriesdefaulttrendlinelabelstringBytes() {
        java.lang.Object ref = tschchartseriesdefaulttrendlinelabelstring_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tschchartseriesdefaulttrendlinelabelstring_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string tschchartseriesdefaulttrendlinelabelstring = 54;</code>
       */
      public Builder setTschchartseriesdefaulttrendlinelabelstring(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00200000;
        tschchartseriesdefaulttrendlinelabelstring_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string tschchartseriesdefaulttrendlinelabelstring = 54;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlinelabelstring() {
        bitField1_ = (bitField1_ & ~0x00200000);
        tschchartseriesdefaulttrendlinelabelstring_ = getDefaultInstance().getTschchartseriesdefaulttrendlinelabelstring();
        onChanged();
        return this;
      }
      /**
       * <code>optional string tschchartseriesdefaulttrendlinelabelstring = 54;</code>
       */
      public Builder setTschchartseriesdefaulttrendlinelabelstringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00200000;
        tschchartseriesdefaulttrendlinelabelstring_ = value;
        onChanged();
        return this;
      }

      private int tschchartseriesdefaulttrendlineorder_ ;
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlineorder = 55;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlineorder() {
        return ((bitField1_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlineorder = 55;</code>
       */
      public int getTschchartseriesdefaulttrendlineorder() {
        return tschchartseriesdefaulttrendlineorder_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlineorder = 55;</code>
       */
      public Builder setTschchartseriesdefaulttrendlineorder(int value) {
        bitField1_ |= 0x00400000;
        tschchartseriesdefaulttrendlineorder_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlineorder = 55;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlineorder() {
        bitField1_ = (bitField1_ & ~0x00400000);
        tschchartseriesdefaulttrendlineorder_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesdefaulttrendlineperiod_ ;
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlineperiod = 56;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlineperiod() {
        return ((bitField1_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlineperiod = 56;</code>
       */
      public int getTschchartseriesdefaulttrendlineperiod() {
        return tschchartseriesdefaulttrendlineperiod_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlineperiod = 56;</code>
       */
      public Builder setTschchartseriesdefaulttrendlineperiod(int value) {
        bitField1_ |= 0x00800000;
        tschchartseriesdefaulttrendlineperiod_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlineperiod = 56;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlineperiod() {
        bitField1_ = (bitField1_ & ~0x00800000);
        tschchartseriesdefaulttrendlineperiod_ = 0;
        onChanged();
        return this;
      }

      private float tschchartseriesdefaulttrendlinersquaredoffsetx_ ;
      /**
       * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsetx = 57;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlinersquaredoffsetx() {
        return ((bitField1_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsetx = 57;</code>
       */
      public float getTschchartseriesdefaulttrendlinersquaredoffsetx() {
        return tschchartseriesdefaulttrendlinersquaredoffsetx_;
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsetx = 57;</code>
       */
      public Builder setTschchartseriesdefaulttrendlinersquaredoffsetx(float value) {
        bitField1_ |= 0x01000000;
        tschchartseriesdefaulttrendlinersquaredoffsetx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsetx = 57;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlinersquaredoffsetx() {
        bitField1_ = (bitField1_ & ~0x01000000);
        tschchartseriesdefaulttrendlinersquaredoffsetx_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartseriesdefaulttrendlinersquaredoffsety_ ;
      /**
       * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsety = 58;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlinersquaredoffsety() {
        return ((bitField1_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsety = 58;</code>
       */
      public float getTschchartseriesdefaulttrendlinersquaredoffsety() {
        return tschchartseriesdefaulttrendlinersquaredoffsety_;
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsety = 58;</code>
       */
      public Builder setTschchartseriesdefaulttrendlinersquaredoffsety(float value) {
        bitField1_ |= 0x02000000;
        tschchartseriesdefaulttrendlinersquaredoffsety_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsety = 58;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlinersquaredoffsety() {
        bitField1_ = (bitField1_ & ~0x02000000);
        tschchartseriesdefaulttrendlinersquaredoffsety_ = 0F;
        onChanged();
        return this;
      }

      private boolean tschchartseriesdefaulttrendlineshowequation_ ;
      /**
       * <code>optional bool tschchartseriesdefaulttrendlineshowequation = 59;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlineshowequation() {
        return ((bitField1_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional bool tschchartseriesdefaulttrendlineshowequation = 59;</code>
       */
      public boolean getTschchartseriesdefaulttrendlineshowequation() {
        return tschchartseriesdefaulttrendlineshowequation_;
      }
      /**
       * <code>optional bool tschchartseriesdefaulttrendlineshowequation = 59;</code>
       */
      public Builder setTschchartseriesdefaulttrendlineshowequation(boolean value) {
        bitField1_ |= 0x04000000;
        tschchartseriesdefaulttrendlineshowequation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesdefaulttrendlineshowequation = 59;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlineshowequation() {
        bitField1_ = (bitField1_ & ~0x04000000);
        tschchartseriesdefaulttrendlineshowequation_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesdefaulttrendlineshowlabel_ ;
      /**
       * <code>optional bool tschchartseriesdefaulttrendlineshowlabel = 60;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlineshowlabel() {
        return ((bitField1_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional bool tschchartseriesdefaulttrendlineshowlabel = 60;</code>
       */
      public boolean getTschchartseriesdefaulttrendlineshowlabel() {
        return tschchartseriesdefaulttrendlineshowlabel_;
      }
      /**
       * <code>optional bool tschchartseriesdefaulttrendlineshowlabel = 60;</code>
       */
      public Builder setTschchartseriesdefaulttrendlineshowlabel(boolean value) {
        bitField1_ |= 0x08000000;
        tschchartseriesdefaulttrendlineshowlabel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesdefaulttrendlineshowlabel = 60;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlineshowlabel() {
        bitField1_ = (bitField1_ & ~0x08000000);
        tschchartseriesdefaulttrendlineshowlabel_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesdefaulttrendlineshowr2Value_ ;
      /**
       * <code>optional bool tschchartseriesdefaulttrendlineshowr2value = 61;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlineshowr2Value() {
        return ((bitField1_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional bool tschchartseriesdefaulttrendlineshowr2value = 61;</code>
       */
      public boolean getTschchartseriesdefaulttrendlineshowr2Value() {
        return tschchartseriesdefaulttrendlineshowr2Value_;
      }
      /**
       * <code>optional bool tschchartseriesdefaulttrendlineshowr2value = 61;</code>
       */
      public Builder setTschchartseriesdefaulttrendlineshowr2Value(boolean value) {
        bitField1_ |= 0x10000000;
        tschchartseriesdefaulttrendlineshowr2Value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesdefaulttrendlineshowr2value = 61;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlineshowr2Value() {
        bitField1_ = (bitField1_ & ~0x10000000);
        tschchartseriesdefaulttrendlineshowr2Value_ = false;
        onChanged();
        return this;
      }

      private int tschchartseriesdefaulttrendlinetype_ ;
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlinetype = 62;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlinetype() {
        return ((bitField1_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlinetype = 62;</code>
       */
      public int getTschchartseriesdefaulttrendlinetype() {
        return tschchartseriesdefaulttrendlinetype_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlinetype = 62;</code>
       */
      public Builder setTschchartseriesdefaulttrendlinetype(int value) {
        bitField1_ |= 0x20000000;
        tschchartseriesdefaulttrendlinetype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlinetype = 62;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlinetype() {
        bitField1_ = (bitField1_ & ~0x20000000);
        tschchartseriesdefaulttrendlinetype_ = 0;
        onChanged();
        return this;
      }

      private float tschchartseriespiewedgeexplosion_ ;
      /**
       * <code>optional float tschchartseriespiewedgeexplosion = 63;</code>
       */
      public boolean hasTschchartseriespiewedgeexplosion() {
        return ((bitField1_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional float tschchartseriespiewedgeexplosion = 63;</code>
       */
      public float getTschchartseriespiewedgeexplosion() {
        return tschchartseriespiewedgeexplosion_;
      }
      /**
       * <code>optional float tschchartseriespiewedgeexplosion = 63;</code>
       */
      public Builder setTschchartseriespiewedgeexplosion(float value) {
        bitField1_ |= 0x40000000;
        tschchartseriespiewedgeexplosion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriespiewedgeexplosion = 63;</code>
       */
      public Builder clearTschchartseriespiewedgeexplosion() {
        bitField1_ = (bitField1_ & ~0x40000000);
        tschchartseriespiewedgeexplosion_ = 0F;
        onChanged();
        return this;
      }

      private int tschchartseriesdefaultyaxisordinal_ ;
      /**
       * <code>optional int32 tschchartseriesdefaultyaxisordinal = 64;</code>
       */
      public boolean hasTschchartseriesdefaultyaxisordinal() {
        return ((bitField1_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional int32 tschchartseriesdefaultyaxisordinal = 64;</code>
       */
      public int getTschchartseriesdefaultyaxisordinal() {
        return tschchartseriesdefaultyaxisordinal_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaultyaxisordinal = 64;</code>
       */
      public Builder setTschchartseriesdefaultyaxisordinal(int value) {
        bitField1_ |= 0x80000000;
        tschchartseriesdefaultyaxisordinal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaultyaxisordinal = 64;</code>
       */
      public Builder clearTschchartseriesdefaultyaxisordinal() {
        bitField1_ = (bitField1_ & ~0x80000000);
        tschchartseriesdefaultyaxisordinal_ = 0;
        onChanged();
        return this;
      }

      private boolean tschchartseriesbubbleshowserieslabels_ ;
      /**
       * <code>optional bool tschchartseriesbubbleshowserieslabels = 65;</code>
       */
      public boolean hasTschchartseriesbubbleshowserieslabels() {
        return ((bitField2_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool tschchartseriesbubbleshowserieslabels = 65;</code>
       */
      public boolean getTschchartseriesbubbleshowserieslabels() {
        return tschchartseriesbubbleshowserieslabels_;
      }
      /**
       * <code>optional bool tschchartseriesbubbleshowserieslabels = 65;</code>
       */
      public Builder setTschchartseriesbubbleshowserieslabels(boolean value) {
        bitField2_ |= 0x00000001;
        tschchartseriesbubbleshowserieslabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesbubbleshowserieslabels = 65;</code>
       */
      public Builder clearTschchartseriesbubbleshowserieslabels() {
        bitField2_ = (bitField2_ & ~0x00000001);
        tschchartseriesbubbleshowserieslabels_ = false;
        onChanged();
        return this;
      }

      private int tschchartseriesbubblevaluelabelsaxis_ ;
      /**
       * <code>optional int32 tschchartseriesbubblevaluelabelsaxis = 66;</code>
       */
      public boolean hasTschchartseriesbubblevaluelabelsaxis() {
        return ((bitField2_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 tschchartseriesbubblevaluelabelsaxis = 66;</code>
       */
      public int getTschchartseriesbubblevaluelabelsaxis() {
        return tschchartseriesbubblevaluelabelsaxis_;
      }
      /**
       * <code>optional int32 tschchartseriesbubblevaluelabelsaxis = 66;</code>
       */
      public Builder setTschchartseriesbubblevaluelabelsaxis(int value) {
        bitField2_ |= 0x00000002;
        tschchartseriesbubblevaluelabelsaxis_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesbubblevaluelabelsaxis = 66;</code>
       */
      public Builder clearTschchartseriesbubblevaluelabelsaxis() {
        bitField2_ = (bitField2_ & ~0x00000002);
        tschchartseriesbubblevaluelabelsaxis_ = 0;
        onChanged();
        return this;
      }

      private boolean tschchartseriesscattershowserieslabels_ ;
      /**
       * <code>optional bool tschchartseriesscattershowserieslabels = 67;</code>
       */
      public boolean hasTschchartseriesscattershowserieslabels() {
        return ((bitField2_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool tschchartseriesscattershowserieslabels = 67;</code>
       */
      public boolean getTschchartseriesscattershowserieslabels() {
        return tschchartseriesscattershowserieslabels_;
      }
      /**
       * <code>optional bool tschchartseriesscattershowserieslabels = 67;</code>
       */
      public Builder setTschchartseriesscattershowserieslabels(boolean value) {
        bitField2_ |= 0x00000004;
        tschchartseriesscattershowserieslabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesscattershowserieslabels = 67;</code>
       */
      public Builder clearTschchartseriesscattershowserieslabels() {
        bitField2_ = (bitField2_ & ~0x00000004);
        tschchartseriesscattershowserieslabels_ = false;
        onChanged();
        return this;
      }

      private int tschchartseriesscattervaluelabelsaxis_ ;
      /**
       * <code>optional int32 tschchartseriesscattervaluelabelsaxis = 68;</code>
       */
      public boolean hasTschchartseriesscattervaluelabelsaxis() {
        return ((bitField2_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 tschchartseriesscattervaluelabelsaxis = 68;</code>
       */
      public int getTschchartseriesscattervaluelabelsaxis() {
        return tschchartseriesscattervaluelabelsaxis_;
      }
      /**
       * <code>optional int32 tschchartseriesscattervaluelabelsaxis = 68;</code>
       */
      public Builder setTschchartseriesscattervaluelabelsaxis(int value) {
        bitField2_ |= 0x00000008;
        tschchartseriesscattervaluelabelsaxis_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesscattervaluelabelsaxis = 68;</code>
       */
      public Builder clearTschchartseriesscattervaluelabelsaxis() {
        bitField2_ = (bitField2_ & ~0x00000008);
        tschchartseriesscattervaluelabelsaxis_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TSCH.Generated.ChartSeriesNonStyleArchive)
    }

    // @@protoc_insertion_point(class_scope:TSCH.Generated.ChartSeriesNonStyleArchive)
    private static final org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive();
    }

    public static org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ChartSeriesNonStyleArchive>
        PARSER = new com.google.protobuf.AbstractParser<ChartSeriesNonStyleArchive>() {
      public ChartSeriesNonStyleArchive parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ChartSeriesNonStyleArchive(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChartSeriesNonStyleArchive> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChartSeriesNonStyleArchive> getParserForType() {
      return PARSER;
    }

    public org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    public static final int CURRENT_FIELD_NUMBER = 10000;
    /**
     * <code>extend .TSCH.ChartSeriesNonStyleArchive { ... }</code>
     */
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartSeriesNonStyleArchive,
        org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive> current = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive.getDefaultInstance(),
          0,
          org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive.class,
          org.techforumist.keynote.proto.TSCH.Generated.TSCHArchivesGEN.ChartSeriesNonStyleArchive.getDefaultInstance());
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TSCH_Generated_ChartStyleArchive_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TSCH_Generated_ChartStyleArchive_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TSCH_Generated_ChartNonStyleArchive_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TSCH_Generated_ChartNonStyleArchive_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TSCH_Generated_LegendStyleArchive_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TSCH_Generated_LegendStyleArchive_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TSCH_Generated_LegendNonStyleArchive_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TSCH_Generated_LegendNonStyleArchive_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TSCH_Generated_ChartAxisStyleArchive_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TSCH_Generated_ChartAxisStyleArchive_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TSCH_Generated_ChartAxisNonStyleArchive_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TSCH_Generated_ChartAxisNonStyleArchive_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TSCH_Generated_ChartSeriesStyleArchive_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TSCH_Generated_ChartSeriesStyleArchive_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TSCH_Generated_ChartSeriesNonStyleArchive_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TSCH_Generated_ChartSeriesNonStyleArchive_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026TSCHArchives.GEN.proto\022\016TSCH.Generated" +
      "\032\021TSPMessages.proto\032\021TSKArchives.proto\032\021" +
      "TSDArchives.proto\032\021TSSArchives.proto\032\031TS" +
      "CHArchives.Common.proto\032\024TSCH3DArchives." +
      "proto\"\335\n\n\021ChartStyleArchive\022*\n\"tschchart" +
      "infodefault3dchartopacity\030\001 \001(\002\022O\n\"tschc" +
      "hartinfoarea3dlightingpackage\030\002 \001(\0132#.TS" +
      "CH.Chart3DLightingPackageArchive\022N\n!tsch" +
      "chartinfobar3dlightingpackage\030\003 \001(\0132#.TS" +
      "CH.Chart3DLightingPackageArchive\022Q\n$tsch",
      "chartinfocolumn3dlightingpackage\030\004 \001(\0132#" +
      ".TSCH.Chart3DLightingPackageArchive\022R\n%t" +
      "schchartinfodefault3dlightingpackage\030\005 \001" +
      "(\0132#.TSCH.Chart3DLightingPackageArchive\022" +
      "O\n\"tschchartinfoline3dlightingpackage\030\006 " +
      "\001(\0132#.TSCH.Chart3DLightingPackageArchive" +
      "\022N\n!tschchartinfopie3dlightingpackage\030\007 " +
      "\001(\0132#.TSCH.Chart3DLightingPackageArchive" +
      "\022<\n\"tschchartinfodefaultbackgroundfill\030\010" +
      " \001(\0132\020.TSD.FillArchive\022@\n$tschchartinfod",
      "efaultbackgroundstroke\030\t \001(\0132\022.TSD.Strok" +
      "eArchive\022)\n!tschchartinfodefaultborderop" +
      "acity\030\n \001(\002\022<\n tschchartinfodefaultborde" +
      "rshadow\030\013 \001(\0132\022.TSD.ShadowArchive\022<\n tsc" +
      "hchartinfodefaultborderstroke\030\014 \001(\0132\022.TS" +
      "D.StrokeArchive\022)\n!tschchartinfodefaultc" +
      "ombinelayers\030\r \001(\010\022@\n&tschchartinfodefau" +
      "ltgridbackgroundfill\030\016 \001(\0132\020.TSD.FillArc" +
      "hive\0221\n)tschchartinfodefaultgridbackgrou" +
      "ndopacity\030\017 \001(\002\022\'\n\037tschchartinfodefaulti",
      "nterbargap\030\020 \001(\002\022\'\n\037tschchartinfodefault" +
      "intersetgap\030\021 \001(\002\022&\n\036tschchartinfodefaul" +
      "tshowborder\030\022 \001(\010\0222\n\036tschchartinfodefaul" +
      "ttitlecolor\030\023 \001(\0132\n.TSP.Color\0224\n,tschcha" +
      "rtinfodefaulttitleparagraphstyleindex\030\024 " +
      "\001(\005\022:\n2tschchartinfodefaultdatasetnamepa" +
      "ragraphstyleindex\030\025 \001(\0052L\n\007current\022\027.TSC" +
      "H.ChartStyleArchive\030\220N \001(\0132!.TSCH.Genera" +
      "ted.ChartStyleArchive\"\227\010\n\024ChartNonStyleA" +
      "rchive\022&\n\036tschchartinfodefault3dbarshape",
      "\030\001 \001(\005\022(\n tschchartinfodefault3dbeveledg" +
      "es\030\002 \001(\010\022.\n&tschchartinfodefault3dinters" +
      "etdepthgap\030\003 \001(\002\022B\n\036tschchartinfodefault" +
      "3drotation\030\004 \001(\0132\032.TSCH.Chart3DVectorArc" +
      "hive\022<\n\030tschchartinfoarea3dscale\030\005 \001(\0132\032" +
      ".TSCH.Chart3DVectorArchive\022;\n\027tschcharti" +
      "nfobar3dscale\030\006 \001(\0132\032.TSCH.Chart3DVector" +
      "Archive\022>\n\032tschchartinfocolumn3dscale\030\007 " +
      "\001(\0132\032.TSCH.Chart3DVectorArchive\022?\n\033tschc" +
      "hartinfodefault3dscale\030\010 \001(\0132\032.TSCH.Char",
      "t3DVectorArchive\022<\n\030tschchartinfoline3ds" +
      "cale\030\t \001(\0132\032.TSCH.Chart3DVectorArchive\022;" +
      "\n\027tschchartinfopie3dscale\030\n \001(\0132\032.TSCH.C" +
      "hart3DVectorArchive\022B\n\036tschchartinfodefa" +
      "ult3dviewport\030\013 \001(\0132\032.TSCH.Chart3DVector" +
      "Archive\022)\n!tschchartinfodefaultpiestarta" +
      "ngle\030\023 \001(\002\022&\n\036tschchartinfodefaultshowle" +
      "gend\030\024 \001(\010\022%\n\035tschchartinfodefaultshowti" +
      "tle\030\025 \001(\010\022*\n\"tschchartinfodefaultskiphid" +
      "dendata\030\026 \001(\010\022!\n\031tschchartinfodefaulttit",
      "le\030\027 \001(\t\022/\n\'tschchartinfodefaultdatasetn" +
      "amelocation\030\030 \001(\005\0220\n(tschchartinfodefaul" +
      "tmultidatacontroltype\030\031 \001(\0052R\n\007current\022\032" +
      ".TSCH.ChartNonStyleArchive\030\220N \001(\0132$.TSCH" +
      ".Generated.ChartNonStyleArchive\"\355\002\n\022Lege" +
      "ndStyleArchive\0224\n\032tschlegendmodeldefault" +
      "fill\030\001 \001(\0132\020.TSD.FillArchive\0226\n.tschlege" +
      "ndmodeldefaultlabelparagraphstyleindex\030\002" +
      " \001(\005\022%\n\035tschlegendmodeldefaultopacity\030\003 " +
      "\001(\002\0228\n\034tschlegendmodeldefaultshadow\030\004 \001(",
      "\0132\022.TSD.ShadowArchive\0228\n\034tschlegendmodel" +
      "defaultstroke\030\005 \001(\0132\022.TSD.StrokeArchive2" +
      "N\n\007current\022\030.TSCH.LegendStyleArchive\030\220N " +
      "\001(\0132\".TSCH.Generated.LegendStyleArchive\"" +
      "m\n\025LegendNonStyleArchive2T\n\007current\022\033.TS" +
      "CH.LegendNonStyleArchive\030\220N \001(\0132%.TSCH.G" +
      "enerated.LegendNonStyleArchive\"\335\021\n\025Chart" +
      "AxisStyleArchive\022.\n&tschchartaxiscategor" +
      "y3dgridlineopacity\030\001 \001(\002\022+\n#tschchartaxi" +
      "svalue3dgridlineopacity\030\002 \001(\002\022A\n%tschcha",
      "rtaxiscategory3dgridlinestroke\030\003 \001(\0132\022.T" +
      "SD.StrokeArchive\022>\n\"tschchartaxisvalue3d" +
      "gridlinestroke\030\004 \001(\0132\022.TSD.StrokeArchive" +
      "\022.\n&tschchartaxiscategoryhorizontalspaci" +
      "ng\030\005 \001(\005\0225\n-tschchartaxiscategorylabelpa" +
      "ragraphstyleindex\030\006 \001(\005\0224\n,tschchartaxis" +
      "defaultlabelparagraphstyleindex\030\007 \001(\005\0222\n" +
      "*tschchartaxisvaluelabelparagraphstylein" +
      "dex\030\010 \001(\005\022.\n&tschchartaxiscategorylabels" +
      "orientation\030\t \001(\002\022-\n%tschchartaxisdefaul",
      "tlabelsorientation\030\n \001(\002\022+\n#tschchartaxi" +
      "svaluelabelsorientation\030\013 \001(\002\0221\n)tschcha" +
      "rtaxiscategorymajorgridlineopacity\030\014 \001(\002" +
      "\022.\n&tschchartaxisvaluemajorgridlineopaci" +
      "ty\030\r \001(\002\022D\n(tschchartaxiscategorymajorgr" +
      "idlineshadow\030\016 \001(\0132\022.TSD.ShadowArchive\022A" +
      "\n%tschchartaxisvaluemajorgridlineshadow\030" +
      "\017 \001(\0132\022.TSD.ShadowArchive\022D\n(tschchartax" +
      "iscategorymajorgridlinestroke\030\020 \001(\0132\022.TS" +
      "D.StrokeArchive\022A\n%tschchartaxisvaluemaj",
      "orgridlinestroke\030\021 \001(\0132\022.TSD.StrokeArchi" +
      "ve\0221\n)tschchartaxiscategoryminorgridline" +
      "opacity\030\022 \001(\002\022.\n&tschchartaxisvalueminor" +
      "gridlineopacity\030\023 \001(\002\022D\n(tschchartaxisca" +
      "tegoryminorgridlineshadow\030\024 \001(\0132\022.TSD.Sh" +
      "adowArchive\022A\n%tschchartaxisvalueminorgr" +
      "idlineshadow\030\025 \001(\0132\022.TSD.ShadowArchive\022D" +
      "\n(tschchartaxiscategoryminorgridlinestro" +
      "ke\030\026 \001(\0132\022.TSD.StrokeArchive\022A\n%tschchar" +
      "taxisvalueminorgridlinestroke\030\027 \001(\0132\022.TS",
      "D.StrokeArchive\022%\n\035tschchartaxiscategory" +
      "showaxis\030\030 \001(\010\022\"\n\032tschchartaxisvalueshow" +
      "axis\030\031 \001(\010\022*\n\"tschchartaxiscategoryshowl" +
      "astlabel\030\032 \001(\010\022/\n\'tschchartaxiscategorys" +
      "howmajorgridlines\030\033 \001(\010\022,\n$tschchartaxis" +
      "valueshowmajorgridlines\030\034 \001(\010\022/\n\'tschcha" +
      "rtaxiscategoryshowmajortickmarks\030\035 \001(\010\022," +
      "\n$tschchartaxisvalueshowmajortickmarks\030\036" +
      " \001(\010\022*\n\"tschchartaxisvalueshowminimumlab" +
      "el\030\037 \001(\010\022/\n\'tschchartaxiscategoryshowmin",
      "orgridlines\030  \001(\010\022,\n$tschchartaxisvalues" +
      "howminorgridlines\030! \001(\010\022/\n\'tschchartaxis" +
      "categoryshowminortickmarks\030\" \001(\010\022,\n$tsch" +
      "chartaxisvalueshowminortickmarks\030# \001(\010\022-" +
      "\n%tschchartaxiscategorytickmarklocation\030" +
      "$ \001(\005\022*\n\"tschchartaxisvaluetickmarklocat" +
      "ion\030% \001(\005\0225\n-tschchartaxiscategorytitlep" +
      "aragraphstyleindex\030& \001(\005\0224\n,tschchartaxi" +
      "sdefaulttitleparagraphstyleindex\030\' \001(\005\0222" +
      "\n*tschchartaxisvaluetitleparagraphstylei",
      "ndex\030( \001(\005\022,\n$tschchartaxiscategoryverti" +
      "calspacing\030) \001(\0052T\n\007current\022\033.TSCH.Chart" +
      "AxisStyleArchive\030\220N \001(\0132%.TSCH.Generated" +
      ".ChartAxisStyleArchive\"\347\007\n\030ChartAxisNonS" +
      "tyleArchive\022+\n#tschchartaxisdefault3dlab" +
      "elposition\030\001 \001(\005\022B\n tschchartaxisdefault" +
      "numberformat\030\002 \001(\0132\030.TSK.FormatStructArc" +
      "hive\022,\n$tschchartaxisdefaultnumberformat" +
      "type\030\003 \001(\005\022)\n!tschchartaxisvaluenumberof" +
      "decades\030\004 \001(\005\0220\n(tschchartaxisvaluenumbe",
      "rofmajorgridlines\030\005 \001(\005\0220\n(tschchartaxis" +
      "valuenumberofminorgridlines\030\006 \001(\005\022(\n tsc" +
      "hchartaxiscategoryplottoedges\030\007 \001(\010\022\037\n\027t" +
      "schchartaxisvaluescale\030\010 \001(\005\022\'\n\037tschchar" +
      "taxiscategoryshowlabels\030\t \001(\010\022&\n\036tschcha" +
      "rtaxisdefaultshowlabels\030\n \001(\010\022$\n\034tschcha" +
      "rtaxisvalueshowlabels\030\013 \001(\010\022-\n%tschchart" +
      "axiscategoryshowserieslabels\030\014 \001(\010\022.\n&ts" +
      "chchartaxismultidatashowserieslabels\030\023 \001" +
      "(\010\022&\n\036tschchartaxiscategoryshowtitle\030\r \001",
      "(\010\022#\n\033tschchartaxisvalueshowtitle\030\016 \001(\010\022" +
      "\"\n\032tschchartaxiscategorytitle\030\017 \001(\t\022\037\n\027t" +
      "schchartaxisvaluetitle\030\020 \001(\t\022F\n\033tschchar" +
      "taxisdefaultusermax\030\021 \001(\0132!.TSCH.ChartsN" +
      "SNumberDoubleArchive\022F\n\033tschchartaxisdef" +
      "aultusermin\030\022 \001(\0132!.TSCH.ChartsNSNumberD" +
      "oubleArchive2Z\n\007current\022\036.TSCH.ChartAxis" +
      "NonStyleArchive\030\220N \001(\0132(.TSCH.Generated." +
      "ChartAxisNonStyleArchive\"\307+\n\027ChartSeries" +
      "StyleArchive\022B\n%tschchartseriesdefaulter",
      "rorbarlineend\030\001 \001(\0132\023.TSD.LineEndArchive" +
      "\022J\n-tschchartseriesdefaulterrorbarlineen" +
      "dscatterx\030\002 \001(\0132\023.TSD.LineEndArchive\022@\n$" +
      "tschchartseriesdefaulterrorbarshadow\030\003 \001" +
      "(\0132\022.TSD.ShadowArchive\022@\n$tschchartserie" +
      "sdefaulterrorbarstroke\030\004 \001(\0132\022.TSD.Strok" +
      "eArchive\022H\n,tschchartseriesdefaulterrorb" +
      "arstrokescatterx\030\005 \001(\0132\022.TSD.StrokeArchi" +
      "ve\0223\n\031tschchartseries3dareafill\030\006 \001(\0132\020." +
      "TSD.FillArchive\0222\n\030tschchartseries3dbarf",
      "ill\030\007 \001(\0132\020.TSD.FillArchive\0225\n\033tschchart" +
      "series3dcolumnfill\030\010 \001(\0132\020.TSD.FillArchi" +
      "ve\0223\n\031tschchartseries3dlinefill\030\t \001(\0132\020." +
      "TSD.FillArchive\0222\n\030tschchartseries3dpief" +
      "ill\030\n \001(\0132\020.TSD.FillArchive\0221\n\027tschchart" +
      "seriesareafill\030\013 \001(\0132\020.TSD.FillArchive\0220" +
      "\n\026tschchartseriesbarfill\030\014 \001(\0132\020.TSD.Fil" +
      "lArchive\0223\n\031tschchartseriescolumnfill\030\r " +
      "\001(\0132\020.TSD.FillArchive\0224\n\032tschchartseries" +
      "defaultfill\030\016 \001(\0132\020.TSD.FillArchive\0226\n\034t",
      "schchartseriesmixedareafill\030\017 \001(\0132\020.TSD." +
      "FillArchive\0228\n\036tschchartseriesmixedcolum" +
      "nfill\030\020 \001(\0132\020.TSD.FillArchive\0220\n\026tschcha" +
      "rtseriespiefill\030\021 \001(\0132\020.TSD.FillArchive\022" +
      "3\n+tschchartseriesarealabelparagraphstyl" +
      "eindex\030\022 \001(\005\0222\n*tschchartseriesbarlabelp" +
      "aragraphstyleindex\030\023 \001(\005\0226\n.tschchartser" +
      "iesdefaultlabelparagraphstyleindex\030\024 \001(\005" +
      "\0223\n+tschchartserieslinelabelparagraphsty" +
      "leindex\030\025 \001(\005\0224\n,tschchartseriesmixedlab",
      "elparagraphstyleindex\030\026 \001(\005\0222\n*tschchart" +
      "seriespielabelparagraphstyleindex\030\027 \001(\005\022" +
      "%\n\035tschchartseriesdefaultopacity\030\030 \001(\002\022:" +
      "\n2tschchartseriesareaoutsidelabelparagra" +
      "phstyleindex\030\031 \001(\005\0229\n1tschchartseriesbar" +
      "outsidelabelparagraphstyleindex\030\032 \001(\005\022=\n" +
      "5tschchartseriesdefaultoutsidelabelparag" +
      "raphstyleindex\030\033 \001(\005\022;\n3tschchartseriesm" +
      "ixedoutsidelabelparagraphstyleindex\030\034 \001(" +
      "\005\0229\n1tschchartseriespieoutsidelabelparag",
      "raphstyleindex\030\035 \001(\005\0227\n\033tschchartseries3" +
      "dareashadow\030\036 \001(\0132\022.TSD.ShadowArchive\0226\n" +
      "\032tschchartseries3dbarshadow\030\037 \001(\0132\022.TSD." +
      "ShadowArchive\0229\n\035tschchartseries3dcolumn" +
      "shadow\030  \001(\0132\022.TSD.ShadowArchive\0227\n\033tsch" +
      "chartseries3dlineshadow\030! \001(\0132\022.TSD.Shad" +
      "owArchive\0226\n\032tschchartseries3dpieshadow\030" +
      "\" \001(\0132\022.TSD.ShadowArchive\0225\n\031tschchartse" +
      "riesareashadow\030# \001(\0132\022.TSD.ShadowArchive" +
      "\0224\n\030tschchartseriesbarshadow\030$ \001(\0132\022.TSD",
      ".ShadowArchive\0227\n\033tschchartseriesbubbles" +
      "hadow\030% \001(\0132\022.TSD.ShadowArchive\0228\n\034tschc" +
      "hartseriesdefaultshadow\030& \001(\0132\022.TSD.Shad" +
      "owArchive\0225\n\031tschchartserieslineshadow\030\'" +
      " \001(\0132\022.TSD.ShadowArchive\022:\n\036tschchartser" +
      "iesmixedareashadow\030( \001(\0132\022.TSD.ShadowArc" +
      "hive\022<\n tschchartseriesmixedcolumnshadow" +
      "\030) \001(\0132\022.TSD.ShadowArchive\022:\n\036tschcharts" +
      "eriesmixedlineshadow\030* \001(\0132\022.TSD.ShadowA" +
      "rchive\0224\n\030tschchartseriespieshadow\030+ \001(\013",
      "2\022.TSD.ShadowArchive\0228\n\034tschchartseriess" +
      "cattershadow\030, \001(\0132\022.TSD.ShadowArchive\0225" +
      "\n\031tschchartseriesareastroke\030- \001(\0132\022.TSD." +
      "StrokeArchive\0224\n\030tschchartseriesbarstrok" +
      "e\030. \001(\0132\022.TSD.StrokeArchive\0227\n\033tschchart" +
      "seriesbubblestroke\030/ \001(\0132\022.TSD.StrokeArc" +
      "hive\0225\n\031tschchartserieslinestroke\0300 \001(\0132" +
      "\022.TSD.StrokeArchive\022:\n\036tschchartseriesmi" +
      "xedareastroke\0301 \001(\0132\022.TSD.StrokeArchive\022" +
      "<\n tschchartseriesmixedcolumnstroke\0302 \001(",
      "\0132\022.TSD.StrokeArchive\022:\n\036tschchartseries" +
      "mixedlinestroke\0303 \001(\0132\022.TSD.StrokeArchiv" +
      "e\0224\n\030tschchartseriespiestroke\0304 \001(\0132\022.TS" +
      "D.StrokeArchive\0228\n\034tschchartseriesscatte" +
      "rstroke\0305 \001(\0132\022.TSD.StrokeArchive\0227\n\035tsc" +
      "hchartseriesareasymbolfill\0306 \001(\0132\020.TSD.F" +
      "illArchive\0229\n\037tschchartseriesbubblesymbo" +
      "lfill\0307 \001(\0132\020.TSD.FillArchive\0227\n\035tschcha" +
      "rtserieslinesymbolfill\0308 \001(\0132\020.TSD.FillA" +
      "rchive\022<\n\"tschchartseriesmixedareasymbol",
      "fill\0309 \001(\0132\020.TSD.FillArchive\022<\n\"tschchar" +
      "tseriesmixedlinesymbolfill\030: \001(\0132\020.TSD.F" +
      "illArchive\022:\n tschchartseriesscattersymb" +
      "olfill\030; \001(\0132\020.TSD.FillArchive\0222\n*tschch" +
      "artseriesareasymbolfilluseseriesfill\030< \001" +
      "(\010\0222\n*tschchartserieslinesymbolfillusese" +
      "riesfill\030= \001(\010\0227\n/tschchartseriesmixedar" +
      "easymbolfilluseseriesfill\030> \001(\010\0227\n/tschc" +
      "hartseriesmixedlinesymbolfilluseseriesfi" +
      "ll\030? \001(\010\0224\n,tschchartseriesareasymbolfil",
      "luseseriesstroke\030@ \001(\010\0226\n.tschchartserie" +
      "sbubblesymbolfilluseseriesstroke\030A \001(\010\0224" +
      "\n,tschchartserieslinesymbolfilluseseries" +
      "stroke\030B \001(\010\0229\n1tschchartseriesmixedarea" +
      "symbolfilluseseriesstroke\030C \001(\010\0229\n1tschc" +
      "hartseriesmixedlinesymbolfilluseseriesst" +
      "roke\030D \001(\010\0227\n/tschchartseriesscattersymb" +
      "olfilluseseriesstroke\030E \001(\010\022%\n\035tschchart" +
      "seriesareasymbolsize\030F \001(\002\022%\n\035tschcharts" +
      "erieslinesymbolsize\030G \001(\002\022*\n\"tschchartse",
      "riesmixedareasymbolsize\030H \001(\002\022*\n\"tschcha" +
      "rtseriesmixedlinesymbolsize\030I \001(\002\022(\n tsc" +
      "hchartseriesscattersymbolsize\030J \001(\002\022;\n\037t" +
      "schchartseriesareasymbolstroke\030K \001(\0132\022.T" +
      "SD.StrokeArchive\022=\n!tschchartseriesbubbl" +
      "esymbolstroke\030L \001(\0132\022.TSD.StrokeArchive\022" +
      ";\n\037tschchartserieslinesymbolstroke\030M \001(\013" +
      "2\022.TSD.StrokeArchive\022@\n$tschchartseriesm" +
      "ixedareasymbolstroke\030N \001(\0132\022.TSD.StrokeA" +
      "rchive\022@\n$tschchartseriesmixedlinesymbol",
      "stroke\030O \001(\0132\022.TSD.StrokeArchive\022>\n\"tsch" +
      "chartseriesscattersymbolstroke\030P \001(\0132\022.T" +
      "SD.StrokeArchive\0226\n.tschchartseriesdefau" +
      "lttrendlineequationopacity\030Q \001(\002\022B\n:tsch" +
      "chartseriesdefaulttrendlineequationparag" +
      "raphstyleindex\030R \001(\005\0226\n.tschchartseriesd" +
      "efaulttrendlinersquaredopacity\030S \001(\002\022B\n:" +
      "tschchartseriesdefaulttrendlinersquaredp" +
      "aragraphstyleindex\030T \001(\005\022A\n%tschchartser" +
      "iesdefaulttrendlineshadow\030U \001(\0132\022.TSD.Sh",
      "adowArchive\022A\n%tschchartseriesdefaulttre" +
      "ndlinestroke\030V \001(\0132\022.TSD.StrokeArchive\022-" +
      "\n%tschchartseriesareavaluelabelposition\030" +
      "W \001(\005\022,\n$tschchartseriesbarvaluelabelpos" +
      "ition\030X \001(\005\022/\n\'tschchartseriesbubblevalu" +
      "elabelposition\030Y \001(\005\0220\n(tschchartseriesd" +
      "efaultvaluelabelposition\030Z \001(\005\022-\n%tschch" +
      "artserieslinevaluelabelposition\030[ \001(\005\0222\n" +
      "*tschchartseriesmixedareavaluelabelposit" +
      "ion\030\\ \001(\005\0224\n,tschchartseriesmixedcolumnv",
      "aluelabelposition\030] \001(\005\0222\n*tschchartseri" +
      "esmixedlinevaluelabelposition\030^ \001(\005\0220\n(t" +
      "schchartseriesscattervaluelabelposition\030" +
      "_ \001(\005\0224\n,tschchartseriesstackedareavalue" +
      "labelposition\030` \001(\005\0223\n+tschchartseriesst" +
      "ackedbarvaluelabelposition\030a \001(\0052X\n\007curr" +
      "ent\022\035.TSCH.ChartSeriesStyleArchive\030\220N \001(" +
      "\0132\'.TSCH.Generated.ChartSeriesStyleArchi" +
      "ve\"\223\034\n\032ChartSeriesNonStyleArchive\022,\n$tsc" +
      "hchartseriesbubbleadjustmentscale\030\001 \001(\002\022",
      "d\n0tschchartseriesdefaulterrorbarcustomn" +
      "egativedata\030\002 \001(\0132*.TSCH.ChartsNSArrayOf" +
      "NSNumberDoubleArchive\022l\n8tschchartseries" +
      "defaulterrorbarcustomnegativedatascatter" +
      "x\030\003 \001(\0132*.TSCH.ChartsNSArrayOfNSNumberDo" +
      "ubleArchive\022d\n0tschchartseriesdefaulterr" +
      "orbarcustompositivedata\030\004 \001(\0132*.TSCH.Cha" +
      "rtsNSArrayOfNSNumberDoubleArchive\022l\n8tsc" +
      "hchartseriesdefaulterrorbarcustompositiv" +
      "edatascatterx\030\005 \001(\0132*.TSCH.ChartsNSArray",
      "OfNSNumberDoubleArchive\0220\n(tschchartseri" +
      "esdefaulterrorbarfixedvalue\030\006 \001(\002\0228\n0tsc" +
      "hchartseriesdefaulterrorbarfixedvaluesca" +
      "tterx\030\007 \001(\002\0222\n*tschchartseriesdefaulterr" +
      "orbarpercentvalue\030\010 \001(\002\022:\n2tschchartseri" +
      "esdefaulterrorbarpercentvaluescatterx\030\t " +
      "\001(\002\022-\n%tschchartseriesdefaulterrorbarset" +
      "ting\030\n \001(\005\0225\n-tschchartseriesdefaulterro" +
      "rbarsettingscatterx\030\013 \001(\005\0221\n)tschchartse" +
      "riesdefaulterrorbarstddevvalue\030\014 \001(\002\0229\n1",
      "tschchartseriesdefaulterrorbarstddevvalu" +
      "escatterx\030\r \001(\002\022*\n\"tschchartseriesdefaul" +
      "terrorbartype\030\016 \001(\005\0222\n*tschchartseriesde" +
      "faulterrorbartypescatterx\030\017 \001(\005\022(\n tschc" +
      "hartseriespielabelexplosion\030\020 \001(\002\022%\n\035tsc" +
      "hchartseriesbubblelinetype\030\021 \001(\005\022#\n\033tsch" +
      "chartserieslinelinetype\030\022 \001(\005\022(\n tschcha" +
      "rtseriesmixedlinelinetype\030\023 \001(\005\022&\n\036tschc" +
      "hartseriesscatterlinetype\030\024 \001(\005\022D\n\"tschc" +
      "hartseriesdefaultnumberformat\030\025 \001(\0132\030.TS",
      "K.FormatStructArchive\022@\n\036tschchartseries" +
      "pienumberformat\030\026 \001(\0132\030.TSK.FormatStruct" +
      "Archive\022.\n&tschchartseriesdefaultnumberf" +
      "ormattype\030\027 \001(\005\022*\n\"tschchartseriespienum" +
      "berformattype\030\030 \001(\005\022K\n)tschchartseriesst" +
      "ackedpercentnumberformat\030\031 \001(\0132\030.TSK.For" +
      "matStructArchive\022(\n tschchartseriesdefau" +
      "ltseriestype\030\032 \001(\005\022*\n\"tschchartseriesdef" +
      "aultshowerrorbar\030\033 \001(\010\0222\n*tschchartserie" +
      "sdefaultshowerrorbarscatterx\030\034 \001(\010\022&\n\036ts",
      "chchartseriesscattershowline\030\035 \001(\010\022-\n%ts" +
      "chchartseriesbubbleshownegativedata\030\036 \001(" +
      "\010\022*\n\"tschchartseriespieshowserieslabels\030" +
      "\037 \001(\010\022%\n\035tschchartseriesareashowsymbol\030 " +
      " \001(\010\022%\n\035tschchartserieslineshowsymbol\030! " +
      "\001(\010\022*\n\"tschchartseriesmixedareashowsymbo" +
      "l\030\" \001(\010\022*\n\"tschchartseriesmixedlineshows" +
      "ymbol\030# \001(\010\022(\n tschchartseriesscattersho" +
      "wsymbol\030$ \001(\010\022+\n#tschchartseriesdefaults" +
      "howtrendline\030% \001(\010\022*\n\"tschchartseriesare",
      "ashowvaluelabels\030& \001(\010\022)\n!tschchartserie" +
      "sbarshowvaluelabels\030\' \001(\010\022,\n$tschchartse" +
      "riesbubbleshowvaluelabels\030( \001(\010\022-\n%tschc" +
      "hartseriesdefaultshowvaluelabels\030) \001(\010\022*" +
      "\n\"tschchartserieslineshowvaluelabels\030* \001" +
      "(\010\022+\n#tschchartseriesmixedshowvaluelabel" +
      "s\030+ \001(\010\022)\n!tschchartseriespieshowvaluela" +
      "bels\030, \001(\010\022-\n%tschchartseriesscattershow" +
      "valuelabels\030- \001(\010\022*\n\"tschchartseriesbubb" +
      "lesizedimension\030. \001(\005\022%\n\035tschchartseries",
      "areasymboltype\030/ \001(\005\022%\n\035tschchartseriesl" +
      "inesymboltype\0300 \001(\005\022*\n\"tschchartseriesmi" +
      "xedareasymboltype\0301 \001(\005\022*\n\"tschchartseri" +
      "esmixedlinesymboltype\0302 \001(\005\022(\n tschchart" +
      "seriesscattersymboltype\0303 \001(\005\0226\n.tschcha" +
      "rtseriesdefaulttrendlineequationoffsetx\030" +
      "4 \001(\002\0226\n.tschchartseriesdefaulttrendline" +
      "equationoffsety\0305 \001(\002\0222\n*tschchartseries" +
      "defaulttrendlinelabelstring\0306 \001(\t\022,\n$tsc" +
      "hchartseriesdefaulttrendlineorder\0307 \001(\005\022",
      "-\n%tschchartseriesdefaulttrendlineperiod" +
      "\0308 \001(\005\0226\n.tschchartseriesdefaulttrendlin" +
      "ersquaredoffsetx\0309 \001(\002\0226\n.tschchartserie" +
      "sdefaulttrendlinersquaredoffsety\030: \001(\002\0223" +
      "\n+tschchartseriesdefaulttrendlineshowequ" +
      "ation\030; \001(\010\0220\n(tschchartseriesdefaulttre" +
      "ndlineshowlabel\030< \001(\010\0222\n*tschchartseries" +
      "defaulttrendlineshowr2value\030= \001(\010\022+\n#tsc" +
      "hchartseriesdefaulttrendlinetype\030> \001(\005\022(" +
      "\n tschchartseriespiewedgeexplosion\030? \001(\002",
      "\022*\n\"tschchartseriesdefaultyaxisordinal\030@" +
      " \001(\005\022-\n%tschchartseriesbubbleshowseriesl" +
      "abels\030A \001(\010\022,\n$tschchartseriesbubblevalu" +
      "elabelsaxis\030B \001(\005\022.\n&tschchartseriesscat" +
      "tershowserieslabels\030C \001(\010\022-\n%tschchartse" +
      "riesscattervaluelabelsaxis\030D \001(\0052^\n\007curr" +
      "ent\022 .TSCH.ChartSeriesNonStyleArchive\030\220N" +
      " \001(\0132*.TSCH.Generated.ChartSeriesNonStyl" +
      "eArchive"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.techforumist.keynote.proto.TSP.TSPMessages.getDescriptor(),
          org.techforumist.keynote.proto.TSK.TSKArchives.getDescriptor(),
          org.techforumist.keynote.proto.TSD.TSDArchives.getDescriptor(),
          org.techforumist.keynote.proto.TSS.TSSArchives.getDescriptor(),
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.getDescriptor(),
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.getDescriptor(),
        }, assigner);
    internal_static_TSCH_Generated_ChartStyleArchive_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_TSCH_Generated_ChartStyleArchive_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TSCH_Generated_ChartStyleArchive_descriptor,
        new java.lang.String[] { "Tschchartinfodefault3Dchartopacity", "Tschchartinfoarea3Dlightingpackage", "Tschchartinfobar3Dlightingpackage", "Tschchartinfocolumn3Dlightingpackage", "Tschchartinfodefault3Dlightingpackage", "Tschchartinfoline3Dlightingpackage", "Tschchartinfopie3Dlightingpackage", "Tschchartinfodefaultbackgroundfill", "Tschchartinfodefaultbackgroundstroke", "Tschchartinfodefaultborderopacity", "Tschchartinfodefaultbordershadow", "Tschchartinfodefaultborderstroke", "Tschchartinfodefaultcombinelayers", "Tschchartinfodefaultgridbackgroundfill", "Tschchartinfodefaultgridbackgroundopacity", "Tschchartinfodefaultinterbargap", "Tschchartinfodefaultintersetgap", "Tschchartinfodefaultshowborder", "Tschchartinfodefaulttitlecolor", "Tschchartinfodefaulttitleparagraphstyleindex", "Tschchartinfodefaultdatasetnameparagraphstyleindex", });
    internal_static_TSCH_Generated_ChartNonStyleArchive_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_TSCH_Generated_ChartNonStyleArchive_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TSCH_Generated_ChartNonStyleArchive_descriptor,
        new java.lang.String[] { "Tschchartinfodefault3Dbarshape", "Tschchartinfodefault3Dbeveledges", "Tschchartinfodefault3Dintersetdepthgap", "Tschchartinfodefault3Drotation", "Tschchartinfoarea3Dscale", "Tschchartinfobar3Dscale", "Tschchartinfocolumn3Dscale", "Tschchartinfodefault3Dscale", "Tschchartinfoline3Dscale", "Tschchartinfopie3Dscale", "Tschchartinfodefault3Dviewport", "Tschchartinfodefaultpiestartangle", "Tschchartinfodefaultshowlegend", "Tschchartinfodefaultshowtitle", "Tschchartinfodefaultskiphiddendata", "Tschchartinfodefaulttitle", "Tschchartinfodefaultdatasetnamelocation", "Tschchartinfodefaultmultidatacontroltype", });
    internal_static_TSCH_Generated_LegendStyleArchive_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_TSCH_Generated_LegendStyleArchive_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TSCH_Generated_LegendStyleArchive_descriptor,
        new java.lang.String[] { "Tschlegendmodeldefaultfill", "Tschlegendmodeldefaultlabelparagraphstyleindex", "Tschlegendmodeldefaultopacity", "Tschlegendmodeldefaultshadow", "Tschlegendmodeldefaultstroke", });
    internal_static_TSCH_Generated_LegendNonStyleArchive_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_TSCH_Generated_LegendNonStyleArchive_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TSCH_Generated_LegendNonStyleArchive_descriptor,
        new java.lang.String[] { });
    internal_static_TSCH_Generated_ChartAxisStyleArchive_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_TSCH_Generated_ChartAxisStyleArchive_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TSCH_Generated_ChartAxisStyleArchive_descriptor,
        new java.lang.String[] { "Tschchartaxiscategory3Dgridlineopacity", "Tschchartaxisvalue3Dgridlineopacity", "Tschchartaxiscategory3Dgridlinestroke", "Tschchartaxisvalue3Dgridlinestroke", "Tschchartaxiscategoryhorizontalspacing", "Tschchartaxiscategorylabelparagraphstyleindex", "Tschchartaxisdefaultlabelparagraphstyleindex", "Tschchartaxisvaluelabelparagraphstyleindex", "Tschchartaxiscategorylabelsorientation", "Tschchartaxisdefaultlabelsorientation", "Tschchartaxisvaluelabelsorientation", "Tschchartaxiscategorymajorgridlineopacity", "Tschchartaxisvaluemajorgridlineopacity", "Tschchartaxiscategorymajorgridlineshadow", "Tschchartaxisvaluemajorgridlineshadow", "Tschchartaxiscategorymajorgridlinestroke", "Tschchartaxisvaluemajorgridlinestroke", "Tschchartaxiscategoryminorgridlineopacity", "Tschchartaxisvalueminorgridlineopacity", "Tschchartaxiscategoryminorgridlineshadow", "Tschchartaxisvalueminorgridlineshadow", "Tschchartaxiscategoryminorgridlinestroke", "Tschchartaxisvalueminorgridlinestroke", "Tschchartaxiscategoryshowaxis", "Tschchartaxisvalueshowaxis", "Tschchartaxiscategoryshowlastlabel", "Tschchartaxiscategoryshowmajorgridlines", "Tschchartaxisvalueshowmajorgridlines", "Tschchartaxiscategoryshowmajortickmarks", "Tschchartaxisvalueshowmajortickmarks", "Tschchartaxisvalueshowminimumlabel", "Tschchartaxiscategoryshowminorgridlines", "Tschchartaxisvalueshowminorgridlines", "Tschchartaxiscategoryshowminortickmarks", "Tschchartaxisvalueshowminortickmarks", "Tschchartaxiscategorytickmarklocation", "Tschchartaxisvaluetickmarklocation", "Tschchartaxiscategorytitleparagraphstyleindex", "Tschchartaxisdefaulttitleparagraphstyleindex", "Tschchartaxisvaluetitleparagraphstyleindex", "Tschchartaxiscategoryverticalspacing", });
    internal_static_TSCH_Generated_ChartAxisNonStyleArchive_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_TSCH_Generated_ChartAxisNonStyleArchive_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TSCH_Generated_ChartAxisNonStyleArchive_descriptor,
        new java.lang.String[] { "Tschchartaxisdefault3Dlabelposition", "Tschchartaxisdefaultnumberformat", "Tschchartaxisdefaultnumberformattype", "Tschchartaxisvaluenumberofdecades", "Tschchartaxisvaluenumberofmajorgridlines", "Tschchartaxisvaluenumberofminorgridlines", "Tschchartaxiscategoryplottoedges", "Tschchartaxisvaluescale", "Tschchartaxiscategoryshowlabels", "Tschchartaxisdefaultshowlabels", "Tschchartaxisvalueshowlabels", "Tschchartaxiscategoryshowserieslabels", "Tschchartaxismultidatashowserieslabels", "Tschchartaxiscategoryshowtitle", "Tschchartaxisvalueshowtitle", "Tschchartaxiscategorytitle", "Tschchartaxisvaluetitle", "Tschchartaxisdefaultusermax", "Tschchartaxisdefaultusermin", });
    internal_static_TSCH_Generated_ChartSeriesStyleArchive_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_TSCH_Generated_ChartSeriesStyleArchive_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TSCH_Generated_ChartSeriesStyleArchive_descriptor,
        new java.lang.String[] { "Tschchartseriesdefaulterrorbarlineend", "Tschchartseriesdefaulterrorbarlineendscatterx", "Tschchartseriesdefaulterrorbarshadow", "Tschchartseriesdefaulterrorbarstroke", "Tschchartseriesdefaulterrorbarstrokescatterx", "Tschchartseries3Dareafill", "Tschchartseries3Dbarfill", "Tschchartseries3Dcolumnfill", "Tschchartseries3Dlinefill", "Tschchartseries3Dpiefill", "Tschchartseriesareafill", "Tschchartseriesbarfill", "Tschchartseriescolumnfill", "Tschchartseriesdefaultfill", "Tschchartseriesmixedareafill", "Tschchartseriesmixedcolumnfill", "Tschchartseriespiefill", "Tschchartseriesarealabelparagraphstyleindex", "Tschchartseriesbarlabelparagraphstyleindex", "Tschchartseriesdefaultlabelparagraphstyleindex", "Tschchartserieslinelabelparagraphstyleindex", "Tschchartseriesmixedlabelparagraphstyleindex", "Tschchartseriespielabelparagraphstyleindex", "Tschchartseriesdefaultopacity", "Tschchartseriesareaoutsidelabelparagraphstyleindex", "Tschchartseriesbaroutsidelabelparagraphstyleindex", "Tschchartseriesdefaultoutsidelabelparagraphstyleindex", "Tschchartseriesmixedoutsidelabelparagraphstyleindex", "Tschchartseriespieoutsidelabelparagraphstyleindex", "Tschchartseries3Dareashadow", "Tschchartseries3Dbarshadow", "Tschchartseries3Dcolumnshadow", "Tschchartseries3Dlineshadow", "Tschchartseries3Dpieshadow", "Tschchartseriesareashadow", "Tschchartseriesbarshadow", "Tschchartseriesbubbleshadow", "Tschchartseriesdefaultshadow", "Tschchartserieslineshadow", "Tschchartseriesmixedareashadow", "Tschchartseriesmixedcolumnshadow", "Tschchartseriesmixedlineshadow", "Tschchartseriespieshadow", "Tschchartseriesscattershadow", "Tschchartseriesareastroke", "Tschchartseriesbarstroke", "Tschchartseriesbubblestroke", "Tschchartserieslinestroke", "Tschchartseriesmixedareastroke", "Tschchartseriesmixedcolumnstroke", "Tschchartseriesmixedlinestroke", "Tschchartseriespiestroke", "Tschchartseriesscatterstroke", "Tschchartseriesareasymbolfill", "Tschchartseriesbubblesymbolfill", "Tschchartserieslinesymbolfill", "Tschchartseriesmixedareasymbolfill", "Tschchartseriesmixedlinesymbolfill", "Tschchartseriesscattersymbolfill", "Tschchartseriesareasymbolfilluseseriesfill", "Tschchartserieslinesymbolfilluseseriesfill", "Tschchartseriesmixedareasymbolfilluseseriesfill", "Tschchartseriesmixedlinesymbolfilluseseriesfill", "Tschchartseriesareasymbolfilluseseriesstroke", "Tschchartseriesbubblesymbolfilluseseriesstroke", "Tschchartserieslinesymbolfilluseseriesstroke", "Tschchartseriesmixedareasymbolfilluseseriesstroke", "Tschchartseriesmixedlinesymbolfilluseseriesstroke", "Tschchartseriesscattersymbolfilluseseriesstroke", "Tschchartseriesareasymbolsize", "Tschchartserieslinesymbolsize", "Tschchartseriesmixedareasymbolsize", "Tschchartseriesmixedlinesymbolsize", "Tschchartseriesscattersymbolsize", "Tschchartseriesareasymbolstroke", "Tschchartseriesbubblesymbolstroke", "Tschchartserieslinesymbolstroke", "Tschchartseriesmixedareasymbolstroke", "Tschchartseriesmixedlinesymbolstroke", "Tschchartseriesscattersymbolstroke", "Tschchartseriesdefaulttrendlineequationopacity", "Tschchartseriesdefaulttrendlineequationparagraphstyleindex", "Tschchartseriesdefaulttrendlinersquaredopacity", "Tschchartseriesdefaulttrendlinersquaredparagraphstyleindex", "Tschchartseriesdefaulttrendlineshadow", "Tschchartseriesdefaulttrendlinestroke", "Tschchartseriesareavaluelabelposition", "Tschchartseriesbarvaluelabelposition", "Tschchartseriesbubblevaluelabelposition", "Tschchartseriesdefaultvaluelabelposition", "Tschchartserieslinevaluelabelposition", "Tschchartseriesmixedareavaluelabelposition", "Tschchartseriesmixedcolumnvaluelabelposition", "Tschchartseriesmixedlinevaluelabelposition", "Tschchartseriesscattervaluelabelposition", "Tschchartseriesstackedareavaluelabelposition", "Tschchartseriesstackedbarvaluelabelposition", });
    internal_static_TSCH_Generated_ChartSeriesNonStyleArchive_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_TSCH_Generated_ChartSeriesNonStyleArchive_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TSCH_Generated_ChartSeriesNonStyleArchive_descriptor,
        new java.lang.String[] { "Tschchartseriesbubbleadjustmentscale", "Tschchartseriesdefaulterrorbarcustomnegativedata", "Tschchartseriesdefaulterrorbarcustomnegativedatascatterx", "Tschchartseriesdefaulterrorbarcustompositivedata", "Tschchartseriesdefaulterrorbarcustompositivedatascatterx", "Tschchartseriesdefaulterrorbarfixedvalue", "Tschchartseriesdefaulterrorbarfixedvaluescatterx", "Tschchartseriesdefaulterrorbarpercentvalue", "Tschchartseriesdefaulterrorbarpercentvaluescatterx", "Tschchartseriesdefaulterrorbarsetting", "Tschchartseriesdefaulterrorbarsettingscatterx", "Tschchartseriesdefaulterrorbarstddevvalue", "Tschchartseriesdefaulterrorbarstddevvaluescatterx", "Tschchartseriesdefaulterrorbartype", "Tschchartseriesdefaulterrorbartypescatterx", "Tschchartseriespielabelexplosion", "Tschchartseriesbubblelinetype", "Tschchartserieslinelinetype", "Tschchartseriesmixedlinelinetype", "Tschchartseriesscatterlinetype", "Tschchartseriesdefaultnumberformat", "Tschchartseriespienumberformat", "Tschchartseriesdefaultnumberformattype", "Tschchartseriespienumberformattype", "Tschchartseriesstackedpercentnumberformat", "Tschchartseriesdefaultseriestype", "Tschchartseriesdefaultshowerrorbar", "Tschchartseriesdefaultshowerrorbarscatterx", "Tschchartseriesscattershowline", "Tschchartseriesbubbleshownegativedata", "Tschchartseriespieshowserieslabels", "Tschchartseriesareashowsymbol", "Tschchartserieslineshowsymbol", "Tschchartseriesmixedareashowsymbol", "Tschchartseriesmixedlineshowsymbol", "Tschchartseriesscattershowsymbol", "Tschchartseriesdefaultshowtrendline", "Tschchartseriesareashowvaluelabels", "Tschchartseriesbarshowvaluelabels", "Tschchartseriesbubbleshowvaluelabels", "Tschchartseriesdefaultshowvaluelabels", "Tschchartserieslineshowvaluelabels", "Tschchartseriesmixedshowvaluelabels", "Tschchartseriespieshowvaluelabels", "Tschchartseriesscattershowvaluelabels", "Tschchartseriesbubblesizedimension", "Tschchartseriesareasymboltype", "Tschchartserieslinesymboltype", "Tschchartseriesmixedareasymboltype", "Tschchartseriesmixedlinesymboltype", "Tschchartseriesscattersymboltype", "Tschchartseriesdefaulttrendlineequationoffsetx", "Tschchartseriesdefaulttrendlineequationoffsety", "Tschchartseriesdefaulttrendlinelabelstring", "Tschchartseriesdefaulttrendlineorder", "Tschchartseriesdefaulttrendlineperiod", "Tschchartseriesdefaulttrendlinersquaredoffsetx", "Tschchartseriesdefaulttrendlinersquaredoffsety", "Tschchartseriesdefaulttrendlineshowequation", "Tschchartseriesdefaulttrendlineshowlabel", "Tschchartseriesdefaulttrendlineshowr2Value", "Tschchartseriesdefaulttrendlinetype", "Tschchartseriespiewedgeexplosion", "Tschchartseriesdefaultyaxisordinal", "Tschchartseriesbubbleshowserieslabels", "Tschchartseriesbubblevaluelabelsaxis", "Tschchartseriesscattershowserieslabels", "Tschchartseriesscattervaluelabelsaxis", });
    org.techforumist.keynote.proto.TSP.TSPMessages.getDescriptor();
    org.techforumist.keynote.proto.TSK.TSKArchives.getDescriptor();
    org.techforumist.keynote.proto.TSD.TSDArchives.getDescriptor();
    org.techforumist.keynote.proto.TSS.TSSArchives.getDescriptor();
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.getDescriptor();
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
