// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TSCHPreUFFArchives.proto

package org.techforumist.keynote.proto.TSCH.PreUFF;

public final class TSCHPreUFFArchives {
  private TSCHPreUFFArchives() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ChartInfoArchiveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TSCH.PreUFF.ChartInfoArchive)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .TSD.DrawableArchive super = 1;</code>
     */
    boolean hasSuper();
    /**
     * <code>required .TSD.DrawableArchive super = 1;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchive getSuper();
    /**
     * <code>required .TSD.DrawableArchive super = 1;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchiveOrBuilder getSuperOrBuilder();

    /**
     * <code>required .TSCH.PreUFF.ChartModelArchive chart_model = 2;</code>
     */
    boolean hasChartModel();
    /**
     * <code>required .TSCH.PreUFF.ChartModelArchive chart_model = 2;</code>
     */
    org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive getChartModel();
    /**
     * <code>required .TSCH.PreUFF.ChartModelArchive chart_model = 2;</code>
     */
    org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchiveOrBuilder getChartModelOrBuilder();

    /**
     * <code>optional .TSP.Reference style = 3;</code>
     */
    boolean hasStyle();
    /**
     * <code>optional .TSP.Reference style = 3;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.Reference getStyle();
    /**
     * <code>optional .TSP.Reference style = 3;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getStyleOrBuilder();

    /**
     * <code>required .TSCH.ChartType chart_type = 4;</code>
     */
    boolean hasChartType();
    /**
     * <code>required .TSCH.ChartType chart_type = 4;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartType getChartType();

    /**
     * <code>optional .TSCH.PreUFF.LegendModelArchive legend_model = 5;</code>
     */
    boolean hasLegendModel();
    /**
     * <code>optional .TSCH.PreUFF.LegendModelArchive legend_model = 5;</code>
     */
    org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive getLegendModel();
    /**
     * <code>optional .TSCH.PreUFF.LegendModelArchive legend_model = 5;</code>
     */
    org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchiveOrBuilder getLegendModelOrBuilder();

    /**
     * <code>required .TSCH.RectArchive inner_chart_frame = 6;</code>
     */
    boolean hasInnerChartFrame();
    /**
     * <code>required .TSCH.RectArchive inner_chart_frame = 6;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive getInnerChartFrame();
    /**
     * <code>required .TSCH.RectArchive inner_chart_frame = 6;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchiveOrBuilder getInnerChartFrameOrBuilder();

    /**
     * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
     */
    java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> 
        getValueAxisStylesList();
    /**
     * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.Reference getValueAxisStyles(int index);
    /**
     * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
     */
    int getValueAxisStylesCount();
    /**
     * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
     */
    java.util.List<? extends org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
        getValueAxisStylesOrBuilderList();
    /**
     * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getValueAxisStylesOrBuilder(
        int index);

    /**
     * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
     */
    java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> 
        getCategoryAxisStylesList();
    /**
     * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.Reference getCategoryAxisStyles(int index);
    /**
     * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
     */
    int getCategoryAxisStylesCount();
    /**
     * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
     */
    java.util.List<? extends org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
        getCategoryAxisStylesOrBuilderList();
    /**
     * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getCategoryAxisStylesOrBuilder(
        int index);

    /**
     * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
     */
    java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> 
        getValueAxisNonstylesList();
    /**
     * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.Reference getValueAxisNonstyles(int index);
    /**
     * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
     */
    int getValueAxisNonstylesCount();
    /**
     * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
     */
    java.util.List<? extends org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
        getValueAxisNonstylesOrBuilderList();
    /**
     * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getValueAxisNonstylesOrBuilder(
        int index);

    /**
     * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
     */
    java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> 
        getCategoryAxisNonstylesList();
    /**
     * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.Reference getCategoryAxisNonstyles(int index);
    /**
     * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
     */
    int getCategoryAxisNonstylesCount();
    /**
     * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
     */
    java.util.List<? extends org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
        getCategoryAxisNonstylesOrBuilderList();
    /**
     * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getCategoryAxisNonstylesOrBuilder(
        int index);

    /**
     * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
     */
    java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> 
        getSeriesThemeStylesList();
    /**
     * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.Reference getSeriesThemeStyles(int index);
    /**
     * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
     */
    int getSeriesThemeStylesCount();
    /**
     * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
     */
    java.util.List<? extends org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
        getSeriesThemeStylesOrBuilderList();
    /**
     * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getSeriesThemeStylesOrBuilder(
        int index);

    /**
     * <code>optional .TSCH.SparseReferenceArrayArchive series_private_styles = 12;</code>
     */
    boolean hasSeriesPrivateStyles();
    /**
     * <code>optional .TSCH.SparseReferenceArrayArchive series_private_styles = 12;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive getSeriesPrivateStyles();
    /**
     * <code>optional .TSCH.SparseReferenceArrayArchive series_private_styles = 12;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchiveOrBuilder getSeriesPrivateStylesOrBuilder();

    /**
     * <code>optional .TSCH.SparseReferenceArrayArchive series_non_styles = 13;</code>
     */
    boolean hasSeriesNonStyles();
    /**
     * <code>optional .TSCH.SparseReferenceArrayArchive series_non_styles = 13;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive getSeriesNonStyles();
    /**
     * <code>optional .TSCH.SparseReferenceArrayArchive series_non_styles = 13;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchiveOrBuilder getSeriesNonStylesOrBuilder();

    /**
     * <code>optional .TSP.Reference non_style = 14;</code>
     */
    boolean hasNonStyle();
    /**
     * <code>optional .TSP.Reference non_style = 14;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.Reference getNonStyle();
    /**
     * <code>optional .TSP.Reference non_style = 14;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getNonStyleOrBuilder();

    /**
     * <code>optional .TSP.Reference mediator = 15;</code>
     */
    boolean hasMediator();
    /**
     * <code>optional .TSP.Reference mediator = 15;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.Reference getMediator();
    /**
     * <code>optional .TSP.Reference mediator = 15;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getMediatorOrBuilder();

    /**
     * <code>optional .TSP.Point cde_preview_origin = 16;</code>
     */
    boolean hasCdePreviewOrigin();
    /**
     * <code>optional .TSP.Point cde_preview_origin = 16;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.Point getCdePreviewOrigin();
    /**
     * <code>optional .TSP.Point cde_preview_origin = 16;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.PointOrBuilder getCdePreviewOriginOrBuilder();

    /**
     * <code>optional .TSP.Reference chart_style_preset = 17;</code>
     */
    boolean hasChartStylePreset();
    /**
     * <code>optional .TSP.Reference chart_style_preset = 17;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.Reference getChartStylePreset();
    /**
     * <code>optional .TSP.Reference chart_style_preset = 17;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getChartStylePresetOrBuilder();

    /**
     * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
     */
    java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> 
        getParagraphStylesList();
    /**
     * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.Reference getParagraphStyles(int index);
    /**
     * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
     */
    int getParagraphStylesCount();
    /**
     * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
     */
    java.util.List<? extends org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
        getParagraphStylesOrBuilderList();
    /**
     * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getParagraphStylesOrBuilder(
        int index);

    /**
     * <code>optional int32 last_row_sected_in_the_cde = 19;</code>
     */
    boolean hasLastRowSectedInTheCde();
    /**
     * <code>optional int32 last_row_sected_in_the_cde = 19;</code>
     */
    int getLastRowSectedInTheCde();

    /**
     * <code>optional int32 last_column_sected_in_the_cde = 20;</code>
     */
    boolean hasLastColumnSectedInTheCde();
    /**
     * <code>optional int32 last_column_sected_in_the_cde = 20;</code>
     */
    int getLastColumnSectedInTheCde();

    /**
     * <code>optional int32 chart_style_preset_index = 21;</code>
     */
    boolean hasChartStylePresetIndex();
    /**
     * <code>optional int32 chart_style_preset_index = 21;</code>
     */
    int getChartStylePresetIndex();

    /**
     * <code>optional bool needs_calc_engine_deferred_import_action = 22;</code>
     */
    boolean hasNeedsCalcEngineDeferredImportAction();
    /**
     * <code>optional bool needs_calc_engine_deferred_import_action = 22;</code>
     */
    boolean getNeedsCalcEngineDeferredImportAction();
  }
  /**
   * Protobuf type {@code TSCH.PreUFF.ChartInfoArchive}
   */
  public  static final class ChartInfoArchive extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TSCH.PreUFF.ChartInfoArchive)
      ChartInfoArchiveOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChartInfoArchive.newBuilder() to construct.
    private ChartInfoArchive(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChartInfoArchive() {
      chartType_ = 0;
      valueAxisStyles_ = java.util.Collections.emptyList();
      categoryAxisStyles_ = java.util.Collections.emptyList();
      valueAxisNonstyles_ = java.util.Collections.emptyList();
      categoryAxisNonstyles_ = java.util.Collections.emptyList();
      seriesThemeStyles_ = java.util.Collections.emptyList();
      paragraphStyles_ = java.util.Collections.emptyList();
      lastRowSectedInTheCde_ = 0;
      lastColumnSectedInTheCde_ = 0;
      chartStylePresetIndex_ = 0;
      needsCalcEngineDeferredImportAction_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChartInfoArchive(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = super_.toBuilder();
              }
              super_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(super_);
                super_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = chartModel_.toBuilder();
              }
              chartModel_ = input.readMessage(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(chartModel_);
                chartModel_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = style_.toBuilder();
              }
              style_ = input.readMessage(org.techforumist.keynote.proto.TSP.TSPMessages.Reference.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(style_);
                style_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartType value = org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                chartType_ = rawValue;
              }
              break;
            }
            case 42: {
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = legendModel_.toBuilder();
              }
              legendModel_ = input.readMessage(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(legendModel_);
                legendModel_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = innerChartFrame_.toBuilder();
              }
              innerChartFrame_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(innerChartFrame_);
                innerChartFrame_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                valueAxisStyles_ = new java.util.ArrayList<org.techforumist.keynote.proto.TSP.TSPMessages.Reference>();
                mutable_bitField0_ |= 0x00000040;
              }
              valueAxisStyles_.add(
                  input.readMessage(org.techforumist.keynote.proto.TSP.TSPMessages.Reference.PARSER, extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                categoryAxisStyles_ = new java.util.ArrayList<org.techforumist.keynote.proto.TSP.TSPMessages.Reference>();
                mutable_bitField0_ |= 0x00000080;
              }
              categoryAxisStyles_.add(
                  input.readMessage(org.techforumist.keynote.proto.TSP.TSPMessages.Reference.PARSER, extensionRegistry));
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                valueAxisNonstyles_ = new java.util.ArrayList<org.techforumist.keynote.proto.TSP.TSPMessages.Reference>();
                mutable_bitField0_ |= 0x00000100;
              }
              valueAxisNonstyles_.add(
                  input.readMessage(org.techforumist.keynote.proto.TSP.TSPMessages.Reference.PARSER, extensionRegistry));
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                categoryAxisNonstyles_ = new java.util.ArrayList<org.techforumist.keynote.proto.TSP.TSPMessages.Reference>();
                mutable_bitField0_ |= 0x00000200;
              }
              categoryAxisNonstyles_.add(
                  input.readMessage(org.techforumist.keynote.proto.TSP.TSPMessages.Reference.PARSER, extensionRegistry));
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                seriesThemeStyles_ = new java.util.ArrayList<org.techforumist.keynote.proto.TSP.TSPMessages.Reference>();
                mutable_bitField0_ |= 0x00000400;
              }
              seriesThemeStyles_.add(
                  input.readMessage(org.techforumist.keynote.proto.TSP.TSPMessages.Reference.PARSER, extensionRegistry));
              break;
            }
            case 98: {
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = seriesPrivateStyles_.toBuilder();
              }
              seriesPrivateStyles_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(seriesPrivateStyles_);
                seriesPrivateStyles_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 106: {
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = seriesNonStyles_.toBuilder();
              }
              seriesNonStyles_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(seriesNonStyles_);
                seriesNonStyles_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 114: {
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = nonStyle_.toBuilder();
              }
              nonStyle_ = input.readMessage(org.techforumist.keynote.proto.TSP.TSPMessages.Reference.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nonStyle_);
                nonStyle_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 122: {
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = mediator_.toBuilder();
              }
              mediator_ = input.readMessage(org.techforumist.keynote.proto.TSP.TSPMessages.Reference.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mediator_);
                mediator_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 130: {
              org.techforumist.keynote.proto.TSP.TSPMessages.Point.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = cdePreviewOrigin_.toBuilder();
              }
              cdePreviewOrigin_ = input.readMessage(org.techforumist.keynote.proto.TSP.TSPMessages.Point.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cdePreviewOrigin_);
                cdePreviewOrigin_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 138: {
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = chartStylePreset_.toBuilder();
              }
              chartStylePreset_ = input.readMessage(org.techforumist.keynote.proto.TSP.TSPMessages.Reference.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(chartStylePreset_);
                chartStylePreset_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 146: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                paragraphStyles_ = new java.util.ArrayList<org.techforumist.keynote.proto.TSP.TSPMessages.Reference>();
                mutable_bitField0_ |= 0x00020000;
              }
              paragraphStyles_.add(
                  input.readMessage(org.techforumist.keynote.proto.TSP.TSPMessages.Reference.PARSER, extensionRegistry));
              break;
            }
            case 152: {
              bitField0_ |= 0x00001000;
              lastRowSectedInTheCde_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00002000;
              lastColumnSectedInTheCde_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00004000;
              chartStylePresetIndex_ = input.readInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00008000;
              needsCalcEngineDeferredImportAction_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          valueAxisStyles_ = java.util.Collections.unmodifiableList(valueAxisStyles_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          categoryAxisStyles_ = java.util.Collections.unmodifiableList(categoryAxisStyles_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          valueAxisNonstyles_ = java.util.Collections.unmodifiableList(valueAxisNonstyles_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          categoryAxisNonstyles_ = java.util.Collections.unmodifiableList(categoryAxisNonstyles_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          seriesThemeStyles_ = java.util.Collections.unmodifiableList(seriesThemeStyles_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          paragraphStyles_ = java.util.Collections.unmodifiableList(paragraphStyles_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartInfoArchive_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartInfoArchive_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive.Builder.class);
    }

    private int bitField0_;
    public static final int SUPER_FIELD_NUMBER = 1;
    private org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchive super_;
    /**
     * <code>required .TSD.DrawableArchive super = 1;</code>
     */
    public boolean hasSuper() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .TSD.DrawableArchive super = 1;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchive getSuper() {
      return super_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchive.getDefaultInstance() : super_;
    }
    /**
     * <code>required .TSD.DrawableArchive super = 1;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchiveOrBuilder getSuperOrBuilder() {
      return super_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchive.getDefaultInstance() : super_;
    }

    public static final int CHART_MODEL_FIELD_NUMBER = 2;
    private org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive chartModel_;
    /**
     * <code>required .TSCH.PreUFF.ChartModelArchive chart_model = 2;</code>
     */
    public boolean hasChartModel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .TSCH.PreUFF.ChartModelArchive chart_model = 2;</code>
     */
    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive getChartModel() {
      return chartModel_ == null ? org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive.getDefaultInstance() : chartModel_;
    }
    /**
     * <code>required .TSCH.PreUFF.ChartModelArchive chart_model = 2;</code>
     */
    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchiveOrBuilder getChartModelOrBuilder() {
      return chartModel_ == null ? org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive.getDefaultInstance() : chartModel_;
    }

    public static final int STYLE_FIELD_NUMBER = 3;
    private org.techforumist.keynote.proto.TSP.TSPMessages.Reference style_;
    /**
     * <code>optional .TSP.Reference style = 3;</code>
     */
    public boolean hasStyle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .TSP.Reference style = 3;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getStyle() {
      return style_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : style_;
    }
    /**
     * <code>optional .TSP.Reference style = 3;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getStyleOrBuilder() {
      return style_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : style_;
    }

    public static final int CHART_TYPE_FIELD_NUMBER = 4;
    private int chartType_;
    /**
     * <code>required .TSCH.ChartType chart_type = 4;</code>
     */
    public boolean hasChartType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .TSCH.ChartType chart_type = 4;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartType getChartType() {
      org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartType result = org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartType.valueOf(chartType_);
      return result == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartType.undefinedChartType : result;
    }

    public static final int LEGEND_MODEL_FIELD_NUMBER = 5;
    private org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive legendModel_;
    /**
     * <code>optional .TSCH.PreUFF.LegendModelArchive legend_model = 5;</code>
     */
    public boolean hasLegendModel() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .TSCH.PreUFF.LegendModelArchive legend_model = 5;</code>
     */
    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive getLegendModel() {
      return legendModel_ == null ? org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive.getDefaultInstance() : legendModel_;
    }
    /**
     * <code>optional .TSCH.PreUFF.LegendModelArchive legend_model = 5;</code>
     */
    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchiveOrBuilder getLegendModelOrBuilder() {
      return legendModel_ == null ? org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive.getDefaultInstance() : legendModel_;
    }

    public static final int INNER_CHART_FRAME_FIELD_NUMBER = 6;
    private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive innerChartFrame_;
    /**
     * <code>required .TSCH.RectArchive inner_chart_frame = 6;</code>
     */
    public boolean hasInnerChartFrame() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required .TSCH.RectArchive inner_chart_frame = 6;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive getInnerChartFrame() {
      return innerChartFrame_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.getDefaultInstance() : innerChartFrame_;
    }
    /**
     * <code>required .TSCH.RectArchive inner_chart_frame = 6;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchiveOrBuilder getInnerChartFrameOrBuilder() {
      return innerChartFrame_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.getDefaultInstance() : innerChartFrame_;
    }

    public static final int VALUE_AXIS_STYLES_FIELD_NUMBER = 7;
    private java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> valueAxisStyles_;
    /**
     * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
     */
    public java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> getValueAxisStylesList() {
      return valueAxisStyles_;
    }
    /**
     * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
     */
    public java.util.List<? extends org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
        getValueAxisStylesOrBuilderList() {
      return valueAxisStyles_;
    }
    /**
     * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
     */
    public int getValueAxisStylesCount() {
      return valueAxisStyles_.size();
    }
    /**
     * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getValueAxisStyles(int index) {
      return valueAxisStyles_.get(index);
    }
    /**
     * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getValueAxisStylesOrBuilder(
        int index) {
      return valueAxisStyles_.get(index);
    }

    public static final int CATEGORY_AXIS_STYLES_FIELD_NUMBER = 8;
    private java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> categoryAxisStyles_;
    /**
     * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
     */
    public java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> getCategoryAxisStylesList() {
      return categoryAxisStyles_;
    }
    /**
     * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
     */
    public java.util.List<? extends org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
        getCategoryAxisStylesOrBuilderList() {
      return categoryAxisStyles_;
    }
    /**
     * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
     */
    public int getCategoryAxisStylesCount() {
      return categoryAxisStyles_.size();
    }
    /**
     * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getCategoryAxisStyles(int index) {
      return categoryAxisStyles_.get(index);
    }
    /**
     * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getCategoryAxisStylesOrBuilder(
        int index) {
      return categoryAxisStyles_.get(index);
    }

    public static final int VALUE_AXIS_NONSTYLES_FIELD_NUMBER = 9;
    private java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> valueAxisNonstyles_;
    /**
     * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
     */
    public java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> getValueAxisNonstylesList() {
      return valueAxisNonstyles_;
    }
    /**
     * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
     */
    public java.util.List<? extends org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
        getValueAxisNonstylesOrBuilderList() {
      return valueAxisNonstyles_;
    }
    /**
     * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
     */
    public int getValueAxisNonstylesCount() {
      return valueAxisNonstyles_.size();
    }
    /**
     * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getValueAxisNonstyles(int index) {
      return valueAxisNonstyles_.get(index);
    }
    /**
     * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getValueAxisNonstylesOrBuilder(
        int index) {
      return valueAxisNonstyles_.get(index);
    }

    public static final int CATEGORY_AXIS_NONSTYLES_FIELD_NUMBER = 10;
    private java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> categoryAxisNonstyles_;
    /**
     * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
     */
    public java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> getCategoryAxisNonstylesList() {
      return categoryAxisNonstyles_;
    }
    /**
     * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
     */
    public java.util.List<? extends org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
        getCategoryAxisNonstylesOrBuilderList() {
      return categoryAxisNonstyles_;
    }
    /**
     * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
     */
    public int getCategoryAxisNonstylesCount() {
      return categoryAxisNonstyles_.size();
    }
    /**
     * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getCategoryAxisNonstyles(int index) {
      return categoryAxisNonstyles_.get(index);
    }
    /**
     * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getCategoryAxisNonstylesOrBuilder(
        int index) {
      return categoryAxisNonstyles_.get(index);
    }

    public static final int SERIES_THEME_STYLES_FIELD_NUMBER = 11;
    private java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> seriesThemeStyles_;
    /**
     * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
     */
    public java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> getSeriesThemeStylesList() {
      return seriesThemeStyles_;
    }
    /**
     * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
     */
    public java.util.List<? extends org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
        getSeriesThemeStylesOrBuilderList() {
      return seriesThemeStyles_;
    }
    /**
     * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
     */
    public int getSeriesThemeStylesCount() {
      return seriesThemeStyles_.size();
    }
    /**
     * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getSeriesThemeStyles(int index) {
      return seriesThemeStyles_.get(index);
    }
    /**
     * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getSeriesThemeStylesOrBuilder(
        int index) {
      return seriesThemeStyles_.get(index);
    }

    public static final int SERIES_PRIVATE_STYLES_FIELD_NUMBER = 12;
    private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive seriesPrivateStyles_;
    /**
     * <code>optional .TSCH.SparseReferenceArrayArchive series_private_styles = 12;</code>
     */
    public boolean hasSeriesPrivateStyles() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .TSCH.SparseReferenceArrayArchive series_private_styles = 12;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive getSeriesPrivateStyles() {
      return seriesPrivateStyles_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.getDefaultInstance() : seriesPrivateStyles_;
    }
    /**
     * <code>optional .TSCH.SparseReferenceArrayArchive series_private_styles = 12;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchiveOrBuilder getSeriesPrivateStylesOrBuilder() {
      return seriesPrivateStyles_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.getDefaultInstance() : seriesPrivateStyles_;
    }

    public static final int SERIES_NON_STYLES_FIELD_NUMBER = 13;
    private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive seriesNonStyles_;
    /**
     * <code>optional .TSCH.SparseReferenceArrayArchive series_non_styles = 13;</code>
     */
    public boolean hasSeriesNonStyles() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .TSCH.SparseReferenceArrayArchive series_non_styles = 13;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive getSeriesNonStyles() {
      return seriesNonStyles_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.getDefaultInstance() : seriesNonStyles_;
    }
    /**
     * <code>optional .TSCH.SparseReferenceArrayArchive series_non_styles = 13;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchiveOrBuilder getSeriesNonStylesOrBuilder() {
      return seriesNonStyles_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.getDefaultInstance() : seriesNonStyles_;
    }

    public static final int NON_STYLE_FIELD_NUMBER = 14;
    private org.techforumist.keynote.proto.TSP.TSPMessages.Reference nonStyle_;
    /**
     * <code>optional .TSP.Reference non_style = 14;</code>
     */
    public boolean hasNonStyle() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .TSP.Reference non_style = 14;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getNonStyle() {
      return nonStyle_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : nonStyle_;
    }
    /**
     * <code>optional .TSP.Reference non_style = 14;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getNonStyleOrBuilder() {
      return nonStyle_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : nonStyle_;
    }

    public static final int MEDIATOR_FIELD_NUMBER = 15;
    private org.techforumist.keynote.proto.TSP.TSPMessages.Reference mediator_;
    /**
     * <code>optional .TSP.Reference mediator = 15;</code>
     */
    public boolean hasMediator() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .TSP.Reference mediator = 15;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getMediator() {
      return mediator_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : mediator_;
    }
    /**
     * <code>optional .TSP.Reference mediator = 15;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getMediatorOrBuilder() {
      return mediator_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : mediator_;
    }

    public static final int CDE_PREVIEW_ORIGIN_FIELD_NUMBER = 16;
    private org.techforumist.keynote.proto.TSP.TSPMessages.Point cdePreviewOrigin_;
    /**
     * <code>optional .TSP.Point cde_preview_origin = 16;</code>
     */
    public boolean hasCdePreviewOrigin() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .TSP.Point cde_preview_origin = 16;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.Point getCdePreviewOrigin() {
      return cdePreviewOrigin_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Point.getDefaultInstance() : cdePreviewOrigin_;
    }
    /**
     * <code>optional .TSP.Point cde_preview_origin = 16;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.PointOrBuilder getCdePreviewOriginOrBuilder() {
      return cdePreviewOrigin_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Point.getDefaultInstance() : cdePreviewOrigin_;
    }

    public static final int CHART_STYLE_PRESET_FIELD_NUMBER = 17;
    private org.techforumist.keynote.proto.TSP.TSPMessages.Reference chartStylePreset_;
    /**
     * <code>optional .TSP.Reference chart_style_preset = 17;</code>
     */
    public boolean hasChartStylePreset() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .TSP.Reference chart_style_preset = 17;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getChartStylePreset() {
      return chartStylePreset_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : chartStylePreset_;
    }
    /**
     * <code>optional .TSP.Reference chart_style_preset = 17;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getChartStylePresetOrBuilder() {
      return chartStylePreset_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : chartStylePreset_;
    }

    public static final int PARAGRAPH_STYLES_FIELD_NUMBER = 18;
    private java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> paragraphStyles_;
    /**
     * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
     */
    public java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> getParagraphStylesList() {
      return paragraphStyles_;
    }
    /**
     * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
     */
    public java.util.List<? extends org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
        getParagraphStylesOrBuilderList() {
      return paragraphStyles_;
    }
    /**
     * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
     */
    public int getParagraphStylesCount() {
      return paragraphStyles_.size();
    }
    /**
     * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getParagraphStyles(int index) {
      return paragraphStyles_.get(index);
    }
    /**
     * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getParagraphStylesOrBuilder(
        int index) {
      return paragraphStyles_.get(index);
    }

    public static final int LAST_ROW_SECTED_IN_THE_CDE_FIELD_NUMBER = 19;
    private int lastRowSectedInTheCde_;
    /**
     * <code>optional int32 last_row_sected_in_the_cde = 19;</code>
     */
    public boolean hasLastRowSectedInTheCde() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 last_row_sected_in_the_cde = 19;</code>
     */
    public int getLastRowSectedInTheCde() {
      return lastRowSectedInTheCde_;
    }

    public static final int LAST_COLUMN_SECTED_IN_THE_CDE_FIELD_NUMBER = 20;
    private int lastColumnSectedInTheCde_;
    /**
     * <code>optional int32 last_column_sected_in_the_cde = 20;</code>
     */
    public boolean hasLastColumnSectedInTheCde() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 last_column_sected_in_the_cde = 20;</code>
     */
    public int getLastColumnSectedInTheCde() {
      return lastColumnSectedInTheCde_;
    }

    public static final int CHART_STYLE_PRESET_INDEX_FIELD_NUMBER = 21;
    private int chartStylePresetIndex_;
    /**
     * <code>optional int32 chart_style_preset_index = 21;</code>
     */
    public boolean hasChartStylePresetIndex() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 chart_style_preset_index = 21;</code>
     */
    public int getChartStylePresetIndex() {
      return chartStylePresetIndex_;
    }

    public static final int NEEDS_CALC_ENGINE_DEFERRED_IMPORT_ACTION_FIELD_NUMBER = 22;
    private boolean needsCalcEngineDeferredImportAction_;
    /**
     * <code>optional bool needs_calc_engine_deferred_import_action = 22;</code>
     */
    public boolean hasNeedsCalcEngineDeferredImportAction() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional bool needs_calc_engine_deferred_import_action = 22;</code>
     */
    public boolean getNeedsCalcEngineDeferredImportAction() {
      return needsCalcEngineDeferredImportAction_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSuper()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChartModel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChartType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInnerChartFrame()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSuper().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getChartModel().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasStyle()) {
        if (!getStyle().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasLegendModel()) {
        if (!getLegendModel().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getInnerChartFrame().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getValueAxisStylesCount(); i++) {
        if (!getValueAxisStyles(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getCategoryAxisStylesCount(); i++) {
        if (!getCategoryAxisStyles(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getValueAxisNonstylesCount(); i++) {
        if (!getValueAxisNonstyles(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getCategoryAxisNonstylesCount(); i++) {
        if (!getCategoryAxisNonstyles(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getSeriesThemeStylesCount(); i++) {
        if (!getSeriesThemeStyles(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSeriesPrivateStyles()) {
        if (!getSeriesPrivateStyles().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSeriesNonStyles()) {
        if (!getSeriesNonStyles().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasNonStyle()) {
        if (!getNonStyle().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasMediator()) {
        if (!getMediator().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasCdePreviewOrigin()) {
        if (!getCdePreviewOrigin().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasChartStylePreset()) {
        if (!getChartStylePreset().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getParagraphStylesCount(); i++) {
        if (!getParagraphStyles(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getSuper());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getChartModel());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getStyle());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, chartType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, getLegendModel());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, getInnerChartFrame());
      }
      for (int i = 0; i < valueAxisStyles_.size(); i++) {
        output.writeMessage(7, valueAxisStyles_.get(i));
      }
      for (int i = 0; i < categoryAxisStyles_.size(); i++) {
        output.writeMessage(8, categoryAxisStyles_.get(i));
      }
      for (int i = 0; i < valueAxisNonstyles_.size(); i++) {
        output.writeMessage(9, valueAxisNonstyles_.get(i));
      }
      for (int i = 0; i < categoryAxisNonstyles_.size(); i++) {
        output.writeMessage(10, categoryAxisNonstyles_.get(i));
      }
      for (int i = 0; i < seriesThemeStyles_.size(); i++) {
        output.writeMessage(11, seriesThemeStyles_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(12, getSeriesPrivateStyles());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(13, getSeriesNonStyles());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(14, getNonStyle());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(15, getMediator());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(16, getCdePreviewOrigin());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(17, getChartStylePreset());
      }
      for (int i = 0; i < paragraphStyles_.size(); i++) {
        output.writeMessage(18, paragraphStyles_.get(i));
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(19, lastRowSectedInTheCde_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(20, lastColumnSectedInTheCde_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(21, chartStylePresetIndex_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeBool(22, needsCalcEngineDeferredImportAction_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSuper());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getChartModel());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getStyle());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, chartType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getLegendModel());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getInnerChartFrame());
      }
      for (int i = 0; i < valueAxisStyles_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, valueAxisStyles_.get(i));
      }
      for (int i = 0; i < categoryAxisStyles_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, categoryAxisStyles_.get(i));
      }
      for (int i = 0; i < valueAxisNonstyles_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, valueAxisNonstyles_.get(i));
      }
      for (int i = 0; i < categoryAxisNonstyles_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, categoryAxisNonstyles_.get(i));
      }
      for (int i = 0; i < seriesThemeStyles_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, seriesThemeStyles_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getSeriesPrivateStyles());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getSeriesNonStyles());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getNonStyle());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getMediator());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getCdePreviewOrigin());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, getChartStylePreset());
      }
      for (int i = 0; i < paragraphStyles_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, paragraphStyles_.get(i));
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, lastRowSectedInTheCde_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, lastColumnSectedInTheCde_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, chartStylePresetIndex_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(22, needsCalcEngineDeferredImportAction_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive)) {
        return super.equals(obj);
      }
      org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive other = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive) obj;

      boolean result = true;
      result = result && (hasSuper() == other.hasSuper());
      if (hasSuper()) {
        result = result && getSuper()
            .equals(other.getSuper());
      }
      result = result && (hasChartModel() == other.hasChartModel());
      if (hasChartModel()) {
        result = result && getChartModel()
            .equals(other.getChartModel());
      }
      result = result && (hasStyle() == other.hasStyle());
      if (hasStyle()) {
        result = result && getStyle()
            .equals(other.getStyle());
      }
      result = result && (hasChartType() == other.hasChartType());
      if (hasChartType()) {
        result = result && chartType_ == other.chartType_;
      }
      result = result && (hasLegendModel() == other.hasLegendModel());
      if (hasLegendModel()) {
        result = result && getLegendModel()
            .equals(other.getLegendModel());
      }
      result = result && (hasInnerChartFrame() == other.hasInnerChartFrame());
      if (hasInnerChartFrame()) {
        result = result && getInnerChartFrame()
            .equals(other.getInnerChartFrame());
      }
      result = result && getValueAxisStylesList()
          .equals(other.getValueAxisStylesList());
      result = result && getCategoryAxisStylesList()
          .equals(other.getCategoryAxisStylesList());
      result = result && getValueAxisNonstylesList()
          .equals(other.getValueAxisNonstylesList());
      result = result && getCategoryAxisNonstylesList()
          .equals(other.getCategoryAxisNonstylesList());
      result = result && getSeriesThemeStylesList()
          .equals(other.getSeriesThemeStylesList());
      result = result && (hasSeriesPrivateStyles() == other.hasSeriesPrivateStyles());
      if (hasSeriesPrivateStyles()) {
        result = result && getSeriesPrivateStyles()
            .equals(other.getSeriesPrivateStyles());
      }
      result = result && (hasSeriesNonStyles() == other.hasSeriesNonStyles());
      if (hasSeriesNonStyles()) {
        result = result && getSeriesNonStyles()
            .equals(other.getSeriesNonStyles());
      }
      result = result && (hasNonStyle() == other.hasNonStyle());
      if (hasNonStyle()) {
        result = result && getNonStyle()
            .equals(other.getNonStyle());
      }
      result = result && (hasMediator() == other.hasMediator());
      if (hasMediator()) {
        result = result && getMediator()
            .equals(other.getMediator());
      }
      result = result && (hasCdePreviewOrigin() == other.hasCdePreviewOrigin());
      if (hasCdePreviewOrigin()) {
        result = result && getCdePreviewOrigin()
            .equals(other.getCdePreviewOrigin());
      }
      result = result && (hasChartStylePreset() == other.hasChartStylePreset());
      if (hasChartStylePreset()) {
        result = result && getChartStylePreset()
            .equals(other.getChartStylePreset());
      }
      result = result && getParagraphStylesList()
          .equals(other.getParagraphStylesList());
      result = result && (hasLastRowSectedInTheCde() == other.hasLastRowSectedInTheCde());
      if (hasLastRowSectedInTheCde()) {
        result = result && (getLastRowSectedInTheCde()
            == other.getLastRowSectedInTheCde());
      }
      result = result && (hasLastColumnSectedInTheCde() == other.hasLastColumnSectedInTheCde());
      if (hasLastColumnSectedInTheCde()) {
        result = result && (getLastColumnSectedInTheCde()
            == other.getLastColumnSectedInTheCde());
      }
      result = result && (hasChartStylePresetIndex() == other.hasChartStylePresetIndex());
      if (hasChartStylePresetIndex()) {
        result = result && (getChartStylePresetIndex()
            == other.getChartStylePresetIndex());
      }
      result = result && (hasNeedsCalcEngineDeferredImportAction() == other.hasNeedsCalcEngineDeferredImportAction());
      if (hasNeedsCalcEngineDeferredImportAction()) {
        result = result && (getNeedsCalcEngineDeferredImportAction()
            == other.getNeedsCalcEngineDeferredImportAction());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSuper()) {
        hash = (37 * hash) + SUPER_FIELD_NUMBER;
        hash = (53 * hash) + getSuper().hashCode();
      }
      if (hasChartModel()) {
        hash = (37 * hash) + CHART_MODEL_FIELD_NUMBER;
        hash = (53 * hash) + getChartModel().hashCode();
      }
      if (hasStyle()) {
        hash = (37 * hash) + STYLE_FIELD_NUMBER;
        hash = (53 * hash) + getStyle().hashCode();
      }
      if (hasChartType()) {
        hash = (37 * hash) + CHART_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + chartType_;
      }
      if (hasLegendModel()) {
        hash = (37 * hash) + LEGEND_MODEL_FIELD_NUMBER;
        hash = (53 * hash) + getLegendModel().hashCode();
      }
      if (hasInnerChartFrame()) {
        hash = (37 * hash) + INNER_CHART_FRAME_FIELD_NUMBER;
        hash = (53 * hash) + getInnerChartFrame().hashCode();
      }
      if (getValueAxisStylesCount() > 0) {
        hash = (37 * hash) + VALUE_AXIS_STYLES_FIELD_NUMBER;
        hash = (53 * hash) + getValueAxisStylesList().hashCode();
      }
      if (getCategoryAxisStylesCount() > 0) {
        hash = (37 * hash) + CATEGORY_AXIS_STYLES_FIELD_NUMBER;
        hash = (53 * hash) + getCategoryAxisStylesList().hashCode();
      }
      if (getValueAxisNonstylesCount() > 0) {
        hash = (37 * hash) + VALUE_AXIS_NONSTYLES_FIELD_NUMBER;
        hash = (53 * hash) + getValueAxisNonstylesList().hashCode();
      }
      if (getCategoryAxisNonstylesCount() > 0) {
        hash = (37 * hash) + CATEGORY_AXIS_NONSTYLES_FIELD_NUMBER;
        hash = (53 * hash) + getCategoryAxisNonstylesList().hashCode();
      }
      if (getSeriesThemeStylesCount() > 0) {
        hash = (37 * hash) + SERIES_THEME_STYLES_FIELD_NUMBER;
        hash = (53 * hash) + getSeriesThemeStylesList().hashCode();
      }
      if (hasSeriesPrivateStyles()) {
        hash = (37 * hash) + SERIES_PRIVATE_STYLES_FIELD_NUMBER;
        hash = (53 * hash) + getSeriesPrivateStyles().hashCode();
      }
      if (hasSeriesNonStyles()) {
        hash = (37 * hash) + SERIES_NON_STYLES_FIELD_NUMBER;
        hash = (53 * hash) + getSeriesNonStyles().hashCode();
      }
      if (hasNonStyle()) {
        hash = (37 * hash) + NON_STYLE_FIELD_NUMBER;
        hash = (53 * hash) + getNonStyle().hashCode();
      }
      if (hasMediator()) {
        hash = (37 * hash) + MEDIATOR_FIELD_NUMBER;
        hash = (53 * hash) + getMediator().hashCode();
      }
      if (hasCdePreviewOrigin()) {
        hash = (37 * hash) + CDE_PREVIEW_ORIGIN_FIELD_NUMBER;
        hash = (53 * hash) + getCdePreviewOrigin().hashCode();
      }
      if (hasChartStylePreset()) {
        hash = (37 * hash) + CHART_STYLE_PRESET_FIELD_NUMBER;
        hash = (53 * hash) + getChartStylePreset().hashCode();
      }
      if (getParagraphStylesCount() > 0) {
        hash = (37 * hash) + PARAGRAPH_STYLES_FIELD_NUMBER;
        hash = (53 * hash) + getParagraphStylesList().hashCode();
      }
      if (hasLastRowSectedInTheCde()) {
        hash = (37 * hash) + LAST_ROW_SECTED_IN_THE_CDE_FIELD_NUMBER;
        hash = (53 * hash) + getLastRowSectedInTheCde();
      }
      if (hasLastColumnSectedInTheCde()) {
        hash = (37 * hash) + LAST_COLUMN_SECTED_IN_THE_CDE_FIELD_NUMBER;
        hash = (53 * hash) + getLastColumnSectedInTheCde();
      }
      if (hasChartStylePresetIndex()) {
        hash = (37 * hash) + CHART_STYLE_PRESET_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getChartStylePresetIndex();
      }
      if (hasNeedsCalcEngineDeferredImportAction()) {
        hash = (37 * hash) + NEEDS_CALC_ENGINE_DEFERRED_IMPORT_ACTION_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getNeedsCalcEngineDeferredImportAction());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TSCH.PreUFF.ChartInfoArchive}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TSCH.PreUFF.ChartInfoArchive)
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchiveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartInfoArchive_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartInfoArchive_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive.Builder.class);
      }

      // Construct using TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSuperFieldBuilder();
          getChartModelFieldBuilder();
          getStyleFieldBuilder();
          getLegendModelFieldBuilder();
          getInnerChartFrameFieldBuilder();
          getValueAxisStylesFieldBuilder();
          getCategoryAxisStylesFieldBuilder();
          getValueAxisNonstylesFieldBuilder();
          getCategoryAxisNonstylesFieldBuilder();
          getSeriesThemeStylesFieldBuilder();
          getSeriesPrivateStylesFieldBuilder();
          getSeriesNonStylesFieldBuilder();
          getNonStyleFieldBuilder();
          getMediatorFieldBuilder();
          getCdePreviewOriginFieldBuilder();
          getChartStylePresetFieldBuilder();
          getParagraphStylesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (superBuilder_ == null) {
          super_ = null;
        } else {
          superBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (chartModelBuilder_ == null) {
          chartModel_ = null;
        } else {
          chartModelBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (styleBuilder_ == null) {
          style_ = null;
        } else {
          styleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        chartType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (legendModelBuilder_ == null) {
          legendModel_ = null;
        } else {
          legendModelBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (innerChartFrameBuilder_ == null) {
          innerChartFrame_ = null;
        } else {
          innerChartFrameBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (valueAxisStylesBuilder_ == null) {
          valueAxisStyles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          valueAxisStylesBuilder_.clear();
        }
        if (categoryAxisStylesBuilder_ == null) {
          categoryAxisStyles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          categoryAxisStylesBuilder_.clear();
        }
        if (valueAxisNonstylesBuilder_ == null) {
          valueAxisNonstyles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          valueAxisNonstylesBuilder_.clear();
        }
        if (categoryAxisNonstylesBuilder_ == null) {
          categoryAxisNonstyles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          categoryAxisNonstylesBuilder_.clear();
        }
        if (seriesThemeStylesBuilder_ == null) {
          seriesThemeStyles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          seriesThemeStylesBuilder_.clear();
        }
        if (seriesPrivateStylesBuilder_ == null) {
          seriesPrivateStyles_ = null;
        } else {
          seriesPrivateStylesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        if (seriesNonStylesBuilder_ == null) {
          seriesNonStyles_ = null;
        } else {
          seriesNonStylesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        if (nonStyleBuilder_ == null) {
          nonStyle_ = null;
        } else {
          nonStyleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        if (mediatorBuilder_ == null) {
          mediator_ = null;
        } else {
          mediatorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        if (cdePreviewOriginBuilder_ == null) {
          cdePreviewOrigin_ = null;
        } else {
          cdePreviewOriginBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        if (chartStylePresetBuilder_ == null) {
          chartStylePreset_ = null;
        } else {
          chartStylePresetBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        if (paragraphStylesBuilder_ == null) {
          paragraphStyles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
        } else {
          paragraphStylesBuilder_.clear();
        }
        lastRowSectedInTheCde_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        lastColumnSectedInTheCde_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        chartStylePresetIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        needsCalcEngineDeferredImportAction_ = false;
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartInfoArchive_descriptor;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive getDefaultInstanceForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive.getDefaultInstance();
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive build() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive buildPartial() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive result = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (superBuilder_ == null) {
          result.super_ = super_;
        } else {
          result.super_ = superBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (chartModelBuilder_ == null) {
          result.chartModel_ = chartModel_;
        } else {
          result.chartModel_ = chartModelBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (styleBuilder_ == null) {
          result.style_ = style_;
        } else {
          result.style_ = styleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.chartType_ = chartType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (legendModelBuilder_ == null) {
          result.legendModel_ = legendModel_;
        } else {
          result.legendModel_ = legendModelBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (innerChartFrameBuilder_ == null) {
          result.innerChartFrame_ = innerChartFrame_;
        } else {
          result.innerChartFrame_ = innerChartFrameBuilder_.build();
        }
        if (valueAxisStylesBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            valueAxisStyles_ = java.util.Collections.unmodifiableList(valueAxisStyles_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.valueAxisStyles_ = valueAxisStyles_;
        } else {
          result.valueAxisStyles_ = valueAxisStylesBuilder_.build();
        }
        if (categoryAxisStylesBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            categoryAxisStyles_ = java.util.Collections.unmodifiableList(categoryAxisStyles_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.categoryAxisStyles_ = categoryAxisStyles_;
        } else {
          result.categoryAxisStyles_ = categoryAxisStylesBuilder_.build();
        }
        if (valueAxisNonstylesBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            valueAxisNonstyles_ = java.util.Collections.unmodifiableList(valueAxisNonstyles_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.valueAxisNonstyles_ = valueAxisNonstyles_;
        } else {
          result.valueAxisNonstyles_ = valueAxisNonstylesBuilder_.build();
        }
        if (categoryAxisNonstylesBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            categoryAxisNonstyles_ = java.util.Collections.unmodifiableList(categoryAxisNonstyles_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.categoryAxisNonstyles_ = categoryAxisNonstyles_;
        } else {
          result.categoryAxisNonstyles_ = categoryAxisNonstylesBuilder_.build();
        }
        if (seriesThemeStylesBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            seriesThemeStyles_ = java.util.Collections.unmodifiableList(seriesThemeStyles_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.seriesThemeStyles_ = seriesThemeStyles_;
        } else {
          result.seriesThemeStyles_ = seriesThemeStylesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000040;
        }
        if (seriesPrivateStylesBuilder_ == null) {
          result.seriesPrivateStyles_ = seriesPrivateStyles_;
        } else {
          result.seriesPrivateStyles_ = seriesPrivateStylesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000080;
        }
        if (seriesNonStylesBuilder_ == null) {
          result.seriesNonStyles_ = seriesNonStyles_;
        } else {
          result.seriesNonStyles_ = seriesNonStylesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000100;
        }
        if (nonStyleBuilder_ == null) {
          result.nonStyle_ = nonStyle_;
        } else {
          result.nonStyle_ = nonStyleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00000200;
        }
        if (mediatorBuilder_ == null) {
          result.mediator_ = mediator_;
        } else {
          result.mediator_ = mediatorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00000400;
        }
        if (cdePreviewOriginBuilder_ == null) {
          result.cdePreviewOrigin_ = cdePreviewOrigin_;
        } else {
          result.cdePreviewOrigin_ = cdePreviewOriginBuilder_.build();
        }
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00000800;
        }
        if (chartStylePresetBuilder_ == null) {
          result.chartStylePreset_ = chartStylePreset_;
        } else {
          result.chartStylePreset_ = chartStylePresetBuilder_.build();
        }
        if (paragraphStylesBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000)) {
            paragraphStyles_ = java.util.Collections.unmodifiableList(paragraphStyles_);
            bitField0_ = (bitField0_ & ~0x00020000);
          }
          result.paragraphStyles_ = paragraphStyles_;
        } else {
          result.paragraphStyles_ = paragraphStylesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.lastRowSectedInTheCde_ = lastRowSectedInTheCde_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.lastColumnSectedInTheCde_ = lastColumnSectedInTheCde_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.chartStylePresetIndex_ = chartStylePresetIndex_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.needsCalcEngineDeferredImportAction_ = needsCalcEngineDeferredImportAction_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive) {
          return mergeFrom((org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive other) {
        if (other == org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive.getDefaultInstance()) return this;
        if (other.hasSuper()) {
          mergeSuper(other.getSuper());
        }
        if (other.hasChartModel()) {
          mergeChartModel(other.getChartModel());
        }
        if (other.hasStyle()) {
          mergeStyle(other.getStyle());
        }
        if (other.hasChartType()) {
          setChartType(other.getChartType());
        }
        if (other.hasLegendModel()) {
          mergeLegendModel(other.getLegendModel());
        }
        if (other.hasInnerChartFrame()) {
          mergeInnerChartFrame(other.getInnerChartFrame());
        }
        if (valueAxisStylesBuilder_ == null) {
          if (!other.valueAxisStyles_.isEmpty()) {
            if (valueAxisStyles_.isEmpty()) {
              valueAxisStyles_ = other.valueAxisStyles_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureValueAxisStylesIsMutable();
              valueAxisStyles_.addAll(other.valueAxisStyles_);
            }
            onChanged();
          }
        } else {
          if (!other.valueAxisStyles_.isEmpty()) {
            if (valueAxisStylesBuilder_.isEmpty()) {
              valueAxisStylesBuilder_.dispose();
              valueAxisStylesBuilder_ = null;
              valueAxisStyles_ = other.valueAxisStyles_;
              bitField0_ = (bitField0_ & ~0x00000040);
              valueAxisStylesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getValueAxisStylesFieldBuilder() : null;
            } else {
              valueAxisStylesBuilder_.addAllMessages(other.valueAxisStyles_);
            }
          }
        }
        if (categoryAxisStylesBuilder_ == null) {
          if (!other.categoryAxisStyles_.isEmpty()) {
            if (categoryAxisStyles_.isEmpty()) {
              categoryAxisStyles_ = other.categoryAxisStyles_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureCategoryAxisStylesIsMutable();
              categoryAxisStyles_.addAll(other.categoryAxisStyles_);
            }
            onChanged();
          }
        } else {
          if (!other.categoryAxisStyles_.isEmpty()) {
            if (categoryAxisStylesBuilder_.isEmpty()) {
              categoryAxisStylesBuilder_.dispose();
              categoryAxisStylesBuilder_ = null;
              categoryAxisStyles_ = other.categoryAxisStyles_;
              bitField0_ = (bitField0_ & ~0x00000080);
              categoryAxisStylesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCategoryAxisStylesFieldBuilder() : null;
            } else {
              categoryAxisStylesBuilder_.addAllMessages(other.categoryAxisStyles_);
            }
          }
        }
        if (valueAxisNonstylesBuilder_ == null) {
          if (!other.valueAxisNonstyles_.isEmpty()) {
            if (valueAxisNonstyles_.isEmpty()) {
              valueAxisNonstyles_ = other.valueAxisNonstyles_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureValueAxisNonstylesIsMutable();
              valueAxisNonstyles_.addAll(other.valueAxisNonstyles_);
            }
            onChanged();
          }
        } else {
          if (!other.valueAxisNonstyles_.isEmpty()) {
            if (valueAxisNonstylesBuilder_.isEmpty()) {
              valueAxisNonstylesBuilder_.dispose();
              valueAxisNonstylesBuilder_ = null;
              valueAxisNonstyles_ = other.valueAxisNonstyles_;
              bitField0_ = (bitField0_ & ~0x00000100);
              valueAxisNonstylesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getValueAxisNonstylesFieldBuilder() : null;
            } else {
              valueAxisNonstylesBuilder_.addAllMessages(other.valueAxisNonstyles_);
            }
          }
        }
        if (categoryAxisNonstylesBuilder_ == null) {
          if (!other.categoryAxisNonstyles_.isEmpty()) {
            if (categoryAxisNonstyles_.isEmpty()) {
              categoryAxisNonstyles_ = other.categoryAxisNonstyles_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureCategoryAxisNonstylesIsMutable();
              categoryAxisNonstyles_.addAll(other.categoryAxisNonstyles_);
            }
            onChanged();
          }
        } else {
          if (!other.categoryAxisNonstyles_.isEmpty()) {
            if (categoryAxisNonstylesBuilder_.isEmpty()) {
              categoryAxisNonstylesBuilder_.dispose();
              categoryAxisNonstylesBuilder_ = null;
              categoryAxisNonstyles_ = other.categoryAxisNonstyles_;
              bitField0_ = (bitField0_ & ~0x00000200);
              categoryAxisNonstylesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCategoryAxisNonstylesFieldBuilder() : null;
            } else {
              categoryAxisNonstylesBuilder_.addAllMessages(other.categoryAxisNonstyles_);
            }
          }
        }
        if (seriesThemeStylesBuilder_ == null) {
          if (!other.seriesThemeStyles_.isEmpty()) {
            if (seriesThemeStyles_.isEmpty()) {
              seriesThemeStyles_ = other.seriesThemeStyles_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureSeriesThemeStylesIsMutable();
              seriesThemeStyles_.addAll(other.seriesThemeStyles_);
            }
            onChanged();
          }
        } else {
          if (!other.seriesThemeStyles_.isEmpty()) {
            if (seriesThemeStylesBuilder_.isEmpty()) {
              seriesThemeStylesBuilder_.dispose();
              seriesThemeStylesBuilder_ = null;
              seriesThemeStyles_ = other.seriesThemeStyles_;
              bitField0_ = (bitField0_ & ~0x00000400);
              seriesThemeStylesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSeriesThemeStylesFieldBuilder() : null;
            } else {
              seriesThemeStylesBuilder_.addAllMessages(other.seriesThemeStyles_);
            }
          }
        }
        if (other.hasSeriesPrivateStyles()) {
          mergeSeriesPrivateStyles(other.getSeriesPrivateStyles());
        }
        if (other.hasSeriesNonStyles()) {
          mergeSeriesNonStyles(other.getSeriesNonStyles());
        }
        if (other.hasNonStyle()) {
          mergeNonStyle(other.getNonStyle());
        }
        if (other.hasMediator()) {
          mergeMediator(other.getMediator());
        }
        if (other.hasCdePreviewOrigin()) {
          mergeCdePreviewOrigin(other.getCdePreviewOrigin());
        }
        if (other.hasChartStylePreset()) {
          mergeChartStylePreset(other.getChartStylePreset());
        }
        if (paragraphStylesBuilder_ == null) {
          if (!other.paragraphStyles_.isEmpty()) {
            if (paragraphStyles_.isEmpty()) {
              paragraphStyles_ = other.paragraphStyles_;
              bitField0_ = (bitField0_ & ~0x00020000);
            } else {
              ensureParagraphStylesIsMutable();
              paragraphStyles_.addAll(other.paragraphStyles_);
            }
            onChanged();
          }
        } else {
          if (!other.paragraphStyles_.isEmpty()) {
            if (paragraphStylesBuilder_.isEmpty()) {
              paragraphStylesBuilder_.dispose();
              paragraphStylesBuilder_ = null;
              paragraphStyles_ = other.paragraphStyles_;
              bitField0_ = (bitField0_ & ~0x00020000);
              paragraphStylesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getParagraphStylesFieldBuilder() : null;
            } else {
              paragraphStylesBuilder_.addAllMessages(other.paragraphStyles_);
            }
          }
        }
        if (other.hasLastRowSectedInTheCde()) {
          setLastRowSectedInTheCde(other.getLastRowSectedInTheCde());
        }
        if (other.hasLastColumnSectedInTheCde()) {
          setLastColumnSectedInTheCde(other.getLastColumnSectedInTheCde());
        }
        if (other.hasChartStylePresetIndex()) {
          setChartStylePresetIndex(other.getChartStylePresetIndex());
        }
        if (other.hasNeedsCalcEngineDeferredImportAction()) {
          setNeedsCalcEngineDeferredImportAction(other.getNeedsCalcEngineDeferredImportAction());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSuper()) {
          return false;
        }
        if (!hasChartModel()) {
          return false;
        }
        if (!hasChartType()) {
          return false;
        }
        if (!hasInnerChartFrame()) {
          return false;
        }
        if (!getSuper().isInitialized()) {
          return false;
        }
        if (!getChartModel().isInitialized()) {
          return false;
        }
        if (hasStyle()) {
          if (!getStyle().isInitialized()) {
            return false;
          }
        }
        if (hasLegendModel()) {
          if (!getLegendModel().isInitialized()) {
            return false;
          }
        }
        if (!getInnerChartFrame().isInitialized()) {
          return false;
        }
        for (int i = 0; i < getValueAxisStylesCount(); i++) {
          if (!getValueAxisStyles(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getCategoryAxisStylesCount(); i++) {
          if (!getCategoryAxisStyles(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getValueAxisNonstylesCount(); i++) {
          if (!getValueAxisNonstyles(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getCategoryAxisNonstylesCount(); i++) {
          if (!getCategoryAxisNonstyles(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getSeriesThemeStylesCount(); i++) {
          if (!getSeriesThemeStyles(i).isInitialized()) {
            return false;
          }
        }
        if (hasSeriesPrivateStyles()) {
          if (!getSeriesPrivateStyles().isInitialized()) {
            return false;
          }
        }
        if (hasSeriesNonStyles()) {
          if (!getSeriesNonStyles().isInitialized()) {
            return false;
          }
        }
        if (hasNonStyle()) {
          if (!getNonStyle().isInitialized()) {
            return false;
          }
        }
        if (hasMediator()) {
          if (!getMediator().isInitialized()) {
            return false;
          }
        }
        if (hasCdePreviewOrigin()) {
          if (!getCdePreviewOrigin().isInitialized()) {
            return false;
          }
        }
        if (hasChartStylePreset()) {
          if (!getChartStylePreset().isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getParagraphStylesCount(); i++) {
          if (!getParagraphStyles(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchive super_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchive, org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchiveOrBuilder> superBuilder_;
      /**
       * <code>required .TSD.DrawableArchive super = 1;</code>
       */
      public boolean hasSuper() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .TSD.DrawableArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchive getSuper() {
        if (superBuilder_ == null) {
          return super_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchive.getDefaultInstance() : super_;
        } else {
          return superBuilder_.getMessage();
        }
      }
      /**
       * <code>required .TSD.DrawableArchive super = 1;</code>
       */
      public Builder setSuper(org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchive value) {
        if (superBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          super_ = value;
          onChanged();
        } else {
          superBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSD.DrawableArchive super = 1;</code>
       */
      public Builder setSuper(
          org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchive.Builder builderForValue) {
        if (superBuilder_ == null) {
          super_ = builderForValue.build();
          onChanged();
        } else {
          superBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSD.DrawableArchive super = 1;</code>
       */
      public Builder mergeSuper(org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchive value) {
        if (superBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              super_ != null &&
              super_ != org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchive.getDefaultInstance()) {
            super_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchive.newBuilder(super_).mergeFrom(value).buildPartial();
          } else {
            super_ = value;
          }
          onChanged();
        } else {
          superBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSD.DrawableArchive super = 1;</code>
       */
      public Builder clearSuper() {
        if (superBuilder_ == null) {
          super_ = null;
          onChanged();
        } else {
          superBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .TSD.DrawableArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchive.Builder getSuperBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSuperFieldBuilder().getBuilder();
      }
      /**
       * <code>required .TSD.DrawableArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchiveOrBuilder getSuperOrBuilder() {
        if (superBuilder_ != null) {
          return superBuilder_.getMessageOrBuilder();
        } else {
          return super_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchive.getDefaultInstance() : super_;
        }
      }
      /**
       * <code>required .TSD.DrawableArchive super = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchive, org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchiveOrBuilder> 
          getSuperFieldBuilder() {
        if (superBuilder_ == null) {
          superBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchive, org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.DrawableArchiveOrBuilder>(
                  getSuper(),
                  getParentForChildren(),
                  isClean());
          super_ = null;
        }
        return superBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive chartModel_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive.Builder, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchiveOrBuilder> chartModelBuilder_;
      /**
       * <code>required .TSCH.PreUFF.ChartModelArchive chart_model = 2;</code>
       */
      public boolean hasChartModel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .TSCH.PreUFF.ChartModelArchive chart_model = 2;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive getChartModel() {
        if (chartModelBuilder_ == null) {
          return chartModel_ == null ? org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive.getDefaultInstance() : chartModel_;
        } else {
          return chartModelBuilder_.getMessage();
        }
      }
      /**
       * <code>required .TSCH.PreUFF.ChartModelArchive chart_model = 2;</code>
       */
      public Builder setChartModel(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive value) {
        if (chartModelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          chartModel_ = value;
          onChanged();
        } else {
          chartModelBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .TSCH.PreUFF.ChartModelArchive chart_model = 2;</code>
       */
      public Builder setChartModel(
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive.Builder builderForValue) {
        if (chartModelBuilder_ == null) {
          chartModel_ = builderForValue.build();
          onChanged();
        } else {
          chartModelBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .TSCH.PreUFF.ChartModelArchive chart_model = 2;</code>
       */
      public Builder mergeChartModel(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive value) {
        if (chartModelBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              chartModel_ != null &&
              chartModel_ != org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive.getDefaultInstance()) {
            chartModel_ =
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive.newBuilder(chartModel_).mergeFrom(value).buildPartial();
          } else {
            chartModel_ = value;
          }
          onChanged();
        } else {
          chartModelBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .TSCH.PreUFF.ChartModelArchive chart_model = 2;</code>
       */
      public Builder clearChartModel() {
        if (chartModelBuilder_ == null) {
          chartModel_ = null;
          onChanged();
        } else {
          chartModelBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .TSCH.PreUFF.ChartModelArchive chart_model = 2;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive.Builder getChartModelBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getChartModelFieldBuilder().getBuilder();
      }
      /**
       * <code>required .TSCH.PreUFF.ChartModelArchive chart_model = 2;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchiveOrBuilder getChartModelOrBuilder() {
        if (chartModelBuilder_ != null) {
          return chartModelBuilder_.getMessageOrBuilder();
        } else {
          return chartModel_ == null ?
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive.getDefaultInstance() : chartModel_;
        }
      }
      /**
       * <code>required .TSCH.PreUFF.ChartModelArchive chart_model = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive.Builder, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchiveOrBuilder> 
          getChartModelFieldBuilder() {
        if (chartModelBuilder_ == null) {
          chartModelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive.Builder, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchiveOrBuilder>(
                  getChartModel(),
                  getParentForChildren(),
                  isClean());
          chartModel_ = null;
        }
        return chartModelBuilder_;
      }

      private org.techforumist.keynote.proto.TSP.TSPMessages.Reference style_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> styleBuilder_;
      /**
       * <code>optional .TSP.Reference style = 3;</code>
       */
      public boolean hasStyle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .TSP.Reference style = 3;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getStyle() {
        if (styleBuilder_ == null) {
          return style_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : style_;
        } else {
          return styleBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSP.Reference style = 3;</code>
       */
      public Builder setStyle(org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (styleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          style_ = value;
          onChanged();
        } else {
          styleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSP.Reference style = 3;</code>
       */
      public Builder setStyle(
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (styleBuilder_ == null) {
          style_ = builderForValue.build();
          onChanged();
        } else {
          styleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSP.Reference style = 3;</code>
       */
      public Builder mergeStyle(org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (styleBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              style_ != null &&
              style_ != org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance()) {
            style_ =
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.newBuilder(style_).mergeFrom(value).buildPartial();
          } else {
            style_ = value;
          }
          onChanged();
        } else {
          styleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSP.Reference style = 3;</code>
       */
      public Builder clearStyle() {
        if (styleBuilder_ == null) {
          style_ = null;
          onChanged();
        } else {
          styleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .TSP.Reference style = 3;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder getStyleBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getStyleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSP.Reference style = 3;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getStyleOrBuilder() {
        if (styleBuilder_ != null) {
          return styleBuilder_.getMessageOrBuilder();
        } else {
          return style_ == null ?
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : style_;
        }
      }
      /**
       * <code>optional .TSP.Reference style = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
          getStyleFieldBuilder() {
        if (styleBuilder_ == null) {
          styleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder>(
                  getStyle(),
                  getParentForChildren(),
                  isClean());
          style_ = null;
        }
        return styleBuilder_;
      }

      private int chartType_ = 0;
      /**
       * <code>required .TSCH.ChartType chart_type = 4;</code>
       */
      public boolean hasChartType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .TSCH.ChartType chart_type = 4;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartType getChartType() {
        org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartType result = org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartType.valueOf(chartType_);
        return result == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartType.undefinedChartType : result;
      }
      /**
       * <code>required .TSCH.ChartType chart_type = 4;</code>
       */
      public Builder setChartType(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        chartType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .TSCH.ChartType chart_type = 4;</code>
       */
      public Builder clearChartType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        chartType_ = 0;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive legendModel_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive.Builder, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchiveOrBuilder> legendModelBuilder_;
      /**
       * <code>optional .TSCH.PreUFF.LegendModelArchive legend_model = 5;</code>
       */
      public boolean hasLegendModel() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .TSCH.PreUFF.LegendModelArchive legend_model = 5;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive getLegendModel() {
        if (legendModelBuilder_ == null) {
          return legendModel_ == null ? org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive.getDefaultInstance() : legendModel_;
        } else {
          return legendModelBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.PreUFF.LegendModelArchive legend_model = 5;</code>
       */
      public Builder setLegendModel(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive value) {
        if (legendModelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          legendModel_ = value;
          onChanged();
        } else {
          legendModelBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSCH.PreUFF.LegendModelArchive legend_model = 5;</code>
       */
      public Builder setLegendModel(
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive.Builder builderForValue) {
        if (legendModelBuilder_ == null) {
          legendModel_ = builderForValue.build();
          onChanged();
        } else {
          legendModelBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSCH.PreUFF.LegendModelArchive legend_model = 5;</code>
       */
      public Builder mergeLegendModel(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive value) {
        if (legendModelBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              legendModel_ != null &&
              legendModel_ != org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive.getDefaultInstance()) {
            legendModel_ =
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive.newBuilder(legendModel_).mergeFrom(value).buildPartial();
          } else {
            legendModel_ = value;
          }
          onChanged();
        } else {
          legendModelBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSCH.PreUFF.LegendModelArchive legend_model = 5;</code>
       */
      public Builder clearLegendModel() {
        if (legendModelBuilder_ == null) {
          legendModel_ = null;
          onChanged();
        } else {
          legendModelBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .TSCH.PreUFF.LegendModelArchive legend_model = 5;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive.Builder getLegendModelBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getLegendModelFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.PreUFF.LegendModelArchive legend_model = 5;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchiveOrBuilder getLegendModelOrBuilder() {
        if (legendModelBuilder_ != null) {
          return legendModelBuilder_.getMessageOrBuilder();
        } else {
          return legendModel_ == null ?
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive.getDefaultInstance() : legendModel_;
        }
      }
      /**
       * <code>optional .TSCH.PreUFF.LegendModelArchive legend_model = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive.Builder, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchiveOrBuilder> 
          getLegendModelFieldBuilder() {
        if (legendModelBuilder_ == null) {
          legendModelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive.Builder, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchiveOrBuilder>(
                  getLegendModel(),
                  getParentForChildren(),
                  isClean());
          legendModel_ = null;
        }
        return legendModelBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive innerChartFrame_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchiveOrBuilder> innerChartFrameBuilder_;
      /**
       * <code>required .TSCH.RectArchive inner_chart_frame = 6;</code>
       */
      public boolean hasInnerChartFrame() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required .TSCH.RectArchive inner_chart_frame = 6;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive getInnerChartFrame() {
        if (innerChartFrameBuilder_ == null) {
          return innerChartFrame_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.getDefaultInstance() : innerChartFrame_;
        } else {
          return innerChartFrameBuilder_.getMessage();
        }
      }
      /**
       * <code>required .TSCH.RectArchive inner_chart_frame = 6;</code>
       */
      public Builder setInnerChartFrame(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive value) {
        if (innerChartFrameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          innerChartFrame_ = value;
          onChanged();
        } else {
          innerChartFrameBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>required .TSCH.RectArchive inner_chart_frame = 6;</code>
       */
      public Builder setInnerChartFrame(
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.Builder builderForValue) {
        if (innerChartFrameBuilder_ == null) {
          innerChartFrame_ = builderForValue.build();
          onChanged();
        } else {
          innerChartFrameBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>required .TSCH.RectArchive inner_chart_frame = 6;</code>
       */
      public Builder mergeInnerChartFrame(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive value) {
        if (innerChartFrameBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              innerChartFrame_ != null &&
              innerChartFrame_ != org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.getDefaultInstance()) {
            innerChartFrame_ =
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.newBuilder(innerChartFrame_).mergeFrom(value).buildPartial();
          } else {
            innerChartFrame_ = value;
          }
          onChanged();
        } else {
          innerChartFrameBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>required .TSCH.RectArchive inner_chart_frame = 6;</code>
       */
      public Builder clearInnerChartFrame() {
        if (innerChartFrameBuilder_ == null) {
          innerChartFrame_ = null;
          onChanged();
        } else {
          innerChartFrameBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>required .TSCH.RectArchive inner_chart_frame = 6;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.Builder getInnerChartFrameBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getInnerChartFrameFieldBuilder().getBuilder();
      }
      /**
       * <code>required .TSCH.RectArchive inner_chart_frame = 6;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchiveOrBuilder getInnerChartFrameOrBuilder() {
        if (innerChartFrameBuilder_ != null) {
          return innerChartFrameBuilder_.getMessageOrBuilder();
        } else {
          return innerChartFrame_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.getDefaultInstance() : innerChartFrame_;
        }
      }
      /**
       * <code>required .TSCH.RectArchive inner_chart_frame = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchiveOrBuilder> 
          getInnerChartFrameFieldBuilder() {
        if (innerChartFrameBuilder_ == null) {
          innerChartFrameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchiveOrBuilder>(
                  getInnerChartFrame(),
                  getParentForChildren(),
                  isClean());
          innerChartFrame_ = null;
        }
        return innerChartFrameBuilder_;
      }

      private java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> valueAxisStyles_ =
        java.util.Collections.emptyList();
      private void ensureValueAxisStylesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          valueAxisStyles_ = new java.util.ArrayList<org.techforumist.keynote.proto.TSP.TSPMessages.Reference>(valueAxisStyles_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> valueAxisStylesBuilder_;

      /**
       * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
       */
      public java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> getValueAxisStylesList() {
        if (valueAxisStylesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(valueAxisStyles_);
        } else {
          return valueAxisStylesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
       */
      public int getValueAxisStylesCount() {
        if (valueAxisStylesBuilder_ == null) {
          return valueAxisStyles_.size();
        } else {
          return valueAxisStylesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getValueAxisStyles(int index) {
        if (valueAxisStylesBuilder_ == null) {
          return valueAxisStyles_.get(index);
        } else {
          return valueAxisStylesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
       */
      public Builder setValueAxisStyles(
          int index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (valueAxisStylesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueAxisStylesIsMutable();
          valueAxisStyles_.set(index, value);
          onChanged();
        } else {
          valueAxisStylesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
       */
      public Builder setValueAxisStyles(
          int index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (valueAxisStylesBuilder_ == null) {
          ensureValueAxisStylesIsMutable();
          valueAxisStyles_.set(index, builderForValue.build());
          onChanged();
        } else {
          valueAxisStylesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
       */
      public Builder addValueAxisStyles(org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (valueAxisStylesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueAxisStylesIsMutable();
          valueAxisStyles_.add(value);
          onChanged();
        } else {
          valueAxisStylesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
       */
      public Builder addValueAxisStyles(
          int index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (valueAxisStylesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueAxisStylesIsMutable();
          valueAxisStyles_.add(index, value);
          onChanged();
        } else {
          valueAxisStylesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
       */
      public Builder addValueAxisStyles(
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (valueAxisStylesBuilder_ == null) {
          ensureValueAxisStylesIsMutable();
          valueAxisStyles_.add(builderForValue.build());
          onChanged();
        } else {
          valueAxisStylesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
       */
      public Builder addValueAxisStyles(
          int index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (valueAxisStylesBuilder_ == null) {
          ensureValueAxisStylesIsMutable();
          valueAxisStyles_.add(index, builderForValue.build());
          onChanged();
        } else {
          valueAxisStylesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
       */
      public Builder addAllValueAxisStyles(
          java.lang.Iterable<? extends org.techforumist.keynote.proto.TSP.TSPMessages.Reference> values) {
        if (valueAxisStylesBuilder_ == null) {
          ensureValueAxisStylesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, valueAxisStyles_);
          onChanged();
        } else {
          valueAxisStylesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
       */
      public Builder clearValueAxisStyles() {
        if (valueAxisStylesBuilder_ == null) {
          valueAxisStyles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          valueAxisStylesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
       */
      public Builder removeValueAxisStyles(int index) {
        if (valueAxisStylesBuilder_ == null) {
          ensureValueAxisStylesIsMutable();
          valueAxisStyles_.remove(index);
          onChanged();
        } else {
          valueAxisStylesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder getValueAxisStylesBuilder(
          int index) {
        return getValueAxisStylesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getValueAxisStylesOrBuilder(
          int index) {
        if (valueAxisStylesBuilder_ == null) {
          return valueAxisStyles_.get(index);  } else {
          return valueAxisStylesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
       */
      public java.util.List<? extends org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
           getValueAxisStylesOrBuilderList() {
        if (valueAxisStylesBuilder_ != null) {
          return valueAxisStylesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(valueAxisStyles_);
        }
      }
      /**
       * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder addValueAxisStylesBuilder() {
        return getValueAxisStylesFieldBuilder().addBuilder(
            org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance());
      }
      /**
       * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder addValueAxisStylesBuilder(
          int index) {
        return getValueAxisStylesFieldBuilder().addBuilder(
            index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance());
      }
      /**
       * <code>repeated .TSP.Reference value_axis_styles = 7;</code>
       */
      public java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder> 
           getValueAxisStylesBuilderList() {
        return getValueAxisStylesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
          getValueAxisStylesFieldBuilder() {
        if (valueAxisStylesBuilder_ == null) {
          valueAxisStylesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder>(
                  valueAxisStyles_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          valueAxisStyles_ = null;
        }
        return valueAxisStylesBuilder_;
      }

      private java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> categoryAxisStyles_ =
        java.util.Collections.emptyList();
      private void ensureCategoryAxisStylesIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          categoryAxisStyles_ = new java.util.ArrayList<org.techforumist.keynote.proto.TSP.TSPMessages.Reference>(categoryAxisStyles_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> categoryAxisStylesBuilder_;

      /**
       * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
       */
      public java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> getCategoryAxisStylesList() {
        if (categoryAxisStylesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(categoryAxisStyles_);
        } else {
          return categoryAxisStylesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
       */
      public int getCategoryAxisStylesCount() {
        if (categoryAxisStylesBuilder_ == null) {
          return categoryAxisStyles_.size();
        } else {
          return categoryAxisStylesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getCategoryAxisStyles(int index) {
        if (categoryAxisStylesBuilder_ == null) {
          return categoryAxisStyles_.get(index);
        } else {
          return categoryAxisStylesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
       */
      public Builder setCategoryAxisStyles(
          int index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (categoryAxisStylesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCategoryAxisStylesIsMutable();
          categoryAxisStyles_.set(index, value);
          onChanged();
        } else {
          categoryAxisStylesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
       */
      public Builder setCategoryAxisStyles(
          int index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (categoryAxisStylesBuilder_ == null) {
          ensureCategoryAxisStylesIsMutable();
          categoryAxisStyles_.set(index, builderForValue.build());
          onChanged();
        } else {
          categoryAxisStylesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
       */
      public Builder addCategoryAxisStyles(org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (categoryAxisStylesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCategoryAxisStylesIsMutable();
          categoryAxisStyles_.add(value);
          onChanged();
        } else {
          categoryAxisStylesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
       */
      public Builder addCategoryAxisStyles(
          int index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (categoryAxisStylesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCategoryAxisStylesIsMutable();
          categoryAxisStyles_.add(index, value);
          onChanged();
        } else {
          categoryAxisStylesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
       */
      public Builder addCategoryAxisStyles(
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (categoryAxisStylesBuilder_ == null) {
          ensureCategoryAxisStylesIsMutable();
          categoryAxisStyles_.add(builderForValue.build());
          onChanged();
        } else {
          categoryAxisStylesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
       */
      public Builder addCategoryAxisStyles(
          int index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (categoryAxisStylesBuilder_ == null) {
          ensureCategoryAxisStylesIsMutable();
          categoryAxisStyles_.add(index, builderForValue.build());
          onChanged();
        } else {
          categoryAxisStylesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
       */
      public Builder addAllCategoryAxisStyles(
          java.lang.Iterable<? extends org.techforumist.keynote.proto.TSP.TSPMessages.Reference> values) {
        if (categoryAxisStylesBuilder_ == null) {
          ensureCategoryAxisStylesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, categoryAxisStyles_);
          onChanged();
        } else {
          categoryAxisStylesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
       */
      public Builder clearCategoryAxisStyles() {
        if (categoryAxisStylesBuilder_ == null) {
          categoryAxisStyles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          categoryAxisStylesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
       */
      public Builder removeCategoryAxisStyles(int index) {
        if (categoryAxisStylesBuilder_ == null) {
          ensureCategoryAxisStylesIsMutable();
          categoryAxisStyles_.remove(index);
          onChanged();
        } else {
          categoryAxisStylesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder getCategoryAxisStylesBuilder(
          int index) {
        return getCategoryAxisStylesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getCategoryAxisStylesOrBuilder(
          int index) {
        if (categoryAxisStylesBuilder_ == null) {
          return categoryAxisStyles_.get(index);  } else {
          return categoryAxisStylesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
       */
      public java.util.List<? extends org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
           getCategoryAxisStylesOrBuilderList() {
        if (categoryAxisStylesBuilder_ != null) {
          return categoryAxisStylesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(categoryAxisStyles_);
        }
      }
      /**
       * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder addCategoryAxisStylesBuilder() {
        return getCategoryAxisStylesFieldBuilder().addBuilder(
            org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance());
      }
      /**
       * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder addCategoryAxisStylesBuilder(
          int index) {
        return getCategoryAxisStylesFieldBuilder().addBuilder(
            index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance());
      }
      /**
       * <code>repeated .TSP.Reference category_axis_styles = 8;</code>
       */
      public java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder> 
           getCategoryAxisStylesBuilderList() {
        return getCategoryAxisStylesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
          getCategoryAxisStylesFieldBuilder() {
        if (categoryAxisStylesBuilder_ == null) {
          categoryAxisStylesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder>(
                  categoryAxisStyles_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          categoryAxisStyles_ = null;
        }
        return categoryAxisStylesBuilder_;
      }

      private java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> valueAxisNonstyles_ =
        java.util.Collections.emptyList();
      private void ensureValueAxisNonstylesIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          valueAxisNonstyles_ = new java.util.ArrayList<org.techforumist.keynote.proto.TSP.TSPMessages.Reference>(valueAxisNonstyles_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> valueAxisNonstylesBuilder_;

      /**
       * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
       */
      public java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> getValueAxisNonstylesList() {
        if (valueAxisNonstylesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(valueAxisNonstyles_);
        } else {
          return valueAxisNonstylesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
       */
      public int getValueAxisNonstylesCount() {
        if (valueAxisNonstylesBuilder_ == null) {
          return valueAxisNonstyles_.size();
        } else {
          return valueAxisNonstylesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getValueAxisNonstyles(int index) {
        if (valueAxisNonstylesBuilder_ == null) {
          return valueAxisNonstyles_.get(index);
        } else {
          return valueAxisNonstylesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
       */
      public Builder setValueAxisNonstyles(
          int index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (valueAxisNonstylesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueAxisNonstylesIsMutable();
          valueAxisNonstyles_.set(index, value);
          onChanged();
        } else {
          valueAxisNonstylesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
       */
      public Builder setValueAxisNonstyles(
          int index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (valueAxisNonstylesBuilder_ == null) {
          ensureValueAxisNonstylesIsMutable();
          valueAxisNonstyles_.set(index, builderForValue.build());
          onChanged();
        } else {
          valueAxisNonstylesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
       */
      public Builder addValueAxisNonstyles(org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (valueAxisNonstylesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueAxisNonstylesIsMutable();
          valueAxisNonstyles_.add(value);
          onChanged();
        } else {
          valueAxisNonstylesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
       */
      public Builder addValueAxisNonstyles(
          int index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (valueAxisNonstylesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueAxisNonstylesIsMutable();
          valueAxisNonstyles_.add(index, value);
          onChanged();
        } else {
          valueAxisNonstylesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
       */
      public Builder addValueAxisNonstyles(
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (valueAxisNonstylesBuilder_ == null) {
          ensureValueAxisNonstylesIsMutable();
          valueAxisNonstyles_.add(builderForValue.build());
          onChanged();
        } else {
          valueAxisNonstylesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
       */
      public Builder addValueAxisNonstyles(
          int index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (valueAxisNonstylesBuilder_ == null) {
          ensureValueAxisNonstylesIsMutable();
          valueAxisNonstyles_.add(index, builderForValue.build());
          onChanged();
        } else {
          valueAxisNonstylesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
       */
      public Builder addAllValueAxisNonstyles(
          java.lang.Iterable<? extends org.techforumist.keynote.proto.TSP.TSPMessages.Reference> values) {
        if (valueAxisNonstylesBuilder_ == null) {
          ensureValueAxisNonstylesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, valueAxisNonstyles_);
          onChanged();
        } else {
          valueAxisNonstylesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
       */
      public Builder clearValueAxisNonstyles() {
        if (valueAxisNonstylesBuilder_ == null) {
          valueAxisNonstyles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          valueAxisNonstylesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
       */
      public Builder removeValueAxisNonstyles(int index) {
        if (valueAxisNonstylesBuilder_ == null) {
          ensureValueAxisNonstylesIsMutable();
          valueAxisNonstyles_.remove(index);
          onChanged();
        } else {
          valueAxisNonstylesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder getValueAxisNonstylesBuilder(
          int index) {
        return getValueAxisNonstylesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getValueAxisNonstylesOrBuilder(
          int index) {
        if (valueAxisNonstylesBuilder_ == null) {
          return valueAxisNonstyles_.get(index);  } else {
          return valueAxisNonstylesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
       */
      public java.util.List<? extends org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
           getValueAxisNonstylesOrBuilderList() {
        if (valueAxisNonstylesBuilder_ != null) {
          return valueAxisNonstylesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(valueAxisNonstyles_);
        }
      }
      /**
       * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder addValueAxisNonstylesBuilder() {
        return getValueAxisNonstylesFieldBuilder().addBuilder(
            org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance());
      }
      /**
       * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder addValueAxisNonstylesBuilder(
          int index) {
        return getValueAxisNonstylesFieldBuilder().addBuilder(
            index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance());
      }
      /**
       * <code>repeated .TSP.Reference value_axis_nonstyles = 9;</code>
       */
      public java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder> 
           getValueAxisNonstylesBuilderList() {
        return getValueAxisNonstylesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
          getValueAxisNonstylesFieldBuilder() {
        if (valueAxisNonstylesBuilder_ == null) {
          valueAxisNonstylesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder>(
                  valueAxisNonstyles_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          valueAxisNonstyles_ = null;
        }
        return valueAxisNonstylesBuilder_;
      }

      private java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> categoryAxisNonstyles_ =
        java.util.Collections.emptyList();
      private void ensureCategoryAxisNonstylesIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          categoryAxisNonstyles_ = new java.util.ArrayList<org.techforumist.keynote.proto.TSP.TSPMessages.Reference>(categoryAxisNonstyles_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> categoryAxisNonstylesBuilder_;

      /**
       * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
       */
      public java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> getCategoryAxisNonstylesList() {
        if (categoryAxisNonstylesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(categoryAxisNonstyles_);
        } else {
          return categoryAxisNonstylesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
       */
      public int getCategoryAxisNonstylesCount() {
        if (categoryAxisNonstylesBuilder_ == null) {
          return categoryAxisNonstyles_.size();
        } else {
          return categoryAxisNonstylesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getCategoryAxisNonstyles(int index) {
        if (categoryAxisNonstylesBuilder_ == null) {
          return categoryAxisNonstyles_.get(index);
        } else {
          return categoryAxisNonstylesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
       */
      public Builder setCategoryAxisNonstyles(
          int index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (categoryAxisNonstylesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCategoryAxisNonstylesIsMutable();
          categoryAxisNonstyles_.set(index, value);
          onChanged();
        } else {
          categoryAxisNonstylesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
       */
      public Builder setCategoryAxisNonstyles(
          int index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (categoryAxisNonstylesBuilder_ == null) {
          ensureCategoryAxisNonstylesIsMutable();
          categoryAxisNonstyles_.set(index, builderForValue.build());
          onChanged();
        } else {
          categoryAxisNonstylesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
       */
      public Builder addCategoryAxisNonstyles(org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (categoryAxisNonstylesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCategoryAxisNonstylesIsMutable();
          categoryAxisNonstyles_.add(value);
          onChanged();
        } else {
          categoryAxisNonstylesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
       */
      public Builder addCategoryAxisNonstyles(
          int index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (categoryAxisNonstylesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCategoryAxisNonstylesIsMutable();
          categoryAxisNonstyles_.add(index, value);
          onChanged();
        } else {
          categoryAxisNonstylesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
       */
      public Builder addCategoryAxisNonstyles(
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (categoryAxisNonstylesBuilder_ == null) {
          ensureCategoryAxisNonstylesIsMutable();
          categoryAxisNonstyles_.add(builderForValue.build());
          onChanged();
        } else {
          categoryAxisNonstylesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
       */
      public Builder addCategoryAxisNonstyles(
          int index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (categoryAxisNonstylesBuilder_ == null) {
          ensureCategoryAxisNonstylesIsMutable();
          categoryAxisNonstyles_.add(index, builderForValue.build());
          onChanged();
        } else {
          categoryAxisNonstylesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
       */
      public Builder addAllCategoryAxisNonstyles(
          java.lang.Iterable<? extends org.techforumist.keynote.proto.TSP.TSPMessages.Reference> values) {
        if (categoryAxisNonstylesBuilder_ == null) {
          ensureCategoryAxisNonstylesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, categoryAxisNonstyles_);
          onChanged();
        } else {
          categoryAxisNonstylesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
       */
      public Builder clearCategoryAxisNonstyles() {
        if (categoryAxisNonstylesBuilder_ == null) {
          categoryAxisNonstyles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          categoryAxisNonstylesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
       */
      public Builder removeCategoryAxisNonstyles(int index) {
        if (categoryAxisNonstylesBuilder_ == null) {
          ensureCategoryAxisNonstylesIsMutable();
          categoryAxisNonstyles_.remove(index);
          onChanged();
        } else {
          categoryAxisNonstylesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder getCategoryAxisNonstylesBuilder(
          int index) {
        return getCategoryAxisNonstylesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getCategoryAxisNonstylesOrBuilder(
          int index) {
        if (categoryAxisNonstylesBuilder_ == null) {
          return categoryAxisNonstyles_.get(index);  } else {
          return categoryAxisNonstylesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
       */
      public java.util.List<? extends org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
           getCategoryAxisNonstylesOrBuilderList() {
        if (categoryAxisNonstylesBuilder_ != null) {
          return categoryAxisNonstylesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(categoryAxisNonstyles_);
        }
      }
      /**
       * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder addCategoryAxisNonstylesBuilder() {
        return getCategoryAxisNonstylesFieldBuilder().addBuilder(
            org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance());
      }
      /**
       * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder addCategoryAxisNonstylesBuilder(
          int index) {
        return getCategoryAxisNonstylesFieldBuilder().addBuilder(
            index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance());
      }
      /**
       * <code>repeated .TSP.Reference category_axis_nonstyles = 10;</code>
       */
      public java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder> 
           getCategoryAxisNonstylesBuilderList() {
        return getCategoryAxisNonstylesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
          getCategoryAxisNonstylesFieldBuilder() {
        if (categoryAxisNonstylesBuilder_ == null) {
          categoryAxisNonstylesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder>(
                  categoryAxisNonstyles_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          categoryAxisNonstyles_ = null;
        }
        return categoryAxisNonstylesBuilder_;
      }

      private java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> seriesThemeStyles_ =
        java.util.Collections.emptyList();
      private void ensureSeriesThemeStylesIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          seriesThemeStyles_ = new java.util.ArrayList<org.techforumist.keynote.proto.TSP.TSPMessages.Reference>(seriesThemeStyles_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> seriesThemeStylesBuilder_;

      /**
       * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
       */
      public java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> getSeriesThemeStylesList() {
        if (seriesThemeStylesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(seriesThemeStyles_);
        } else {
          return seriesThemeStylesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
       */
      public int getSeriesThemeStylesCount() {
        if (seriesThemeStylesBuilder_ == null) {
          return seriesThemeStyles_.size();
        } else {
          return seriesThemeStylesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getSeriesThemeStyles(int index) {
        if (seriesThemeStylesBuilder_ == null) {
          return seriesThemeStyles_.get(index);
        } else {
          return seriesThemeStylesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
       */
      public Builder setSeriesThemeStyles(
          int index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (seriesThemeStylesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSeriesThemeStylesIsMutable();
          seriesThemeStyles_.set(index, value);
          onChanged();
        } else {
          seriesThemeStylesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
       */
      public Builder setSeriesThemeStyles(
          int index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (seriesThemeStylesBuilder_ == null) {
          ensureSeriesThemeStylesIsMutable();
          seriesThemeStyles_.set(index, builderForValue.build());
          onChanged();
        } else {
          seriesThemeStylesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
       */
      public Builder addSeriesThemeStyles(org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (seriesThemeStylesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSeriesThemeStylesIsMutable();
          seriesThemeStyles_.add(value);
          onChanged();
        } else {
          seriesThemeStylesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
       */
      public Builder addSeriesThemeStyles(
          int index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (seriesThemeStylesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSeriesThemeStylesIsMutable();
          seriesThemeStyles_.add(index, value);
          onChanged();
        } else {
          seriesThemeStylesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
       */
      public Builder addSeriesThemeStyles(
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (seriesThemeStylesBuilder_ == null) {
          ensureSeriesThemeStylesIsMutable();
          seriesThemeStyles_.add(builderForValue.build());
          onChanged();
        } else {
          seriesThemeStylesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
       */
      public Builder addSeriesThemeStyles(
          int index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (seriesThemeStylesBuilder_ == null) {
          ensureSeriesThemeStylesIsMutable();
          seriesThemeStyles_.add(index, builderForValue.build());
          onChanged();
        } else {
          seriesThemeStylesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
       */
      public Builder addAllSeriesThemeStyles(
          java.lang.Iterable<? extends org.techforumist.keynote.proto.TSP.TSPMessages.Reference> values) {
        if (seriesThemeStylesBuilder_ == null) {
          ensureSeriesThemeStylesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, seriesThemeStyles_);
          onChanged();
        } else {
          seriesThemeStylesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
       */
      public Builder clearSeriesThemeStyles() {
        if (seriesThemeStylesBuilder_ == null) {
          seriesThemeStyles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          seriesThemeStylesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
       */
      public Builder removeSeriesThemeStyles(int index) {
        if (seriesThemeStylesBuilder_ == null) {
          ensureSeriesThemeStylesIsMutable();
          seriesThemeStyles_.remove(index);
          onChanged();
        } else {
          seriesThemeStylesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder getSeriesThemeStylesBuilder(
          int index) {
        return getSeriesThemeStylesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getSeriesThemeStylesOrBuilder(
          int index) {
        if (seriesThemeStylesBuilder_ == null) {
          return seriesThemeStyles_.get(index);  } else {
          return seriesThemeStylesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
       */
      public java.util.List<? extends org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
           getSeriesThemeStylesOrBuilderList() {
        if (seriesThemeStylesBuilder_ != null) {
          return seriesThemeStylesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(seriesThemeStyles_);
        }
      }
      /**
       * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder addSeriesThemeStylesBuilder() {
        return getSeriesThemeStylesFieldBuilder().addBuilder(
            org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance());
      }
      /**
       * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder addSeriesThemeStylesBuilder(
          int index) {
        return getSeriesThemeStylesFieldBuilder().addBuilder(
            index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance());
      }
      /**
       * <code>repeated .TSP.Reference series_theme_styles = 11;</code>
       */
      public java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder> 
           getSeriesThemeStylesBuilderList() {
        return getSeriesThemeStylesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
          getSeriesThemeStylesFieldBuilder() {
        if (seriesThemeStylesBuilder_ == null) {
          seriesThemeStylesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder>(
                  seriesThemeStyles_,
                  ((bitField0_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          seriesThemeStyles_ = null;
        }
        return seriesThemeStylesBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive seriesPrivateStyles_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchiveOrBuilder> seriesPrivateStylesBuilder_;
      /**
       * <code>optional .TSCH.SparseReferenceArrayArchive series_private_styles = 12;</code>
       */
      public boolean hasSeriesPrivateStyles() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .TSCH.SparseReferenceArrayArchive series_private_styles = 12;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive getSeriesPrivateStyles() {
        if (seriesPrivateStylesBuilder_ == null) {
          return seriesPrivateStyles_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.getDefaultInstance() : seriesPrivateStyles_;
        } else {
          return seriesPrivateStylesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.SparseReferenceArrayArchive series_private_styles = 12;</code>
       */
      public Builder setSeriesPrivateStyles(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive value) {
        if (seriesPrivateStylesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          seriesPrivateStyles_ = value;
          onChanged();
        } else {
          seriesPrivateStylesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSCH.SparseReferenceArrayArchive series_private_styles = 12;</code>
       */
      public Builder setSeriesPrivateStyles(
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.Builder builderForValue) {
        if (seriesPrivateStylesBuilder_ == null) {
          seriesPrivateStyles_ = builderForValue.build();
          onChanged();
        } else {
          seriesPrivateStylesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSCH.SparseReferenceArrayArchive series_private_styles = 12;</code>
       */
      public Builder mergeSeriesPrivateStyles(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive value) {
        if (seriesPrivateStylesBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              seriesPrivateStyles_ != null &&
              seriesPrivateStyles_ != org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.getDefaultInstance()) {
            seriesPrivateStyles_ =
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.newBuilder(seriesPrivateStyles_).mergeFrom(value).buildPartial();
          } else {
            seriesPrivateStyles_ = value;
          }
          onChanged();
        } else {
          seriesPrivateStylesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSCH.SparseReferenceArrayArchive series_private_styles = 12;</code>
       */
      public Builder clearSeriesPrivateStyles() {
        if (seriesPrivateStylesBuilder_ == null) {
          seriesPrivateStyles_ = null;
          onChanged();
        } else {
          seriesPrivateStylesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .TSCH.SparseReferenceArrayArchive series_private_styles = 12;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.Builder getSeriesPrivateStylesBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getSeriesPrivateStylesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.SparseReferenceArrayArchive series_private_styles = 12;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchiveOrBuilder getSeriesPrivateStylesOrBuilder() {
        if (seriesPrivateStylesBuilder_ != null) {
          return seriesPrivateStylesBuilder_.getMessageOrBuilder();
        } else {
          return seriesPrivateStyles_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.getDefaultInstance() : seriesPrivateStyles_;
        }
      }
      /**
       * <code>optional .TSCH.SparseReferenceArrayArchive series_private_styles = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchiveOrBuilder> 
          getSeriesPrivateStylesFieldBuilder() {
        if (seriesPrivateStylesBuilder_ == null) {
          seriesPrivateStylesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchiveOrBuilder>(
                  getSeriesPrivateStyles(),
                  getParentForChildren(),
                  isClean());
          seriesPrivateStyles_ = null;
        }
        return seriesPrivateStylesBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive seriesNonStyles_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchiveOrBuilder> seriesNonStylesBuilder_;
      /**
       * <code>optional .TSCH.SparseReferenceArrayArchive series_non_styles = 13;</code>
       */
      public boolean hasSeriesNonStyles() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .TSCH.SparseReferenceArrayArchive series_non_styles = 13;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive getSeriesNonStyles() {
        if (seriesNonStylesBuilder_ == null) {
          return seriesNonStyles_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.getDefaultInstance() : seriesNonStyles_;
        } else {
          return seriesNonStylesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.SparseReferenceArrayArchive series_non_styles = 13;</code>
       */
      public Builder setSeriesNonStyles(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive value) {
        if (seriesNonStylesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          seriesNonStyles_ = value;
          onChanged();
        } else {
          seriesNonStylesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .TSCH.SparseReferenceArrayArchive series_non_styles = 13;</code>
       */
      public Builder setSeriesNonStyles(
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.Builder builderForValue) {
        if (seriesNonStylesBuilder_ == null) {
          seriesNonStyles_ = builderForValue.build();
          onChanged();
        } else {
          seriesNonStylesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .TSCH.SparseReferenceArrayArchive series_non_styles = 13;</code>
       */
      public Builder mergeSeriesNonStyles(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive value) {
        if (seriesNonStylesBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000) &&
              seriesNonStyles_ != null &&
              seriesNonStyles_ != org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.getDefaultInstance()) {
            seriesNonStyles_ =
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.newBuilder(seriesNonStyles_).mergeFrom(value).buildPartial();
          } else {
            seriesNonStyles_ = value;
          }
          onChanged();
        } else {
          seriesNonStylesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .TSCH.SparseReferenceArrayArchive series_non_styles = 13;</code>
       */
      public Builder clearSeriesNonStyles() {
        if (seriesNonStylesBuilder_ == null) {
          seriesNonStyles_ = null;
          onChanged();
        } else {
          seriesNonStylesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .TSCH.SparseReferenceArrayArchive series_non_styles = 13;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.Builder getSeriesNonStylesBuilder() {
        bitField0_ |= 0x00001000;
        onChanged();
        return getSeriesNonStylesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.SparseReferenceArrayArchive series_non_styles = 13;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchiveOrBuilder getSeriesNonStylesOrBuilder() {
        if (seriesNonStylesBuilder_ != null) {
          return seriesNonStylesBuilder_.getMessageOrBuilder();
        } else {
          return seriesNonStyles_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.getDefaultInstance() : seriesNonStyles_;
        }
      }
      /**
       * <code>optional .TSCH.SparseReferenceArrayArchive series_non_styles = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchiveOrBuilder> 
          getSeriesNonStylesFieldBuilder() {
        if (seriesNonStylesBuilder_ == null) {
          seriesNonStylesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.SparseReferenceArrayArchiveOrBuilder>(
                  getSeriesNonStyles(),
                  getParentForChildren(),
                  isClean());
          seriesNonStyles_ = null;
        }
        return seriesNonStylesBuilder_;
      }

      private org.techforumist.keynote.proto.TSP.TSPMessages.Reference nonStyle_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> nonStyleBuilder_;
      /**
       * <code>optional .TSP.Reference non_style = 14;</code>
       */
      public boolean hasNonStyle() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .TSP.Reference non_style = 14;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getNonStyle() {
        if (nonStyleBuilder_ == null) {
          return nonStyle_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : nonStyle_;
        } else {
          return nonStyleBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSP.Reference non_style = 14;</code>
       */
      public Builder setNonStyle(org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (nonStyleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nonStyle_ = value;
          onChanged();
        } else {
          nonStyleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSP.Reference non_style = 14;</code>
       */
      public Builder setNonStyle(
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (nonStyleBuilder_ == null) {
          nonStyle_ = builderForValue.build();
          onChanged();
        } else {
          nonStyleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSP.Reference non_style = 14;</code>
       */
      public Builder mergeNonStyle(org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (nonStyleBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
              nonStyle_ != null &&
              nonStyle_ != org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance()) {
            nonStyle_ =
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.newBuilder(nonStyle_).mergeFrom(value).buildPartial();
          } else {
            nonStyle_ = value;
          }
          onChanged();
        } else {
          nonStyleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSP.Reference non_style = 14;</code>
       */
      public Builder clearNonStyle() {
        if (nonStyleBuilder_ == null) {
          nonStyle_ = null;
          onChanged();
        } else {
          nonStyleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .TSP.Reference non_style = 14;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder getNonStyleBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getNonStyleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSP.Reference non_style = 14;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getNonStyleOrBuilder() {
        if (nonStyleBuilder_ != null) {
          return nonStyleBuilder_.getMessageOrBuilder();
        } else {
          return nonStyle_ == null ?
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : nonStyle_;
        }
      }
      /**
       * <code>optional .TSP.Reference non_style = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
          getNonStyleFieldBuilder() {
        if (nonStyleBuilder_ == null) {
          nonStyleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder>(
                  getNonStyle(),
                  getParentForChildren(),
                  isClean());
          nonStyle_ = null;
        }
        return nonStyleBuilder_;
      }

      private org.techforumist.keynote.proto.TSP.TSPMessages.Reference mediator_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> mediatorBuilder_;
      /**
       * <code>optional .TSP.Reference mediator = 15;</code>
       */
      public boolean hasMediator() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .TSP.Reference mediator = 15;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getMediator() {
        if (mediatorBuilder_ == null) {
          return mediator_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : mediator_;
        } else {
          return mediatorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSP.Reference mediator = 15;</code>
       */
      public Builder setMediator(org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (mediatorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mediator_ = value;
          onChanged();
        } else {
          mediatorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .TSP.Reference mediator = 15;</code>
       */
      public Builder setMediator(
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (mediatorBuilder_ == null) {
          mediator_ = builderForValue.build();
          onChanged();
        } else {
          mediatorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .TSP.Reference mediator = 15;</code>
       */
      public Builder mergeMediator(org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (mediatorBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000) &&
              mediator_ != null &&
              mediator_ != org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance()) {
            mediator_ =
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.newBuilder(mediator_).mergeFrom(value).buildPartial();
          } else {
            mediator_ = value;
          }
          onChanged();
        } else {
          mediatorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .TSP.Reference mediator = 15;</code>
       */
      public Builder clearMediator() {
        if (mediatorBuilder_ == null) {
          mediator_ = null;
          onChanged();
        } else {
          mediatorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      /**
       * <code>optional .TSP.Reference mediator = 15;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder getMediatorBuilder() {
        bitField0_ |= 0x00004000;
        onChanged();
        return getMediatorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSP.Reference mediator = 15;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getMediatorOrBuilder() {
        if (mediatorBuilder_ != null) {
          return mediatorBuilder_.getMessageOrBuilder();
        } else {
          return mediator_ == null ?
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : mediator_;
        }
      }
      /**
       * <code>optional .TSP.Reference mediator = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
          getMediatorFieldBuilder() {
        if (mediatorBuilder_ == null) {
          mediatorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder>(
                  getMediator(),
                  getParentForChildren(),
                  isClean());
          mediator_ = null;
        }
        return mediatorBuilder_;
      }

      private org.techforumist.keynote.proto.TSP.TSPMessages.Point cdePreviewOrigin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Point, org.techforumist.keynote.proto.TSP.TSPMessages.Point.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.PointOrBuilder> cdePreviewOriginBuilder_;
      /**
       * <code>optional .TSP.Point cde_preview_origin = 16;</code>
       */
      public boolean hasCdePreviewOrigin() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .TSP.Point cde_preview_origin = 16;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Point getCdePreviewOrigin() {
        if (cdePreviewOriginBuilder_ == null) {
          return cdePreviewOrigin_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Point.getDefaultInstance() : cdePreviewOrigin_;
        } else {
          return cdePreviewOriginBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSP.Point cde_preview_origin = 16;</code>
       */
      public Builder setCdePreviewOrigin(org.techforumist.keynote.proto.TSP.TSPMessages.Point value) {
        if (cdePreviewOriginBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cdePreviewOrigin_ = value;
          onChanged();
        } else {
          cdePreviewOriginBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .TSP.Point cde_preview_origin = 16;</code>
       */
      public Builder setCdePreviewOrigin(
          org.techforumist.keynote.proto.TSP.TSPMessages.Point.Builder builderForValue) {
        if (cdePreviewOriginBuilder_ == null) {
          cdePreviewOrigin_ = builderForValue.build();
          onChanged();
        } else {
          cdePreviewOriginBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .TSP.Point cde_preview_origin = 16;</code>
       */
      public Builder mergeCdePreviewOrigin(org.techforumist.keynote.proto.TSP.TSPMessages.Point value) {
        if (cdePreviewOriginBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000) &&
              cdePreviewOrigin_ != null &&
              cdePreviewOrigin_ != org.techforumist.keynote.proto.TSP.TSPMessages.Point.getDefaultInstance()) {
            cdePreviewOrigin_ =
              org.techforumist.keynote.proto.TSP.TSPMessages.Point.newBuilder(cdePreviewOrigin_).mergeFrom(value).buildPartial();
          } else {
            cdePreviewOrigin_ = value;
          }
          onChanged();
        } else {
          cdePreviewOriginBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .TSP.Point cde_preview_origin = 16;</code>
       */
      public Builder clearCdePreviewOrigin() {
        if (cdePreviewOriginBuilder_ == null) {
          cdePreviewOrigin_ = null;
          onChanged();
        } else {
          cdePreviewOriginBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      /**
       * <code>optional .TSP.Point cde_preview_origin = 16;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Point.Builder getCdePreviewOriginBuilder() {
        bitField0_ |= 0x00008000;
        onChanged();
        return getCdePreviewOriginFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSP.Point cde_preview_origin = 16;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.PointOrBuilder getCdePreviewOriginOrBuilder() {
        if (cdePreviewOriginBuilder_ != null) {
          return cdePreviewOriginBuilder_.getMessageOrBuilder();
        } else {
          return cdePreviewOrigin_ == null ?
              org.techforumist.keynote.proto.TSP.TSPMessages.Point.getDefaultInstance() : cdePreviewOrigin_;
        }
      }
      /**
       * <code>optional .TSP.Point cde_preview_origin = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Point, org.techforumist.keynote.proto.TSP.TSPMessages.Point.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.PointOrBuilder> 
          getCdePreviewOriginFieldBuilder() {
        if (cdePreviewOriginBuilder_ == null) {
          cdePreviewOriginBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSP.TSPMessages.Point, org.techforumist.keynote.proto.TSP.TSPMessages.Point.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.PointOrBuilder>(
                  getCdePreviewOrigin(),
                  getParentForChildren(),
                  isClean());
          cdePreviewOrigin_ = null;
        }
        return cdePreviewOriginBuilder_;
      }

      private org.techforumist.keynote.proto.TSP.TSPMessages.Reference chartStylePreset_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> chartStylePresetBuilder_;
      /**
       * <code>optional .TSP.Reference chart_style_preset = 17;</code>
       */
      public boolean hasChartStylePreset() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .TSP.Reference chart_style_preset = 17;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getChartStylePreset() {
        if (chartStylePresetBuilder_ == null) {
          return chartStylePreset_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : chartStylePreset_;
        } else {
          return chartStylePresetBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSP.Reference chart_style_preset = 17;</code>
       */
      public Builder setChartStylePreset(org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (chartStylePresetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          chartStylePreset_ = value;
          onChanged();
        } else {
          chartStylePresetBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .TSP.Reference chart_style_preset = 17;</code>
       */
      public Builder setChartStylePreset(
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (chartStylePresetBuilder_ == null) {
          chartStylePreset_ = builderForValue.build();
          onChanged();
        } else {
          chartStylePresetBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .TSP.Reference chart_style_preset = 17;</code>
       */
      public Builder mergeChartStylePreset(org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (chartStylePresetBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000) &&
              chartStylePreset_ != null &&
              chartStylePreset_ != org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance()) {
            chartStylePreset_ =
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.newBuilder(chartStylePreset_).mergeFrom(value).buildPartial();
          } else {
            chartStylePreset_ = value;
          }
          onChanged();
        } else {
          chartStylePresetBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .TSP.Reference chart_style_preset = 17;</code>
       */
      public Builder clearChartStylePreset() {
        if (chartStylePresetBuilder_ == null) {
          chartStylePreset_ = null;
          onChanged();
        } else {
          chartStylePresetBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .TSP.Reference chart_style_preset = 17;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder getChartStylePresetBuilder() {
        bitField0_ |= 0x00010000;
        onChanged();
        return getChartStylePresetFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSP.Reference chart_style_preset = 17;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getChartStylePresetOrBuilder() {
        if (chartStylePresetBuilder_ != null) {
          return chartStylePresetBuilder_.getMessageOrBuilder();
        } else {
          return chartStylePreset_ == null ?
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : chartStylePreset_;
        }
      }
      /**
       * <code>optional .TSP.Reference chart_style_preset = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
          getChartStylePresetFieldBuilder() {
        if (chartStylePresetBuilder_ == null) {
          chartStylePresetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder>(
                  getChartStylePreset(),
                  getParentForChildren(),
                  isClean());
          chartStylePreset_ = null;
        }
        return chartStylePresetBuilder_;
      }

      private java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> paragraphStyles_ =
        java.util.Collections.emptyList();
      private void ensureParagraphStylesIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          paragraphStyles_ = new java.util.ArrayList<org.techforumist.keynote.proto.TSP.TSPMessages.Reference>(paragraphStyles_);
          bitField0_ |= 0x00020000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> paragraphStylesBuilder_;

      /**
       * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
       */
      public java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference> getParagraphStylesList() {
        if (paragraphStylesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(paragraphStyles_);
        } else {
          return paragraphStylesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
       */
      public int getParagraphStylesCount() {
        if (paragraphStylesBuilder_ == null) {
          return paragraphStyles_.size();
        } else {
          return paragraphStylesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getParagraphStyles(int index) {
        if (paragraphStylesBuilder_ == null) {
          return paragraphStyles_.get(index);
        } else {
          return paragraphStylesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
       */
      public Builder setParagraphStyles(
          int index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (paragraphStylesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParagraphStylesIsMutable();
          paragraphStyles_.set(index, value);
          onChanged();
        } else {
          paragraphStylesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
       */
      public Builder setParagraphStyles(
          int index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (paragraphStylesBuilder_ == null) {
          ensureParagraphStylesIsMutable();
          paragraphStyles_.set(index, builderForValue.build());
          onChanged();
        } else {
          paragraphStylesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
       */
      public Builder addParagraphStyles(org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (paragraphStylesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParagraphStylesIsMutable();
          paragraphStyles_.add(value);
          onChanged();
        } else {
          paragraphStylesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
       */
      public Builder addParagraphStyles(
          int index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (paragraphStylesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParagraphStylesIsMutable();
          paragraphStyles_.add(index, value);
          onChanged();
        } else {
          paragraphStylesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
       */
      public Builder addParagraphStyles(
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (paragraphStylesBuilder_ == null) {
          ensureParagraphStylesIsMutable();
          paragraphStyles_.add(builderForValue.build());
          onChanged();
        } else {
          paragraphStylesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
       */
      public Builder addParagraphStyles(
          int index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (paragraphStylesBuilder_ == null) {
          ensureParagraphStylesIsMutable();
          paragraphStyles_.add(index, builderForValue.build());
          onChanged();
        } else {
          paragraphStylesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
       */
      public Builder addAllParagraphStyles(
          java.lang.Iterable<? extends org.techforumist.keynote.proto.TSP.TSPMessages.Reference> values) {
        if (paragraphStylesBuilder_ == null) {
          ensureParagraphStylesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, paragraphStyles_);
          onChanged();
        } else {
          paragraphStylesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
       */
      public Builder clearParagraphStyles() {
        if (paragraphStylesBuilder_ == null) {
          paragraphStyles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
          onChanged();
        } else {
          paragraphStylesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
       */
      public Builder removeParagraphStyles(int index) {
        if (paragraphStylesBuilder_ == null) {
          ensureParagraphStylesIsMutable();
          paragraphStyles_.remove(index);
          onChanged();
        } else {
          paragraphStylesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder getParagraphStylesBuilder(
          int index) {
        return getParagraphStylesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getParagraphStylesOrBuilder(
          int index) {
        if (paragraphStylesBuilder_ == null) {
          return paragraphStyles_.get(index);  } else {
          return paragraphStylesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
       */
      public java.util.List<? extends org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
           getParagraphStylesOrBuilderList() {
        if (paragraphStylesBuilder_ != null) {
          return paragraphStylesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(paragraphStyles_);
        }
      }
      /**
       * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder addParagraphStylesBuilder() {
        return getParagraphStylesFieldBuilder().addBuilder(
            org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance());
      }
      /**
       * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder addParagraphStylesBuilder(
          int index) {
        return getParagraphStylesFieldBuilder().addBuilder(
            index, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance());
      }
      /**
       * <code>repeated .TSP.Reference paragraph_styles = 18;</code>
       */
      public java.util.List<org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder> 
           getParagraphStylesBuilderList() {
        return getParagraphStylesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
          getParagraphStylesFieldBuilder() {
        if (paragraphStylesBuilder_ == null) {
          paragraphStylesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder>(
                  paragraphStyles_,
                  ((bitField0_ & 0x00020000) == 0x00020000),
                  getParentForChildren(),
                  isClean());
          paragraphStyles_ = null;
        }
        return paragraphStylesBuilder_;
      }

      private int lastRowSectedInTheCde_ ;
      /**
       * <code>optional int32 last_row_sected_in_the_cde = 19;</code>
       */
      public boolean hasLastRowSectedInTheCde() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 last_row_sected_in_the_cde = 19;</code>
       */
      public int getLastRowSectedInTheCde() {
        return lastRowSectedInTheCde_;
      }
      /**
       * <code>optional int32 last_row_sected_in_the_cde = 19;</code>
       */
      public Builder setLastRowSectedInTheCde(int value) {
        bitField0_ |= 0x00040000;
        lastRowSectedInTheCde_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 last_row_sected_in_the_cde = 19;</code>
       */
      public Builder clearLastRowSectedInTheCde() {
        bitField0_ = (bitField0_ & ~0x00040000);
        lastRowSectedInTheCde_ = 0;
        onChanged();
        return this;
      }

      private int lastColumnSectedInTheCde_ ;
      /**
       * <code>optional int32 last_column_sected_in_the_cde = 20;</code>
       */
      public boolean hasLastColumnSectedInTheCde() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 last_column_sected_in_the_cde = 20;</code>
       */
      public int getLastColumnSectedInTheCde() {
        return lastColumnSectedInTheCde_;
      }
      /**
       * <code>optional int32 last_column_sected_in_the_cde = 20;</code>
       */
      public Builder setLastColumnSectedInTheCde(int value) {
        bitField0_ |= 0x00080000;
        lastColumnSectedInTheCde_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 last_column_sected_in_the_cde = 20;</code>
       */
      public Builder clearLastColumnSectedInTheCde() {
        bitField0_ = (bitField0_ & ~0x00080000);
        lastColumnSectedInTheCde_ = 0;
        onChanged();
        return this;
      }

      private int chartStylePresetIndex_ ;
      /**
       * <code>optional int32 chart_style_preset_index = 21;</code>
       */
      public boolean hasChartStylePresetIndex() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 chart_style_preset_index = 21;</code>
       */
      public int getChartStylePresetIndex() {
        return chartStylePresetIndex_;
      }
      /**
       * <code>optional int32 chart_style_preset_index = 21;</code>
       */
      public Builder setChartStylePresetIndex(int value) {
        bitField0_ |= 0x00100000;
        chartStylePresetIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 chart_style_preset_index = 21;</code>
       */
      public Builder clearChartStylePresetIndex() {
        bitField0_ = (bitField0_ & ~0x00100000);
        chartStylePresetIndex_ = 0;
        onChanged();
        return this;
      }

      private boolean needsCalcEngineDeferredImportAction_ ;
      /**
       * <code>optional bool needs_calc_engine_deferred_import_action = 22;</code>
       */
      public boolean hasNeedsCalcEngineDeferredImportAction() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional bool needs_calc_engine_deferred_import_action = 22;</code>
       */
      public boolean getNeedsCalcEngineDeferredImportAction() {
        return needsCalcEngineDeferredImportAction_;
      }
      /**
       * <code>optional bool needs_calc_engine_deferred_import_action = 22;</code>
       */
      public Builder setNeedsCalcEngineDeferredImportAction(boolean value) {
        bitField0_ |= 0x00200000;
        needsCalcEngineDeferredImportAction_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool needs_calc_engine_deferred_import_action = 22;</code>
       */
      public Builder clearNeedsCalcEngineDeferredImportAction() {
        bitField0_ = (bitField0_ & ~0x00200000);
        needsCalcEngineDeferredImportAction_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TSCH.PreUFF.ChartInfoArchive)
    }

    // @@protoc_insertion_point(class_scope:TSCH.PreUFF.ChartInfoArchive)
    private static final org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive();
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ChartInfoArchive>
        PARSER = new com.google.protobuf.AbstractParser<ChartInfoArchive>() {
      public ChartInfoArchive parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ChartInfoArchive(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChartInfoArchive> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChartInfoArchive> getParserForType() {
      return PARSER;
    }

    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartInfoArchive getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LegendModelArchiveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TSCH.PreUFF.LegendModelArchive)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .TSP.Reference info = 1;</code>
     */
    boolean hasInfo();
    /**
     * <code>optional .TSP.Reference info = 1;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.Reference getInfo();
    /**
     * <code>optional .TSP.Reference info = 1;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getInfoOrBuilder();

    /**
     * <code>required .TSCH.RectArchive frame = 2;</code>
     */
    boolean hasFrame();
    /**
     * <code>required .TSCH.RectArchive frame = 2;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive getFrame();
    /**
     * <code>required .TSCH.RectArchive frame = 2;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchiveOrBuilder getFrameOrBuilder();

    /**
     * <code>required .TSP.Reference style = 3;</code>
     */
    boolean hasStyle();
    /**
     * <code>required .TSP.Reference style = 3;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.Reference getStyle();
    /**
     * <code>required .TSP.Reference style = 3;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getStyleOrBuilder();

    /**
     * <code>required .TSP.Reference non_style = 4;</code>
     */
    boolean hasNonStyle();
    /**
     * <code>required .TSP.Reference non_style = 4;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.Reference getNonStyle();
    /**
     * <code>required .TSP.Reference non_style = 4;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getNonStyleOrBuilder();
  }
  /**
   * Protobuf type {@code TSCH.PreUFF.LegendModelArchive}
   */
  public  static final class LegendModelArchive extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TSCH.PreUFF.LegendModelArchive)
      LegendModelArchiveOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LegendModelArchive.newBuilder() to construct.
    private LegendModelArchive(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LegendModelArchive() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LegendModelArchive(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = info_.toBuilder();
              }
              info_ = input.readMessage(org.techforumist.keynote.proto.TSP.TSPMessages.Reference.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(info_);
                info_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = frame_.toBuilder();
              }
              frame_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(frame_);
                frame_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = style_.toBuilder();
              }
              style_ = input.readMessage(org.techforumist.keynote.proto.TSP.TSPMessages.Reference.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(style_);
                style_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = nonStyle_.toBuilder();
              }
              nonStyle_ = input.readMessage(org.techforumist.keynote.proto.TSP.TSPMessages.Reference.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nonStyle_);
                nonStyle_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_LegendModelArchive_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_LegendModelArchive_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive.Builder.class);
    }

    private int bitField0_;
    public static final int INFO_FIELD_NUMBER = 1;
    private org.techforumist.keynote.proto.TSP.TSPMessages.Reference info_;
    /**
     * <code>optional .TSP.Reference info = 1;</code>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .TSP.Reference info = 1;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getInfo() {
      return info_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : info_;
    }
    /**
     * <code>optional .TSP.Reference info = 1;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getInfoOrBuilder() {
      return info_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : info_;
    }

    public static final int FRAME_FIELD_NUMBER = 2;
    private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive frame_;
    /**
     * <code>required .TSCH.RectArchive frame = 2;</code>
     */
    public boolean hasFrame() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .TSCH.RectArchive frame = 2;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive getFrame() {
      return frame_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.getDefaultInstance() : frame_;
    }
    /**
     * <code>required .TSCH.RectArchive frame = 2;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchiveOrBuilder getFrameOrBuilder() {
      return frame_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.getDefaultInstance() : frame_;
    }

    public static final int STYLE_FIELD_NUMBER = 3;
    private org.techforumist.keynote.proto.TSP.TSPMessages.Reference style_;
    /**
     * <code>required .TSP.Reference style = 3;</code>
     */
    public boolean hasStyle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .TSP.Reference style = 3;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getStyle() {
      return style_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : style_;
    }
    /**
     * <code>required .TSP.Reference style = 3;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getStyleOrBuilder() {
      return style_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : style_;
    }

    public static final int NON_STYLE_FIELD_NUMBER = 4;
    private org.techforumist.keynote.proto.TSP.TSPMessages.Reference nonStyle_;
    /**
     * <code>required .TSP.Reference non_style = 4;</code>
     */
    public boolean hasNonStyle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .TSP.Reference non_style = 4;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getNonStyle() {
      return nonStyle_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : nonStyle_;
    }
    /**
     * <code>required .TSP.Reference non_style = 4;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getNonStyleOrBuilder() {
      return nonStyle_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : nonStyle_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFrame()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStyle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNonStyle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasInfo()) {
        if (!getInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getFrame().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getStyle().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getNonStyle().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getInfo());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getFrame());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getStyle());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getNonStyle());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getInfo());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFrame());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getStyle());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getNonStyle());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive)) {
        return super.equals(obj);
      }
      org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive other = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive) obj;

      boolean result = true;
      result = result && (hasInfo() == other.hasInfo());
      if (hasInfo()) {
        result = result && getInfo()
            .equals(other.getInfo());
      }
      result = result && (hasFrame() == other.hasFrame());
      if (hasFrame()) {
        result = result && getFrame()
            .equals(other.getFrame());
      }
      result = result && (hasStyle() == other.hasStyle());
      if (hasStyle()) {
        result = result && getStyle()
            .equals(other.getStyle());
      }
      result = result && (hasNonStyle() == other.hasNonStyle());
      if (hasNonStyle()) {
        result = result && getNonStyle()
            .equals(other.getNonStyle());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasInfo()) {
        hash = (37 * hash) + INFO_FIELD_NUMBER;
        hash = (53 * hash) + getInfo().hashCode();
      }
      if (hasFrame()) {
        hash = (37 * hash) + FRAME_FIELD_NUMBER;
        hash = (53 * hash) + getFrame().hashCode();
      }
      if (hasStyle()) {
        hash = (37 * hash) + STYLE_FIELD_NUMBER;
        hash = (53 * hash) + getStyle().hashCode();
      }
      if (hasNonStyle()) {
        hash = (37 * hash) + NON_STYLE_FIELD_NUMBER;
        hash = (53 * hash) + getNonStyle().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TSCH.PreUFF.LegendModelArchive}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TSCH.PreUFF.LegendModelArchive)
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchiveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_LegendModelArchive_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_LegendModelArchive_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive.Builder.class);
      }

      // Construct using TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getInfoFieldBuilder();
          getFrameFieldBuilder();
          getStyleFieldBuilder();
          getNonStyleFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (infoBuilder_ == null) {
          info_ = null;
        } else {
          infoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (frameBuilder_ == null) {
          frame_ = null;
        } else {
          frameBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (styleBuilder_ == null) {
          style_ = null;
        } else {
          styleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (nonStyleBuilder_ == null) {
          nonStyle_ = null;
        } else {
          nonStyleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_LegendModelArchive_descriptor;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive getDefaultInstanceForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive.getDefaultInstance();
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive build() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive buildPartial() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive result = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (infoBuilder_ == null) {
          result.info_ = info_;
        } else {
          result.info_ = infoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (frameBuilder_ == null) {
          result.frame_ = frame_;
        } else {
          result.frame_ = frameBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (styleBuilder_ == null) {
          result.style_ = style_;
        } else {
          result.style_ = styleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (nonStyleBuilder_ == null) {
          result.nonStyle_ = nonStyle_;
        } else {
          result.nonStyle_ = nonStyleBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive) {
          return mergeFrom((org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive other) {
        if (other == org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive.getDefaultInstance()) return this;
        if (other.hasInfo()) {
          mergeInfo(other.getInfo());
        }
        if (other.hasFrame()) {
          mergeFrame(other.getFrame());
        }
        if (other.hasStyle()) {
          mergeStyle(other.getStyle());
        }
        if (other.hasNonStyle()) {
          mergeNonStyle(other.getNonStyle());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFrame()) {
          return false;
        }
        if (!hasStyle()) {
          return false;
        }
        if (!hasNonStyle()) {
          return false;
        }
        if (hasInfo()) {
          if (!getInfo().isInitialized()) {
            return false;
          }
        }
        if (!getFrame().isInitialized()) {
          return false;
        }
        if (!getStyle().isInitialized()) {
          return false;
        }
        if (!getNonStyle().isInitialized()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.techforumist.keynote.proto.TSP.TSPMessages.Reference info_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> infoBuilder_;
      /**
       * <code>optional .TSP.Reference info = 1;</code>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .TSP.Reference info = 1;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getInfo() {
        if (infoBuilder_ == null) {
          return info_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : info_;
        } else {
          return infoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSP.Reference info = 1;</code>
       */
      public Builder setInfo(org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          info_ = value;
          onChanged();
        } else {
          infoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TSP.Reference info = 1;</code>
       */
      public Builder setInfo(
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (infoBuilder_ == null) {
          info_ = builderForValue.build();
          onChanged();
        } else {
          infoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TSP.Reference info = 1;</code>
       */
      public Builder mergeInfo(org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (infoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              info_ != null &&
              info_ != org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance()) {
            info_ =
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.newBuilder(info_).mergeFrom(value).buildPartial();
          } else {
            info_ = value;
          }
          onChanged();
        } else {
          infoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TSP.Reference info = 1;</code>
       */
      public Builder clearInfo() {
        if (infoBuilder_ == null) {
          info_ = null;
          onChanged();
        } else {
          infoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .TSP.Reference info = 1;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder getInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSP.Reference info = 1;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getInfoOrBuilder() {
        if (infoBuilder_ != null) {
          return infoBuilder_.getMessageOrBuilder();
        } else {
          return info_ == null ?
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : info_;
        }
      }
      /**
       * <code>optional .TSP.Reference info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
          getInfoFieldBuilder() {
        if (infoBuilder_ == null) {
          infoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder>(
                  getInfo(),
                  getParentForChildren(),
                  isClean());
          info_ = null;
        }
        return infoBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive frame_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchiveOrBuilder> frameBuilder_;
      /**
       * <code>required .TSCH.RectArchive frame = 2;</code>
       */
      public boolean hasFrame() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .TSCH.RectArchive frame = 2;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive getFrame() {
        if (frameBuilder_ == null) {
          return frame_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.getDefaultInstance() : frame_;
        } else {
          return frameBuilder_.getMessage();
        }
      }
      /**
       * <code>required .TSCH.RectArchive frame = 2;</code>
       */
      public Builder setFrame(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive value) {
        if (frameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          frame_ = value;
          onChanged();
        } else {
          frameBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .TSCH.RectArchive frame = 2;</code>
       */
      public Builder setFrame(
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.Builder builderForValue) {
        if (frameBuilder_ == null) {
          frame_ = builderForValue.build();
          onChanged();
        } else {
          frameBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .TSCH.RectArchive frame = 2;</code>
       */
      public Builder mergeFrame(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive value) {
        if (frameBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              frame_ != null &&
              frame_ != org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.getDefaultInstance()) {
            frame_ =
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.newBuilder(frame_).mergeFrom(value).buildPartial();
          } else {
            frame_ = value;
          }
          onChanged();
        } else {
          frameBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .TSCH.RectArchive frame = 2;</code>
       */
      public Builder clearFrame() {
        if (frameBuilder_ == null) {
          frame_ = null;
          onChanged();
        } else {
          frameBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .TSCH.RectArchive frame = 2;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.Builder getFrameBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getFrameFieldBuilder().getBuilder();
      }
      /**
       * <code>required .TSCH.RectArchive frame = 2;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchiveOrBuilder getFrameOrBuilder() {
        if (frameBuilder_ != null) {
          return frameBuilder_.getMessageOrBuilder();
        } else {
          return frame_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.getDefaultInstance() : frame_;
        }
      }
      /**
       * <code>required .TSCH.RectArchive frame = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchiveOrBuilder> 
          getFrameFieldBuilder() {
        if (frameBuilder_ == null) {
          frameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.RectArchiveOrBuilder>(
                  getFrame(),
                  getParentForChildren(),
                  isClean());
          frame_ = null;
        }
        return frameBuilder_;
      }

      private org.techforumist.keynote.proto.TSP.TSPMessages.Reference style_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> styleBuilder_;
      /**
       * <code>required .TSP.Reference style = 3;</code>
       */
      public boolean hasStyle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .TSP.Reference style = 3;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getStyle() {
        if (styleBuilder_ == null) {
          return style_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : style_;
        } else {
          return styleBuilder_.getMessage();
        }
      }
      /**
       * <code>required .TSP.Reference style = 3;</code>
       */
      public Builder setStyle(org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (styleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          style_ = value;
          onChanged();
        } else {
          styleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .TSP.Reference style = 3;</code>
       */
      public Builder setStyle(
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (styleBuilder_ == null) {
          style_ = builderForValue.build();
          onChanged();
        } else {
          styleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .TSP.Reference style = 3;</code>
       */
      public Builder mergeStyle(org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (styleBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              style_ != null &&
              style_ != org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance()) {
            style_ =
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.newBuilder(style_).mergeFrom(value).buildPartial();
          } else {
            style_ = value;
          }
          onChanged();
        } else {
          styleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .TSP.Reference style = 3;</code>
       */
      public Builder clearStyle() {
        if (styleBuilder_ == null) {
          style_ = null;
          onChanged();
        } else {
          styleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .TSP.Reference style = 3;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder getStyleBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getStyleFieldBuilder().getBuilder();
      }
      /**
       * <code>required .TSP.Reference style = 3;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getStyleOrBuilder() {
        if (styleBuilder_ != null) {
          return styleBuilder_.getMessageOrBuilder();
        } else {
          return style_ == null ?
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : style_;
        }
      }
      /**
       * <code>required .TSP.Reference style = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
          getStyleFieldBuilder() {
        if (styleBuilder_ == null) {
          styleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder>(
                  getStyle(),
                  getParentForChildren(),
                  isClean());
          style_ = null;
        }
        return styleBuilder_;
      }

      private org.techforumist.keynote.proto.TSP.TSPMessages.Reference nonStyle_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> nonStyleBuilder_;
      /**
       * <code>required .TSP.Reference non_style = 4;</code>
       */
      public boolean hasNonStyle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .TSP.Reference non_style = 4;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getNonStyle() {
        if (nonStyleBuilder_ == null) {
          return nonStyle_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : nonStyle_;
        } else {
          return nonStyleBuilder_.getMessage();
        }
      }
      /**
       * <code>required .TSP.Reference non_style = 4;</code>
       */
      public Builder setNonStyle(org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (nonStyleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nonStyle_ = value;
          onChanged();
        } else {
          nonStyleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .TSP.Reference non_style = 4;</code>
       */
      public Builder setNonStyle(
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (nonStyleBuilder_ == null) {
          nonStyle_ = builderForValue.build();
          onChanged();
        } else {
          nonStyleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .TSP.Reference non_style = 4;</code>
       */
      public Builder mergeNonStyle(org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (nonStyleBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              nonStyle_ != null &&
              nonStyle_ != org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance()) {
            nonStyle_ =
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.newBuilder(nonStyle_).mergeFrom(value).buildPartial();
          } else {
            nonStyle_ = value;
          }
          onChanged();
        } else {
          nonStyleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .TSP.Reference non_style = 4;</code>
       */
      public Builder clearNonStyle() {
        if (nonStyleBuilder_ == null) {
          nonStyle_ = null;
          onChanged();
        } else {
          nonStyleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>required .TSP.Reference non_style = 4;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder getNonStyleBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getNonStyleFieldBuilder().getBuilder();
      }
      /**
       * <code>required .TSP.Reference non_style = 4;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getNonStyleOrBuilder() {
        if (nonStyleBuilder_ != null) {
          return nonStyleBuilder_.getMessageOrBuilder();
        } else {
          return nonStyle_ == null ?
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : nonStyle_;
        }
      }
      /**
       * <code>required .TSP.Reference non_style = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
          getNonStyleFieldBuilder() {
        if (nonStyleBuilder_ == null) {
          nonStyleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder>(
                  getNonStyle(),
                  getParentForChildren(),
                  isClean());
          nonStyle_ = null;
        }
        return nonStyleBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TSCH.PreUFF.LegendModelArchive)
    }

    // @@protoc_insertion_point(class_scope:TSCH.PreUFF.LegendModelArchive)
    private static final org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive();
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<LegendModelArchive>
        PARSER = new com.google.protobuf.AbstractParser<LegendModelArchive>() {
      public LegendModelArchive parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new LegendModelArchive(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LegendModelArchive> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LegendModelArchive> getParserForType() {
      return PARSER;
    }

    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendModelArchive getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChartModelArchiveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TSCH.PreUFF.ChartModelArchive)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .TSP.Reference info = 1;</code>
     */
    boolean hasInfo();
    /**
     * <code>optional .TSP.Reference info = 1;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.Reference getInfo();
    /**
     * <code>optional .TSP.Reference info = 1;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getInfoOrBuilder();

    /**
     * <code>required .TSP.Reference grid = 2;</code>
     */
    boolean hasGrid();
    /**
     * <code>required .TSP.Reference grid = 2;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.Reference getGrid();
    /**
     * <code>required .TSP.Reference grid = 2;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getGridOrBuilder();

    /**
     * <code>repeated uint32 series_types = 3;</code>
     */
    java.util.List<java.lang.Integer> getSeriesTypesList();
    /**
     * <code>repeated uint32 series_types = 3;</code>
     */
    int getSeriesTypesCount();
    /**
     * <code>repeated uint32 series_types = 3;</code>
     */
    int getSeriesTypes(int index);

    /**
     * <code>optional uint32 scatter_format = 4;</code>
     */
    boolean hasScatterFormat();
    /**
     * <code>optional uint32 scatter_format = 4;</code>
     */
    int getScatterFormat();

    /**
     * <code>optional .TSCH.PreUFF.ChartGridArchive inline_grid = 5;</code>
     */
    boolean hasInlineGrid();
    /**
     * <code>optional .TSCH.PreUFF.ChartGridArchive inline_grid = 5;</code>
     */
    org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive getInlineGrid();
    /**
     * <code>optional .TSCH.PreUFF.ChartGridArchive inline_grid = 5;</code>
     */
    org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchiveOrBuilder getInlineGridOrBuilder();

    /**
     * <code>optional uint32 multidataset_index = 6;</code>
     */
    boolean hasMultidatasetIndex();
    /**
     * <code>optional uint32 multidataset_index = 6;</code>
     */
    int getMultidatasetIndex();
  }
  /**
   * Protobuf type {@code TSCH.PreUFF.ChartModelArchive}
   */
  public  static final class ChartModelArchive extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TSCH.PreUFF.ChartModelArchive)
      ChartModelArchiveOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChartModelArchive.newBuilder() to construct.
    private ChartModelArchive(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChartModelArchive() {
      seriesTypes_ = java.util.Collections.emptyList();
      scatterFormat_ = 0;
      multidatasetIndex_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChartModelArchive(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = info_.toBuilder();
              }
              info_ = input.readMessage(org.techforumist.keynote.proto.TSP.TSPMessages.Reference.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(info_);
                info_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = grid_.toBuilder();
              }
              grid_ = input.readMessage(org.techforumist.keynote.proto.TSP.TSPMessages.Reference.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(grid_);
                grid_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                seriesTypes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              seriesTypes_.add(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                seriesTypes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                seriesTypes_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              scatterFormat_ = input.readUInt32();
              break;
            }
            case 42: {
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = inlineGrid_.toBuilder();
              }
              inlineGrid_ = input.readMessage(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(inlineGrid_);
                inlineGrid_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              multidatasetIndex_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          seriesTypes_ = java.util.Collections.unmodifiableList(seriesTypes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartModelArchive_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartModelArchive_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive.Builder.class);
    }

    private int bitField0_;
    public static final int INFO_FIELD_NUMBER = 1;
    private org.techforumist.keynote.proto.TSP.TSPMessages.Reference info_;
    /**
     * <code>optional .TSP.Reference info = 1;</code>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .TSP.Reference info = 1;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getInfo() {
      return info_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : info_;
    }
    /**
     * <code>optional .TSP.Reference info = 1;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getInfoOrBuilder() {
      return info_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : info_;
    }

    public static final int GRID_FIELD_NUMBER = 2;
    private org.techforumist.keynote.proto.TSP.TSPMessages.Reference grid_;
    /**
     * <code>required .TSP.Reference grid = 2;</code>
     */
    public boolean hasGrid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .TSP.Reference grid = 2;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getGrid() {
      return grid_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : grid_;
    }
    /**
     * <code>required .TSP.Reference grid = 2;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getGridOrBuilder() {
      return grid_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : grid_;
    }

    public static final int SERIES_TYPES_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> seriesTypes_;
    /**
     * <code>repeated uint32 series_types = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getSeriesTypesList() {
      return seriesTypes_;
    }
    /**
     * <code>repeated uint32 series_types = 3;</code>
     */
    public int getSeriesTypesCount() {
      return seriesTypes_.size();
    }
    /**
     * <code>repeated uint32 series_types = 3;</code>
     */
    public int getSeriesTypes(int index) {
      return seriesTypes_.get(index);
    }

    public static final int SCATTER_FORMAT_FIELD_NUMBER = 4;
    private int scatterFormat_;
    /**
     * <code>optional uint32 scatter_format = 4;</code>
     */
    public boolean hasScatterFormat() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 scatter_format = 4;</code>
     */
    public int getScatterFormat() {
      return scatterFormat_;
    }

    public static final int INLINE_GRID_FIELD_NUMBER = 5;
    private org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive inlineGrid_;
    /**
     * <code>optional .TSCH.PreUFF.ChartGridArchive inline_grid = 5;</code>
     */
    public boolean hasInlineGrid() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .TSCH.PreUFF.ChartGridArchive inline_grid = 5;</code>
     */
    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive getInlineGrid() {
      return inlineGrid_ == null ? org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.getDefaultInstance() : inlineGrid_;
    }
    /**
     * <code>optional .TSCH.PreUFF.ChartGridArchive inline_grid = 5;</code>
     */
    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchiveOrBuilder getInlineGridOrBuilder() {
      return inlineGrid_ == null ? org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.getDefaultInstance() : inlineGrid_;
    }

    public static final int MULTIDATASET_INDEX_FIELD_NUMBER = 6;
    private int multidatasetIndex_;
    /**
     * <code>optional uint32 multidataset_index = 6;</code>
     */
    public boolean hasMultidatasetIndex() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 multidataset_index = 6;</code>
     */
    public int getMultidatasetIndex() {
      return multidatasetIndex_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasGrid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasInfo()) {
        if (!getInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getGrid().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasInlineGrid()) {
        if (!getInlineGrid().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getInfo());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getGrid());
      }
      for (int i = 0; i < seriesTypes_.size(); i++) {
        output.writeUInt32(3, seriesTypes_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(4, scatterFormat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(5, getInlineGrid());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, multidatasetIndex_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getInfo());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getGrid());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < seriesTypes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(seriesTypes_.get(i));
        }
        size += dataSize;
        size += 1 * getSeriesTypesList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, scatterFormat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getInlineGrid());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, multidatasetIndex_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive)) {
        return super.equals(obj);
      }
      org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive other = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive) obj;

      boolean result = true;
      result = result && (hasInfo() == other.hasInfo());
      if (hasInfo()) {
        result = result && getInfo()
            .equals(other.getInfo());
      }
      result = result && (hasGrid() == other.hasGrid());
      if (hasGrid()) {
        result = result && getGrid()
            .equals(other.getGrid());
      }
      result = result && getSeriesTypesList()
          .equals(other.getSeriesTypesList());
      result = result && (hasScatterFormat() == other.hasScatterFormat());
      if (hasScatterFormat()) {
        result = result && (getScatterFormat()
            == other.getScatterFormat());
      }
      result = result && (hasInlineGrid() == other.hasInlineGrid());
      if (hasInlineGrid()) {
        result = result && getInlineGrid()
            .equals(other.getInlineGrid());
      }
      result = result && (hasMultidatasetIndex() == other.hasMultidatasetIndex());
      if (hasMultidatasetIndex()) {
        result = result && (getMultidatasetIndex()
            == other.getMultidatasetIndex());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasInfo()) {
        hash = (37 * hash) + INFO_FIELD_NUMBER;
        hash = (53 * hash) + getInfo().hashCode();
      }
      if (hasGrid()) {
        hash = (37 * hash) + GRID_FIELD_NUMBER;
        hash = (53 * hash) + getGrid().hashCode();
      }
      if (getSeriesTypesCount() > 0) {
        hash = (37 * hash) + SERIES_TYPES_FIELD_NUMBER;
        hash = (53 * hash) + getSeriesTypesList().hashCode();
      }
      if (hasScatterFormat()) {
        hash = (37 * hash) + SCATTER_FORMAT_FIELD_NUMBER;
        hash = (53 * hash) + getScatterFormat();
      }
      if (hasInlineGrid()) {
        hash = (37 * hash) + INLINE_GRID_FIELD_NUMBER;
        hash = (53 * hash) + getInlineGrid().hashCode();
      }
      if (hasMultidatasetIndex()) {
        hash = (37 * hash) + MULTIDATASET_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getMultidatasetIndex();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TSCH.PreUFF.ChartModelArchive}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TSCH.PreUFF.ChartModelArchive)
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchiveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartModelArchive_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartModelArchive_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive.Builder.class);
      }

      // Construct using TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getInfoFieldBuilder();
          getGridFieldBuilder();
          getInlineGridFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (infoBuilder_ == null) {
          info_ = null;
        } else {
          infoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (gridBuilder_ == null) {
          grid_ = null;
        } else {
          gridBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        seriesTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        scatterFormat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (inlineGridBuilder_ == null) {
          inlineGrid_ = null;
        } else {
          inlineGridBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        multidatasetIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartModelArchive_descriptor;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive getDefaultInstanceForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive.getDefaultInstance();
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive build() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive buildPartial() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive result = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (infoBuilder_ == null) {
          result.info_ = info_;
        } else {
          result.info_ = infoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (gridBuilder_ == null) {
          result.grid_ = grid_;
        } else {
          result.grid_ = gridBuilder_.build();
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          seriesTypes_ = java.util.Collections.unmodifiableList(seriesTypes_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.seriesTypes_ = seriesTypes_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.scatterFormat_ = scatterFormat_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        if (inlineGridBuilder_ == null) {
          result.inlineGrid_ = inlineGrid_;
        } else {
          result.inlineGrid_ = inlineGridBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.multidatasetIndex_ = multidatasetIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive) {
          return mergeFrom((org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive other) {
        if (other == org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive.getDefaultInstance()) return this;
        if (other.hasInfo()) {
          mergeInfo(other.getInfo());
        }
        if (other.hasGrid()) {
          mergeGrid(other.getGrid());
        }
        if (!other.seriesTypes_.isEmpty()) {
          if (seriesTypes_.isEmpty()) {
            seriesTypes_ = other.seriesTypes_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureSeriesTypesIsMutable();
            seriesTypes_.addAll(other.seriesTypes_);
          }
          onChanged();
        }
        if (other.hasScatterFormat()) {
          setScatterFormat(other.getScatterFormat());
        }
        if (other.hasInlineGrid()) {
          mergeInlineGrid(other.getInlineGrid());
        }
        if (other.hasMultidatasetIndex()) {
          setMultidatasetIndex(other.getMultidatasetIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasGrid()) {
          return false;
        }
        if (hasInfo()) {
          if (!getInfo().isInitialized()) {
            return false;
          }
        }
        if (!getGrid().isInitialized()) {
          return false;
        }
        if (hasInlineGrid()) {
          if (!getInlineGrid().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.techforumist.keynote.proto.TSP.TSPMessages.Reference info_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> infoBuilder_;
      /**
       * <code>optional .TSP.Reference info = 1;</code>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .TSP.Reference info = 1;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getInfo() {
        if (infoBuilder_ == null) {
          return info_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : info_;
        } else {
          return infoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSP.Reference info = 1;</code>
       */
      public Builder setInfo(org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          info_ = value;
          onChanged();
        } else {
          infoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TSP.Reference info = 1;</code>
       */
      public Builder setInfo(
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (infoBuilder_ == null) {
          info_ = builderForValue.build();
          onChanged();
        } else {
          infoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TSP.Reference info = 1;</code>
       */
      public Builder mergeInfo(org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (infoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              info_ != null &&
              info_ != org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance()) {
            info_ =
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.newBuilder(info_).mergeFrom(value).buildPartial();
          } else {
            info_ = value;
          }
          onChanged();
        } else {
          infoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TSP.Reference info = 1;</code>
       */
      public Builder clearInfo() {
        if (infoBuilder_ == null) {
          info_ = null;
          onChanged();
        } else {
          infoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .TSP.Reference info = 1;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder getInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSP.Reference info = 1;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getInfoOrBuilder() {
        if (infoBuilder_ != null) {
          return infoBuilder_.getMessageOrBuilder();
        } else {
          return info_ == null ?
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : info_;
        }
      }
      /**
       * <code>optional .TSP.Reference info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
          getInfoFieldBuilder() {
        if (infoBuilder_ == null) {
          infoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder>(
                  getInfo(),
                  getParentForChildren(),
                  isClean());
          info_ = null;
        }
        return infoBuilder_;
      }

      private org.techforumist.keynote.proto.TSP.TSPMessages.Reference grid_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> gridBuilder_;
      /**
       * <code>required .TSP.Reference grid = 2;</code>
       */
      public boolean hasGrid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .TSP.Reference grid = 2;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference getGrid() {
        if (gridBuilder_ == null) {
          return grid_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : grid_;
        } else {
          return gridBuilder_.getMessage();
        }
      }
      /**
       * <code>required .TSP.Reference grid = 2;</code>
       */
      public Builder setGrid(org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (gridBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          grid_ = value;
          onChanged();
        } else {
          gridBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .TSP.Reference grid = 2;</code>
       */
      public Builder setGrid(
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder builderForValue) {
        if (gridBuilder_ == null) {
          grid_ = builderForValue.build();
          onChanged();
        } else {
          gridBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .TSP.Reference grid = 2;</code>
       */
      public Builder mergeGrid(org.techforumist.keynote.proto.TSP.TSPMessages.Reference value) {
        if (gridBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              grid_ != null &&
              grid_ != org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance()) {
            grid_ =
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.newBuilder(grid_).mergeFrom(value).buildPartial();
          } else {
            grid_ = value;
          }
          onChanged();
        } else {
          gridBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .TSP.Reference grid = 2;</code>
       */
      public Builder clearGrid() {
        if (gridBuilder_ == null) {
          grid_ = null;
          onChanged();
        } else {
          gridBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .TSP.Reference grid = 2;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder getGridBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getGridFieldBuilder().getBuilder();
      }
      /**
       * <code>required .TSP.Reference grid = 2;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder getGridOrBuilder() {
        if (gridBuilder_ != null) {
          return gridBuilder_.getMessageOrBuilder();
        } else {
          return grid_ == null ?
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference.getDefaultInstance() : grid_;
        }
      }
      /**
       * <code>required .TSP.Reference grid = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder> 
          getGridFieldBuilder() {
        if (gridBuilder_ == null) {
          gridBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSP.TSPMessages.Reference, org.techforumist.keynote.proto.TSP.TSPMessages.Reference.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ReferenceOrBuilder>(
                  getGrid(),
                  getParentForChildren(),
                  isClean());
          grid_ = null;
        }
        return gridBuilder_;
      }

      private java.util.List<java.lang.Integer> seriesTypes_ = java.util.Collections.emptyList();
      private void ensureSeriesTypesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          seriesTypes_ = new java.util.ArrayList<java.lang.Integer>(seriesTypes_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated uint32 series_types = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getSeriesTypesList() {
        return java.util.Collections.unmodifiableList(seriesTypes_);
      }
      /**
       * <code>repeated uint32 series_types = 3;</code>
       */
      public int getSeriesTypesCount() {
        return seriesTypes_.size();
      }
      /**
       * <code>repeated uint32 series_types = 3;</code>
       */
      public int getSeriesTypes(int index) {
        return seriesTypes_.get(index);
      }
      /**
       * <code>repeated uint32 series_types = 3;</code>
       */
      public Builder setSeriesTypes(
          int index, int value) {
        ensureSeriesTypesIsMutable();
        seriesTypes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 series_types = 3;</code>
       */
      public Builder addSeriesTypes(int value) {
        ensureSeriesTypesIsMutable();
        seriesTypes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 series_types = 3;</code>
       */
      public Builder addAllSeriesTypes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSeriesTypesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, seriesTypes_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 series_types = 3;</code>
       */
      public Builder clearSeriesTypes() {
        seriesTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private int scatterFormat_ ;
      /**
       * <code>optional uint32 scatter_format = 4;</code>
       */
      public boolean hasScatterFormat() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 scatter_format = 4;</code>
       */
      public int getScatterFormat() {
        return scatterFormat_;
      }
      /**
       * <code>optional uint32 scatter_format = 4;</code>
       */
      public Builder setScatterFormat(int value) {
        bitField0_ |= 0x00000008;
        scatterFormat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 scatter_format = 4;</code>
       */
      public Builder clearScatterFormat() {
        bitField0_ = (bitField0_ & ~0x00000008);
        scatterFormat_ = 0;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive inlineGrid_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.Builder, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchiveOrBuilder> inlineGridBuilder_;
      /**
       * <code>optional .TSCH.PreUFF.ChartGridArchive inline_grid = 5;</code>
       */
      public boolean hasInlineGrid() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartGridArchive inline_grid = 5;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive getInlineGrid() {
        if (inlineGridBuilder_ == null) {
          return inlineGrid_ == null ? org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.getDefaultInstance() : inlineGrid_;
        } else {
          return inlineGridBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartGridArchive inline_grid = 5;</code>
       */
      public Builder setInlineGrid(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive value) {
        if (inlineGridBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          inlineGrid_ = value;
          onChanged();
        } else {
          inlineGridBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartGridArchive inline_grid = 5;</code>
       */
      public Builder setInlineGrid(
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.Builder builderForValue) {
        if (inlineGridBuilder_ == null) {
          inlineGrid_ = builderForValue.build();
          onChanged();
        } else {
          inlineGridBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartGridArchive inline_grid = 5;</code>
       */
      public Builder mergeInlineGrid(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive value) {
        if (inlineGridBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              inlineGrid_ != null &&
              inlineGrid_ != org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.getDefaultInstance()) {
            inlineGrid_ =
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.newBuilder(inlineGrid_).mergeFrom(value).buildPartial();
          } else {
            inlineGrid_ = value;
          }
          onChanged();
        } else {
          inlineGridBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartGridArchive inline_grid = 5;</code>
       */
      public Builder clearInlineGrid() {
        if (inlineGridBuilder_ == null) {
          inlineGrid_ = null;
          onChanged();
        } else {
          inlineGridBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartGridArchive inline_grid = 5;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.Builder getInlineGridBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getInlineGridFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartGridArchive inline_grid = 5;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchiveOrBuilder getInlineGridOrBuilder() {
        if (inlineGridBuilder_ != null) {
          return inlineGridBuilder_.getMessageOrBuilder();
        } else {
          return inlineGrid_ == null ?
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.getDefaultInstance() : inlineGrid_;
        }
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartGridArchive inline_grid = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.Builder, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchiveOrBuilder> 
          getInlineGridFieldBuilder() {
        if (inlineGridBuilder_ == null) {
          inlineGridBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.Builder, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchiveOrBuilder>(
                  getInlineGrid(),
                  getParentForChildren(),
                  isClean());
          inlineGrid_ = null;
        }
        return inlineGridBuilder_;
      }

      private int multidatasetIndex_ ;
      /**
       * <code>optional uint32 multidataset_index = 6;</code>
       */
      public boolean hasMultidatasetIndex() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 multidataset_index = 6;</code>
       */
      public int getMultidatasetIndex() {
        return multidatasetIndex_;
      }
      /**
       * <code>optional uint32 multidataset_index = 6;</code>
       */
      public Builder setMultidatasetIndex(int value) {
        bitField0_ |= 0x00000020;
        multidatasetIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 multidataset_index = 6;</code>
       */
      public Builder clearMultidatasetIndex() {
        bitField0_ = (bitField0_ & ~0x00000020);
        multidatasetIndex_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TSCH.PreUFF.ChartModelArchive)
    }

    // @@protoc_insertion_point(class_scope:TSCH.PreUFF.ChartModelArchive)
    private static final org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive();
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ChartModelArchive>
        PARSER = new com.google.protobuf.AbstractParser<ChartModelArchive>() {
      public ChartModelArchive parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ChartModelArchive(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChartModelArchive> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChartModelArchive> getParserForType() {
      return PARSER;
    }

    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartModelArchive getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChartGridArchiveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TSCH.PreUFF.ChartGridArchive)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 direction = 1;</code>
     */
    boolean hasDirection();
    /**
     * <code>required int32 direction = 1;</code>
     */
    int getDirection();

    /**
     * <code>repeated string row_name = 2;</code>
     */
    java.util.List<java.lang.String>
        getRowNameList();
    /**
     * <code>repeated string row_name = 2;</code>
     */
    int getRowNameCount();
    /**
     * <code>repeated string row_name = 2;</code>
     */
    java.lang.String getRowName(int index);
    /**
     * <code>repeated string row_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getRowNameBytes(int index);

    /**
     * <code>repeated string column_name = 3;</code>
     */
    java.util.List<java.lang.String>
        getColumnNameList();
    /**
     * <code>repeated string column_name = 3;</code>
     */
    int getColumnNameCount();
    /**
     * <code>repeated string column_name = 3;</code>
     */
    java.lang.String getColumnName(int index);
    /**
     * <code>repeated string column_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getColumnNameBytes(int index);

    /**
     * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
     */
    java.util.List<org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow> 
        getValueRowList();
    /**
     * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
     */
    org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow getValueRow(int index);
    /**
     * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
     */
    int getValueRowCount();
    /**
     * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
     */
    java.util.List<? extends org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRowOrBuilder> 
        getValueRowOrBuilderList();
    /**
     * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
     */
    org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRowOrBuilder getValueRowOrBuilder(
        int index);

    /**
     * <code>required bool dirty = 6;</code>
     */
    boolean hasDirty();
    /**
     * <code>required bool dirty = 6;</code>
     */
    boolean getDirty();
  }
  /**
   * Protobuf type {@code TSCH.PreUFF.ChartGridArchive}
   */
  public  static final class ChartGridArchive extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TSCH.PreUFF.ChartGridArchive)
      ChartGridArchiveOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChartGridArchive.newBuilder() to construct.
    private ChartGridArchive(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChartGridArchive() {
      direction_ = 0;
      rowName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      columnName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      valueRow_ = java.util.Collections.emptyList();
      dirty_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChartGridArchive(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              direction_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                rowName_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              rowName_.add(bs);
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                columnName_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              columnName_.add(bs);
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                valueRow_ = new java.util.ArrayList<org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow>();
                mutable_bitField0_ |= 0x00000008;
              }
              valueRow_.add(
                  input.readMessage(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              bitField0_ |= 0x00000002;
              dirty_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          rowName_ = rowName_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          columnName_ = columnName_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          valueRow_ = java.util.Collections.unmodifiableList(valueRow_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartGridArchive_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartGridArchive_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.Builder.class);
    }

    public interface ValueRowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:TSCH.PreUFF.ChartGridArchive.ValueRow)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated double value = 1;</code>
       */
      java.util.List<java.lang.Double> getValueList();
      /**
       * <code>repeated double value = 1;</code>
       */
      int getValueCount();
      /**
       * <code>repeated double value = 1;</code>
       */
      double getValue(int index);
    }
    /**
     * Protobuf type {@code TSCH.PreUFF.ChartGridArchive.ValueRow}
     */
    public  static final class ValueRow extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:TSCH.PreUFF.ChartGridArchive.ValueRow)
        ValueRowOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ValueRow.newBuilder() to construct.
      private ValueRow(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ValueRow() {
        value_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private ValueRow(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 9: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  value_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000001;
                }
                value_.add(input.readDouble());
                break;
              }
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                  value_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000001;
                }
                while (input.getBytesUntilLimit() > 0) {
                  value_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            value_ = java.util.Collections.unmodifiableList(value_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartGridArchive_ValueRow_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartGridArchive_ValueRow_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow.Builder.class);
      }

      public static final int VALUE_FIELD_NUMBER = 1;
      private java.util.List<java.lang.Double> value_;
      /**
       * <code>repeated double value = 1;</code>
       */
      public java.util.List<java.lang.Double>
          getValueList() {
        return value_;
      }
      /**
       * <code>repeated double value = 1;</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated double value = 1;</code>
       */
      public double getValue(int index) {
        return value_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < value_.size(); i++) {
          output.writeDouble(1, value_.get(i));
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          dataSize = 8 * getValueList().size();
          size += dataSize;
          size += 1 * getValueList().size();
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow)) {
          return super.equals(obj);
        }
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow other = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow) obj;

        boolean result = true;
        result = result && getValueList()
            .equals(other.getValueList());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getValueCount() > 0) {
          hash = (37 * hash) + VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getValueList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code TSCH.PreUFF.ChartGridArchive.ValueRow}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:TSCH.PreUFF.ChartGridArchive.ValueRow)
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartGridArchive_ValueRow_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartGridArchive_ValueRow_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow.Builder.class);
        }

        // Construct using TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartGridArchive_ValueRow_descriptor;
        }

        public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow getDefaultInstanceForType() {
          return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow.getDefaultInstance();
        }

        public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow build() {
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow buildPartial() {
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow result = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow(this);
          int from_bitField0_ = bitField0_;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.value_ = value_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow) {
            return mergeFrom((org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow other) {
          if (other == org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow.getDefaultInstance()) return this;
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<java.lang.Double> value_ = java.util.Collections.emptyList();
        private void ensureValueIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            value_ = new java.util.ArrayList<java.lang.Double>(value_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <code>repeated double value = 1;</code>
         */
        public java.util.List<java.lang.Double>
            getValueList() {
          return java.util.Collections.unmodifiableList(value_);
        }
        /**
         * <code>repeated double value = 1;</code>
         */
        public int getValueCount() {
          return value_.size();
        }
        /**
         * <code>repeated double value = 1;</code>
         */
        public double getValue(int index) {
          return value_.get(index);
        }
        /**
         * <code>repeated double value = 1;</code>
         */
        public Builder setValue(
            int index, double value) {
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double value = 1;</code>
         */
        public Builder addValue(double value) {
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double value = 1;</code>
         */
        public Builder addAllValue(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureValueIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, value_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double value = 1;</code>
         */
        public Builder clearValue() {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:TSCH.PreUFF.ChartGridArchive.ValueRow)
      }

      // @@protoc_insertion_point(class_scope:TSCH.PreUFF.ChartGridArchive.ValueRow)
      private static final org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow();
      }

      public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<ValueRow>
          PARSER = new com.google.protobuf.AbstractParser<ValueRow>() {
        public ValueRow parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new ValueRow(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ValueRow> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ValueRow> getParserForType() {
        return PARSER;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int DIRECTION_FIELD_NUMBER = 1;
    private int direction_;
    /**
     * <code>required int32 direction = 1;</code>
     */
    public boolean hasDirection() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 direction = 1;</code>
     */
    public int getDirection() {
      return direction_;
    }

    public static final int ROW_NAME_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList rowName_;
    /**
     * <code>repeated string row_name = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getRowNameList() {
      return rowName_;
    }
    /**
     * <code>repeated string row_name = 2;</code>
     */
    public int getRowNameCount() {
      return rowName_.size();
    }
    /**
     * <code>repeated string row_name = 2;</code>
     */
    public java.lang.String getRowName(int index) {
      return rowName_.get(index);
    }
    /**
     * <code>repeated string row_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getRowNameBytes(int index) {
      return rowName_.getByteString(index);
    }

    public static final int COLUMN_NAME_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList columnName_;
    /**
     * <code>repeated string column_name = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getColumnNameList() {
      return columnName_;
    }
    /**
     * <code>repeated string column_name = 3;</code>
     */
    public int getColumnNameCount() {
      return columnName_.size();
    }
    /**
     * <code>repeated string column_name = 3;</code>
     */
    public java.lang.String getColumnName(int index) {
      return columnName_.get(index);
    }
    /**
     * <code>repeated string column_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getColumnNameBytes(int index) {
      return columnName_.getByteString(index);
    }

    public static final int VALUE_ROW_FIELD_NUMBER = 4;
    private java.util.List<org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow> valueRow_;
    /**
     * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
     */
    public java.util.List<org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow> getValueRowList() {
      return valueRow_;
    }
    /**
     * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
     */
    public java.util.List<? extends org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRowOrBuilder> 
        getValueRowOrBuilderList() {
      return valueRow_;
    }
    /**
     * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
     */
    public int getValueRowCount() {
      return valueRow_.size();
    }
    /**
     * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
     */
    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow getValueRow(int index) {
      return valueRow_.get(index);
    }
    /**
     * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
     */
    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRowOrBuilder getValueRowOrBuilder(
        int index) {
      return valueRow_.get(index);
    }

    public static final int DIRTY_FIELD_NUMBER = 6;
    private boolean dirty_;
    /**
     * <code>required bool dirty = 6;</code>
     */
    public boolean hasDirty() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool dirty = 6;</code>
     */
    public boolean getDirty() {
      return dirty_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDirection()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDirty()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, direction_);
      }
      for (int i = 0; i < rowName_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, rowName_.getRaw(i));
      }
      for (int i = 0; i < columnName_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, columnName_.getRaw(i));
      }
      for (int i = 0; i < valueRow_.size(); i++) {
        output.writeMessage(4, valueRow_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(6, dirty_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, direction_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rowName_.size(); i++) {
          dataSize += computeStringSizeNoTag(rowName_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getRowNameList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < columnName_.size(); i++) {
          dataSize += computeStringSizeNoTag(columnName_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getColumnNameList().size();
      }
      for (int i = 0; i < valueRow_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, valueRow_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, dirty_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive)) {
        return super.equals(obj);
      }
      org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive other = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive) obj;

      boolean result = true;
      result = result && (hasDirection() == other.hasDirection());
      if (hasDirection()) {
        result = result && (getDirection()
            == other.getDirection());
      }
      result = result && getRowNameList()
          .equals(other.getRowNameList());
      result = result && getColumnNameList()
          .equals(other.getColumnNameList());
      result = result && getValueRowList()
          .equals(other.getValueRowList());
      result = result && (hasDirty() == other.hasDirty());
      if (hasDirty()) {
        result = result && (getDirty()
            == other.getDirty());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDirection()) {
        hash = (37 * hash) + DIRECTION_FIELD_NUMBER;
        hash = (53 * hash) + getDirection();
      }
      if (getRowNameCount() > 0) {
        hash = (37 * hash) + ROW_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getRowNameList().hashCode();
      }
      if (getColumnNameCount() > 0) {
        hash = (37 * hash) + COLUMN_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getColumnNameList().hashCode();
      }
      if (getValueRowCount() > 0) {
        hash = (37 * hash) + VALUE_ROW_FIELD_NUMBER;
        hash = (53 * hash) + getValueRowList().hashCode();
      }
      if (hasDirty()) {
        hash = (37 * hash) + DIRTY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getDirty());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TSCH.PreUFF.ChartGridArchive}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TSCH.PreUFF.ChartGridArchive)
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchiveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartGridArchive_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartGridArchive_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.Builder.class);
      }

      // Construct using TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getValueRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        direction_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        rowName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        columnName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (valueRowBuilder_ == null) {
          valueRow_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          valueRowBuilder_.clear();
        }
        dirty_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartGridArchive_descriptor;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive getDefaultInstanceForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.getDefaultInstance();
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive build() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive buildPartial() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive result = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.direction_ = direction_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          rowName_ = rowName_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.rowName_ = rowName_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          columnName_ = columnName_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.columnName_ = columnName_;
        if (valueRowBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            valueRow_ = java.util.Collections.unmodifiableList(valueRow_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.valueRow_ = valueRow_;
        } else {
          result.valueRow_ = valueRowBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dirty_ = dirty_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive) {
          return mergeFrom((org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive other) {
        if (other == org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.getDefaultInstance()) return this;
        if (other.hasDirection()) {
          setDirection(other.getDirection());
        }
        if (!other.rowName_.isEmpty()) {
          if (rowName_.isEmpty()) {
            rowName_ = other.rowName_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRowNameIsMutable();
            rowName_.addAll(other.rowName_);
          }
          onChanged();
        }
        if (!other.columnName_.isEmpty()) {
          if (columnName_.isEmpty()) {
            columnName_ = other.columnName_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureColumnNameIsMutable();
            columnName_.addAll(other.columnName_);
          }
          onChanged();
        }
        if (valueRowBuilder_ == null) {
          if (!other.valueRow_.isEmpty()) {
            if (valueRow_.isEmpty()) {
              valueRow_ = other.valueRow_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureValueRowIsMutable();
              valueRow_.addAll(other.valueRow_);
            }
            onChanged();
          }
        } else {
          if (!other.valueRow_.isEmpty()) {
            if (valueRowBuilder_.isEmpty()) {
              valueRowBuilder_.dispose();
              valueRowBuilder_ = null;
              valueRow_ = other.valueRow_;
              bitField0_ = (bitField0_ & ~0x00000008);
              valueRowBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getValueRowFieldBuilder() : null;
            } else {
              valueRowBuilder_.addAllMessages(other.valueRow_);
            }
          }
        }
        if (other.hasDirty()) {
          setDirty(other.getDirty());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDirection()) {
          return false;
        }
        if (!hasDirty()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int direction_ ;
      /**
       * <code>required int32 direction = 1;</code>
       */
      public boolean hasDirection() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 direction = 1;</code>
       */
      public int getDirection() {
        return direction_;
      }
      /**
       * <code>required int32 direction = 1;</code>
       */
      public Builder setDirection(int value) {
        bitField0_ |= 0x00000001;
        direction_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 direction = 1;</code>
       */
      public Builder clearDirection() {
        bitField0_ = (bitField0_ & ~0x00000001);
        direction_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList rowName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureRowNameIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          rowName_ = new com.google.protobuf.LazyStringArrayList(rowName_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string row_name = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getRowNameList() {
        return rowName_.getUnmodifiableView();
      }
      /**
       * <code>repeated string row_name = 2;</code>
       */
      public int getRowNameCount() {
        return rowName_.size();
      }
      /**
       * <code>repeated string row_name = 2;</code>
       */
      public java.lang.String getRowName(int index) {
        return rowName_.get(index);
      }
      /**
       * <code>repeated string row_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getRowNameBytes(int index) {
        return rowName_.getByteString(index);
      }
      /**
       * <code>repeated string row_name = 2;</code>
       */
      public Builder setRowName(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRowNameIsMutable();
        rowName_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string row_name = 2;</code>
       */
      public Builder addRowName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRowNameIsMutable();
        rowName_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string row_name = 2;</code>
       */
      public Builder addAllRowName(
          java.lang.Iterable<java.lang.String> values) {
        ensureRowNameIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rowName_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string row_name = 2;</code>
       */
      public Builder clearRowName() {
        rowName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string row_name = 2;</code>
       */
      public Builder addRowNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRowNameIsMutable();
        rowName_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList columnName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureColumnNameIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          columnName_ = new com.google.protobuf.LazyStringArrayList(columnName_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string column_name = 3;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getColumnNameList() {
        return columnName_.getUnmodifiableView();
      }
      /**
       * <code>repeated string column_name = 3;</code>
       */
      public int getColumnNameCount() {
        return columnName_.size();
      }
      /**
       * <code>repeated string column_name = 3;</code>
       */
      public java.lang.String getColumnName(int index) {
        return columnName_.get(index);
      }
      /**
       * <code>repeated string column_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getColumnNameBytes(int index) {
        return columnName_.getByteString(index);
      }
      /**
       * <code>repeated string column_name = 3;</code>
       */
      public Builder setColumnName(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureColumnNameIsMutable();
        columnName_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string column_name = 3;</code>
       */
      public Builder addColumnName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureColumnNameIsMutable();
        columnName_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string column_name = 3;</code>
       */
      public Builder addAllColumnName(
          java.lang.Iterable<java.lang.String> values) {
        ensureColumnNameIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, columnName_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string column_name = 3;</code>
       */
      public Builder clearColumnName() {
        columnName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string column_name = 3;</code>
       */
      public Builder addColumnNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureColumnNameIsMutable();
        columnName_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow> valueRow_ =
        java.util.Collections.emptyList();
      private void ensureValueRowIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          valueRow_ = new java.util.ArrayList<org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow>(valueRow_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow.Builder, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRowOrBuilder> valueRowBuilder_;

      /**
       * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
       */
      public java.util.List<org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow> getValueRowList() {
        if (valueRowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(valueRow_);
        } else {
          return valueRowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
       */
      public int getValueRowCount() {
        if (valueRowBuilder_ == null) {
          return valueRow_.size();
        } else {
          return valueRowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow getValueRow(int index) {
        if (valueRowBuilder_ == null) {
          return valueRow_.get(index);
        } else {
          return valueRowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
       */
      public Builder setValueRow(
          int index, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow value) {
        if (valueRowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueRowIsMutable();
          valueRow_.set(index, value);
          onChanged();
        } else {
          valueRowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
       */
      public Builder setValueRow(
          int index, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow.Builder builderForValue) {
        if (valueRowBuilder_ == null) {
          ensureValueRowIsMutable();
          valueRow_.set(index, builderForValue.build());
          onChanged();
        } else {
          valueRowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
       */
      public Builder addValueRow(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow value) {
        if (valueRowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueRowIsMutable();
          valueRow_.add(value);
          onChanged();
        } else {
          valueRowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
       */
      public Builder addValueRow(
          int index, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow value) {
        if (valueRowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueRowIsMutable();
          valueRow_.add(index, value);
          onChanged();
        } else {
          valueRowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
       */
      public Builder addValueRow(
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow.Builder builderForValue) {
        if (valueRowBuilder_ == null) {
          ensureValueRowIsMutable();
          valueRow_.add(builderForValue.build());
          onChanged();
        } else {
          valueRowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
       */
      public Builder addValueRow(
          int index, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow.Builder builderForValue) {
        if (valueRowBuilder_ == null) {
          ensureValueRowIsMutable();
          valueRow_.add(index, builderForValue.build());
          onChanged();
        } else {
          valueRowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
       */
      public Builder addAllValueRow(
          java.lang.Iterable<? extends org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow> values) {
        if (valueRowBuilder_ == null) {
          ensureValueRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, valueRow_);
          onChanged();
        } else {
          valueRowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
       */
      public Builder clearValueRow() {
        if (valueRowBuilder_ == null) {
          valueRow_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          valueRowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
       */
      public Builder removeValueRow(int index) {
        if (valueRowBuilder_ == null) {
          ensureValueRowIsMutable();
          valueRow_.remove(index);
          onChanged();
        } else {
          valueRowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow.Builder getValueRowBuilder(
          int index) {
        return getValueRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRowOrBuilder getValueRowOrBuilder(
          int index) {
        if (valueRowBuilder_ == null) {
          return valueRow_.get(index);  } else {
          return valueRowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
       */
      public java.util.List<? extends org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRowOrBuilder> 
           getValueRowOrBuilderList() {
        if (valueRowBuilder_ != null) {
          return valueRowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(valueRow_);
        }
      }
      /**
       * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow.Builder addValueRowBuilder() {
        return getValueRowFieldBuilder().addBuilder(
            org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow.getDefaultInstance());
      }
      /**
       * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow.Builder addValueRowBuilder(
          int index) {
        return getValueRowFieldBuilder().addBuilder(
            index, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow.getDefaultInstance());
      }
      /**
       * <code>repeated .TSCH.PreUFF.ChartGridArchive.ValueRow value_row = 4;</code>
       */
      public java.util.List<org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow.Builder> 
           getValueRowBuilderList() {
        return getValueRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow.Builder, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRowOrBuilder> 
          getValueRowFieldBuilder() {
        if (valueRowBuilder_ == null) {
          valueRowBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRow.Builder, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive.ValueRowOrBuilder>(
                  valueRow_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          valueRow_ = null;
        }
        return valueRowBuilder_;
      }

      private boolean dirty_ ;
      /**
       * <code>required bool dirty = 6;</code>
       */
      public boolean hasDirty() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required bool dirty = 6;</code>
       */
      public boolean getDirty() {
        return dirty_;
      }
      /**
       * <code>required bool dirty = 6;</code>
       */
      public Builder setDirty(boolean value) {
        bitField0_ |= 0x00000010;
        dirty_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool dirty = 6;</code>
       */
      public Builder clearDirty() {
        bitField0_ = (bitField0_ & ~0x00000010);
        dirty_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TSCH.PreUFF.ChartGridArchive)
    }

    // @@protoc_insertion_point(class_scope:TSCH.PreUFF.ChartGridArchive)
    private static final org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive();
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ChartGridArchive>
        PARSER = new com.google.protobuf.AbstractParser<ChartGridArchive>() {
      public ChartGridArchive parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ChartGridArchive(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChartGridArchive> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChartGridArchive> getParserForType() {
      return PARSER;
    }

    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartGridArchive getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChartsNumberFormatArchiveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TSCH.PreUFF.ChartsNumberFormatArchive)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .TSCH.NumberValueType value_type = 1;</code>
     */
    boolean hasValueType();
    /**
     * <code>required .TSCH.NumberValueType value_type = 1;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.NumberValueType getValueType();

    /**
     * <code>optional string format_string = 2;</code>
     */
    boolean hasFormatString();
    /**
     * <code>optional string format_string = 2;</code>
     */
    java.lang.String getFormatString();
    /**
     * <code>optional string format_string = 2;</code>
     */
    com.google.protobuf.ByteString
        getFormatStringBytes();

    /**
     * <code>required uint32 decimal_places = 3;</code>
     */
    boolean hasDecimalPlaces();
    /**
     * <code>required uint32 decimal_places = 3;</code>
     */
    int getDecimalPlaces();

    /**
     * <code>optional string currency_code = 4;</code>
     */
    boolean hasCurrencyCode();
    /**
     * <code>optional string currency_code = 4;</code>
     */
    java.lang.String getCurrencyCode();
    /**
     * <code>optional string currency_code = 4;</code>
     */
    com.google.protobuf.ByteString
        getCurrencyCodeBytes();

    /**
     * <code>required .TSCH.NegativeNumberStyle negative_style = 5;</code>
     */
    boolean hasNegativeStyle();
    /**
     * <code>required .TSCH.NegativeNumberStyle negative_style = 5;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.NegativeNumberStyle getNegativeStyle();

    /**
     * <code>required bool show_thousands_separator = 6;</code>
     */
    boolean hasShowThousandsSeparator();
    /**
     * <code>required bool show_thousands_separator = 6;</code>
     */
    boolean getShowThousandsSeparator();

    /**
     * <code>required .TSCH.FractionAccuracy fraction_accuracy = 7;</code>
     */
    boolean hasFractionAccuracy();
    /**
     * <code>required .TSCH.FractionAccuracy fraction_accuracy = 7;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.FractionAccuracy getFractionAccuracy();

    /**
     * <code>optional string suffix_string = 8;</code>
     */
    boolean hasSuffixString();
    /**
     * <code>optional string suffix_string = 8;</code>
     */
    java.lang.String getSuffixString();
    /**
     * <code>optional string suffix_string = 8;</code>
     */
    com.google.protobuf.ByteString
        getSuffixStringBytes();

    /**
     * <code>required uint32 base = 9;</code>
     */
    boolean hasBase();
    /**
     * <code>required uint32 base = 9;</code>
     */
    int getBase();

    /**
     * <code>required uint32 base_places = 10;</code>
     */
    boolean hasBasePlaces();
    /**
     * <code>required uint32 base_places = 10;</code>
     */
    int getBasePlaces();

    /**
     * <code>required bool base_use_minus_sign = 11;</code>
     */
    boolean hasBaseUseMinusSign();
    /**
     * <code>required bool base_use_minus_sign = 11;</code>
     */
    boolean getBaseUseMinusSign();

    /**
     * <code>required bool use_accounting_style = 12;</code>
     */
    boolean hasUseAccountingStyle();
    /**
     * <code>required bool use_accounting_style = 12;</code>
     */
    boolean getUseAccountingStyle();

    /**
     * <code>required bool is_custom = 13;</code>
     */
    boolean hasIsCustom();
    /**
     * <code>required bool is_custom = 13;</code>
     */
    boolean getIsCustom();

    /**
     * <code>required double scale_factor = 14;</code>
     */
    boolean hasScaleFactor();
    /**
     * <code>required double scale_factor = 14;</code>
     */
    double getScaleFactor();

    /**
     * <code>repeated string interstitial_strings = 15;</code>
     */
    java.util.List<java.lang.String>
        getInterstitialStringsList();
    /**
     * <code>repeated string interstitial_strings = 15;</code>
     */
    int getInterstitialStringsCount();
    /**
     * <code>repeated string interstitial_strings = 15;</code>
     */
    java.lang.String getInterstitialStrings(int index);
    /**
     * <code>repeated string interstitial_strings = 15;</code>
     */
    com.google.protobuf.ByteString
        getInterstitialStringsBytes(int index);

    /**
     * <code>required .TSP.IndexSet interstitial_string_insertion_indexes = 16;</code>
     */
    boolean hasInterstitialStringInsertionIndexes();
    /**
     * <code>required .TSP.IndexSet interstitial_string_insertion_indexes = 16;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.IndexSet getInterstitialStringInsertionIndexes();
    /**
     * <code>required .TSP.IndexSet interstitial_string_insertion_indexes = 16;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.IndexSetOrBuilder getInterstitialStringInsertionIndexesOrBuilder();

    /**
     * <code>required uint32 index_from_right_of_last_digit_placeholder = 17;</code>
     */
    boolean hasIndexFromRightOfLastDigitPlaceholder();
    /**
     * <code>required uint32 index_from_right_of_last_digit_placeholder = 17;</code>
     */
    int getIndexFromRightOfLastDigitPlaceholder();

    /**
     * <code>required bool is_text_format = 18;</code>
     */
    boolean hasIsTextFormat();
    /**
     * <code>required bool is_text_format = 18;</code>
     */
    boolean getIsTextFormat();

    /**
     * <code>required uint32 minimum_integer_width = 19;</code>
     */
    boolean hasMinimumIntegerWidth();
    /**
     * <code>required uint32 minimum_integer_width = 19;</code>
     */
    int getMinimumIntegerWidth();

    /**
     * <code>required uint32 decimal_width = 20;</code>
     */
    boolean hasDecimalWidth();
    /**
     * <code>required uint32 decimal_width = 20;</code>
     */
    int getDecimalWidth();

    /**
     * <code>required uint32 number_of_non_space_integer_placeholder_digits = 21;</code>
     */
    boolean hasNumberOfNonSpaceIntegerPlaceholderDigits();
    /**
     * <code>required uint32 number_of_non_space_integer_placeholder_digits = 21;</code>
     */
    int getNumberOfNonSpaceIntegerPlaceholderDigits();

    /**
     * <code>required uint32 number_of_non_space_decimal_placeholder_digits = 22;</code>
     */
    boolean hasNumberOfNonSpaceDecimalPlaceholderDigits();
    /**
     * <code>required uint32 number_of_non_space_decimal_placeholder_digits = 22;</code>
     */
    int getNumberOfNonSpaceDecimalPlaceholderDigits();

    /**
     * <code>optional string format_name = 23;</code>
     */
    boolean hasFormatName();
    /**
     * <code>optional string format_name = 23;</code>
     */
    java.lang.String getFormatName();
    /**
     * <code>optional string format_name = 23;</code>
     */
    com.google.protobuf.ByteString
        getFormatNameBytes();

    /**
     * <code>optional string prefix_string = 24;</code>
     */
    boolean hasPrefixString();
    /**
     * <code>optional string prefix_string = 24;</code>
     */
    java.lang.String getPrefixString();
    /**
     * <code>optional string prefix_string = 24;</code>
     */
    com.google.protobuf.ByteString
        getPrefixStringBytes();
  }
  /**
   * Protobuf type {@code TSCH.PreUFF.ChartsNumberFormatArchive}
   */
  public  static final class ChartsNumberFormatArchive extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TSCH.PreUFF.ChartsNumberFormatArchive)
      ChartsNumberFormatArchiveOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChartsNumberFormatArchive.newBuilder() to construct.
    private ChartsNumberFormatArchive(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChartsNumberFormatArchive() {
      valueType_ = 0;
      formatString_ = "";
      decimalPlaces_ = 0;
      currencyCode_ = "";
      negativeStyle_ = 0;
      showThousandsSeparator_ = false;
      fractionAccuracy_ = 0;
      suffixString_ = "";
      base_ = 0;
      basePlaces_ = 0;
      baseUseMinusSign_ = false;
      useAccountingStyle_ = false;
      isCustom_ = false;
      scaleFactor_ = 0D;
      interstitialStrings_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      indexFromRightOfLastDigitPlaceholder_ = 0;
      isTextFormat_ = false;
      minimumIntegerWidth_ = 0;
      decimalWidth_ = 0;
      numberOfNonSpaceIntegerPlaceholderDigits_ = 0;
      numberOfNonSpaceDecimalPlaceholderDigits_ = 0;
      formatName_ = "";
      prefixString_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChartsNumberFormatArchive(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.NumberValueType value = org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.NumberValueType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                valueType_ = rawValue;
              }
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              formatString_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              decimalPlaces_ = input.readUInt32();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              currencyCode_ = bs;
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.NegativeNumberStyle value = org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.NegativeNumberStyle.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                negativeStyle_ = rawValue;
              }
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              showThousandsSeparator_ = input.readBool();
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.FractionAccuracy value = org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.FractionAccuracy.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                bitField0_ |= 0x00000040;
                fractionAccuracy_ = rawValue;
              }
              break;
            }
            case 66: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000080;
              suffixString_ = bs;
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              base_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              basePlaces_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              baseUseMinusSign_ = input.readBool();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              useAccountingStyle_ = input.readBool();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              isCustom_ = input.readBool();
              break;
            }
            case 113: {
              bitField0_ |= 0x00002000;
              scaleFactor_ = input.readDouble();
              break;
            }
            case 122: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                interstitialStrings_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00004000;
              }
              interstitialStrings_.add(bs);
              break;
            }
            case 130: {
              org.techforumist.keynote.proto.TSP.TSPMessages.IndexSet.Builder subBuilder = null;
              if (((bitField0_ & 0x00004000) == 0x00004000)) {
                subBuilder = interstitialStringInsertionIndexes_.toBuilder();
              }
              interstitialStringInsertionIndexes_ = input.readMessage(org.techforumist.keynote.proto.TSP.TSPMessages.IndexSet.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(interstitialStringInsertionIndexes_);
                interstitialStringInsertionIndexes_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00004000;
              break;
            }
            case 136: {
              bitField0_ |= 0x00008000;
              indexFromRightOfLastDigitPlaceholder_ = input.readUInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00010000;
              isTextFormat_ = input.readBool();
              break;
            }
            case 152: {
              bitField0_ |= 0x00020000;
              minimumIntegerWidth_ = input.readUInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00040000;
              decimalWidth_ = input.readUInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00080000;
              numberOfNonSpaceIntegerPlaceholderDigits_ = input.readUInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00100000;
              numberOfNonSpaceDecimalPlaceholderDigits_ = input.readUInt32();
              break;
            }
            case 186: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00200000;
              formatName_ = bs;
              break;
            }
            case 194: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00400000;
              prefixString_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          interstitialStrings_ = interstitialStrings_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartsNumberFormatArchive_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartsNumberFormatArchive_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder.class);
    }

    private int bitField0_;
    public static final int VALUE_TYPE_FIELD_NUMBER = 1;
    private int valueType_;
    /**
     * <code>required .TSCH.NumberValueType value_type = 1;</code>
     */
    public boolean hasValueType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .TSCH.NumberValueType value_type = 1;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.NumberValueType getValueType() {
      org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.NumberValueType result = org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.NumberValueType.valueOf(valueType_);
      return result == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.NumberValueType.numberValueTypeDecimal : result;
    }

    public static final int FORMAT_STRING_FIELD_NUMBER = 2;
    private volatile java.lang.Object formatString_;
    /**
     * <code>optional string format_string = 2;</code>
     */
    public boolean hasFormatString() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string format_string = 2;</code>
     */
    public java.lang.String getFormatString() {
      java.lang.Object ref = formatString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          formatString_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string format_string = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFormatStringBytes() {
      java.lang.Object ref = formatString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        formatString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DECIMAL_PLACES_FIELD_NUMBER = 3;
    private int decimalPlaces_;
    /**
     * <code>required uint32 decimal_places = 3;</code>
     */
    public boolean hasDecimalPlaces() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 decimal_places = 3;</code>
     */
    public int getDecimalPlaces() {
      return decimalPlaces_;
    }

    public static final int CURRENCY_CODE_FIELD_NUMBER = 4;
    private volatile java.lang.Object currencyCode_;
    /**
     * <code>optional string currency_code = 4;</code>
     */
    public boolean hasCurrencyCode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string currency_code = 4;</code>
     */
    public java.lang.String getCurrencyCode() {
      java.lang.Object ref = currencyCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          currencyCode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string currency_code = 4;</code>
     */
    public com.google.protobuf.ByteString
        getCurrencyCodeBytes() {
      java.lang.Object ref = currencyCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        currencyCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NEGATIVE_STYLE_FIELD_NUMBER = 5;
    private int negativeStyle_;
    /**
     * <code>required .TSCH.NegativeNumberStyle negative_style = 5;</code>
     */
    public boolean hasNegativeStyle() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .TSCH.NegativeNumberStyle negative_style = 5;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.NegativeNumberStyle getNegativeStyle() {
      org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.NegativeNumberStyle result = org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.NegativeNumberStyle.valueOf(negativeStyle_);
      return result == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.NegativeNumberStyle.negativeNumberStyleMinus : result;
    }

    public static final int SHOW_THOUSANDS_SEPARATOR_FIELD_NUMBER = 6;
    private boolean showThousandsSeparator_;
    /**
     * <code>required bool show_thousands_separator = 6;</code>
     */
    public boolean hasShowThousandsSeparator() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required bool show_thousands_separator = 6;</code>
     */
    public boolean getShowThousandsSeparator() {
      return showThousandsSeparator_;
    }

    public static final int FRACTION_ACCURACY_FIELD_NUMBER = 7;
    private int fractionAccuracy_;
    /**
     * <code>required .TSCH.FractionAccuracy fraction_accuracy = 7;</code>
     */
    public boolean hasFractionAccuracy() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required .TSCH.FractionAccuracy fraction_accuracy = 7;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.FractionAccuracy getFractionAccuracy() {
      org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.FractionAccuracy result = org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.FractionAccuracy.valueOf(fractionAccuracy_);
      return result == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.FractionAccuracy.fractionAccuracyConflicting : result;
    }

    public static final int SUFFIX_STRING_FIELD_NUMBER = 8;
    private volatile java.lang.Object suffixString_;
    /**
     * <code>optional string suffix_string = 8;</code>
     */
    public boolean hasSuffixString() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string suffix_string = 8;</code>
     */
    public java.lang.String getSuffixString() {
      java.lang.Object ref = suffixString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          suffixString_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string suffix_string = 8;</code>
     */
    public com.google.protobuf.ByteString
        getSuffixStringBytes() {
      java.lang.Object ref = suffixString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        suffixString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BASE_FIELD_NUMBER = 9;
    private int base_;
    /**
     * <code>required uint32 base = 9;</code>
     */
    public boolean hasBase() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required uint32 base = 9;</code>
     */
    public int getBase() {
      return base_;
    }

    public static final int BASE_PLACES_FIELD_NUMBER = 10;
    private int basePlaces_;
    /**
     * <code>required uint32 base_places = 10;</code>
     */
    public boolean hasBasePlaces() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required uint32 base_places = 10;</code>
     */
    public int getBasePlaces() {
      return basePlaces_;
    }

    public static final int BASE_USE_MINUS_SIGN_FIELD_NUMBER = 11;
    private boolean baseUseMinusSign_;
    /**
     * <code>required bool base_use_minus_sign = 11;</code>
     */
    public boolean hasBaseUseMinusSign() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required bool base_use_minus_sign = 11;</code>
     */
    public boolean getBaseUseMinusSign() {
      return baseUseMinusSign_;
    }

    public static final int USE_ACCOUNTING_STYLE_FIELD_NUMBER = 12;
    private boolean useAccountingStyle_;
    /**
     * <code>required bool use_accounting_style = 12;</code>
     */
    public boolean hasUseAccountingStyle() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required bool use_accounting_style = 12;</code>
     */
    public boolean getUseAccountingStyle() {
      return useAccountingStyle_;
    }

    public static final int IS_CUSTOM_FIELD_NUMBER = 13;
    private boolean isCustom_;
    /**
     * <code>required bool is_custom = 13;</code>
     */
    public boolean hasIsCustom() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required bool is_custom = 13;</code>
     */
    public boolean getIsCustom() {
      return isCustom_;
    }

    public static final int SCALE_FACTOR_FIELD_NUMBER = 14;
    private double scaleFactor_;
    /**
     * <code>required double scale_factor = 14;</code>
     */
    public boolean hasScaleFactor() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>required double scale_factor = 14;</code>
     */
    public double getScaleFactor() {
      return scaleFactor_;
    }

    public static final int INTERSTITIAL_STRINGS_FIELD_NUMBER = 15;
    private com.google.protobuf.LazyStringList interstitialStrings_;
    /**
     * <code>repeated string interstitial_strings = 15;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getInterstitialStringsList() {
      return interstitialStrings_;
    }
    /**
     * <code>repeated string interstitial_strings = 15;</code>
     */
    public int getInterstitialStringsCount() {
      return interstitialStrings_.size();
    }
    /**
     * <code>repeated string interstitial_strings = 15;</code>
     */
    public java.lang.String getInterstitialStrings(int index) {
      return interstitialStrings_.get(index);
    }
    /**
     * <code>repeated string interstitial_strings = 15;</code>
     */
    public com.google.protobuf.ByteString
        getInterstitialStringsBytes(int index) {
      return interstitialStrings_.getByteString(index);
    }

    public static final int INTERSTITIAL_STRING_INSERTION_INDEXES_FIELD_NUMBER = 16;
    private org.techforumist.keynote.proto.TSP.TSPMessages.IndexSet interstitialStringInsertionIndexes_;
    /**
     * <code>required .TSP.IndexSet interstitial_string_insertion_indexes = 16;</code>
     */
    public boolean hasInterstitialStringInsertionIndexes() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>required .TSP.IndexSet interstitial_string_insertion_indexes = 16;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.IndexSet getInterstitialStringInsertionIndexes() {
      return interstitialStringInsertionIndexes_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.IndexSet.getDefaultInstance() : interstitialStringInsertionIndexes_;
    }
    /**
     * <code>required .TSP.IndexSet interstitial_string_insertion_indexes = 16;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.IndexSetOrBuilder getInterstitialStringInsertionIndexesOrBuilder() {
      return interstitialStringInsertionIndexes_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.IndexSet.getDefaultInstance() : interstitialStringInsertionIndexes_;
    }

    public static final int INDEX_FROM_RIGHT_OF_LAST_DIGIT_PLACEHOLDER_FIELD_NUMBER = 17;
    private int indexFromRightOfLastDigitPlaceholder_;
    /**
     * <code>required uint32 index_from_right_of_last_digit_placeholder = 17;</code>
     */
    public boolean hasIndexFromRightOfLastDigitPlaceholder() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>required uint32 index_from_right_of_last_digit_placeholder = 17;</code>
     */
    public int getIndexFromRightOfLastDigitPlaceholder() {
      return indexFromRightOfLastDigitPlaceholder_;
    }

    public static final int IS_TEXT_FORMAT_FIELD_NUMBER = 18;
    private boolean isTextFormat_;
    /**
     * <code>required bool is_text_format = 18;</code>
     */
    public boolean hasIsTextFormat() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>required bool is_text_format = 18;</code>
     */
    public boolean getIsTextFormat() {
      return isTextFormat_;
    }

    public static final int MINIMUM_INTEGER_WIDTH_FIELD_NUMBER = 19;
    private int minimumIntegerWidth_;
    /**
     * <code>required uint32 minimum_integer_width = 19;</code>
     */
    public boolean hasMinimumIntegerWidth() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>required uint32 minimum_integer_width = 19;</code>
     */
    public int getMinimumIntegerWidth() {
      return minimumIntegerWidth_;
    }

    public static final int DECIMAL_WIDTH_FIELD_NUMBER = 20;
    private int decimalWidth_;
    /**
     * <code>required uint32 decimal_width = 20;</code>
     */
    public boolean hasDecimalWidth() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>required uint32 decimal_width = 20;</code>
     */
    public int getDecimalWidth() {
      return decimalWidth_;
    }

    public static final int NUMBER_OF_NON_SPACE_INTEGER_PLACEHOLDER_DIGITS_FIELD_NUMBER = 21;
    private int numberOfNonSpaceIntegerPlaceholderDigits_;
    /**
     * <code>required uint32 number_of_non_space_integer_placeholder_digits = 21;</code>
     */
    public boolean hasNumberOfNonSpaceIntegerPlaceholderDigits() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>required uint32 number_of_non_space_integer_placeholder_digits = 21;</code>
     */
    public int getNumberOfNonSpaceIntegerPlaceholderDigits() {
      return numberOfNonSpaceIntegerPlaceholderDigits_;
    }

    public static final int NUMBER_OF_NON_SPACE_DECIMAL_PLACEHOLDER_DIGITS_FIELD_NUMBER = 22;
    private int numberOfNonSpaceDecimalPlaceholderDigits_;
    /**
     * <code>required uint32 number_of_non_space_decimal_placeholder_digits = 22;</code>
     */
    public boolean hasNumberOfNonSpaceDecimalPlaceholderDigits() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>required uint32 number_of_non_space_decimal_placeholder_digits = 22;</code>
     */
    public int getNumberOfNonSpaceDecimalPlaceholderDigits() {
      return numberOfNonSpaceDecimalPlaceholderDigits_;
    }

    public static final int FORMAT_NAME_FIELD_NUMBER = 23;
    private volatile java.lang.Object formatName_;
    /**
     * <code>optional string format_name = 23;</code>
     */
    public boolean hasFormatName() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional string format_name = 23;</code>
     */
    public java.lang.String getFormatName() {
      java.lang.Object ref = formatName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          formatName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string format_name = 23;</code>
     */
    public com.google.protobuf.ByteString
        getFormatNameBytes() {
      java.lang.Object ref = formatName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        formatName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PREFIX_STRING_FIELD_NUMBER = 24;
    private volatile java.lang.Object prefixString_;
    /**
     * <code>optional string prefix_string = 24;</code>
     */
    public boolean hasPrefixString() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional string prefix_string = 24;</code>
     */
    public java.lang.String getPrefixString() {
      java.lang.Object ref = prefixString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          prefixString_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string prefix_string = 24;</code>
     */
    public com.google.protobuf.ByteString
        getPrefixStringBytes() {
      java.lang.Object ref = prefixString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        prefixString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasValueType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDecimalPlaces()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNegativeStyle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasShowThousandsSeparator()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFractionAccuracy()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBase()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBasePlaces()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBaseUseMinusSign()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUseAccountingStyle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsCustom()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasScaleFactor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInterstitialStringInsertionIndexes()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIndexFromRightOfLastDigitPlaceholder()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsTextFormat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMinimumIntegerWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDecimalWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNumberOfNonSpaceIntegerPlaceholderDigits()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNumberOfNonSpaceDecimalPlaceholderDigits()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getInterstitialStringInsertionIndexes().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, valueType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, formatString_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, decimalPlaces_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, currencyCode_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, negativeStyle_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, showThousandsSeparator_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(7, fractionAccuracy_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, suffixString_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, base_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, basePlaces_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(11, baseUseMinusSign_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(12, useAccountingStyle_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBool(13, isCustom_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeDouble(14, scaleFactor_);
      }
      for (int i = 0; i < interstitialStrings_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 15, interstitialStrings_.getRaw(i));
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(16, getInterstitialStringInsertionIndexes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeUInt32(17, indexFromRightOfLastDigitPlaceholder_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBool(18, isTextFormat_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeUInt32(19, minimumIntegerWidth_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeUInt32(20, decimalWidth_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeUInt32(21, numberOfNonSpaceIntegerPlaceholderDigits_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeUInt32(22, numberOfNonSpaceDecimalPlaceholderDigits_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 23, formatName_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 24, prefixString_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, valueType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, formatString_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, decimalPlaces_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, currencyCode_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, negativeStyle_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, showThousandsSeparator_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, fractionAccuracy_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, suffixString_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, base_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, basePlaces_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, baseUseMinusSign_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, useAccountingStyle_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, isCustom_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(14, scaleFactor_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < interstitialStrings_.size(); i++) {
          dataSize += computeStringSizeNoTag(interstitialStrings_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getInterstitialStringsList().size();
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getInterstitialStringInsertionIndexes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, indexFromRightOfLastDigitPlaceholder_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, isTextFormat_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(19, minimumIntegerWidth_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(20, decimalWidth_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(21, numberOfNonSpaceIntegerPlaceholderDigits_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(22, numberOfNonSpaceDecimalPlaceholderDigits_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(23, formatName_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(24, prefixString_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive)) {
        return super.equals(obj);
      }
      org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive other = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive) obj;

      boolean result = true;
      result = result && (hasValueType() == other.hasValueType());
      if (hasValueType()) {
        result = result && valueType_ == other.valueType_;
      }
      result = result && (hasFormatString() == other.hasFormatString());
      if (hasFormatString()) {
        result = result && getFormatString()
            .equals(other.getFormatString());
      }
      result = result && (hasDecimalPlaces() == other.hasDecimalPlaces());
      if (hasDecimalPlaces()) {
        result = result && (getDecimalPlaces()
            == other.getDecimalPlaces());
      }
      result = result && (hasCurrencyCode() == other.hasCurrencyCode());
      if (hasCurrencyCode()) {
        result = result && getCurrencyCode()
            .equals(other.getCurrencyCode());
      }
      result = result && (hasNegativeStyle() == other.hasNegativeStyle());
      if (hasNegativeStyle()) {
        result = result && negativeStyle_ == other.negativeStyle_;
      }
      result = result && (hasShowThousandsSeparator() == other.hasShowThousandsSeparator());
      if (hasShowThousandsSeparator()) {
        result = result && (getShowThousandsSeparator()
            == other.getShowThousandsSeparator());
      }
      result = result && (hasFractionAccuracy() == other.hasFractionAccuracy());
      if (hasFractionAccuracy()) {
        result = result && fractionAccuracy_ == other.fractionAccuracy_;
      }
      result = result && (hasSuffixString() == other.hasSuffixString());
      if (hasSuffixString()) {
        result = result && getSuffixString()
            .equals(other.getSuffixString());
      }
      result = result && (hasBase() == other.hasBase());
      if (hasBase()) {
        result = result && (getBase()
            == other.getBase());
      }
      result = result && (hasBasePlaces() == other.hasBasePlaces());
      if (hasBasePlaces()) {
        result = result && (getBasePlaces()
            == other.getBasePlaces());
      }
      result = result && (hasBaseUseMinusSign() == other.hasBaseUseMinusSign());
      if (hasBaseUseMinusSign()) {
        result = result && (getBaseUseMinusSign()
            == other.getBaseUseMinusSign());
      }
      result = result && (hasUseAccountingStyle() == other.hasUseAccountingStyle());
      if (hasUseAccountingStyle()) {
        result = result && (getUseAccountingStyle()
            == other.getUseAccountingStyle());
      }
      result = result && (hasIsCustom() == other.hasIsCustom());
      if (hasIsCustom()) {
        result = result && (getIsCustom()
            == other.getIsCustom());
      }
      result = result && (hasScaleFactor() == other.hasScaleFactor());
      if (hasScaleFactor()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getScaleFactor())
            == java.lang.Double.doubleToLongBits(
                other.getScaleFactor()));
      }
      result = result && getInterstitialStringsList()
          .equals(other.getInterstitialStringsList());
      result = result && (hasInterstitialStringInsertionIndexes() == other.hasInterstitialStringInsertionIndexes());
      if (hasInterstitialStringInsertionIndexes()) {
        result = result && getInterstitialStringInsertionIndexes()
            .equals(other.getInterstitialStringInsertionIndexes());
      }
      result = result && (hasIndexFromRightOfLastDigitPlaceholder() == other.hasIndexFromRightOfLastDigitPlaceholder());
      if (hasIndexFromRightOfLastDigitPlaceholder()) {
        result = result && (getIndexFromRightOfLastDigitPlaceholder()
            == other.getIndexFromRightOfLastDigitPlaceholder());
      }
      result = result && (hasIsTextFormat() == other.hasIsTextFormat());
      if (hasIsTextFormat()) {
        result = result && (getIsTextFormat()
            == other.getIsTextFormat());
      }
      result = result && (hasMinimumIntegerWidth() == other.hasMinimumIntegerWidth());
      if (hasMinimumIntegerWidth()) {
        result = result && (getMinimumIntegerWidth()
            == other.getMinimumIntegerWidth());
      }
      result = result && (hasDecimalWidth() == other.hasDecimalWidth());
      if (hasDecimalWidth()) {
        result = result && (getDecimalWidth()
            == other.getDecimalWidth());
      }
      result = result && (hasNumberOfNonSpaceIntegerPlaceholderDigits() == other.hasNumberOfNonSpaceIntegerPlaceholderDigits());
      if (hasNumberOfNonSpaceIntegerPlaceholderDigits()) {
        result = result && (getNumberOfNonSpaceIntegerPlaceholderDigits()
            == other.getNumberOfNonSpaceIntegerPlaceholderDigits());
      }
      result = result && (hasNumberOfNonSpaceDecimalPlaceholderDigits() == other.hasNumberOfNonSpaceDecimalPlaceholderDigits());
      if (hasNumberOfNonSpaceDecimalPlaceholderDigits()) {
        result = result && (getNumberOfNonSpaceDecimalPlaceholderDigits()
            == other.getNumberOfNonSpaceDecimalPlaceholderDigits());
      }
      result = result && (hasFormatName() == other.hasFormatName());
      if (hasFormatName()) {
        result = result && getFormatName()
            .equals(other.getFormatName());
      }
      result = result && (hasPrefixString() == other.hasPrefixString());
      if (hasPrefixString()) {
        result = result && getPrefixString()
            .equals(other.getPrefixString());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasValueType()) {
        hash = (37 * hash) + VALUE_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + valueType_;
      }
      if (hasFormatString()) {
        hash = (37 * hash) + FORMAT_STRING_FIELD_NUMBER;
        hash = (53 * hash) + getFormatString().hashCode();
      }
      if (hasDecimalPlaces()) {
        hash = (37 * hash) + DECIMAL_PLACES_FIELD_NUMBER;
        hash = (53 * hash) + getDecimalPlaces();
      }
      if (hasCurrencyCode()) {
        hash = (37 * hash) + CURRENCY_CODE_FIELD_NUMBER;
        hash = (53 * hash) + getCurrencyCode().hashCode();
      }
      if (hasNegativeStyle()) {
        hash = (37 * hash) + NEGATIVE_STYLE_FIELD_NUMBER;
        hash = (53 * hash) + negativeStyle_;
      }
      if (hasShowThousandsSeparator()) {
        hash = (37 * hash) + SHOW_THOUSANDS_SEPARATOR_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getShowThousandsSeparator());
      }
      if (hasFractionAccuracy()) {
        hash = (37 * hash) + FRACTION_ACCURACY_FIELD_NUMBER;
        hash = (53 * hash) + fractionAccuracy_;
      }
      if (hasSuffixString()) {
        hash = (37 * hash) + SUFFIX_STRING_FIELD_NUMBER;
        hash = (53 * hash) + getSuffixString().hashCode();
      }
      if (hasBase()) {
        hash = (37 * hash) + BASE_FIELD_NUMBER;
        hash = (53 * hash) + getBase();
      }
      if (hasBasePlaces()) {
        hash = (37 * hash) + BASE_PLACES_FIELD_NUMBER;
        hash = (53 * hash) + getBasePlaces();
      }
      if (hasBaseUseMinusSign()) {
        hash = (37 * hash) + BASE_USE_MINUS_SIGN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getBaseUseMinusSign());
      }
      if (hasUseAccountingStyle()) {
        hash = (37 * hash) + USE_ACCOUNTING_STYLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getUseAccountingStyle());
      }
      if (hasIsCustom()) {
        hash = (37 * hash) + IS_CUSTOM_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsCustom());
      }
      if (hasScaleFactor()) {
        hash = (37 * hash) + SCALE_FACTOR_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getScaleFactor()));
      }
      if (getInterstitialStringsCount() > 0) {
        hash = (37 * hash) + INTERSTITIAL_STRINGS_FIELD_NUMBER;
        hash = (53 * hash) + getInterstitialStringsList().hashCode();
      }
      if (hasInterstitialStringInsertionIndexes()) {
        hash = (37 * hash) + INTERSTITIAL_STRING_INSERTION_INDEXES_FIELD_NUMBER;
        hash = (53 * hash) + getInterstitialStringInsertionIndexes().hashCode();
      }
      if (hasIndexFromRightOfLastDigitPlaceholder()) {
        hash = (37 * hash) + INDEX_FROM_RIGHT_OF_LAST_DIGIT_PLACEHOLDER_FIELD_NUMBER;
        hash = (53 * hash) + getIndexFromRightOfLastDigitPlaceholder();
      }
      if (hasIsTextFormat()) {
        hash = (37 * hash) + IS_TEXT_FORMAT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsTextFormat());
      }
      if (hasMinimumIntegerWidth()) {
        hash = (37 * hash) + MINIMUM_INTEGER_WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getMinimumIntegerWidth();
      }
      if (hasDecimalWidth()) {
        hash = (37 * hash) + DECIMAL_WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getDecimalWidth();
      }
      if (hasNumberOfNonSpaceIntegerPlaceholderDigits()) {
        hash = (37 * hash) + NUMBER_OF_NON_SPACE_INTEGER_PLACEHOLDER_DIGITS_FIELD_NUMBER;
        hash = (53 * hash) + getNumberOfNonSpaceIntegerPlaceholderDigits();
      }
      if (hasNumberOfNonSpaceDecimalPlaceholderDigits()) {
        hash = (37 * hash) + NUMBER_OF_NON_SPACE_DECIMAL_PLACEHOLDER_DIGITS_FIELD_NUMBER;
        hash = (53 * hash) + getNumberOfNonSpaceDecimalPlaceholderDigits();
      }
      if (hasFormatName()) {
        hash = (37 * hash) + FORMAT_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getFormatName().hashCode();
      }
      if (hasPrefixString()) {
        hash = (37 * hash) + PREFIX_STRING_FIELD_NUMBER;
        hash = (53 * hash) + getPrefixString().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TSCH.PreUFF.ChartsNumberFormatArchive}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TSCH.PreUFF.ChartsNumberFormatArchive)
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchiveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartsNumberFormatArchive_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartsNumberFormatArchive_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder.class);
      }

      // Construct using TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getInterstitialStringInsertionIndexesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        valueType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        formatString_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        decimalPlaces_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        currencyCode_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        negativeStyle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        showThousandsSeparator_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        fractionAccuracy_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        suffixString_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        base_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        basePlaces_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        baseUseMinusSign_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        useAccountingStyle_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        isCustom_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        scaleFactor_ = 0D;
        bitField0_ = (bitField0_ & ~0x00002000);
        interstitialStrings_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00004000);
        if (interstitialStringInsertionIndexesBuilder_ == null) {
          interstitialStringInsertionIndexes_ = null;
        } else {
          interstitialStringInsertionIndexesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        indexFromRightOfLastDigitPlaceholder_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        isTextFormat_ = false;
        bitField0_ = (bitField0_ & ~0x00020000);
        minimumIntegerWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        decimalWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        numberOfNonSpaceIntegerPlaceholderDigits_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        numberOfNonSpaceDecimalPlaceholderDigits_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        formatName_ = "";
        bitField0_ = (bitField0_ & ~0x00400000);
        prefixString_ = "";
        bitField0_ = (bitField0_ & ~0x00800000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartsNumberFormatArchive_descriptor;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive getDefaultInstanceForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.getDefaultInstance();
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive build() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive buildPartial() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive result = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.valueType_ = valueType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.formatString_ = formatString_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.decimalPlaces_ = decimalPlaces_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.currencyCode_ = currencyCode_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.negativeStyle_ = negativeStyle_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.showThousandsSeparator_ = showThousandsSeparator_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.fractionAccuracy_ = fractionAccuracy_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.suffixString_ = suffixString_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.base_ = base_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.basePlaces_ = basePlaces_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.baseUseMinusSign_ = baseUseMinusSign_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.useAccountingStyle_ = useAccountingStyle_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.isCustom_ = isCustom_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.scaleFactor_ = scaleFactor_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          interstitialStrings_ = interstitialStrings_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.interstitialStrings_ = interstitialStrings_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00004000;
        }
        if (interstitialStringInsertionIndexesBuilder_ == null) {
          result.interstitialStringInsertionIndexes_ = interstitialStringInsertionIndexes_;
        } else {
          result.interstitialStringInsertionIndexes_ = interstitialStringInsertionIndexesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.indexFromRightOfLastDigitPlaceholder_ = indexFromRightOfLastDigitPlaceholder_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.isTextFormat_ = isTextFormat_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.minimumIntegerWidth_ = minimumIntegerWidth_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.decimalWidth_ = decimalWidth_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.numberOfNonSpaceIntegerPlaceholderDigits_ = numberOfNonSpaceIntegerPlaceholderDigits_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.numberOfNonSpaceDecimalPlaceholderDigits_ = numberOfNonSpaceDecimalPlaceholderDigits_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.formatName_ = formatName_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.prefixString_ = prefixString_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive) {
          return mergeFrom((org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive other) {
        if (other == org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.getDefaultInstance()) return this;
        if (other.hasValueType()) {
          setValueType(other.getValueType());
        }
        if (other.hasFormatString()) {
          bitField0_ |= 0x00000002;
          formatString_ = other.formatString_;
          onChanged();
        }
        if (other.hasDecimalPlaces()) {
          setDecimalPlaces(other.getDecimalPlaces());
        }
        if (other.hasCurrencyCode()) {
          bitField0_ |= 0x00000008;
          currencyCode_ = other.currencyCode_;
          onChanged();
        }
        if (other.hasNegativeStyle()) {
          setNegativeStyle(other.getNegativeStyle());
        }
        if (other.hasShowThousandsSeparator()) {
          setShowThousandsSeparator(other.getShowThousandsSeparator());
        }
        if (other.hasFractionAccuracy()) {
          setFractionAccuracy(other.getFractionAccuracy());
        }
        if (other.hasSuffixString()) {
          bitField0_ |= 0x00000080;
          suffixString_ = other.suffixString_;
          onChanged();
        }
        if (other.hasBase()) {
          setBase(other.getBase());
        }
        if (other.hasBasePlaces()) {
          setBasePlaces(other.getBasePlaces());
        }
        if (other.hasBaseUseMinusSign()) {
          setBaseUseMinusSign(other.getBaseUseMinusSign());
        }
        if (other.hasUseAccountingStyle()) {
          setUseAccountingStyle(other.getUseAccountingStyle());
        }
        if (other.hasIsCustom()) {
          setIsCustom(other.getIsCustom());
        }
        if (other.hasScaleFactor()) {
          setScaleFactor(other.getScaleFactor());
        }
        if (!other.interstitialStrings_.isEmpty()) {
          if (interstitialStrings_.isEmpty()) {
            interstitialStrings_ = other.interstitialStrings_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureInterstitialStringsIsMutable();
            interstitialStrings_.addAll(other.interstitialStrings_);
          }
          onChanged();
        }
        if (other.hasInterstitialStringInsertionIndexes()) {
          mergeInterstitialStringInsertionIndexes(other.getInterstitialStringInsertionIndexes());
        }
        if (other.hasIndexFromRightOfLastDigitPlaceholder()) {
          setIndexFromRightOfLastDigitPlaceholder(other.getIndexFromRightOfLastDigitPlaceholder());
        }
        if (other.hasIsTextFormat()) {
          setIsTextFormat(other.getIsTextFormat());
        }
        if (other.hasMinimumIntegerWidth()) {
          setMinimumIntegerWidth(other.getMinimumIntegerWidth());
        }
        if (other.hasDecimalWidth()) {
          setDecimalWidth(other.getDecimalWidth());
        }
        if (other.hasNumberOfNonSpaceIntegerPlaceholderDigits()) {
          setNumberOfNonSpaceIntegerPlaceholderDigits(other.getNumberOfNonSpaceIntegerPlaceholderDigits());
        }
        if (other.hasNumberOfNonSpaceDecimalPlaceholderDigits()) {
          setNumberOfNonSpaceDecimalPlaceholderDigits(other.getNumberOfNonSpaceDecimalPlaceholderDigits());
        }
        if (other.hasFormatName()) {
          bitField0_ |= 0x00400000;
          formatName_ = other.formatName_;
          onChanged();
        }
        if (other.hasPrefixString()) {
          bitField0_ |= 0x00800000;
          prefixString_ = other.prefixString_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasValueType()) {
          return false;
        }
        if (!hasDecimalPlaces()) {
          return false;
        }
        if (!hasNegativeStyle()) {
          return false;
        }
        if (!hasShowThousandsSeparator()) {
          return false;
        }
        if (!hasFractionAccuracy()) {
          return false;
        }
        if (!hasBase()) {
          return false;
        }
        if (!hasBasePlaces()) {
          return false;
        }
        if (!hasBaseUseMinusSign()) {
          return false;
        }
        if (!hasUseAccountingStyle()) {
          return false;
        }
        if (!hasIsCustom()) {
          return false;
        }
        if (!hasScaleFactor()) {
          return false;
        }
        if (!hasInterstitialStringInsertionIndexes()) {
          return false;
        }
        if (!hasIndexFromRightOfLastDigitPlaceholder()) {
          return false;
        }
        if (!hasIsTextFormat()) {
          return false;
        }
        if (!hasMinimumIntegerWidth()) {
          return false;
        }
        if (!hasDecimalWidth()) {
          return false;
        }
        if (!hasNumberOfNonSpaceIntegerPlaceholderDigits()) {
          return false;
        }
        if (!hasNumberOfNonSpaceDecimalPlaceholderDigits()) {
          return false;
        }
        if (!getInterstitialStringInsertionIndexes().isInitialized()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int valueType_ = 0;
      /**
       * <code>required .TSCH.NumberValueType value_type = 1;</code>
       */
      public boolean hasValueType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .TSCH.NumberValueType value_type = 1;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.NumberValueType getValueType() {
        org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.NumberValueType result = org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.NumberValueType.valueOf(valueType_);
        return result == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.NumberValueType.numberValueTypeDecimal : result;
      }
      /**
       * <code>required .TSCH.NumberValueType value_type = 1;</code>
       */
      public Builder setValueType(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.NumberValueType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        valueType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .TSCH.NumberValueType value_type = 1;</code>
       */
      public Builder clearValueType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        valueType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object formatString_ = "";
      /**
       * <code>optional string format_string = 2;</code>
       */
      public boolean hasFormatString() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string format_string = 2;</code>
       */
      public java.lang.String getFormatString() {
        java.lang.Object ref = formatString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            formatString_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string format_string = 2;</code>
       */
      public com.google.protobuf.ByteString
          getFormatStringBytes() {
        java.lang.Object ref = formatString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          formatString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string format_string = 2;</code>
       */
      public Builder setFormatString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        formatString_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string format_string = 2;</code>
       */
      public Builder clearFormatString() {
        bitField0_ = (bitField0_ & ~0x00000002);
        formatString_ = getDefaultInstance().getFormatString();
        onChanged();
        return this;
      }
      /**
       * <code>optional string format_string = 2;</code>
       */
      public Builder setFormatStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        formatString_ = value;
        onChanged();
        return this;
      }

      private int decimalPlaces_ ;
      /**
       * <code>required uint32 decimal_places = 3;</code>
       */
      public boolean hasDecimalPlaces() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 decimal_places = 3;</code>
       */
      public int getDecimalPlaces() {
        return decimalPlaces_;
      }
      /**
       * <code>required uint32 decimal_places = 3;</code>
       */
      public Builder setDecimalPlaces(int value) {
        bitField0_ |= 0x00000004;
        decimalPlaces_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 decimal_places = 3;</code>
       */
      public Builder clearDecimalPlaces() {
        bitField0_ = (bitField0_ & ~0x00000004);
        decimalPlaces_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object currencyCode_ = "";
      /**
       * <code>optional string currency_code = 4;</code>
       */
      public boolean hasCurrencyCode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string currency_code = 4;</code>
       */
      public java.lang.String getCurrencyCode() {
        java.lang.Object ref = currencyCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            currencyCode_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string currency_code = 4;</code>
       */
      public com.google.protobuf.ByteString
          getCurrencyCodeBytes() {
        java.lang.Object ref = currencyCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          currencyCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string currency_code = 4;</code>
       */
      public Builder setCurrencyCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        currencyCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string currency_code = 4;</code>
       */
      public Builder clearCurrencyCode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        currencyCode_ = getDefaultInstance().getCurrencyCode();
        onChanged();
        return this;
      }
      /**
       * <code>optional string currency_code = 4;</code>
       */
      public Builder setCurrencyCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        currencyCode_ = value;
        onChanged();
        return this;
      }

      private int negativeStyle_ = 0;
      /**
       * <code>required .TSCH.NegativeNumberStyle negative_style = 5;</code>
       */
      public boolean hasNegativeStyle() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required .TSCH.NegativeNumberStyle negative_style = 5;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.NegativeNumberStyle getNegativeStyle() {
        org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.NegativeNumberStyle result = org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.NegativeNumberStyle.valueOf(negativeStyle_);
        return result == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.NegativeNumberStyle.negativeNumberStyleMinus : result;
      }
      /**
       * <code>required .TSCH.NegativeNumberStyle negative_style = 5;</code>
       */
      public Builder setNegativeStyle(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.NegativeNumberStyle value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        negativeStyle_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .TSCH.NegativeNumberStyle negative_style = 5;</code>
       */
      public Builder clearNegativeStyle() {
        bitField0_ = (bitField0_ & ~0x00000010);
        negativeStyle_ = 0;
        onChanged();
        return this;
      }

      private boolean showThousandsSeparator_ ;
      /**
       * <code>required bool show_thousands_separator = 6;</code>
       */
      public boolean hasShowThousandsSeparator() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required bool show_thousands_separator = 6;</code>
       */
      public boolean getShowThousandsSeparator() {
        return showThousandsSeparator_;
      }
      /**
       * <code>required bool show_thousands_separator = 6;</code>
       */
      public Builder setShowThousandsSeparator(boolean value) {
        bitField0_ |= 0x00000020;
        showThousandsSeparator_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool show_thousands_separator = 6;</code>
       */
      public Builder clearShowThousandsSeparator() {
        bitField0_ = (bitField0_ & ~0x00000020);
        showThousandsSeparator_ = false;
        onChanged();
        return this;
      }

      private int fractionAccuracy_ = 0;
      /**
       * <code>required .TSCH.FractionAccuracy fraction_accuracy = 7;</code>
       */
      public boolean hasFractionAccuracy() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required .TSCH.FractionAccuracy fraction_accuracy = 7;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.FractionAccuracy getFractionAccuracy() {
        org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.FractionAccuracy result = org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.FractionAccuracy.valueOf(fractionAccuracy_);
        return result == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.FractionAccuracy.fractionAccuracyConflicting : result;
      }
      /**
       * <code>required .TSCH.FractionAccuracy fraction_accuracy = 7;</code>
       */
      public Builder setFractionAccuracy(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.FractionAccuracy value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        fractionAccuracy_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .TSCH.FractionAccuracy fraction_accuracy = 7;</code>
       */
      public Builder clearFractionAccuracy() {
        bitField0_ = (bitField0_ & ~0x00000040);
        fractionAccuracy_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object suffixString_ = "";
      /**
       * <code>optional string suffix_string = 8;</code>
       */
      public boolean hasSuffixString() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string suffix_string = 8;</code>
       */
      public java.lang.String getSuffixString() {
        java.lang.Object ref = suffixString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            suffixString_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string suffix_string = 8;</code>
       */
      public com.google.protobuf.ByteString
          getSuffixStringBytes() {
        java.lang.Object ref = suffixString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          suffixString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string suffix_string = 8;</code>
       */
      public Builder setSuffixString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        suffixString_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string suffix_string = 8;</code>
       */
      public Builder clearSuffixString() {
        bitField0_ = (bitField0_ & ~0x00000080);
        suffixString_ = getDefaultInstance().getSuffixString();
        onChanged();
        return this;
      }
      /**
       * <code>optional string suffix_string = 8;</code>
       */
      public Builder setSuffixStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        suffixString_ = value;
        onChanged();
        return this;
      }

      private int base_ ;
      /**
       * <code>required uint32 base = 9;</code>
       */
      public boolean hasBase() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required uint32 base = 9;</code>
       */
      public int getBase() {
        return base_;
      }
      /**
       * <code>required uint32 base = 9;</code>
       */
      public Builder setBase(int value) {
        bitField0_ |= 0x00000100;
        base_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 base = 9;</code>
       */
      public Builder clearBase() {
        bitField0_ = (bitField0_ & ~0x00000100);
        base_ = 0;
        onChanged();
        return this;
      }

      private int basePlaces_ ;
      /**
       * <code>required uint32 base_places = 10;</code>
       */
      public boolean hasBasePlaces() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required uint32 base_places = 10;</code>
       */
      public int getBasePlaces() {
        return basePlaces_;
      }
      /**
       * <code>required uint32 base_places = 10;</code>
       */
      public Builder setBasePlaces(int value) {
        bitField0_ |= 0x00000200;
        basePlaces_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 base_places = 10;</code>
       */
      public Builder clearBasePlaces() {
        bitField0_ = (bitField0_ & ~0x00000200);
        basePlaces_ = 0;
        onChanged();
        return this;
      }

      private boolean baseUseMinusSign_ ;
      /**
       * <code>required bool base_use_minus_sign = 11;</code>
       */
      public boolean hasBaseUseMinusSign() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required bool base_use_minus_sign = 11;</code>
       */
      public boolean getBaseUseMinusSign() {
        return baseUseMinusSign_;
      }
      /**
       * <code>required bool base_use_minus_sign = 11;</code>
       */
      public Builder setBaseUseMinusSign(boolean value) {
        bitField0_ |= 0x00000400;
        baseUseMinusSign_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool base_use_minus_sign = 11;</code>
       */
      public Builder clearBaseUseMinusSign() {
        bitField0_ = (bitField0_ & ~0x00000400);
        baseUseMinusSign_ = false;
        onChanged();
        return this;
      }

      private boolean useAccountingStyle_ ;
      /**
       * <code>required bool use_accounting_style = 12;</code>
       */
      public boolean hasUseAccountingStyle() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required bool use_accounting_style = 12;</code>
       */
      public boolean getUseAccountingStyle() {
        return useAccountingStyle_;
      }
      /**
       * <code>required bool use_accounting_style = 12;</code>
       */
      public Builder setUseAccountingStyle(boolean value) {
        bitField0_ |= 0x00000800;
        useAccountingStyle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool use_accounting_style = 12;</code>
       */
      public Builder clearUseAccountingStyle() {
        bitField0_ = (bitField0_ & ~0x00000800);
        useAccountingStyle_ = false;
        onChanged();
        return this;
      }

      private boolean isCustom_ ;
      /**
       * <code>required bool is_custom = 13;</code>
       */
      public boolean hasIsCustom() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required bool is_custom = 13;</code>
       */
      public boolean getIsCustom() {
        return isCustom_;
      }
      /**
       * <code>required bool is_custom = 13;</code>
       */
      public Builder setIsCustom(boolean value) {
        bitField0_ |= 0x00001000;
        isCustom_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool is_custom = 13;</code>
       */
      public Builder clearIsCustom() {
        bitField0_ = (bitField0_ & ~0x00001000);
        isCustom_ = false;
        onChanged();
        return this;
      }

      private double scaleFactor_ ;
      /**
       * <code>required double scale_factor = 14;</code>
       */
      public boolean hasScaleFactor() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>required double scale_factor = 14;</code>
       */
      public double getScaleFactor() {
        return scaleFactor_;
      }
      /**
       * <code>required double scale_factor = 14;</code>
       */
      public Builder setScaleFactor(double value) {
        bitField0_ |= 0x00002000;
        scaleFactor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double scale_factor = 14;</code>
       */
      public Builder clearScaleFactor() {
        bitField0_ = (bitField0_ & ~0x00002000);
        scaleFactor_ = 0D;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList interstitialStrings_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureInterstitialStringsIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          interstitialStrings_ = new com.google.protobuf.LazyStringArrayList(interstitialStrings_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated string interstitial_strings = 15;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getInterstitialStringsList() {
        return interstitialStrings_.getUnmodifiableView();
      }
      /**
       * <code>repeated string interstitial_strings = 15;</code>
       */
      public int getInterstitialStringsCount() {
        return interstitialStrings_.size();
      }
      /**
       * <code>repeated string interstitial_strings = 15;</code>
       */
      public java.lang.String getInterstitialStrings(int index) {
        return interstitialStrings_.get(index);
      }
      /**
       * <code>repeated string interstitial_strings = 15;</code>
       */
      public com.google.protobuf.ByteString
          getInterstitialStringsBytes(int index) {
        return interstitialStrings_.getByteString(index);
      }
      /**
       * <code>repeated string interstitial_strings = 15;</code>
       */
      public Builder setInterstitialStrings(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureInterstitialStringsIsMutable();
        interstitialStrings_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string interstitial_strings = 15;</code>
       */
      public Builder addInterstitialStrings(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureInterstitialStringsIsMutable();
        interstitialStrings_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string interstitial_strings = 15;</code>
       */
      public Builder addAllInterstitialStrings(
          java.lang.Iterable<java.lang.String> values) {
        ensureInterstitialStringsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, interstitialStrings_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string interstitial_strings = 15;</code>
       */
      public Builder clearInterstitialStrings() {
        interstitialStrings_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string interstitial_strings = 15;</code>
       */
      public Builder addInterstitialStringsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureInterstitialStringsIsMutable();
        interstitialStrings_.add(value);
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSP.TSPMessages.IndexSet interstitialStringInsertionIndexes_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.IndexSet, org.techforumist.keynote.proto.TSP.TSPMessages.IndexSet.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.IndexSetOrBuilder> interstitialStringInsertionIndexesBuilder_;
      /**
       * <code>required .TSP.IndexSet interstitial_string_insertion_indexes = 16;</code>
       */
      public boolean hasInterstitialStringInsertionIndexes() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>required .TSP.IndexSet interstitial_string_insertion_indexes = 16;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.IndexSet getInterstitialStringInsertionIndexes() {
        if (interstitialStringInsertionIndexesBuilder_ == null) {
          return interstitialStringInsertionIndexes_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.IndexSet.getDefaultInstance() : interstitialStringInsertionIndexes_;
        } else {
          return interstitialStringInsertionIndexesBuilder_.getMessage();
        }
      }
      /**
       * <code>required .TSP.IndexSet interstitial_string_insertion_indexes = 16;</code>
       */
      public Builder setInterstitialStringInsertionIndexes(org.techforumist.keynote.proto.TSP.TSPMessages.IndexSet value) {
        if (interstitialStringInsertionIndexesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          interstitialStringInsertionIndexes_ = value;
          onChanged();
        } else {
          interstitialStringInsertionIndexesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>required .TSP.IndexSet interstitial_string_insertion_indexes = 16;</code>
       */
      public Builder setInterstitialStringInsertionIndexes(
          org.techforumist.keynote.proto.TSP.TSPMessages.IndexSet.Builder builderForValue) {
        if (interstitialStringInsertionIndexesBuilder_ == null) {
          interstitialStringInsertionIndexes_ = builderForValue.build();
          onChanged();
        } else {
          interstitialStringInsertionIndexesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>required .TSP.IndexSet interstitial_string_insertion_indexes = 16;</code>
       */
      public Builder mergeInterstitialStringInsertionIndexes(org.techforumist.keynote.proto.TSP.TSPMessages.IndexSet value) {
        if (interstitialStringInsertionIndexesBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000) &&
              interstitialStringInsertionIndexes_ != null &&
              interstitialStringInsertionIndexes_ != org.techforumist.keynote.proto.TSP.TSPMessages.IndexSet.getDefaultInstance()) {
            interstitialStringInsertionIndexes_ =
              org.techforumist.keynote.proto.TSP.TSPMessages.IndexSet.newBuilder(interstitialStringInsertionIndexes_).mergeFrom(value).buildPartial();
          } else {
            interstitialStringInsertionIndexes_ = value;
          }
          onChanged();
        } else {
          interstitialStringInsertionIndexesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>required .TSP.IndexSet interstitial_string_insertion_indexes = 16;</code>
       */
      public Builder clearInterstitialStringInsertionIndexes() {
        if (interstitialStringInsertionIndexesBuilder_ == null) {
          interstitialStringInsertionIndexes_ = null;
          onChanged();
        } else {
          interstitialStringInsertionIndexesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      /**
       * <code>required .TSP.IndexSet interstitial_string_insertion_indexes = 16;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.IndexSet.Builder getInterstitialStringInsertionIndexesBuilder() {
        bitField0_ |= 0x00008000;
        onChanged();
        return getInterstitialStringInsertionIndexesFieldBuilder().getBuilder();
      }
      /**
       * <code>required .TSP.IndexSet interstitial_string_insertion_indexes = 16;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.IndexSetOrBuilder getInterstitialStringInsertionIndexesOrBuilder() {
        if (interstitialStringInsertionIndexesBuilder_ != null) {
          return interstitialStringInsertionIndexesBuilder_.getMessageOrBuilder();
        } else {
          return interstitialStringInsertionIndexes_ == null ?
              org.techforumist.keynote.proto.TSP.TSPMessages.IndexSet.getDefaultInstance() : interstitialStringInsertionIndexes_;
        }
      }
      /**
       * <code>required .TSP.IndexSet interstitial_string_insertion_indexes = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.IndexSet, org.techforumist.keynote.proto.TSP.TSPMessages.IndexSet.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.IndexSetOrBuilder> 
          getInterstitialStringInsertionIndexesFieldBuilder() {
        if (interstitialStringInsertionIndexesBuilder_ == null) {
          interstitialStringInsertionIndexesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSP.TSPMessages.IndexSet, org.techforumist.keynote.proto.TSP.TSPMessages.IndexSet.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.IndexSetOrBuilder>(
                  getInterstitialStringInsertionIndexes(),
                  getParentForChildren(),
                  isClean());
          interstitialStringInsertionIndexes_ = null;
        }
        return interstitialStringInsertionIndexesBuilder_;
      }

      private int indexFromRightOfLastDigitPlaceholder_ ;
      /**
       * <code>required uint32 index_from_right_of_last_digit_placeholder = 17;</code>
       */
      public boolean hasIndexFromRightOfLastDigitPlaceholder() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>required uint32 index_from_right_of_last_digit_placeholder = 17;</code>
       */
      public int getIndexFromRightOfLastDigitPlaceholder() {
        return indexFromRightOfLastDigitPlaceholder_;
      }
      /**
       * <code>required uint32 index_from_right_of_last_digit_placeholder = 17;</code>
       */
      public Builder setIndexFromRightOfLastDigitPlaceholder(int value) {
        bitField0_ |= 0x00010000;
        indexFromRightOfLastDigitPlaceholder_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 index_from_right_of_last_digit_placeholder = 17;</code>
       */
      public Builder clearIndexFromRightOfLastDigitPlaceholder() {
        bitField0_ = (bitField0_ & ~0x00010000);
        indexFromRightOfLastDigitPlaceholder_ = 0;
        onChanged();
        return this;
      }

      private boolean isTextFormat_ ;
      /**
       * <code>required bool is_text_format = 18;</code>
       */
      public boolean hasIsTextFormat() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>required bool is_text_format = 18;</code>
       */
      public boolean getIsTextFormat() {
        return isTextFormat_;
      }
      /**
       * <code>required bool is_text_format = 18;</code>
       */
      public Builder setIsTextFormat(boolean value) {
        bitField0_ |= 0x00020000;
        isTextFormat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool is_text_format = 18;</code>
       */
      public Builder clearIsTextFormat() {
        bitField0_ = (bitField0_ & ~0x00020000);
        isTextFormat_ = false;
        onChanged();
        return this;
      }

      private int minimumIntegerWidth_ ;
      /**
       * <code>required uint32 minimum_integer_width = 19;</code>
       */
      public boolean hasMinimumIntegerWidth() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>required uint32 minimum_integer_width = 19;</code>
       */
      public int getMinimumIntegerWidth() {
        return minimumIntegerWidth_;
      }
      /**
       * <code>required uint32 minimum_integer_width = 19;</code>
       */
      public Builder setMinimumIntegerWidth(int value) {
        bitField0_ |= 0x00040000;
        minimumIntegerWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 minimum_integer_width = 19;</code>
       */
      public Builder clearMinimumIntegerWidth() {
        bitField0_ = (bitField0_ & ~0x00040000);
        minimumIntegerWidth_ = 0;
        onChanged();
        return this;
      }

      private int decimalWidth_ ;
      /**
       * <code>required uint32 decimal_width = 20;</code>
       */
      public boolean hasDecimalWidth() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>required uint32 decimal_width = 20;</code>
       */
      public int getDecimalWidth() {
        return decimalWidth_;
      }
      /**
       * <code>required uint32 decimal_width = 20;</code>
       */
      public Builder setDecimalWidth(int value) {
        bitField0_ |= 0x00080000;
        decimalWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 decimal_width = 20;</code>
       */
      public Builder clearDecimalWidth() {
        bitField0_ = (bitField0_ & ~0x00080000);
        decimalWidth_ = 0;
        onChanged();
        return this;
      }

      private int numberOfNonSpaceIntegerPlaceholderDigits_ ;
      /**
       * <code>required uint32 number_of_non_space_integer_placeholder_digits = 21;</code>
       */
      public boolean hasNumberOfNonSpaceIntegerPlaceholderDigits() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>required uint32 number_of_non_space_integer_placeholder_digits = 21;</code>
       */
      public int getNumberOfNonSpaceIntegerPlaceholderDigits() {
        return numberOfNonSpaceIntegerPlaceholderDigits_;
      }
      /**
       * <code>required uint32 number_of_non_space_integer_placeholder_digits = 21;</code>
       */
      public Builder setNumberOfNonSpaceIntegerPlaceholderDigits(int value) {
        bitField0_ |= 0x00100000;
        numberOfNonSpaceIntegerPlaceholderDigits_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 number_of_non_space_integer_placeholder_digits = 21;</code>
       */
      public Builder clearNumberOfNonSpaceIntegerPlaceholderDigits() {
        bitField0_ = (bitField0_ & ~0x00100000);
        numberOfNonSpaceIntegerPlaceholderDigits_ = 0;
        onChanged();
        return this;
      }

      private int numberOfNonSpaceDecimalPlaceholderDigits_ ;
      /**
       * <code>required uint32 number_of_non_space_decimal_placeholder_digits = 22;</code>
       */
      public boolean hasNumberOfNonSpaceDecimalPlaceholderDigits() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>required uint32 number_of_non_space_decimal_placeholder_digits = 22;</code>
       */
      public int getNumberOfNonSpaceDecimalPlaceholderDigits() {
        return numberOfNonSpaceDecimalPlaceholderDigits_;
      }
      /**
       * <code>required uint32 number_of_non_space_decimal_placeholder_digits = 22;</code>
       */
      public Builder setNumberOfNonSpaceDecimalPlaceholderDigits(int value) {
        bitField0_ |= 0x00200000;
        numberOfNonSpaceDecimalPlaceholderDigits_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 number_of_non_space_decimal_placeholder_digits = 22;</code>
       */
      public Builder clearNumberOfNonSpaceDecimalPlaceholderDigits() {
        bitField0_ = (bitField0_ & ~0x00200000);
        numberOfNonSpaceDecimalPlaceholderDigits_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object formatName_ = "";
      /**
       * <code>optional string format_name = 23;</code>
       */
      public boolean hasFormatName() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional string format_name = 23;</code>
       */
      public java.lang.String getFormatName() {
        java.lang.Object ref = formatName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            formatName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string format_name = 23;</code>
       */
      public com.google.protobuf.ByteString
          getFormatNameBytes() {
        java.lang.Object ref = formatName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          formatName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string format_name = 23;</code>
       */
      public Builder setFormatName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00400000;
        formatName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string format_name = 23;</code>
       */
      public Builder clearFormatName() {
        bitField0_ = (bitField0_ & ~0x00400000);
        formatName_ = getDefaultInstance().getFormatName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string format_name = 23;</code>
       */
      public Builder setFormatNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00400000;
        formatName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object prefixString_ = "";
      /**
       * <code>optional string prefix_string = 24;</code>
       */
      public boolean hasPrefixString() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional string prefix_string = 24;</code>
       */
      public java.lang.String getPrefixString() {
        java.lang.Object ref = prefixString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            prefixString_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string prefix_string = 24;</code>
       */
      public com.google.protobuf.ByteString
          getPrefixStringBytes() {
        java.lang.Object ref = prefixString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          prefixString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string prefix_string = 24;</code>
       */
      public Builder setPrefixString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00800000;
        prefixString_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string prefix_string = 24;</code>
       */
      public Builder clearPrefixString() {
        bitField0_ = (bitField0_ & ~0x00800000);
        prefixString_ = getDefaultInstance().getPrefixString();
        onChanged();
        return this;
      }
      /**
       * <code>optional string prefix_string = 24;</code>
       */
      public Builder setPrefixStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00800000;
        prefixString_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TSCH.PreUFF.ChartsNumberFormatArchive)
    }

    // @@protoc_insertion_point(class_scope:TSCH.PreUFF.ChartsNumberFormatArchive)
    private static final org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive();
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ChartsNumberFormatArchive>
        PARSER = new com.google.protobuf.AbstractParser<ChartsNumberFormatArchive>() {
      public ChartsNumberFormatArchive parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ChartsNumberFormatArchive(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChartsNumberFormatArchive> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChartsNumberFormatArchive> getParserForType() {
      return PARSER;
    }

    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChartStyleArchiveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TSCH.PreUFF.ChartStyleArchive)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    boolean hasSuper();
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive getSuper();
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder getSuperOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 10;</code>
     */
    boolean hasTschchartinfodefaultbackgroundfill();
    /**
     * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 10;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartinfodefaultbackgroundfill();
    /**
     * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 10;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartinfodefaultbackgroundfillOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 11;</code>
     */
    boolean hasTschchartinfodefaultbackgroundstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 11;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartinfodefaultbackgroundstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 11;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartinfodefaultbackgroundstrokeOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 12;</code>
     */
    boolean hasTschchartinfodefaultgridbackgroundfill();
    /**
     * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 12;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartinfodefaultgridbackgroundfill();
    /**
     * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 12;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartinfodefaultgridbackgroundfillOrBuilder();

    /**
     * <code>optional float tschchartinfodefaultintersetgap = 13;</code>
     */
    boolean hasTschchartinfodefaultintersetgap();
    /**
     * <code>optional float tschchartinfodefaultintersetgap = 13;</code>
     */
    float getTschchartinfodefaultintersetgap();

    /**
     * <code>optional float tschchartinfodefaultinterbargap = 14;</code>
     */
    boolean hasTschchartinfodefaultinterbargap();
    /**
     * <code>optional float tschchartinfodefaultinterbargap = 14;</code>
     */
    float getTschchartinfodefaultinterbargap();

    /**
     * <code>optional bool tschchartinfodefaultshowborder = 15;</code>
     */
    boolean hasTschchartinfodefaultshowborder();
    /**
     * <code>optional bool tschchartinfodefaultshowborder = 15;</code>
     */
    boolean getTschchartinfodefaultshowborder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 16;</code>
     */
    boolean hasTschchartinfodefaultborderstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 16;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartinfodefaultborderstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 16;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartinfodefaultborderstrokeOrBuilder();

    /**
     * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 18;</code>
     */
    boolean hasTschchartinfodefaulttitlecolor();
    /**
     * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 18;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.Color getTschchartinfodefaulttitlecolor();
    /**
     * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 18;</code>
     */
    org.techforumist.keynote.proto.TSP.TSPMessages.ColorOrBuilder getTschchartinfodefaulttitlecolorOrBuilder();

    /**
     * <code>optional float tschchartinfodefaultgridbackgroundopacity = 19;</code>
     */
    boolean hasTschchartinfodefaultgridbackgroundopacity();
    /**
     * <code>optional float tschchartinfodefaultgridbackgroundopacity = 19;</code>
     */
    float getTschchartinfodefaultgridbackgroundopacity();

    /**
     * <code>optional bool tschchartinfodefaultcombinelayers = 20;</code>
     */
    boolean hasTschchartinfodefaultcombinelayers();
    /**
     * <code>optional bool tschchartinfodefaultcombinelayers = 20;</code>
     */
    boolean getTschchartinfodefaultcombinelayers();

    /**
     * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 21;</code>
     */
    boolean hasTschchartinfodefaultbordershadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 21;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfodefaultbordershadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 21;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfodefaultbordershadowOrBuilder();

    /**
     * <code>optional float tschchartinfodefaultborderopacity = 22;</code>
     */
    boolean hasTschchartinfodefaultborderopacity();
    /**
     * <code>optional float tschchartinfodefaultborderopacity = 22;</code>
     */
    float getTschchartinfodefaultborderopacity();

    /**
     * <code>optional int32 tschchartinfodefaulttitleparagraphstyleindex = 23;</code>
     */
    boolean hasTschchartinfodefaulttitleparagraphstyleindex();
    /**
     * <code>optional int32 tschchartinfodefaulttitleparagraphstyleindex = 23;</code>
     */
    int getTschchartinfodefaulttitleparagraphstyleindex();

    /**
     * <code>optional string tschchartinfodefaultdeprecatedmasterfontfamily = 24;</code>
     */
    boolean hasTschchartinfodefaultdeprecatedmasterfontfamily();
    /**
     * <code>optional string tschchartinfodefaultdeprecatedmasterfontfamily = 24;</code>
     */
    java.lang.String getTschchartinfodefaultdeprecatedmasterfontfamily();
    /**
     * <code>optional string tschchartinfodefaultdeprecatedmasterfontfamily = 24;</code>
     */
    com.google.protobuf.ByteString
        getTschchartinfodefaultdeprecatedmasterfontfamilyBytes();

    /**
     * <code>optional int32 tschchartinfodefaultdeprecatedmasterfontnamedsize = 25;</code>
     */
    boolean hasTschchartinfodefaultdeprecatedmasterfontnamedsize();
    /**
     * <code>optional int32 tschchartinfodefaultdeprecatedmasterfontnamedsize = 25;</code>
     */
    int getTschchartinfodefaultdeprecatedmasterfontnamedsize();

    /**
     * <code>optional int32 tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex = 30;</code>
     */
    boolean hasTschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex();
    /**
     * <code>optional int32 tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex = 30;</code>
     */
    int getTschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex();

    /**
     * <code>optional int32 tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex = 31;</code>
     */
    boolean hasTschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex();
    /**
     * <code>optional int32 tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex = 31;</code>
     */
    int getTschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex();

    /**
     * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlineequationshadow = 32;</code>
     */
    boolean hasTschchartinfodefaultdeprecatedtrendlineequationshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlineequationshadow = 32;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfodefaultdeprecatedtrendlineequationshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlineequationshadow = 32;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfodefaultdeprecatedtrendlineequationshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlinersquaredshadow = 33;</code>
     */
    boolean hasTschchartinfodefaultdeprecatedtrendlinersquaredshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlinersquaredshadow = 33;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfodefaultdeprecatedtrendlinersquaredshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlinersquaredshadow = 33;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfodefaultdeprecatedtrendlinersquaredshadowOrBuilder();

    /**
     * <code>optional float tschchartinfodefaultdeprecatedtrendlineequationopacity = 34;</code>
     */
    boolean hasTschchartinfodefaultdeprecatedtrendlineequationopacity();
    /**
     * <code>optional float tschchartinfodefaultdeprecatedtrendlineequationopacity = 34;</code>
     */
    float getTschchartinfodefaultdeprecatedtrendlineequationopacity();

    /**
     * <code>optional float tschchartinfodefaultdeprecatedtrendlinersquaredopacity = 35;</code>
     */
    boolean hasTschchartinfodefaultdeprecatedtrendlinersquaredopacity();
    /**
     * <code>optional float tschchartinfodefaultdeprecatedtrendlinersquaredopacity = 35;</code>
     */
    float getTschchartinfodefaultdeprecatedtrendlinersquaredopacity();

    /**
     * <code>optional .TSD.ShadowArchive tschchartinfobardeprecated3dshadow = 308;</code>
     */
    boolean hasTschchartinfobardeprecated3Dshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfobardeprecated3dshadow = 308;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfobardeprecated3Dshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfobardeprecated3dshadow = 308;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfobardeprecated3DshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartinfocolumndeprecated3dshadow = 309;</code>
     */
    boolean hasTschchartinfocolumndeprecated3Dshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfocolumndeprecated3dshadow = 309;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfocolumndeprecated3Dshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfocolumndeprecated3dshadow = 309;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfocolumndeprecated3DshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartinfolinedeprecated3dshadow = 310;</code>
     */
    boolean hasTschchartinfolinedeprecated3Dshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfolinedeprecated3dshadow = 310;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfolinedeprecated3Dshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfolinedeprecated3dshadow = 310;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfolinedeprecated3DshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartinfoareadeprecated3dshadow = 311;</code>
     */
    boolean hasTschchartinfoareadeprecated3Dshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfoareadeprecated3dshadow = 311;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfoareadeprecated3Dshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfoareadeprecated3dshadow = 311;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfoareadeprecated3DshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartinfopiedeprecated3dshadow = 312;</code>
     */
    boolean hasTschchartinfopiedeprecated3Dshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfopiedeprecated3dshadow = 312;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfopiedeprecated3Dshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfopiedeprecated3dshadow = 312;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfopiedeprecated3DshadowOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 313;</code>
     */
    boolean hasTschchartinfodefault3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 313;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfodefault3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 313;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfodefault3DlightingpackageOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 314;</code>
     */
    boolean hasTschchartinfocolumn3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 314;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfocolumn3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 314;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfocolumn3DlightingpackageOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 315;</code>
     */
    boolean hasTschchartinfobar3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 315;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfobar3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 315;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfobar3DlightingpackageOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 316;</code>
     */
    boolean hasTschchartinfoline3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 316;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfoline3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 316;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfoline3DlightingpackageOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 317;</code>
     */
    boolean hasTschchartinfoarea3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 317;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfoarea3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 317;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfoarea3DlightingpackageOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 318;</code>
     */
    boolean hasTschchartinfopie3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 318;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfopie3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 318;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfopie3DlightingpackageOrBuilder();

    /**
     * <code>optional bool tschchartinfodefaultdeprecated3dbeveledges = 326;</code>
     */
    boolean hasTschchartinfodefaultdeprecated3Dbeveledges();
    /**
     * <code>optional bool tschchartinfodefaultdeprecated3dbeveledges = 326;</code>
     */
    boolean getTschchartinfodefaultdeprecated3Dbeveledges();

    /**
     * <code>optional bool tschchartinfopiedeprecated3dbeveledges = 327;</code>
     */
    boolean hasTschchartinfopiedeprecated3Dbeveledges();
    /**
     * <code>optional bool tschchartinfopiedeprecated3dbeveledges = 327;</code>
     */
    boolean getTschchartinfopiedeprecated3Dbeveledges();

    /**
     * <code>optional bool tschchartinfobardeprecated3dbeveledges = 328;</code>
     */
    boolean hasTschchartinfobardeprecated3Dbeveledges();
    /**
     * <code>optional bool tschchartinfobardeprecated3dbeveledges = 328;</code>
     */
    boolean getTschchartinfobardeprecated3Dbeveledges();

    /**
     * <code>optional bool tschchartinfocolumndeprecated3dbeveledges = 329;</code>
     */
    boolean hasTschchartinfocolumndeprecated3Dbeveledges();
    /**
     * <code>optional bool tschchartinfocolumndeprecated3dbeveledges = 329;</code>
     */
    boolean getTschchartinfocolumndeprecated3Dbeveledges();

    /**
     * <code>optional int32 tschchartinfodefaultdeprecated3dbarshape = 330;</code>
     */
    boolean hasTschchartinfodefaultdeprecated3Dbarshape();
    /**
     * <code>optional int32 tschchartinfodefaultdeprecated3dbarshape = 330;</code>
     */
    int getTschchartinfodefaultdeprecated3Dbarshape();

    /**
     * <code>optional float tschchartinfodefault3dchartopacity = 335;</code>
     */
    boolean hasTschchartinfodefault3Dchartopacity();
    /**
     * <code>optional float tschchartinfodefault3dchartopacity = 335;</code>
     */
    float getTschchartinfodefault3Dchartopacity();
  }
  /**
   * Protobuf type {@code TSCH.PreUFF.ChartStyleArchive}
   */
  public  static final class ChartStyleArchive extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TSCH.PreUFF.ChartStyleArchive)
      ChartStyleArchiveOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChartStyleArchive.newBuilder() to construct.
    private ChartStyleArchive(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChartStyleArchive() {
      tschchartinfodefaultintersetgap_ = 0F;
      tschchartinfodefaultinterbargap_ = 0F;
      tschchartinfodefaultshowborder_ = false;
      tschchartinfodefaultgridbackgroundopacity_ = 0F;
      tschchartinfodefaultcombinelayers_ = false;
      tschchartinfodefaultborderopacity_ = 0F;
      tschchartinfodefaulttitleparagraphstyleindex_ = 0;
      tschchartinfodefaultdeprecatedmasterfontfamily_ = "";
      tschchartinfodefaultdeprecatedmasterfontnamedsize_ = 0;
      tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex_ = 0;
      tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex_ = 0;
      tschchartinfodefaultdeprecatedtrendlineequationopacity_ = 0F;
      tschchartinfodefaultdeprecatedtrendlinersquaredopacity_ = 0F;
      tschchartinfodefaultdeprecated3Dbeveledges_ = false;
      tschchartinfopiedeprecated3Dbeveledges_ = false;
      tschchartinfobardeprecated3Dbeveledges_ = false;
      tschchartinfocolumndeprecated3Dbeveledges_ = false;
      tschchartinfodefaultdeprecated3Dbarshape_ = 0;
      tschchartinfodefault3Dchartopacity_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChartStyleArchive(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = super_.toBuilder();
              }
              super_ = input.readMessage(org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(super_);
                super_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 82: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = tschchartinfodefaultbackgroundfill_.toBuilder();
              }
              tschchartinfodefaultbackgroundfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfodefaultbackgroundfill_);
                tschchartinfodefaultbackgroundfill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 90: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = tschchartinfodefaultbackgroundstroke_.toBuilder();
              }
              tschchartinfodefaultbackgroundstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfodefaultbackgroundstroke_);
                tschchartinfodefaultbackgroundstroke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 98: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = tschchartinfodefaultgridbackgroundfill_.toBuilder();
              }
              tschchartinfodefaultgridbackgroundfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfodefaultgridbackgroundfill_);
                tschchartinfodefaultgridbackgroundfill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 109: {
              bitField0_ |= 0x00000010;
              tschchartinfodefaultintersetgap_ = input.readFloat();
              break;
            }
            case 117: {
              bitField0_ |= 0x00000020;
              tschchartinfodefaultinterbargap_ = input.readFloat();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000040;
              tschchartinfodefaultshowborder_ = input.readBool();
              break;
            }
            case 130: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = tschchartinfodefaultborderstroke_.toBuilder();
              }
              tschchartinfodefaultborderstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfodefaultborderstroke_);
                tschchartinfodefaultborderstroke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 146: {
              org.techforumist.keynote.proto.TSP.TSPMessages.Color.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = tschchartinfodefaulttitlecolor_.toBuilder();
              }
              tschchartinfodefaulttitlecolor_ = input.readMessage(org.techforumist.keynote.proto.TSP.TSPMessages.Color.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfodefaulttitlecolor_);
                tschchartinfodefaulttitlecolor_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 157: {
              bitField0_ |= 0x00000200;
              tschchartinfodefaultgridbackgroundopacity_ = input.readFloat();
              break;
            }
            case 160: {
              bitField0_ |= 0x00000400;
              tschchartinfodefaultcombinelayers_ = input.readBool();
              break;
            }
            case 170: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = tschchartinfodefaultbordershadow_.toBuilder();
              }
              tschchartinfodefaultbordershadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfodefaultbordershadow_);
                tschchartinfodefaultbordershadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 181: {
              bitField0_ |= 0x00001000;
              tschchartinfodefaultborderopacity_ = input.readFloat();
              break;
            }
            case 184: {
              bitField0_ |= 0x00002000;
              tschchartinfodefaulttitleparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 194: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00004000;
              tschchartinfodefaultdeprecatedmasterfontfamily_ = bs;
              break;
            }
            case 200: {
              bitField0_ |= 0x00008000;
              tschchartinfodefaultdeprecatedmasterfontnamedsize_ = input.readInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x00010000;
              tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 248: {
              bitField0_ |= 0x00020000;
              tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 258: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00040000) == 0x00040000)) {
                subBuilder = tschchartinfodefaultdeprecatedtrendlineequationshadow_.toBuilder();
              }
              tschchartinfodefaultdeprecatedtrendlineequationshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfodefaultdeprecatedtrendlineequationshadow_);
                tschchartinfodefaultdeprecatedtrendlineequationshadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00040000;
              break;
            }
            case 266: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00080000) == 0x00080000)) {
                subBuilder = tschchartinfodefaultdeprecatedtrendlinersquaredshadow_.toBuilder();
              }
              tschchartinfodefaultdeprecatedtrendlinersquaredshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfodefaultdeprecatedtrendlinersquaredshadow_);
                tschchartinfodefaultdeprecatedtrendlinersquaredshadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00080000;
              break;
            }
            case 277: {
              bitField0_ |= 0x00100000;
              tschchartinfodefaultdeprecatedtrendlineequationopacity_ = input.readFloat();
              break;
            }
            case 285: {
              bitField0_ |= 0x00200000;
              tschchartinfodefaultdeprecatedtrendlinersquaredopacity_ = input.readFloat();
              break;
            }
            case 2466: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00400000) == 0x00400000)) {
                subBuilder = tschchartinfobardeprecated3Dshadow_.toBuilder();
              }
              tschchartinfobardeprecated3Dshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfobardeprecated3Dshadow_);
                tschchartinfobardeprecated3Dshadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00400000;
              break;
            }
            case 2474: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00800000) == 0x00800000)) {
                subBuilder = tschchartinfocolumndeprecated3Dshadow_.toBuilder();
              }
              tschchartinfocolumndeprecated3Dshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfocolumndeprecated3Dshadow_);
                tschchartinfocolumndeprecated3Dshadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00800000;
              break;
            }
            case 2482: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x01000000) == 0x01000000)) {
                subBuilder = tschchartinfolinedeprecated3Dshadow_.toBuilder();
              }
              tschchartinfolinedeprecated3Dshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfolinedeprecated3Dshadow_);
                tschchartinfolinedeprecated3Dshadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x01000000;
              break;
            }
            case 2490: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x02000000) == 0x02000000)) {
                subBuilder = tschchartinfoareadeprecated3Dshadow_.toBuilder();
              }
              tschchartinfoareadeprecated3Dshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfoareadeprecated3Dshadow_);
                tschchartinfoareadeprecated3Dshadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x02000000;
              break;
            }
            case 2498: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x04000000) == 0x04000000)) {
                subBuilder = tschchartinfopiedeprecated3Dshadow_.toBuilder();
              }
              tschchartinfopiedeprecated3Dshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfopiedeprecated3Dshadow_);
                tschchartinfopiedeprecated3Dshadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x04000000;
              break;
            }
            case 2506: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x08000000) == 0x08000000)) {
                subBuilder = tschchartinfodefault3Dlightingpackage_.toBuilder();
              }
              tschchartinfodefault3Dlightingpackage_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfodefault3Dlightingpackage_);
                tschchartinfodefault3Dlightingpackage_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x08000000;
              break;
            }
            case 2514: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x10000000) == 0x10000000)) {
                subBuilder = tschchartinfocolumn3Dlightingpackage_.toBuilder();
              }
              tschchartinfocolumn3Dlightingpackage_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfocolumn3Dlightingpackage_);
                tschchartinfocolumn3Dlightingpackage_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x10000000;
              break;
            }
            case 2522: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x20000000) == 0x20000000)) {
                subBuilder = tschchartinfobar3Dlightingpackage_.toBuilder();
              }
              tschchartinfobar3Dlightingpackage_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfobar3Dlightingpackage_);
                tschchartinfobar3Dlightingpackage_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x20000000;
              break;
            }
            case 2530: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x40000000) == 0x40000000)) {
                subBuilder = tschchartinfoline3Dlightingpackage_.toBuilder();
              }
              tschchartinfoline3Dlightingpackage_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfoline3Dlightingpackage_);
                tschchartinfoline3Dlightingpackage_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x40000000;
              break;
            }
            case 2538: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x80000000) == 0x80000000)) {
                subBuilder = tschchartinfoarea3Dlightingpackage_.toBuilder();
              }
              tschchartinfoarea3Dlightingpackage_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfoarea3Dlightingpackage_);
                tschchartinfoarea3Dlightingpackage_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x80000000;
              break;
            }
            case 2546: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000001) == 0x00000001)) {
                subBuilder = tschchartinfopie3Dlightingpackage_.toBuilder();
              }
              tschchartinfopie3Dlightingpackage_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfopie3Dlightingpackage_);
                tschchartinfopie3Dlightingpackage_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000001;
              break;
            }
            case 2608: {
              bitField1_ |= 0x00000002;
              tschchartinfodefaultdeprecated3Dbeveledges_ = input.readBool();
              break;
            }
            case 2616: {
              bitField1_ |= 0x00000004;
              tschchartinfopiedeprecated3Dbeveledges_ = input.readBool();
              break;
            }
            case 2624: {
              bitField1_ |= 0x00000008;
              tschchartinfobardeprecated3Dbeveledges_ = input.readBool();
              break;
            }
            case 2632: {
              bitField1_ |= 0x00000010;
              tschchartinfocolumndeprecated3Dbeveledges_ = input.readBool();
              break;
            }
            case 2640: {
              bitField1_ |= 0x00000020;
              tschchartinfodefaultdeprecated3Dbarshape_ = input.readInt32();
              break;
            }
            case 2685: {
              bitField1_ |= 0x00000040;
              tschchartinfodefault3Dchartopacity_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartStyleArchive_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartStyleArchive_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive.Builder.class);
    }

    private int bitField0_;
    private int bitField1_;
    public static final int SUPER_FIELD_NUMBER = 1;
    private org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive super_;
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    public boolean hasSuper() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive getSuper() {
      return super_ == null ? org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
    }
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder getSuperOrBuilder() {
      return super_ == null ? org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
    }

    public static final int TSCHCHARTINFODEFAULTBACKGROUNDFILL_FIELD_NUMBER = 10;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartinfodefaultbackgroundfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 10;</code>
     */
    public boolean hasTschchartinfodefaultbackgroundfill() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 10;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartinfodefaultbackgroundfill() {
      return tschchartinfodefaultbackgroundfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartinfodefaultbackgroundfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 10;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartinfodefaultbackgroundfillOrBuilder() {
      return tschchartinfodefaultbackgroundfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartinfodefaultbackgroundfill_;
    }

    public static final int TSCHCHARTINFODEFAULTBACKGROUNDSTROKE_FIELD_NUMBER = 11;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartinfodefaultbackgroundstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 11;</code>
     */
    public boolean hasTschchartinfodefaultbackgroundstroke() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 11;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartinfodefaultbackgroundstroke() {
      return tschchartinfodefaultbackgroundstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartinfodefaultbackgroundstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 11;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartinfodefaultbackgroundstrokeOrBuilder() {
      return tschchartinfodefaultbackgroundstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartinfodefaultbackgroundstroke_;
    }

    public static final int TSCHCHARTINFODEFAULTGRIDBACKGROUNDFILL_FIELD_NUMBER = 12;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartinfodefaultgridbackgroundfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 12;</code>
     */
    public boolean hasTschchartinfodefaultgridbackgroundfill() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 12;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartinfodefaultgridbackgroundfill() {
      return tschchartinfodefaultgridbackgroundfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartinfodefaultgridbackgroundfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 12;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartinfodefaultgridbackgroundfillOrBuilder() {
      return tschchartinfodefaultgridbackgroundfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartinfodefaultgridbackgroundfill_;
    }

    public static final int TSCHCHARTINFODEFAULTINTERSETGAP_FIELD_NUMBER = 13;
    private float tschchartinfodefaultintersetgap_;
    /**
     * <code>optional float tschchartinfodefaultintersetgap = 13;</code>
     */
    public boolean hasTschchartinfodefaultintersetgap() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float tschchartinfodefaultintersetgap = 13;</code>
     */
    public float getTschchartinfodefaultintersetgap() {
      return tschchartinfodefaultintersetgap_;
    }

    public static final int TSCHCHARTINFODEFAULTINTERBARGAP_FIELD_NUMBER = 14;
    private float tschchartinfodefaultinterbargap_;
    /**
     * <code>optional float tschchartinfodefaultinterbargap = 14;</code>
     */
    public boolean hasTschchartinfodefaultinterbargap() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float tschchartinfodefaultinterbargap = 14;</code>
     */
    public float getTschchartinfodefaultinterbargap() {
      return tschchartinfodefaultinterbargap_;
    }

    public static final int TSCHCHARTINFODEFAULTSHOWBORDER_FIELD_NUMBER = 15;
    private boolean tschchartinfodefaultshowborder_;
    /**
     * <code>optional bool tschchartinfodefaultshowborder = 15;</code>
     */
    public boolean hasTschchartinfodefaultshowborder() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool tschchartinfodefaultshowborder = 15;</code>
     */
    public boolean getTschchartinfodefaultshowborder() {
      return tschchartinfodefaultshowborder_;
    }

    public static final int TSCHCHARTINFODEFAULTBORDERSTROKE_FIELD_NUMBER = 16;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartinfodefaultborderstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 16;</code>
     */
    public boolean hasTschchartinfodefaultborderstroke() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 16;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartinfodefaultborderstroke() {
      return tschchartinfodefaultborderstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartinfodefaultborderstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 16;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartinfodefaultborderstrokeOrBuilder() {
      return tschchartinfodefaultborderstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartinfodefaultborderstroke_;
    }

    public static final int TSCHCHARTINFODEFAULTTITLECOLOR_FIELD_NUMBER = 18;
    private org.techforumist.keynote.proto.TSP.TSPMessages.Color tschchartinfodefaulttitlecolor_;
    /**
     * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 18;</code>
     */
    public boolean hasTschchartinfodefaulttitlecolor() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 18;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.Color getTschchartinfodefaulttitlecolor() {
      return tschchartinfodefaulttitlecolor_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Color.getDefaultInstance() : tschchartinfodefaulttitlecolor_;
    }
    /**
     * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 18;</code>
     */
    public org.techforumist.keynote.proto.TSP.TSPMessages.ColorOrBuilder getTschchartinfodefaulttitlecolorOrBuilder() {
      return tschchartinfodefaulttitlecolor_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Color.getDefaultInstance() : tschchartinfodefaulttitlecolor_;
    }

    public static final int TSCHCHARTINFODEFAULTGRIDBACKGROUNDOPACITY_FIELD_NUMBER = 19;
    private float tschchartinfodefaultgridbackgroundopacity_;
    /**
     * <code>optional float tschchartinfodefaultgridbackgroundopacity = 19;</code>
     */
    public boolean hasTschchartinfodefaultgridbackgroundopacity() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional float tschchartinfodefaultgridbackgroundopacity = 19;</code>
     */
    public float getTschchartinfodefaultgridbackgroundopacity() {
      return tschchartinfodefaultgridbackgroundopacity_;
    }

    public static final int TSCHCHARTINFODEFAULTCOMBINELAYERS_FIELD_NUMBER = 20;
    private boolean tschchartinfodefaultcombinelayers_;
    /**
     * <code>optional bool tschchartinfodefaultcombinelayers = 20;</code>
     */
    public boolean hasTschchartinfodefaultcombinelayers() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool tschchartinfodefaultcombinelayers = 20;</code>
     */
    public boolean getTschchartinfodefaultcombinelayers() {
      return tschchartinfodefaultcombinelayers_;
    }

    public static final int TSCHCHARTINFODEFAULTBORDERSHADOW_FIELD_NUMBER = 21;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartinfodefaultbordershadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 21;</code>
     */
    public boolean hasTschchartinfodefaultbordershadow() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 21;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfodefaultbordershadow() {
      return tschchartinfodefaultbordershadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfodefaultbordershadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 21;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfodefaultbordershadowOrBuilder() {
      return tschchartinfodefaultbordershadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfodefaultbordershadow_;
    }

    public static final int TSCHCHARTINFODEFAULTBORDEROPACITY_FIELD_NUMBER = 22;
    private float tschchartinfodefaultborderopacity_;
    /**
     * <code>optional float tschchartinfodefaultborderopacity = 22;</code>
     */
    public boolean hasTschchartinfodefaultborderopacity() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional float tschchartinfodefaultborderopacity = 22;</code>
     */
    public float getTschchartinfodefaultborderopacity() {
      return tschchartinfodefaultborderopacity_;
    }

    public static final int TSCHCHARTINFODEFAULTTITLEPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 23;
    private int tschchartinfodefaulttitleparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartinfodefaulttitleparagraphstyleindex = 23;</code>
     */
    public boolean hasTschchartinfodefaulttitleparagraphstyleindex() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 tschchartinfodefaulttitleparagraphstyleindex = 23;</code>
     */
    public int getTschchartinfodefaulttitleparagraphstyleindex() {
      return tschchartinfodefaulttitleparagraphstyleindex_;
    }

    public static final int TSCHCHARTINFODEFAULTDEPRECATEDMASTERFONTFAMILY_FIELD_NUMBER = 24;
    private volatile java.lang.Object tschchartinfodefaultdeprecatedmasterfontfamily_;
    /**
     * <code>optional string tschchartinfodefaultdeprecatedmasterfontfamily = 24;</code>
     */
    public boolean hasTschchartinfodefaultdeprecatedmasterfontfamily() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional string tschchartinfodefaultdeprecatedmasterfontfamily = 24;</code>
     */
    public java.lang.String getTschchartinfodefaultdeprecatedmasterfontfamily() {
      java.lang.Object ref = tschchartinfodefaultdeprecatedmasterfontfamily_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tschchartinfodefaultdeprecatedmasterfontfamily_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string tschchartinfodefaultdeprecatedmasterfontfamily = 24;</code>
     */
    public com.google.protobuf.ByteString
        getTschchartinfodefaultdeprecatedmasterfontfamilyBytes() {
      java.lang.Object ref = tschchartinfodefaultdeprecatedmasterfontfamily_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tschchartinfodefaultdeprecatedmasterfontfamily_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TSCHCHARTINFODEFAULTDEPRECATEDMASTERFONTNAMEDSIZE_FIELD_NUMBER = 25;
    private int tschchartinfodefaultdeprecatedmasterfontnamedsize_;
    /**
     * <code>optional int32 tschchartinfodefaultdeprecatedmasterfontnamedsize = 25;</code>
     */
    public boolean hasTschchartinfodefaultdeprecatedmasterfontnamedsize() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 tschchartinfodefaultdeprecatedmasterfontnamedsize = 25;</code>
     */
    public int getTschchartinfodefaultdeprecatedmasterfontnamedsize() {
      return tschchartinfodefaultdeprecatedmasterfontnamedsize_;
    }

    public static final int TSCHCHARTINFODEFAULTDEPRECATEDTRENDLINEEQUATIONPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 30;
    private int tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex = 30;</code>
     */
    public boolean hasTschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex = 30;</code>
     */
    public int getTschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex() {
      return tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex_;
    }

    public static final int TSCHCHARTINFODEFAULTDEPRECATEDTRENDLINERSQUAREDPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 31;
    private int tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex = 31;</code>
     */
    public boolean hasTschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex = 31;</code>
     */
    public int getTschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex() {
      return tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex_;
    }

    public static final int TSCHCHARTINFODEFAULTDEPRECATEDTRENDLINEEQUATIONSHADOW_FIELD_NUMBER = 32;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartinfodefaultdeprecatedtrendlineequationshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlineequationshadow = 32;</code>
     */
    public boolean hasTschchartinfodefaultdeprecatedtrendlineequationshadow() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlineequationshadow = 32;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfodefaultdeprecatedtrendlineequationshadow() {
      return tschchartinfodefaultdeprecatedtrendlineequationshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfodefaultdeprecatedtrendlineequationshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlineequationshadow = 32;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfodefaultdeprecatedtrendlineequationshadowOrBuilder() {
      return tschchartinfodefaultdeprecatedtrendlineequationshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfodefaultdeprecatedtrendlineequationshadow_;
    }

    public static final int TSCHCHARTINFODEFAULTDEPRECATEDTRENDLINERSQUAREDSHADOW_FIELD_NUMBER = 33;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartinfodefaultdeprecatedtrendlinersquaredshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlinersquaredshadow = 33;</code>
     */
    public boolean hasTschchartinfodefaultdeprecatedtrendlinersquaredshadow() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlinersquaredshadow = 33;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfodefaultdeprecatedtrendlinersquaredshadow() {
      return tschchartinfodefaultdeprecatedtrendlinersquaredshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfodefaultdeprecatedtrendlinersquaredshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlinersquaredshadow = 33;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfodefaultdeprecatedtrendlinersquaredshadowOrBuilder() {
      return tschchartinfodefaultdeprecatedtrendlinersquaredshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfodefaultdeprecatedtrendlinersquaredshadow_;
    }

    public static final int TSCHCHARTINFODEFAULTDEPRECATEDTRENDLINEEQUATIONOPACITY_FIELD_NUMBER = 34;
    private float tschchartinfodefaultdeprecatedtrendlineequationopacity_;
    /**
     * <code>optional float tschchartinfodefaultdeprecatedtrendlineequationopacity = 34;</code>
     */
    public boolean hasTschchartinfodefaultdeprecatedtrendlineequationopacity() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional float tschchartinfodefaultdeprecatedtrendlineequationopacity = 34;</code>
     */
    public float getTschchartinfodefaultdeprecatedtrendlineequationopacity() {
      return tschchartinfodefaultdeprecatedtrendlineequationopacity_;
    }

    public static final int TSCHCHARTINFODEFAULTDEPRECATEDTRENDLINERSQUAREDOPACITY_FIELD_NUMBER = 35;
    private float tschchartinfodefaultdeprecatedtrendlinersquaredopacity_;
    /**
     * <code>optional float tschchartinfodefaultdeprecatedtrendlinersquaredopacity = 35;</code>
     */
    public boolean hasTschchartinfodefaultdeprecatedtrendlinersquaredopacity() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional float tschchartinfodefaultdeprecatedtrendlinersquaredopacity = 35;</code>
     */
    public float getTschchartinfodefaultdeprecatedtrendlinersquaredopacity() {
      return tschchartinfodefaultdeprecatedtrendlinersquaredopacity_;
    }

    public static final int TSCHCHARTINFOBARDEPRECATED3DSHADOW_FIELD_NUMBER = 308;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartinfobardeprecated3Dshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfobardeprecated3dshadow = 308;</code>
     */
    public boolean hasTschchartinfobardeprecated3Dshadow() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfobardeprecated3dshadow = 308;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfobardeprecated3Dshadow() {
      return tschchartinfobardeprecated3Dshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfobardeprecated3Dshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfobardeprecated3dshadow = 308;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfobardeprecated3DshadowOrBuilder() {
      return tschchartinfobardeprecated3Dshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfobardeprecated3Dshadow_;
    }

    public static final int TSCHCHARTINFOCOLUMNDEPRECATED3DSHADOW_FIELD_NUMBER = 309;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartinfocolumndeprecated3Dshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfocolumndeprecated3dshadow = 309;</code>
     */
    public boolean hasTschchartinfocolumndeprecated3Dshadow() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfocolumndeprecated3dshadow = 309;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfocolumndeprecated3Dshadow() {
      return tschchartinfocolumndeprecated3Dshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfocolumndeprecated3Dshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfocolumndeprecated3dshadow = 309;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfocolumndeprecated3DshadowOrBuilder() {
      return tschchartinfocolumndeprecated3Dshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfocolumndeprecated3Dshadow_;
    }

    public static final int TSCHCHARTINFOLINEDEPRECATED3DSHADOW_FIELD_NUMBER = 310;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartinfolinedeprecated3Dshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfolinedeprecated3dshadow = 310;</code>
     */
    public boolean hasTschchartinfolinedeprecated3Dshadow() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfolinedeprecated3dshadow = 310;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfolinedeprecated3Dshadow() {
      return tschchartinfolinedeprecated3Dshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfolinedeprecated3Dshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfolinedeprecated3dshadow = 310;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfolinedeprecated3DshadowOrBuilder() {
      return tschchartinfolinedeprecated3Dshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfolinedeprecated3Dshadow_;
    }

    public static final int TSCHCHARTINFOAREADEPRECATED3DSHADOW_FIELD_NUMBER = 311;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartinfoareadeprecated3Dshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfoareadeprecated3dshadow = 311;</code>
     */
    public boolean hasTschchartinfoareadeprecated3Dshadow() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfoareadeprecated3dshadow = 311;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfoareadeprecated3Dshadow() {
      return tschchartinfoareadeprecated3Dshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfoareadeprecated3Dshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfoareadeprecated3dshadow = 311;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfoareadeprecated3DshadowOrBuilder() {
      return tschchartinfoareadeprecated3Dshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfoareadeprecated3Dshadow_;
    }

    public static final int TSCHCHARTINFOPIEDEPRECATED3DSHADOW_FIELD_NUMBER = 312;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartinfopiedeprecated3Dshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfopiedeprecated3dshadow = 312;</code>
     */
    public boolean hasTschchartinfopiedeprecated3Dshadow() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfopiedeprecated3dshadow = 312;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfopiedeprecated3Dshadow() {
      return tschchartinfopiedeprecated3Dshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfopiedeprecated3Dshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartinfopiedeprecated3dshadow = 312;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfopiedeprecated3DshadowOrBuilder() {
      return tschchartinfopiedeprecated3Dshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfopiedeprecated3Dshadow_;
    }

    public static final int TSCHCHARTINFODEFAULT3DLIGHTINGPACKAGE_FIELD_NUMBER = 313;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfodefault3Dlightingpackage_;
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 313;</code>
     */
    public boolean hasTschchartinfodefault3Dlightingpackage() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 313;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfodefault3Dlightingpackage() {
      return tschchartinfodefault3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfodefault3Dlightingpackage_;
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 313;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfodefault3DlightingpackageOrBuilder() {
      return tschchartinfodefault3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfodefault3Dlightingpackage_;
    }

    public static final int TSCHCHARTINFOCOLUMN3DLIGHTINGPACKAGE_FIELD_NUMBER = 314;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfocolumn3Dlightingpackage_;
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 314;</code>
     */
    public boolean hasTschchartinfocolumn3Dlightingpackage() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 314;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfocolumn3Dlightingpackage() {
      return tschchartinfocolumn3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfocolumn3Dlightingpackage_;
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 314;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfocolumn3DlightingpackageOrBuilder() {
      return tschchartinfocolumn3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfocolumn3Dlightingpackage_;
    }

    public static final int TSCHCHARTINFOBAR3DLIGHTINGPACKAGE_FIELD_NUMBER = 315;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfobar3Dlightingpackage_;
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 315;</code>
     */
    public boolean hasTschchartinfobar3Dlightingpackage() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 315;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfobar3Dlightingpackage() {
      return tschchartinfobar3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfobar3Dlightingpackage_;
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 315;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfobar3DlightingpackageOrBuilder() {
      return tschchartinfobar3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfobar3Dlightingpackage_;
    }

    public static final int TSCHCHARTINFOLINE3DLIGHTINGPACKAGE_FIELD_NUMBER = 316;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfoline3Dlightingpackage_;
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 316;</code>
     */
    public boolean hasTschchartinfoline3Dlightingpackage() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 316;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfoline3Dlightingpackage() {
      return tschchartinfoline3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfoline3Dlightingpackage_;
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 316;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfoline3DlightingpackageOrBuilder() {
      return tschchartinfoline3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfoline3Dlightingpackage_;
    }

    public static final int TSCHCHARTINFOAREA3DLIGHTINGPACKAGE_FIELD_NUMBER = 317;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfoarea3Dlightingpackage_;
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 317;</code>
     */
    public boolean hasTschchartinfoarea3Dlightingpackage() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 317;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfoarea3Dlightingpackage() {
      return tschchartinfoarea3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfoarea3Dlightingpackage_;
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 317;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfoarea3DlightingpackageOrBuilder() {
      return tschchartinfoarea3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfoarea3Dlightingpackage_;
    }

    public static final int TSCHCHARTINFOPIE3DLIGHTINGPACKAGE_FIELD_NUMBER = 318;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfopie3Dlightingpackage_;
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 318;</code>
     */
    public boolean hasTschchartinfopie3Dlightingpackage() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 318;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfopie3Dlightingpackage() {
      return tschchartinfopie3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfopie3Dlightingpackage_;
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 318;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfopie3DlightingpackageOrBuilder() {
      return tschchartinfopie3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfopie3Dlightingpackage_;
    }

    public static final int TSCHCHARTINFODEFAULTDEPRECATED3DBEVELEDGES_FIELD_NUMBER = 326;
    private boolean tschchartinfodefaultdeprecated3Dbeveledges_;
    /**
     * <code>optional bool tschchartinfodefaultdeprecated3dbeveledges = 326;</code>
     */
    public boolean hasTschchartinfodefaultdeprecated3Dbeveledges() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool tschchartinfodefaultdeprecated3dbeveledges = 326;</code>
     */
    public boolean getTschchartinfodefaultdeprecated3Dbeveledges() {
      return tschchartinfodefaultdeprecated3Dbeveledges_;
    }

    public static final int TSCHCHARTINFOPIEDEPRECATED3DBEVELEDGES_FIELD_NUMBER = 327;
    private boolean tschchartinfopiedeprecated3Dbeveledges_;
    /**
     * <code>optional bool tschchartinfopiedeprecated3dbeveledges = 327;</code>
     */
    public boolean hasTschchartinfopiedeprecated3Dbeveledges() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool tschchartinfopiedeprecated3dbeveledges = 327;</code>
     */
    public boolean getTschchartinfopiedeprecated3Dbeveledges() {
      return tschchartinfopiedeprecated3Dbeveledges_;
    }

    public static final int TSCHCHARTINFOBARDEPRECATED3DBEVELEDGES_FIELD_NUMBER = 328;
    private boolean tschchartinfobardeprecated3Dbeveledges_;
    /**
     * <code>optional bool tschchartinfobardeprecated3dbeveledges = 328;</code>
     */
    public boolean hasTschchartinfobardeprecated3Dbeveledges() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool tschchartinfobardeprecated3dbeveledges = 328;</code>
     */
    public boolean getTschchartinfobardeprecated3Dbeveledges() {
      return tschchartinfobardeprecated3Dbeveledges_;
    }

    public static final int TSCHCHARTINFOCOLUMNDEPRECATED3DBEVELEDGES_FIELD_NUMBER = 329;
    private boolean tschchartinfocolumndeprecated3Dbeveledges_;
    /**
     * <code>optional bool tschchartinfocolumndeprecated3dbeveledges = 329;</code>
     */
    public boolean hasTschchartinfocolumndeprecated3Dbeveledges() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool tschchartinfocolumndeprecated3dbeveledges = 329;</code>
     */
    public boolean getTschchartinfocolumndeprecated3Dbeveledges() {
      return tschchartinfocolumndeprecated3Dbeveledges_;
    }

    public static final int TSCHCHARTINFODEFAULTDEPRECATED3DBARSHAPE_FIELD_NUMBER = 330;
    private int tschchartinfodefaultdeprecated3Dbarshape_;
    /**
     * <code>optional int32 tschchartinfodefaultdeprecated3dbarshape = 330;</code>
     */
    public boolean hasTschchartinfodefaultdeprecated3Dbarshape() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 tschchartinfodefaultdeprecated3dbarshape = 330;</code>
     */
    public int getTschchartinfodefaultdeprecated3Dbarshape() {
      return tschchartinfodefaultdeprecated3Dbarshape_;
    }

    public static final int TSCHCHARTINFODEFAULT3DCHARTOPACITY_FIELD_NUMBER = 335;
    private float tschchartinfodefault3Dchartopacity_;
    /**
     * <code>optional float tschchartinfodefault3dchartopacity = 335;</code>
     */
    public boolean hasTschchartinfodefault3Dchartopacity() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float tschchartinfodefault3dchartopacity = 335;</code>
     */
    public float getTschchartinfodefault3Dchartopacity() {
      return tschchartinfodefault3Dchartopacity_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSuper()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSuper().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasTschchartinfodefaultbackgroundfill()) {
        if (!getTschchartinfodefaultbackgroundfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfodefaultbackgroundstroke()) {
        if (!getTschchartinfodefaultbackgroundstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfodefaultgridbackgroundfill()) {
        if (!getTschchartinfodefaultgridbackgroundfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfodefaultborderstroke()) {
        if (!getTschchartinfodefaultborderstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfodefaulttitlecolor()) {
        if (!getTschchartinfodefaulttitlecolor().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfodefaultbordershadow()) {
        if (!getTschchartinfodefaultbordershadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfodefaultdeprecatedtrendlineequationshadow()) {
        if (!getTschchartinfodefaultdeprecatedtrendlineequationshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfodefaultdeprecatedtrendlinersquaredshadow()) {
        if (!getTschchartinfodefaultdeprecatedtrendlinersquaredshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfobardeprecated3Dshadow()) {
        if (!getTschchartinfobardeprecated3Dshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfocolumndeprecated3Dshadow()) {
        if (!getTschchartinfocolumndeprecated3Dshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfolinedeprecated3Dshadow()) {
        if (!getTschchartinfolinedeprecated3Dshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfoareadeprecated3Dshadow()) {
        if (!getTschchartinfoareadeprecated3Dshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfopiedeprecated3Dshadow()) {
        if (!getTschchartinfopiedeprecated3Dshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfodefault3Dlightingpackage()) {
        if (!getTschchartinfodefault3Dlightingpackage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfocolumn3Dlightingpackage()) {
        if (!getTschchartinfocolumn3Dlightingpackage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfobar3Dlightingpackage()) {
        if (!getTschchartinfobar3Dlightingpackage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfoline3Dlightingpackage()) {
        if (!getTschchartinfoline3Dlightingpackage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfoarea3Dlightingpackage()) {
        if (!getTschchartinfoarea3Dlightingpackage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfopie3Dlightingpackage()) {
        if (!getTschchartinfopie3Dlightingpackage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getSuper());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(10, getTschchartinfodefaultbackgroundfill());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(11, getTschchartinfodefaultbackgroundstroke());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(12, getTschchartinfodefaultgridbackgroundfill());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(13, tschchartinfodefaultintersetgap_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(14, tschchartinfodefaultinterbargap_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(15, tschchartinfodefaultshowborder_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(16, getTschchartinfodefaultborderstroke());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(18, getTschchartinfodefaulttitlecolor());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(19, tschchartinfodefaultgridbackgroundopacity_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(20, tschchartinfodefaultcombinelayers_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(21, getTschchartinfodefaultbordershadow());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeFloat(22, tschchartinfodefaultborderopacity_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(23, tschchartinfodefaulttitleparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 24, tschchartinfodefaultdeprecatedmasterfontfamily_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(25, tschchartinfodefaultdeprecatedmasterfontnamedsize_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(30, tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(31, tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeMessage(32, getTschchartinfodefaultdeprecatedtrendlineequationshadow());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeMessage(33, getTschchartinfodefaultdeprecatedtrendlinersquaredshadow());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeFloat(34, tschchartinfodefaultdeprecatedtrendlineequationopacity_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeFloat(35, tschchartinfodefaultdeprecatedtrendlinersquaredopacity_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeMessage(308, getTschchartinfobardeprecated3Dshadow());
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeMessage(309, getTschchartinfocolumndeprecated3Dshadow());
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeMessage(310, getTschchartinfolinedeprecated3Dshadow());
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeMessage(311, getTschchartinfoareadeprecated3Dshadow());
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeMessage(312, getTschchartinfopiedeprecated3Dshadow());
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeMessage(313, getTschchartinfodefault3Dlightingpackage());
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeMessage(314, getTschchartinfocolumn3Dlightingpackage());
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeMessage(315, getTschchartinfobar3Dlightingpackage());
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeMessage(316, getTschchartinfoline3Dlightingpackage());
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeMessage(317, getTschchartinfoarea3Dlightingpackage());
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(318, getTschchartinfopie3Dlightingpackage());
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeBool(326, tschchartinfodefaultdeprecated3Dbeveledges_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeBool(327, tschchartinfopiedeprecated3Dbeveledges_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeBool(328, tschchartinfobardeprecated3Dbeveledges_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeBool(329, tschchartinfocolumndeprecated3Dbeveledges_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(330, tschchartinfodefaultdeprecated3Dbarshape_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(335, tschchartinfodefault3Dchartopacity_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSuper());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getTschchartinfodefaultbackgroundfill());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getTschchartinfodefaultbackgroundstroke());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getTschchartinfodefaultgridbackgroundfill());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, tschchartinfodefaultintersetgap_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, tschchartinfodefaultinterbargap_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, tschchartinfodefaultshowborder_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getTschchartinfodefaultborderstroke());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, getTschchartinfodefaulttitlecolor());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(19, tschchartinfodefaultgridbackgroundopacity_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(20, tschchartinfodefaultcombinelayers_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, getTschchartinfodefaultbordershadow());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(22, tschchartinfodefaultborderopacity_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, tschchartinfodefaulttitleparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(24, tschchartinfodefaultdeprecatedmasterfontfamily_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, tschchartinfodefaultdeprecatedmasterfontnamedsize_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(30, tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(31, tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(32, getTschchartinfodefaultdeprecatedtrendlineequationshadow());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(33, getTschchartinfodefaultdeprecatedtrendlinersquaredshadow());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(34, tschchartinfodefaultdeprecatedtrendlineequationopacity_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(35, tschchartinfodefaultdeprecatedtrendlinersquaredopacity_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(308, getTschchartinfobardeprecated3Dshadow());
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(309, getTschchartinfocolumndeprecated3Dshadow());
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(310, getTschchartinfolinedeprecated3Dshadow());
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(311, getTschchartinfoareadeprecated3Dshadow());
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(312, getTschchartinfopiedeprecated3Dshadow());
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(313, getTschchartinfodefault3Dlightingpackage());
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(314, getTschchartinfocolumn3Dlightingpackage());
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(315, getTschchartinfobar3Dlightingpackage());
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(316, getTschchartinfoline3Dlightingpackage());
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(317, getTschchartinfoarea3Dlightingpackage());
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(318, getTschchartinfopie3Dlightingpackage());
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(326, tschchartinfodefaultdeprecated3Dbeveledges_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(327, tschchartinfopiedeprecated3Dbeveledges_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(328, tschchartinfobardeprecated3Dbeveledges_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(329, tschchartinfocolumndeprecated3Dbeveledges_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(330, tschchartinfodefaultdeprecated3Dbarshape_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(335, tschchartinfodefault3Dchartopacity_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive)) {
        return super.equals(obj);
      }
      org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive other = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive) obj;

      boolean result = true;
      result = result && (hasSuper() == other.hasSuper());
      if (hasSuper()) {
        result = result && getSuper()
            .equals(other.getSuper());
      }
      result = result && (hasTschchartinfodefaultbackgroundfill() == other.hasTschchartinfodefaultbackgroundfill());
      if (hasTschchartinfodefaultbackgroundfill()) {
        result = result && getTschchartinfodefaultbackgroundfill()
            .equals(other.getTschchartinfodefaultbackgroundfill());
      }
      result = result && (hasTschchartinfodefaultbackgroundstroke() == other.hasTschchartinfodefaultbackgroundstroke());
      if (hasTschchartinfodefaultbackgroundstroke()) {
        result = result && getTschchartinfodefaultbackgroundstroke()
            .equals(other.getTschchartinfodefaultbackgroundstroke());
      }
      result = result && (hasTschchartinfodefaultgridbackgroundfill() == other.hasTschchartinfodefaultgridbackgroundfill());
      if (hasTschchartinfodefaultgridbackgroundfill()) {
        result = result && getTschchartinfodefaultgridbackgroundfill()
            .equals(other.getTschchartinfodefaultgridbackgroundfill());
      }
      result = result && (hasTschchartinfodefaultintersetgap() == other.hasTschchartinfodefaultintersetgap());
      if (hasTschchartinfodefaultintersetgap()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartinfodefaultintersetgap())
            == java.lang.Float.floatToIntBits(
                other.getTschchartinfodefaultintersetgap()));
      }
      result = result && (hasTschchartinfodefaultinterbargap() == other.hasTschchartinfodefaultinterbargap());
      if (hasTschchartinfodefaultinterbargap()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartinfodefaultinterbargap())
            == java.lang.Float.floatToIntBits(
                other.getTschchartinfodefaultinterbargap()));
      }
      result = result && (hasTschchartinfodefaultshowborder() == other.hasTschchartinfodefaultshowborder());
      if (hasTschchartinfodefaultshowborder()) {
        result = result && (getTschchartinfodefaultshowborder()
            == other.getTschchartinfodefaultshowborder());
      }
      result = result && (hasTschchartinfodefaultborderstroke() == other.hasTschchartinfodefaultborderstroke());
      if (hasTschchartinfodefaultborderstroke()) {
        result = result && getTschchartinfodefaultborderstroke()
            .equals(other.getTschchartinfodefaultborderstroke());
      }
      result = result && (hasTschchartinfodefaulttitlecolor() == other.hasTschchartinfodefaulttitlecolor());
      if (hasTschchartinfodefaulttitlecolor()) {
        result = result && getTschchartinfodefaulttitlecolor()
            .equals(other.getTschchartinfodefaulttitlecolor());
      }
      result = result && (hasTschchartinfodefaultgridbackgroundopacity() == other.hasTschchartinfodefaultgridbackgroundopacity());
      if (hasTschchartinfodefaultgridbackgroundopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartinfodefaultgridbackgroundopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartinfodefaultgridbackgroundopacity()));
      }
      result = result && (hasTschchartinfodefaultcombinelayers() == other.hasTschchartinfodefaultcombinelayers());
      if (hasTschchartinfodefaultcombinelayers()) {
        result = result && (getTschchartinfodefaultcombinelayers()
            == other.getTschchartinfodefaultcombinelayers());
      }
      result = result && (hasTschchartinfodefaultbordershadow() == other.hasTschchartinfodefaultbordershadow());
      if (hasTschchartinfodefaultbordershadow()) {
        result = result && getTschchartinfodefaultbordershadow()
            .equals(other.getTschchartinfodefaultbordershadow());
      }
      result = result && (hasTschchartinfodefaultborderopacity() == other.hasTschchartinfodefaultborderopacity());
      if (hasTschchartinfodefaultborderopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartinfodefaultborderopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartinfodefaultborderopacity()));
      }
      result = result && (hasTschchartinfodefaulttitleparagraphstyleindex() == other.hasTschchartinfodefaulttitleparagraphstyleindex());
      if (hasTschchartinfodefaulttitleparagraphstyleindex()) {
        result = result && (getTschchartinfodefaulttitleparagraphstyleindex()
            == other.getTschchartinfodefaulttitleparagraphstyleindex());
      }
      result = result && (hasTschchartinfodefaultdeprecatedmasterfontfamily() == other.hasTschchartinfodefaultdeprecatedmasterfontfamily());
      if (hasTschchartinfodefaultdeprecatedmasterfontfamily()) {
        result = result && getTschchartinfodefaultdeprecatedmasterfontfamily()
            .equals(other.getTschchartinfodefaultdeprecatedmasterfontfamily());
      }
      result = result && (hasTschchartinfodefaultdeprecatedmasterfontnamedsize() == other.hasTschchartinfodefaultdeprecatedmasterfontnamedsize());
      if (hasTschchartinfodefaultdeprecatedmasterfontnamedsize()) {
        result = result && (getTschchartinfodefaultdeprecatedmasterfontnamedsize()
            == other.getTschchartinfodefaultdeprecatedmasterfontnamedsize());
      }
      result = result && (hasTschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex() == other.hasTschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex());
      if (hasTschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex()) {
        result = result && (getTschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex()
            == other.getTschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex());
      }
      result = result && (hasTschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex() == other.hasTschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex());
      if (hasTschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex()) {
        result = result && (getTschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex()
            == other.getTschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex());
      }
      result = result && (hasTschchartinfodefaultdeprecatedtrendlineequationshadow() == other.hasTschchartinfodefaultdeprecatedtrendlineequationshadow());
      if (hasTschchartinfodefaultdeprecatedtrendlineequationshadow()) {
        result = result && getTschchartinfodefaultdeprecatedtrendlineequationshadow()
            .equals(other.getTschchartinfodefaultdeprecatedtrendlineequationshadow());
      }
      result = result && (hasTschchartinfodefaultdeprecatedtrendlinersquaredshadow() == other.hasTschchartinfodefaultdeprecatedtrendlinersquaredshadow());
      if (hasTschchartinfodefaultdeprecatedtrendlinersquaredshadow()) {
        result = result && getTschchartinfodefaultdeprecatedtrendlinersquaredshadow()
            .equals(other.getTschchartinfodefaultdeprecatedtrendlinersquaredshadow());
      }
      result = result && (hasTschchartinfodefaultdeprecatedtrendlineequationopacity() == other.hasTschchartinfodefaultdeprecatedtrendlineequationopacity());
      if (hasTschchartinfodefaultdeprecatedtrendlineequationopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartinfodefaultdeprecatedtrendlineequationopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartinfodefaultdeprecatedtrendlineequationopacity()));
      }
      result = result && (hasTschchartinfodefaultdeprecatedtrendlinersquaredopacity() == other.hasTschchartinfodefaultdeprecatedtrendlinersquaredopacity());
      if (hasTschchartinfodefaultdeprecatedtrendlinersquaredopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartinfodefaultdeprecatedtrendlinersquaredopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartinfodefaultdeprecatedtrendlinersquaredopacity()));
      }
      result = result && (hasTschchartinfobardeprecated3Dshadow() == other.hasTschchartinfobardeprecated3Dshadow());
      if (hasTschchartinfobardeprecated3Dshadow()) {
        result = result && getTschchartinfobardeprecated3Dshadow()
            .equals(other.getTschchartinfobardeprecated3Dshadow());
      }
      result = result && (hasTschchartinfocolumndeprecated3Dshadow() == other.hasTschchartinfocolumndeprecated3Dshadow());
      if (hasTschchartinfocolumndeprecated3Dshadow()) {
        result = result && getTschchartinfocolumndeprecated3Dshadow()
            .equals(other.getTschchartinfocolumndeprecated3Dshadow());
      }
      result = result && (hasTschchartinfolinedeprecated3Dshadow() == other.hasTschchartinfolinedeprecated3Dshadow());
      if (hasTschchartinfolinedeprecated3Dshadow()) {
        result = result && getTschchartinfolinedeprecated3Dshadow()
            .equals(other.getTschchartinfolinedeprecated3Dshadow());
      }
      result = result && (hasTschchartinfoareadeprecated3Dshadow() == other.hasTschchartinfoareadeprecated3Dshadow());
      if (hasTschchartinfoareadeprecated3Dshadow()) {
        result = result && getTschchartinfoareadeprecated3Dshadow()
            .equals(other.getTschchartinfoareadeprecated3Dshadow());
      }
      result = result && (hasTschchartinfopiedeprecated3Dshadow() == other.hasTschchartinfopiedeprecated3Dshadow());
      if (hasTschchartinfopiedeprecated3Dshadow()) {
        result = result && getTschchartinfopiedeprecated3Dshadow()
            .equals(other.getTschchartinfopiedeprecated3Dshadow());
      }
      result = result && (hasTschchartinfodefault3Dlightingpackage() == other.hasTschchartinfodefault3Dlightingpackage());
      if (hasTschchartinfodefault3Dlightingpackage()) {
        result = result && getTschchartinfodefault3Dlightingpackage()
            .equals(other.getTschchartinfodefault3Dlightingpackage());
      }
      result = result && (hasTschchartinfocolumn3Dlightingpackage() == other.hasTschchartinfocolumn3Dlightingpackage());
      if (hasTschchartinfocolumn3Dlightingpackage()) {
        result = result && getTschchartinfocolumn3Dlightingpackage()
            .equals(other.getTschchartinfocolumn3Dlightingpackage());
      }
      result = result && (hasTschchartinfobar3Dlightingpackage() == other.hasTschchartinfobar3Dlightingpackage());
      if (hasTschchartinfobar3Dlightingpackage()) {
        result = result && getTschchartinfobar3Dlightingpackage()
            .equals(other.getTschchartinfobar3Dlightingpackage());
      }
      result = result && (hasTschchartinfoline3Dlightingpackage() == other.hasTschchartinfoline3Dlightingpackage());
      if (hasTschchartinfoline3Dlightingpackage()) {
        result = result && getTschchartinfoline3Dlightingpackage()
            .equals(other.getTschchartinfoline3Dlightingpackage());
      }
      result = result && (hasTschchartinfoarea3Dlightingpackage() == other.hasTschchartinfoarea3Dlightingpackage());
      if (hasTschchartinfoarea3Dlightingpackage()) {
        result = result && getTschchartinfoarea3Dlightingpackage()
            .equals(other.getTschchartinfoarea3Dlightingpackage());
      }
      result = result && (hasTschchartinfopie3Dlightingpackage() == other.hasTschchartinfopie3Dlightingpackage());
      if (hasTschchartinfopie3Dlightingpackage()) {
        result = result && getTschchartinfopie3Dlightingpackage()
            .equals(other.getTschchartinfopie3Dlightingpackage());
      }
      result = result && (hasTschchartinfodefaultdeprecated3Dbeveledges() == other.hasTschchartinfodefaultdeprecated3Dbeveledges());
      if (hasTschchartinfodefaultdeprecated3Dbeveledges()) {
        result = result && (getTschchartinfodefaultdeprecated3Dbeveledges()
            == other.getTschchartinfodefaultdeprecated3Dbeveledges());
      }
      result = result && (hasTschchartinfopiedeprecated3Dbeveledges() == other.hasTschchartinfopiedeprecated3Dbeveledges());
      if (hasTschchartinfopiedeprecated3Dbeveledges()) {
        result = result && (getTschchartinfopiedeprecated3Dbeveledges()
            == other.getTschchartinfopiedeprecated3Dbeveledges());
      }
      result = result && (hasTschchartinfobardeprecated3Dbeveledges() == other.hasTschchartinfobardeprecated3Dbeveledges());
      if (hasTschchartinfobardeprecated3Dbeveledges()) {
        result = result && (getTschchartinfobardeprecated3Dbeveledges()
            == other.getTschchartinfobardeprecated3Dbeveledges());
      }
      result = result && (hasTschchartinfocolumndeprecated3Dbeveledges() == other.hasTschchartinfocolumndeprecated3Dbeveledges());
      if (hasTschchartinfocolumndeprecated3Dbeveledges()) {
        result = result && (getTschchartinfocolumndeprecated3Dbeveledges()
            == other.getTschchartinfocolumndeprecated3Dbeveledges());
      }
      result = result && (hasTschchartinfodefaultdeprecated3Dbarshape() == other.hasTschchartinfodefaultdeprecated3Dbarshape());
      if (hasTschchartinfodefaultdeprecated3Dbarshape()) {
        result = result && (getTschchartinfodefaultdeprecated3Dbarshape()
            == other.getTschchartinfodefaultdeprecated3Dbarshape());
      }
      result = result && (hasTschchartinfodefault3Dchartopacity() == other.hasTschchartinfodefault3Dchartopacity());
      if (hasTschchartinfodefault3Dchartopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartinfodefault3Dchartopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartinfodefault3Dchartopacity()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSuper()) {
        hash = (37 * hash) + SUPER_FIELD_NUMBER;
        hash = (53 * hash) + getSuper().hashCode();
      }
      if (hasTschchartinfodefaultbackgroundfill()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTBACKGROUNDFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaultbackgroundfill().hashCode();
      }
      if (hasTschchartinfodefaultbackgroundstroke()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTBACKGROUNDSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaultbackgroundstroke().hashCode();
      }
      if (hasTschchartinfodefaultgridbackgroundfill()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTGRIDBACKGROUNDFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaultgridbackgroundfill().hashCode();
      }
      if (hasTschchartinfodefaultintersetgap()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTINTERSETGAP_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartinfodefaultintersetgap());
      }
      if (hasTschchartinfodefaultinterbargap()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTINTERBARGAP_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartinfodefaultinterbargap());
      }
      if (hasTschchartinfodefaultshowborder()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTSHOWBORDER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartinfodefaultshowborder());
      }
      if (hasTschchartinfodefaultborderstroke()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTBORDERSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaultborderstroke().hashCode();
      }
      if (hasTschchartinfodefaulttitlecolor()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTTITLECOLOR_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaulttitlecolor().hashCode();
      }
      if (hasTschchartinfodefaultgridbackgroundopacity()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTGRIDBACKGROUNDOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartinfodefaultgridbackgroundopacity());
      }
      if (hasTschchartinfodefaultcombinelayers()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTCOMBINELAYERS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartinfodefaultcombinelayers());
      }
      if (hasTschchartinfodefaultbordershadow()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTBORDERSHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaultbordershadow().hashCode();
      }
      if (hasTschchartinfodefaultborderopacity()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTBORDEROPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartinfodefaultborderopacity());
      }
      if (hasTschchartinfodefaulttitleparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTTITLEPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaulttitleparagraphstyleindex();
      }
      if (hasTschchartinfodefaultdeprecatedmasterfontfamily()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTDEPRECATEDMASTERFONTFAMILY_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaultdeprecatedmasterfontfamily().hashCode();
      }
      if (hasTschchartinfodefaultdeprecatedmasterfontnamedsize()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTDEPRECATEDMASTERFONTNAMEDSIZE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaultdeprecatedmasterfontnamedsize();
      }
      if (hasTschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTDEPRECATEDTRENDLINEEQUATIONPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex();
      }
      if (hasTschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTDEPRECATEDTRENDLINERSQUAREDPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex();
      }
      if (hasTschchartinfodefaultdeprecatedtrendlineequationshadow()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTDEPRECATEDTRENDLINEEQUATIONSHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaultdeprecatedtrendlineequationshadow().hashCode();
      }
      if (hasTschchartinfodefaultdeprecatedtrendlinersquaredshadow()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTDEPRECATEDTRENDLINERSQUAREDSHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaultdeprecatedtrendlinersquaredshadow().hashCode();
      }
      if (hasTschchartinfodefaultdeprecatedtrendlineequationopacity()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTDEPRECATEDTRENDLINEEQUATIONOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartinfodefaultdeprecatedtrendlineequationopacity());
      }
      if (hasTschchartinfodefaultdeprecatedtrendlinersquaredopacity()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTDEPRECATEDTRENDLINERSQUAREDOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartinfodefaultdeprecatedtrendlinersquaredopacity());
      }
      if (hasTschchartinfobardeprecated3Dshadow()) {
        hash = (37 * hash) + TSCHCHARTINFOBARDEPRECATED3DSHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfobardeprecated3Dshadow().hashCode();
      }
      if (hasTschchartinfocolumndeprecated3Dshadow()) {
        hash = (37 * hash) + TSCHCHARTINFOCOLUMNDEPRECATED3DSHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfocolumndeprecated3Dshadow().hashCode();
      }
      if (hasTschchartinfolinedeprecated3Dshadow()) {
        hash = (37 * hash) + TSCHCHARTINFOLINEDEPRECATED3DSHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfolinedeprecated3Dshadow().hashCode();
      }
      if (hasTschchartinfoareadeprecated3Dshadow()) {
        hash = (37 * hash) + TSCHCHARTINFOAREADEPRECATED3DSHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfoareadeprecated3Dshadow().hashCode();
      }
      if (hasTschchartinfopiedeprecated3Dshadow()) {
        hash = (37 * hash) + TSCHCHARTINFOPIEDEPRECATED3DSHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfopiedeprecated3Dshadow().hashCode();
      }
      if (hasTschchartinfodefault3Dlightingpackage()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULT3DLIGHTINGPACKAGE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefault3Dlightingpackage().hashCode();
      }
      if (hasTschchartinfocolumn3Dlightingpackage()) {
        hash = (37 * hash) + TSCHCHARTINFOCOLUMN3DLIGHTINGPACKAGE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfocolumn3Dlightingpackage().hashCode();
      }
      if (hasTschchartinfobar3Dlightingpackage()) {
        hash = (37 * hash) + TSCHCHARTINFOBAR3DLIGHTINGPACKAGE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfobar3Dlightingpackage().hashCode();
      }
      if (hasTschchartinfoline3Dlightingpackage()) {
        hash = (37 * hash) + TSCHCHARTINFOLINE3DLIGHTINGPACKAGE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfoline3Dlightingpackage().hashCode();
      }
      if (hasTschchartinfoarea3Dlightingpackage()) {
        hash = (37 * hash) + TSCHCHARTINFOAREA3DLIGHTINGPACKAGE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfoarea3Dlightingpackage().hashCode();
      }
      if (hasTschchartinfopie3Dlightingpackage()) {
        hash = (37 * hash) + TSCHCHARTINFOPIE3DLIGHTINGPACKAGE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfopie3Dlightingpackage().hashCode();
      }
      if (hasTschchartinfodefaultdeprecated3Dbeveledges()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTDEPRECATED3DBEVELEDGES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartinfodefaultdeprecated3Dbeveledges());
      }
      if (hasTschchartinfopiedeprecated3Dbeveledges()) {
        hash = (37 * hash) + TSCHCHARTINFOPIEDEPRECATED3DBEVELEDGES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartinfopiedeprecated3Dbeveledges());
      }
      if (hasTschchartinfobardeprecated3Dbeveledges()) {
        hash = (37 * hash) + TSCHCHARTINFOBARDEPRECATED3DBEVELEDGES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartinfobardeprecated3Dbeveledges());
      }
      if (hasTschchartinfocolumndeprecated3Dbeveledges()) {
        hash = (37 * hash) + TSCHCHARTINFOCOLUMNDEPRECATED3DBEVELEDGES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartinfocolumndeprecated3Dbeveledges());
      }
      if (hasTschchartinfodefaultdeprecated3Dbarshape()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTDEPRECATED3DBARSHAPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaultdeprecated3Dbarshape();
      }
      if (hasTschchartinfodefault3Dchartopacity()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULT3DCHARTOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartinfodefault3Dchartopacity());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TSCH.PreUFF.ChartStyleArchive}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TSCH.PreUFF.ChartStyleArchive)
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchiveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartStyleArchive_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartStyleArchive_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive.Builder.class);
      }

      // Construct using TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSuperFieldBuilder();
          getTschchartinfodefaultbackgroundfillFieldBuilder();
          getTschchartinfodefaultbackgroundstrokeFieldBuilder();
          getTschchartinfodefaultgridbackgroundfillFieldBuilder();
          getTschchartinfodefaultborderstrokeFieldBuilder();
          getTschchartinfodefaulttitlecolorFieldBuilder();
          getTschchartinfodefaultbordershadowFieldBuilder();
          getTschchartinfodefaultdeprecatedtrendlineequationshadowFieldBuilder();
          getTschchartinfodefaultdeprecatedtrendlinersquaredshadowFieldBuilder();
          getTschchartinfobardeprecated3DshadowFieldBuilder();
          getTschchartinfocolumndeprecated3DshadowFieldBuilder();
          getTschchartinfolinedeprecated3DshadowFieldBuilder();
          getTschchartinfoareadeprecated3DshadowFieldBuilder();
          getTschchartinfopiedeprecated3DshadowFieldBuilder();
          getTschchartinfodefault3DlightingpackageFieldBuilder();
          getTschchartinfocolumn3DlightingpackageFieldBuilder();
          getTschchartinfobar3DlightingpackageFieldBuilder();
          getTschchartinfoline3DlightingpackageFieldBuilder();
          getTschchartinfoarea3DlightingpackageFieldBuilder();
          getTschchartinfopie3DlightingpackageFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (superBuilder_ == null) {
          super_ = null;
        } else {
          superBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (tschchartinfodefaultbackgroundfillBuilder_ == null) {
          tschchartinfodefaultbackgroundfill_ = null;
        } else {
          tschchartinfodefaultbackgroundfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (tschchartinfodefaultbackgroundstrokeBuilder_ == null) {
          tschchartinfodefaultbackgroundstroke_ = null;
        } else {
          tschchartinfodefaultbackgroundstrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (tschchartinfodefaultgridbackgroundfillBuilder_ == null) {
          tschchartinfodefaultgridbackgroundfill_ = null;
        } else {
          tschchartinfodefaultgridbackgroundfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        tschchartinfodefaultintersetgap_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        tschchartinfodefaultinterbargap_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        tschchartinfodefaultshowborder_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (tschchartinfodefaultborderstrokeBuilder_ == null) {
          tschchartinfodefaultborderstroke_ = null;
        } else {
          tschchartinfodefaultborderstrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (tschchartinfodefaulttitlecolorBuilder_ == null) {
          tschchartinfodefaulttitlecolor_ = null;
        } else {
          tschchartinfodefaulttitlecolorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        tschchartinfodefaultgridbackgroundopacity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        tschchartinfodefaultcombinelayers_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        if (tschchartinfodefaultbordershadowBuilder_ == null) {
          tschchartinfodefaultbordershadow_ = null;
        } else {
          tschchartinfodefaultbordershadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        tschchartinfodefaultborderopacity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00001000);
        tschchartinfodefaulttitleparagraphstyleindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        tschchartinfodefaultdeprecatedmasterfontfamily_ = "";
        bitField0_ = (bitField0_ & ~0x00004000);
        tschchartinfodefaultdeprecatedmasterfontnamedsize_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        if (tschchartinfodefaultdeprecatedtrendlineequationshadowBuilder_ == null) {
          tschchartinfodefaultdeprecatedtrendlineequationshadow_ = null;
        } else {
          tschchartinfodefaultdeprecatedtrendlineequationshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        if (tschchartinfodefaultdeprecatedtrendlinersquaredshadowBuilder_ == null) {
          tschchartinfodefaultdeprecatedtrendlinersquaredshadow_ = null;
        } else {
          tschchartinfodefaultdeprecatedtrendlinersquaredshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        tschchartinfodefaultdeprecatedtrendlineequationopacity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00100000);
        tschchartinfodefaultdeprecatedtrendlinersquaredopacity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00200000);
        if (tschchartinfobardeprecated3DshadowBuilder_ == null) {
          tschchartinfobardeprecated3Dshadow_ = null;
        } else {
          tschchartinfobardeprecated3DshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00400000);
        if (tschchartinfocolumndeprecated3DshadowBuilder_ == null) {
          tschchartinfocolumndeprecated3Dshadow_ = null;
        } else {
          tschchartinfocolumndeprecated3DshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00800000);
        if (tschchartinfolinedeprecated3DshadowBuilder_ == null) {
          tschchartinfolinedeprecated3Dshadow_ = null;
        } else {
          tschchartinfolinedeprecated3DshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x01000000);
        if (tschchartinfoareadeprecated3DshadowBuilder_ == null) {
          tschchartinfoareadeprecated3Dshadow_ = null;
        } else {
          tschchartinfoareadeprecated3DshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x02000000);
        if (tschchartinfopiedeprecated3DshadowBuilder_ == null) {
          tschchartinfopiedeprecated3Dshadow_ = null;
        } else {
          tschchartinfopiedeprecated3DshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x04000000);
        if (tschchartinfodefault3DlightingpackageBuilder_ == null) {
          tschchartinfodefault3Dlightingpackage_ = null;
        } else {
          tschchartinfodefault3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x08000000);
        if (tschchartinfocolumn3DlightingpackageBuilder_ == null) {
          tschchartinfocolumn3Dlightingpackage_ = null;
        } else {
          tschchartinfocolumn3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x10000000);
        if (tschchartinfobar3DlightingpackageBuilder_ == null) {
          tschchartinfobar3Dlightingpackage_ = null;
        } else {
          tschchartinfobar3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x20000000);
        if (tschchartinfoline3DlightingpackageBuilder_ == null) {
          tschchartinfoline3Dlightingpackage_ = null;
        } else {
          tschchartinfoline3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x40000000);
        if (tschchartinfoarea3DlightingpackageBuilder_ == null) {
          tschchartinfoarea3Dlightingpackage_ = null;
        } else {
          tschchartinfoarea3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x80000000);
        if (tschchartinfopie3DlightingpackageBuilder_ == null) {
          tschchartinfopie3Dlightingpackage_ = null;
        } else {
          tschchartinfopie3DlightingpackageBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000001);
        tschchartinfodefaultdeprecated3Dbeveledges_ = false;
        bitField1_ = (bitField1_ & ~0x00000002);
        tschchartinfopiedeprecated3Dbeveledges_ = false;
        bitField1_ = (bitField1_ & ~0x00000004);
        tschchartinfobardeprecated3Dbeveledges_ = false;
        bitField1_ = (bitField1_ & ~0x00000008);
        tschchartinfocolumndeprecated3Dbeveledges_ = false;
        bitField1_ = (bitField1_ & ~0x00000010);
        tschchartinfodefaultdeprecated3Dbarshape_ = 0;
        bitField1_ = (bitField1_ & ~0x00000020);
        tschchartinfodefault3Dchartopacity_ = 0F;
        bitField1_ = (bitField1_ & ~0x00000040);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartStyleArchive_descriptor;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive getDefaultInstanceForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive.getDefaultInstance();
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive build() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive buildPartial() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive result = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (superBuilder_ == null) {
          result.super_ = super_;
        } else {
          result.super_ = superBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (tschchartinfodefaultbackgroundfillBuilder_ == null) {
          result.tschchartinfodefaultbackgroundfill_ = tschchartinfodefaultbackgroundfill_;
        } else {
          result.tschchartinfodefaultbackgroundfill_ = tschchartinfodefaultbackgroundfillBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (tschchartinfodefaultbackgroundstrokeBuilder_ == null) {
          result.tschchartinfodefaultbackgroundstroke_ = tschchartinfodefaultbackgroundstroke_;
        } else {
          result.tschchartinfodefaultbackgroundstroke_ = tschchartinfodefaultbackgroundstrokeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (tschchartinfodefaultgridbackgroundfillBuilder_ == null) {
          result.tschchartinfodefaultgridbackgroundfill_ = tschchartinfodefaultgridbackgroundfill_;
        } else {
          result.tschchartinfodefaultgridbackgroundfill_ = tschchartinfodefaultgridbackgroundfillBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.tschchartinfodefaultintersetgap_ = tschchartinfodefaultintersetgap_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.tschchartinfodefaultinterbargap_ = tschchartinfodefaultinterbargap_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.tschchartinfodefaultshowborder_ = tschchartinfodefaultshowborder_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (tschchartinfodefaultborderstrokeBuilder_ == null) {
          result.tschchartinfodefaultborderstroke_ = tschchartinfodefaultborderstroke_;
        } else {
          result.tschchartinfodefaultborderstroke_ = tschchartinfodefaultborderstrokeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (tschchartinfodefaulttitlecolorBuilder_ == null) {
          result.tschchartinfodefaulttitlecolor_ = tschchartinfodefaulttitlecolor_;
        } else {
          result.tschchartinfodefaulttitlecolor_ = tschchartinfodefaulttitlecolorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.tschchartinfodefaultgridbackgroundopacity_ = tschchartinfodefaultgridbackgroundopacity_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.tschchartinfodefaultcombinelayers_ = tschchartinfodefaultcombinelayers_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        if (tschchartinfodefaultbordershadowBuilder_ == null) {
          result.tschchartinfodefaultbordershadow_ = tschchartinfodefaultbordershadow_;
        } else {
          result.tschchartinfodefaultbordershadow_ = tschchartinfodefaultbordershadowBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.tschchartinfodefaultborderopacity_ = tschchartinfodefaultborderopacity_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.tschchartinfodefaulttitleparagraphstyleindex_ = tschchartinfodefaulttitleparagraphstyleindex_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.tschchartinfodefaultdeprecatedmasterfontfamily_ = tschchartinfodefaultdeprecatedmasterfontfamily_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.tschchartinfodefaultdeprecatedmasterfontnamedsize_ = tschchartinfodefaultdeprecatedmasterfontnamedsize_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex_ = tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex_ = tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        if (tschchartinfodefaultdeprecatedtrendlineequationshadowBuilder_ == null) {
          result.tschchartinfodefaultdeprecatedtrendlineequationshadow_ = tschchartinfodefaultdeprecatedtrendlineequationshadow_;
        } else {
          result.tschchartinfodefaultdeprecatedtrendlineequationshadow_ = tschchartinfodefaultdeprecatedtrendlineequationshadowBuilder_.build();
        }
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        if (tschchartinfodefaultdeprecatedtrendlinersquaredshadowBuilder_ == null) {
          result.tschchartinfodefaultdeprecatedtrendlinersquaredshadow_ = tschchartinfodefaultdeprecatedtrendlinersquaredshadow_;
        } else {
          result.tschchartinfodefaultdeprecatedtrendlinersquaredshadow_ = tschchartinfodefaultdeprecatedtrendlinersquaredshadowBuilder_.build();
        }
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.tschchartinfodefaultdeprecatedtrendlineequationopacity_ = tschchartinfodefaultdeprecatedtrendlineequationopacity_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.tschchartinfodefaultdeprecatedtrendlinersquaredopacity_ = tschchartinfodefaultdeprecatedtrendlinersquaredopacity_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        if (tschchartinfobardeprecated3DshadowBuilder_ == null) {
          result.tschchartinfobardeprecated3Dshadow_ = tschchartinfobardeprecated3Dshadow_;
        } else {
          result.tschchartinfobardeprecated3Dshadow_ = tschchartinfobardeprecated3DshadowBuilder_.build();
        }
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        if (tschchartinfocolumndeprecated3DshadowBuilder_ == null) {
          result.tschchartinfocolumndeprecated3Dshadow_ = tschchartinfocolumndeprecated3Dshadow_;
        } else {
          result.tschchartinfocolumndeprecated3Dshadow_ = tschchartinfocolumndeprecated3DshadowBuilder_.build();
        }
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        if (tschchartinfolinedeprecated3DshadowBuilder_ == null) {
          result.tschchartinfolinedeprecated3Dshadow_ = tschchartinfolinedeprecated3Dshadow_;
        } else {
          result.tschchartinfolinedeprecated3Dshadow_ = tschchartinfolinedeprecated3DshadowBuilder_.build();
        }
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        if (tschchartinfoareadeprecated3DshadowBuilder_ == null) {
          result.tschchartinfoareadeprecated3Dshadow_ = tschchartinfoareadeprecated3Dshadow_;
        } else {
          result.tschchartinfoareadeprecated3Dshadow_ = tschchartinfoareadeprecated3DshadowBuilder_.build();
        }
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        if (tschchartinfopiedeprecated3DshadowBuilder_ == null) {
          result.tschchartinfopiedeprecated3Dshadow_ = tschchartinfopiedeprecated3Dshadow_;
        } else {
          result.tschchartinfopiedeprecated3Dshadow_ = tschchartinfopiedeprecated3DshadowBuilder_.build();
        }
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        if (tschchartinfodefault3DlightingpackageBuilder_ == null) {
          result.tschchartinfodefault3Dlightingpackage_ = tschchartinfodefault3Dlightingpackage_;
        } else {
          result.tschchartinfodefault3Dlightingpackage_ = tschchartinfodefault3DlightingpackageBuilder_.build();
        }
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        if (tschchartinfocolumn3DlightingpackageBuilder_ == null) {
          result.tschchartinfocolumn3Dlightingpackage_ = tschchartinfocolumn3Dlightingpackage_;
        } else {
          result.tschchartinfocolumn3Dlightingpackage_ = tschchartinfocolumn3DlightingpackageBuilder_.build();
        }
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        if (tschchartinfobar3DlightingpackageBuilder_ == null) {
          result.tschchartinfobar3Dlightingpackage_ = tschchartinfobar3Dlightingpackage_;
        } else {
          result.tschchartinfobar3Dlightingpackage_ = tschchartinfobar3DlightingpackageBuilder_.build();
        }
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        if (tschchartinfoline3DlightingpackageBuilder_ == null) {
          result.tschchartinfoline3Dlightingpackage_ = tschchartinfoline3Dlightingpackage_;
        } else {
          result.tschchartinfoline3Dlightingpackage_ = tschchartinfoline3DlightingpackageBuilder_.build();
        }
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        if (tschchartinfoarea3DlightingpackageBuilder_ == null) {
          result.tschchartinfoarea3Dlightingpackage_ = tschchartinfoarea3Dlightingpackage_;
        } else {
          result.tschchartinfoarea3Dlightingpackage_ = tschchartinfoarea3DlightingpackageBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        if (tschchartinfopie3DlightingpackageBuilder_ == null) {
          result.tschchartinfopie3Dlightingpackage_ = tschchartinfopie3Dlightingpackage_;
        } else {
          result.tschchartinfopie3Dlightingpackage_ = tschchartinfopie3DlightingpackageBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000002;
        }
        result.tschchartinfodefaultdeprecated3Dbeveledges_ = tschchartinfodefaultdeprecated3Dbeveledges_;
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000004;
        }
        result.tschchartinfopiedeprecated3Dbeveledges_ = tschchartinfopiedeprecated3Dbeveledges_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000008;
        }
        result.tschchartinfobardeprecated3Dbeveledges_ = tschchartinfobardeprecated3Dbeveledges_;
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000010;
        }
        result.tschchartinfocolumndeprecated3Dbeveledges_ = tschchartinfocolumndeprecated3Dbeveledges_;
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000020;
        }
        result.tschchartinfodefaultdeprecated3Dbarshape_ = tschchartinfodefaultdeprecated3Dbarshape_;
        if (((from_bitField1_ & 0x00000040) == 0x00000040)) {
          to_bitField1_ |= 0x00000040;
        }
        result.tschchartinfodefault3Dchartopacity_ = tschchartinfodefault3Dchartopacity_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive) {
          return mergeFrom((org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive other) {
        if (other == org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive.getDefaultInstance()) return this;
        if (other.hasSuper()) {
          mergeSuper(other.getSuper());
        }
        if (other.hasTschchartinfodefaultbackgroundfill()) {
          mergeTschchartinfodefaultbackgroundfill(other.getTschchartinfodefaultbackgroundfill());
        }
        if (other.hasTschchartinfodefaultbackgroundstroke()) {
          mergeTschchartinfodefaultbackgroundstroke(other.getTschchartinfodefaultbackgroundstroke());
        }
        if (other.hasTschchartinfodefaultgridbackgroundfill()) {
          mergeTschchartinfodefaultgridbackgroundfill(other.getTschchartinfodefaultgridbackgroundfill());
        }
        if (other.hasTschchartinfodefaultintersetgap()) {
          setTschchartinfodefaultintersetgap(other.getTschchartinfodefaultintersetgap());
        }
        if (other.hasTschchartinfodefaultinterbargap()) {
          setTschchartinfodefaultinterbargap(other.getTschchartinfodefaultinterbargap());
        }
        if (other.hasTschchartinfodefaultshowborder()) {
          setTschchartinfodefaultshowborder(other.getTschchartinfodefaultshowborder());
        }
        if (other.hasTschchartinfodefaultborderstroke()) {
          mergeTschchartinfodefaultborderstroke(other.getTschchartinfodefaultborderstroke());
        }
        if (other.hasTschchartinfodefaulttitlecolor()) {
          mergeTschchartinfodefaulttitlecolor(other.getTschchartinfodefaulttitlecolor());
        }
        if (other.hasTschchartinfodefaultgridbackgroundopacity()) {
          setTschchartinfodefaultgridbackgroundopacity(other.getTschchartinfodefaultgridbackgroundopacity());
        }
        if (other.hasTschchartinfodefaultcombinelayers()) {
          setTschchartinfodefaultcombinelayers(other.getTschchartinfodefaultcombinelayers());
        }
        if (other.hasTschchartinfodefaultbordershadow()) {
          mergeTschchartinfodefaultbordershadow(other.getTschchartinfodefaultbordershadow());
        }
        if (other.hasTschchartinfodefaultborderopacity()) {
          setTschchartinfodefaultborderopacity(other.getTschchartinfodefaultborderopacity());
        }
        if (other.hasTschchartinfodefaulttitleparagraphstyleindex()) {
          setTschchartinfodefaulttitleparagraphstyleindex(other.getTschchartinfodefaulttitleparagraphstyleindex());
        }
        if (other.hasTschchartinfodefaultdeprecatedmasterfontfamily()) {
          bitField0_ |= 0x00004000;
          tschchartinfodefaultdeprecatedmasterfontfamily_ = other.tschchartinfodefaultdeprecatedmasterfontfamily_;
          onChanged();
        }
        if (other.hasTschchartinfodefaultdeprecatedmasterfontnamedsize()) {
          setTschchartinfodefaultdeprecatedmasterfontnamedsize(other.getTschchartinfodefaultdeprecatedmasterfontnamedsize());
        }
        if (other.hasTschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex()) {
          setTschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex(other.getTschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex());
        }
        if (other.hasTschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex()) {
          setTschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex(other.getTschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex());
        }
        if (other.hasTschchartinfodefaultdeprecatedtrendlineequationshadow()) {
          mergeTschchartinfodefaultdeprecatedtrendlineequationshadow(other.getTschchartinfodefaultdeprecatedtrendlineequationshadow());
        }
        if (other.hasTschchartinfodefaultdeprecatedtrendlinersquaredshadow()) {
          mergeTschchartinfodefaultdeprecatedtrendlinersquaredshadow(other.getTschchartinfodefaultdeprecatedtrendlinersquaredshadow());
        }
        if (other.hasTschchartinfodefaultdeprecatedtrendlineequationopacity()) {
          setTschchartinfodefaultdeprecatedtrendlineequationopacity(other.getTschchartinfodefaultdeprecatedtrendlineequationopacity());
        }
        if (other.hasTschchartinfodefaultdeprecatedtrendlinersquaredopacity()) {
          setTschchartinfodefaultdeprecatedtrendlinersquaredopacity(other.getTschchartinfodefaultdeprecatedtrendlinersquaredopacity());
        }
        if (other.hasTschchartinfobardeprecated3Dshadow()) {
          mergeTschchartinfobardeprecated3Dshadow(other.getTschchartinfobardeprecated3Dshadow());
        }
        if (other.hasTschchartinfocolumndeprecated3Dshadow()) {
          mergeTschchartinfocolumndeprecated3Dshadow(other.getTschchartinfocolumndeprecated3Dshadow());
        }
        if (other.hasTschchartinfolinedeprecated3Dshadow()) {
          mergeTschchartinfolinedeprecated3Dshadow(other.getTschchartinfolinedeprecated3Dshadow());
        }
        if (other.hasTschchartinfoareadeprecated3Dshadow()) {
          mergeTschchartinfoareadeprecated3Dshadow(other.getTschchartinfoareadeprecated3Dshadow());
        }
        if (other.hasTschchartinfopiedeprecated3Dshadow()) {
          mergeTschchartinfopiedeprecated3Dshadow(other.getTschchartinfopiedeprecated3Dshadow());
        }
        if (other.hasTschchartinfodefault3Dlightingpackage()) {
          mergeTschchartinfodefault3Dlightingpackage(other.getTschchartinfodefault3Dlightingpackage());
        }
        if (other.hasTschchartinfocolumn3Dlightingpackage()) {
          mergeTschchartinfocolumn3Dlightingpackage(other.getTschchartinfocolumn3Dlightingpackage());
        }
        if (other.hasTschchartinfobar3Dlightingpackage()) {
          mergeTschchartinfobar3Dlightingpackage(other.getTschchartinfobar3Dlightingpackage());
        }
        if (other.hasTschchartinfoline3Dlightingpackage()) {
          mergeTschchartinfoline3Dlightingpackage(other.getTschchartinfoline3Dlightingpackage());
        }
        if (other.hasTschchartinfoarea3Dlightingpackage()) {
          mergeTschchartinfoarea3Dlightingpackage(other.getTschchartinfoarea3Dlightingpackage());
        }
        if (other.hasTschchartinfopie3Dlightingpackage()) {
          mergeTschchartinfopie3Dlightingpackage(other.getTschchartinfopie3Dlightingpackage());
        }
        if (other.hasTschchartinfodefaultdeprecated3Dbeveledges()) {
          setTschchartinfodefaultdeprecated3Dbeveledges(other.getTschchartinfodefaultdeprecated3Dbeveledges());
        }
        if (other.hasTschchartinfopiedeprecated3Dbeveledges()) {
          setTschchartinfopiedeprecated3Dbeveledges(other.getTschchartinfopiedeprecated3Dbeveledges());
        }
        if (other.hasTschchartinfobardeprecated3Dbeveledges()) {
          setTschchartinfobardeprecated3Dbeveledges(other.getTschchartinfobardeprecated3Dbeveledges());
        }
        if (other.hasTschchartinfocolumndeprecated3Dbeveledges()) {
          setTschchartinfocolumndeprecated3Dbeveledges(other.getTschchartinfocolumndeprecated3Dbeveledges());
        }
        if (other.hasTschchartinfodefaultdeprecated3Dbarshape()) {
          setTschchartinfodefaultdeprecated3Dbarshape(other.getTschchartinfodefaultdeprecated3Dbarshape());
        }
        if (other.hasTschchartinfodefault3Dchartopacity()) {
          setTschchartinfodefault3Dchartopacity(other.getTschchartinfodefault3Dchartopacity());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSuper()) {
          return false;
        }
        if (!getSuper().isInitialized()) {
          return false;
        }
        if (hasTschchartinfodefaultbackgroundfill()) {
          if (!getTschchartinfodefaultbackgroundfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfodefaultbackgroundstroke()) {
          if (!getTschchartinfodefaultbackgroundstroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfodefaultgridbackgroundfill()) {
          if (!getTschchartinfodefaultgridbackgroundfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfodefaultborderstroke()) {
          if (!getTschchartinfodefaultborderstroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfodefaulttitlecolor()) {
          if (!getTschchartinfodefaulttitlecolor().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfodefaultbordershadow()) {
          if (!getTschchartinfodefaultbordershadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfodefaultdeprecatedtrendlineequationshadow()) {
          if (!getTschchartinfodefaultdeprecatedtrendlineequationshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfodefaultdeprecatedtrendlinersquaredshadow()) {
          if (!getTschchartinfodefaultdeprecatedtrendlinersquaredshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfobardeprecated3Dshadow()) {
          if (!getTschchartinfobardeprecated3Dshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfocolumndeprecated3Dshadow()) {
          if (!getTschchartinfocolumndeprecated3Dshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfolinedeprecated3Dshadow()) {
          if (!getTschchartinfolinedeprecated3Dshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfoareadeprecated3Dshadow()) {
          if (!getTschchartinfoareadeprecated3Dshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfopiedeprecated3Dshadow()) {
          if (!getTschchartinfopiedeprecated3Dshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfodefault3Dlightingpackage()) {
          if (!getTschchartinfodefault3Dlightingpackage().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfocolumn3Dlightingpackage()) {
          if (!getTschchartinfocolumn3Dlightingpackage().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfobar3Dlightingpackage()) {
          if (!getTschchartinfobar3Dlightingpackage().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfoline3Dlightingpackage()) {
          if (!getTschchartinfoline3Dlightingpackage().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfoarea3Dlightingpackage()) {
          if (!getTschchartinfoarea3Dlightingpackage().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfopie3Dlightingpackage()) {
          if (!getTschchartinfopie3Dlightingpackage().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      private org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive super_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder> superBuilder_;
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public boolean hasSuper() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive getSuper() {
        if (superBuilder_ == null) {
          return super_ == null ? org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
        } else {
          return superBuilder_.getMessage();
        }
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder setSuper(org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive value) {
        if (superBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          super_ = value;
          onChanged();
        } else {
          superBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder setSuper(
          org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder builderForValue) {
        if (superBuilder_ == null) {
          super_ = builderForValue.build();
          onChanged();
        } else {
          superBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder mergeSuper(org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive value) {
        if (superBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              super_ != null &&
              super_ != org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance()) {
            super_ =
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.newBuilder(super_).mergeFrom(value).buildPartial();
          } else {
            super_ = value;
          }
          onChanged();
        } else {
          superBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder clearSuper() {
        if (superBuilder_ == null) {
          super_ = null;
          onChanged();
        } else {
          superBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder getSuperBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSuperFieldBuilder().getBuilder();
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder getSuperOrBuilder() {
        if (superBuilder_ != null) {
          return superBuilder_.getMessageOrBuilder();
        } else {
          return super_ == null ?
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
        }
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder> 
          getSuperFieldBuilder() {
        if (superBuilder_ == null) {
          superBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder>(
                  getSuper(),
                  getParentForChildren(),
                  isClean());
          super_ = null;
        }
        return superBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartinfodefaultbackgroundfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartinfodefaultbackgroundfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 10;</code>
       */
      public boolean hasTschchartinfodefaultbackgroundfill() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 10;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartinfodefaultbackgroundfill() {
        if (tschchartinfodefaultbackgroundfillBuilder_ == null) {
          return tschchartinfodefaultbackgroundfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartinfodefaultbackgroundfill_;
        } else {
          return tschchartinfodefaultbackgroundfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 10;</code>
       */
      public Builder setTschchartinfodefaultbackgroundfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartinfodefaultbackgroundfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfodefaultbackgroundfill_ = value;
          onChanged();
        } else {
          tschchartinfodefaultbackgroundfillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 10;</code>
       */
      public Builder setTschchartinfodefaultbackgroundfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartinfodefaultbackgroundfillBuilder_ == null) {
          tschchartinfodefaultbackgroundfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfodefaultbackgroundfillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 10;</code>
       */
      public Builder mergeTschchartinfodefaultbackgroundfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartinfodefaultbackgroundfillBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              tschchartinfodefaultbackgroundfill_ != null &&
              tschchartinfodefaultbackgroundfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartinfodefaultbackgroundfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartinfodefaultbackgroundfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfodefaultbackgroundfill_ = value;
          }
          onChanged();
        } else {
          tschchartinfodefaultbackgroundfillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 10;</code>
       */
      public Builder clearTschchartinfodefaultbackgroundfill() {
        if (tschchartinfodefaultbackgroundfillBuilder_ == null) {
          tschchartinfodefaultbackgroundfill_ = null;
          onChanged();
        } else {
          tschchartinfodefaultbackgroundfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 10;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartinfodefaultbackgroundfillBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTschchartinfodefaultbackgroundfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 10;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartinfodefaultbackgroundfillOrBuilder() {
        if (tschchartinfodefaultbackgroundfillBuilder_ != null) {
          return tschchartinfodefaultbackgroundfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfodefaultbackgroundfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartinfodefaultbackgroundfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultbackgroundfill = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartinfodefaultbackgroundfillFieldBuilder() {
        if (tschchartinfodefaultbackgroundfillBuilder_ == null) {
          tschchartinfodefaultbackgroundfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartinfodefaultbackgroundfill(),
                  getParentForChildren(),
                  isClean());
          tschchartinfodefaultbackgroundfill_ = null;
        }
        return tschchartinfodefaultbackgroundfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartinfodefaultbackgroundstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartinfodefaultbackgroundstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 11;</code>
       */
      public boolean hasTschchartinfodefaultbackgroundstroke() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 11;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartinfodefaultbackgroundstroke() {
        if (tschchartinfodefaultbackgroundstrokeBuilder_ == null) {
          return tschchartinfodefaultbackgroundstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartinfodefaultbackgroundstroke_;
        } else {
          return tschchartinfodefaultbackgroundstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 11;</code>
       */
      public Builder setTschchartinfodefaultbackgroundstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartinfodefaultbackgroundstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfodefaultbackgroundstroke_ = value;
          onChanged();
        } else {
          tschchartinfodefaultbackgroundstrokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 11;</code>
       */
      public Builder setTschchartinfodefaultbackgroundstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartinfodefaultbackgroundstrokeBuilder_ == null) {
          tschchartinfodefaultbackgroundstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfodefaultbackgroundstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 11;</code>
       */
      public Builder mergeTschchartinfodefaultbackgroundstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartinfodefaultbackgroundstrokeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              tschchartinfodefaultbackgroundstroke_ != null &&
              tschchartinfodefaultbackgroundstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartinfodefaultbackgroundstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartinfodefaultbackgroundstroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfodefaultbackgroundstroke_ = value;
          }
          onChanged();
        } else {
          tschchartinfodefaultbackgroundstrokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 11;</code>
       */
      public Builder clearTschchartinfodefaultbackgroundstroke() {
        if (tschchartinfodefaultbackgroundstrokeBuilder_ == null) {
          tschchartinfodefaultbackgroundstroke_ = null;
          onChanged();
        } else {
          tschchartinfodefaultbackgroundstrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 11;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartinfodefaultbackgroundstrokeBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getTschchartinfodefaultbackgroundstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 11;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartinfodefaultbackgroundstrokeOrBuilder() {
        if (tschchartinfodefaultbackgroundstrokeBuilder_ != null) {
          return tschchartinfodefaultbackgroundstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfodefaultbackgroundstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartinfodefaultbackgroundstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultbackgroundstroke = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartinfodefaultbackgroundstrokeFieldBuilder() {
        if (tschchartinfodefaultbackgroundstrokeBuilder_ == null) {
          tschchartinfodefaultbackgroundstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartinfodefaultbackgroundstroke(),
                  getParentForChildren(),
                  isClean());
          tschchartinfodefaultbackgroundstroke_ = null;
        }
        return tschchartinfodefaultbackgroundstrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartinfodefaultgridbackgroundfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartinfodefaultgridbackgroundfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 12;</code>
       */
      public boolean hasTschchartinfodefaultgridbackgroundfill() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 12;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartinfodefaultgridbackgroundfill() {
        if (tschchartinfodefaultgridbackgroundfillBuilder_ == null) {
          return tschchartinfodefaultgridbackgroundfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartinfodefaultgridbackgroundfill_;
        } else {
          return tschchartinfodefaultgridbackgroundfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 12;</code>
       */
      public Builder setTschchartinfodefaultgridbackgroundfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartinfodefaultgridbackgroundfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfodefaultgridbackgroundfill_ = value;
          onChanged();
        } else {
          tschchartinfodefaultgridbackgroundfillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 12;</code>
       */
      public Builder setTschchartinfodefaultgridbackgroundfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartinfodefaultgridbackgroundfillBuilder_ == null) {
          tschchartinfodefaultgridbackgroundfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfodefaultgridbackgroundfillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 12;</code>
       */
      public Builder mergeTschchartinfodefaultgridbackgroundfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartinfodefaultgridbackgroundfillBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              tschchartinfodefaultgridbackgroundfill_ != null &&
              tschchartinfodefaultgridbackgroundfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartinfodefaultgridbackgroundfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartinfodefaultgridbackgroundfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfodefaultgridbackgroundfill_ = value;
          }
          onChanged();
        } else {
          tschchartinfodefaultgridbackgroundfillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 12;</code>
       */
      public Builder clearTschchartinfodefaultgridbackgroundfill() {
        if (tschchartinfodefaultgridbackgroundfillBuilder_ == null) {
          tschchartinfodefaultgridbackgroundfill_ = null;
          onChanged();
        } else {
          tschchartinfodefaultgridbackgroundfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 12;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartinfodefaultgridbackgroundfillBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getTschchartinfodefaultgridbackgroundfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 12;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartinfodefaultgridbackgroundfillOrBuilder() {
        if (tschchartinfodefaultgridbackgroundfillBuilder_ != null) {
          return tschchartinfodefaultgridbackgroundfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfodefaultgridbackgroundfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartinfodefaultgridbackgroundfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartinfodefaultgridbackgroundfill = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartinfodefaultgridbackgroundfillFieldBuilder() {
        if (tschchartinfodefaultgridbackgroundfillBuilder_ == null) {
          tschchartinfodefaultgridbackgroundfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartinfodefaultgridbackgroundfill(),
                  getParentForChildren(),
                  isClean());
          tschchartinfodefaultgridbackgroundfill_ = null;
        }
        return tschchartinfodefaultgridbackgroundfillBuilder_;
      }

      private float tschchartinfodefaultintersetgap_ ;
      /**
       * <code>optional float tschchartinfodefaultintersetgap = 13;</code>
       */
      public boolean hasTschchartinfodefaultintersetgap() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float tschchartinfodefaultintersetgap = 13;</code>
       */
      public float getTschchartinfodefaultintersetgap() {
        return tschchartinfodefaultintersetgap_;
      }
      /**
       * <code>optional float tschchartinfodefaultintersetgap = 13;</code>
       */
      public Builder setTschchartinfodefaultintersetgap(float value) {
        bitField0_ |= 0x00000010;
        tschchartinfodefaultintersetgap_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartinfodefaultintersetgap = 13;</code>
       */
      public Builder clearTschchartinfodefaultintersetgap() {
        bitField0_ = (bitField0_ & ~0x00000010);
        tschchartinfodefaultintersetgap_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartinfodefaultinterbargap_ ;
      /**
       * <code>optional float tschchartinfodefaultinterbargap = 14;</code>
       */
      public boolean hasTschchartinfodefaultinterbargap() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float tschchartinfodefaultinterbargap = 14;</code>
       */
      public float getTschchartinfodefaultinterbargap() {
        return tschchartinfodefaultinterbargap_;
      }
      /**
       * <code>optional float tschchartinfodefaultinterbargap = 14;</code>
       */
      public Builder setTschchartinfodefaultinterbargap(float value) {
        bitField0_ |= 0x00000020;
        tschchartinfodefaultinterbargap_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartinfodefaultinterbargap = 14;</code>
       */
      public Builder clearTschchartinfodefaultinterbargap() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tschchartinfodefaultinterbargap_ = 0F;
        onChanged();
        return this;
      }

      private boolean tschchartinfodefaultshowborder_ ;
      /**
       * <code>optional bool tschchartinfodefaultshowborder = 15;</code>
       */
      public boolean hasTschchartinfodefaultshowborder() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool tschchartinfodefaultshowborder = 15;</code>
       */
      public boolean getTschchartinfodefaultshowborder() {
        return tschchartinfodefaultshowborder_;
      }
      /**
       * <code>optional bool tschchartinfodefaultshowborder = 15;</code>
       */
      public Builder setTschchartinfodefaultshowborder(boolean value) {
        bitField0_ |= 0x00000040;
        tschchartinfodefaultshowborder_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartinfodefaultshowborder = 15;</code>
       */
      public Builder clearTschchartinfodefaultshowborder() {
        bitField0_ = (bitField0_ & ~0x00000040);
        tschchartinfodefaultshowborder_ = false;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartinfodefaultborderstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartinfodefaultborderstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 16;</code>
       */
      public boolean hasTschchartinfodefaultborderstroke() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 16;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartinfodefaultborderstroke() {
        if (tschchartinfodefaultborderstrokeBuilder_ == null) {
          return tschchartinfodefaultborderstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartinfodefaultborderstroke_;
        } else {
          return tschchartinfodefaultborderstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 16;</code>
       */
      public Builder setTschchartinfodefaultborderstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartinfodefaultborderstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfodefaultborderstroke_ = value;
          onChanged();
        } else {
          tschchartinfodefaultborderstrokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 16;</code>
       */
      public Builder setTschchartinfodefaultborderstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartinfodefaultborderstrokeBuilder_ == null) {
          tschchartinfodefaultborderstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfodefaultborderstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 16;</code>
       */
      public Builder mergeTschchartinfodefaultborderstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartinfodefaultborderstrokeBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              tschchartinfodefaultborderstroke_ != null &&
              tschchartinfodefaultborderstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartinfodefaultborderstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartinfodefaultborderstroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfodefaultborderstroke_ = value;
          }
          onChanged();
        } else {
          tschchartinfodefaultborderstrokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 16;</code>
       */
      public Builder clearTschchartinfodefaultborderstroke() {
        if (tschchartinfodefaultborderstrokeBuilder_ == null) {
          tschchartinfodefaultborderstroke_ = null;
          onChanged();
        } else {
          tschchartinfodefaultborderstrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 16;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartinfodefaultborderstrokeBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getTschchartinfodefaultborderstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 16;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartinfodefaultborderstrokeOrBuilder() {
        if (tschchartinfodefaultborderstrokeBuilder_ != null) {
          return tschchartinfodefaultborderstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfodefaultborderstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartinfodefaultborderstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartinfodefaultborderstroke = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartinfodefaultborderstrokeFieldBuilder() {
        if (tschchartinfodefaultborderstrokeBuilder_ == null) {
          tschchartinfodefaultborderstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartinfodefaultborderstroke(),
                  getParentForChildren(),
                  isClean());
          tschchartinfodefaultborderstroke_ = null;
        }
        return tschchartinfodefaultborderstrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSP.TSPMessages.Color tschchartinfodefaulttitlecolor_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Color, org.techforumist.keynote.proto.TSP.TSPMessages.Color.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ColorOrBuilder> tschchartinfodefaulttitlecolorBuilder_;
      /**
       * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 18;</code>
       */
      public boolean hasTschchartinfodefaulttitlecolor() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 18;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Color getTschchartinfodefaulttitlecolor() {
        if (tschchartinfodefaulttitlecolorBuilder_ == null) {
          return tschchartinfodefaulttitlecolor_ == null ? org.techforumist.keynote.proto.TSP.TSPMessages.Color.getDefaultInstance() : tschchartinfodefaulttitlecolor_;
        } else {
          return tschchartinfodefaulttitlecolorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 18;</code>
       */
      public Builder setTschchartinfodefaulttitlecolor(org.techforumist.keynote.proto.TSP.TSPMessages.Color value) {
        if (tschchartinfodefaulttitlecolorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfodefaulttitlecolor_ = value;
          onChanged();
        } else {
          tschchartinfodefaulttitlecolorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 18;</code>
       */
      public Builder setTschchartinfodefaulttitlecolor(
          org.techforumist.keynote.proto.TSP.TSPMessages.Color.Builder builderForValue) {
        if (tschchartinfodefaulttitlecolorBuilder_ == null) {
          tschchartinfodefaulttitlecolor_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfodefaulttitlecolorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 18;</code>
       */
      public Builder mergeTschchartinfodefaulttitlecolor(org.techforumist.keynote.proto.TSP.TSPMessages.Color value) {
        if (tschchartinfodefaulttitlecolorBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              tschchartinfodefaulttitlecolor_ != null &&
              tschchartinfodefaulttitlecolor_ != org.techforumist.keynote.proto.TSP.TSPMessages.Color.getDefaultInstance()) {
            tschchartinfodefaulttitlecolor_ =
              org.techforumist.keynote.proto.TSP.TSPMessages.Color.newBuilder(tschchartinfodefaulttitlecolor_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfodefaulttitlecolor_ = value;
          }
          onChanged();
        } else {
          tschchartinfodefaulttitlecolorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 18;</code>
       */
      public Builder clearTschchartinfodefaulttitlecolor() {
        if (tschchartinfodefaulttitlecolorBuilder_ == null) {
          tschchartinfodefaulttitlecolor_ = null;
          onChanged();
        } else {
          tschchartinfodefaulttitlecolorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 18;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.Color.Builder getTschchartinfodefaulttitlecolorBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getTschchartinfodefaulttitlecolorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 18;</code>
       */
      public org.techforumist.keynote.proto.TSP.TSPMessages.ColorOrBuilder getTschchartinfodefaulttitlecolorOrBuilder() {
        if (tschchartinfodefaulttitlecolorBuilder_ != null) {
          return tschchartinfodefaulttitlecolorBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfodefaulttitlecolor_ == null ?
              org.techforumist.keynote.proto.TSP.TSPMessages.Color.getDefaultInstance() : tschchartinfodefaulttitlecolor_;
        }
      }
      /**
       * <code>optional .TSP.Color tschchartinfodefaulttitlecolor = 18;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSP.TSPMessages.Color, org.techforumist.keynote.proto.TSP.TSPMessages.Color.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ColorOrBuilder> 
          getTschchartinfodefaulttitlecolorFieldBuilder() {
        if (tschchartinfodefaulttitlecolorBuilder_ == null) {
          tschchartinfodefaulttitlecolorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSP.TSPMessages.Color, org.techforumist.keynote.proto.TSP.TSPMessages.Color.Builder, org.techforumist.keynote.proto.TSP.TSPMessages.ColorOrBuilder>(
                  getTschchartinfodefaulttitlecolor(),
                  getParentForChildren(),
                  isClean());
          tschchartinfodefaulttitlecolor_ = null;
        }
        return tschchartinfodefaulttitlecolorBuilder_;
      }

      private float tschchartinfodefaultgridbackgroundopacity_ ;
      /**
       * <code>optional float tschchartinfodefaultgridbackgroundopacity = 19;</code>
       */
      public boolean hasTschchartinfodefaultgridbackgroundopacity() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float tschchartinfodefaultgridbackgroundopacity = 19;</code>
       */
      public float getTschchartinfodefaultgridbackgroundopacity() {
        return tschchartinfodefaultgridbackgroundopacity_;
      }
      /**
       * <code>optional float tschchartinfodefaultgridbackgroundopacity = 19;</code>
       */
      public Builder setTschchartinfodefaultgridbackgroundopacity(float value) {
        bitField0_ |= 0x00000200;
        tschchartinfodefaultgridbackgroundopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartinfodefaultgridbackgroundopacity = 19;</code>
       */
      public Builder clearTschchartinfodefaultgridbackgroundopacity() {
        bitField0_ = (bitField0_ & ~0x00000200);
        tschchartinfodefaultgridbackgroundopacity_ = 0F;
        onChanged();
        return this;
      }

      private boolean tschchartinfodefaultcombinelayers_ ;
      /**
       * <code>optional bool tschchartinfodefaultcombinelayers = 20;</code>
       */
      public boolean hasTschchartinfodefaultcombinelayers() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool tschchartinfodefaultcombinelayers = 20;</code>
       */
      public boolean getTschchartinfodefaultcombinelayers() {
        return tschchartinfodefaultcombinelayers_;
      }
      /**
       * <code>optional bool tschchartinfodefaultcombinelayers = 20;</code>
       */
      public Builder setTschchartinfodefaultcombinelayers(boolean value) {
        bitField0_ |= 0x00000400;
        tschchartinfodefaultcombinelayers_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartinfodefaultcombinelayers = 20;</code>
       */
      public Builder clearTschchartinfodefaultcombinelayers() {
        bitField0_ = (bitField0_ & ~0x00000400);
        tschchartinfodefaultcombinelayers_ = false;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartinfodefaultbordershadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartinfodefaultbordershadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 21;</code>
       */
      public boolean hasTschchartinfodefaultbordershadow() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 21;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfodefaultbordershadow() {
        if (tschchartinfodefaultbordershadowBuilder_ == null) {
          return tschchartinfodefaultbordershadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfodefaultbordershadow_;
        } else {
          return tschchartinfodefaultbordershadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 21;</code>
       */
      public Builder setTschchartinfodefaultbordershadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartinfodefaultbordershadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfodefaultbordershadow_ = value;
          onChanged();
        } else {
          tschchartinfodefaultbordershadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 21;</code>
       */
      public Builder setTschchartinfodefaultbordershadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartinfodefaultbordershadowBuilder_ == null) {
          tschchartinfodefaultbordershadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfodefaultbordershadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 21;</code>
       */
      public Builder mergeTschchartinfodefaultbordershadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartinfodefaultbordershadowBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              tschchartinfodefaultbordershadow_ != null &&
              tschchartinfodefaultbordershadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartinfodefaultbordershadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartinfodefaultbordershadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfodefaultbordershadow_ = value;
          }
          onChanged();
        } else {
          tschchartinfodefaultbordershadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 21;</code>
       */
      public Builder clearTschchartinfodefaultbordershadow() {
        if (tschchartinfodefaultbordershadowBuilder_ == null) {
          tschchartinfodefaultbordershadow_ = null;
          onChanged();
        } else {
          tschchartinfodefaultbordershadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 21;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartinfodefaultbordershadowBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getTschchartinfodefaultbordershadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 21;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfodefaultbordershadowOrBuilder() {
        if (tschchartinfodefaultbordershadowBuilder_ != null) {
          return tschchartinfodefaultbordershadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfodefaultbordershadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfodefaultbordershadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultbordershadow = 21;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartinfodefaultbordershadowFieldBuilder() {
        if (tschchartinfodefaultbordershadowBuilder_ == null) {
          tschchartinfodefaultbordershadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartinfodefaultbordershadow(),
                  getParentForChildren(),
                  isClean());
          tschchartinfodefaultbordershadow_ = null;
        }
        return tschchartinfodefaultbordershadowBuilder_;
      }

      private float tschchartinfodefaultborderopacity_ ;
      /**
       * <code>optional float tschchartinfodefaultborderopacity = 22;</code>
       */
      public boolean hasTschchartinfodefaultborderopacity() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional float tschchartinfodefaultborderopacity = 22;</code>
       */
      public float getTschchartinfodefaultborderopacity() {
        return tschchartinfodefaultborderopacity_;
      }
      /**
       * <code>optional float tschchartinfodefaultborderopacity = 22;</code>
       */
      public Builder setTschchartinfodefaultborderopacity(float value) {
        bitField0_ |= 0x00001000;
        tschchartinfodefaultborderopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartinfodefaultborderopacity = 22;</code>
       */
      public Builder clearTschchartinfodefaultborderopacity() {
        bitField0_ = (bitField0_ & ~0x00001000);
        tschchartinfodefaultborderopacity_ = 0F;
        onChanged();
        return this;
      }

      private int tschchartinfodefaulttitleparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartinfodefaulttitleparagraphstyleindex = 23;</code>
       */
      public boolean hasTschchartinfodefaulttitleparagraphstyleindex() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 tschchartinfodefaulttitleparagraphstyleindex = 23;</code>
       */
      public int getTschchartinfodefaulttitleparagraphstyleindex() {
        return tschchartinfodefaulttitleparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartinfodefaulttitleparagraphstyleindex = 23;</code>
       */
      public Builder setTschchartinfodefaulttitleparagraphstyleindex(int value) {
        bitField0_ |= 0x00002000;
        tschchartinfodefaulttitleparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartinfodefaulttitleparagraphstyleindex = 23;</code>
       */
      public Builder clearTschchartinfodefaulttitleparagraphstyleindex() {
        bitField0_ = (bitField0_ & ~0x00002000);
        tschchartinfodefaulttitleparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object tschchartinfodefaultdeprecatedmasterfontfamily_ = "";
      /**
       * <code>optional string tschchartinfodefaultdeprecatedmasterfontfamily = 24;</code>
       */
      public boolean hasTschchartinfodefaultdeprecatedmasterfontfamily() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional string tschchartinfodefaultdeprecatedmasterfontfamily = 24;</code>
       */
      public java.lang.String getTschchartinfodefaultdeprecatedmasterfontfamily() {
        java.lang.Object ref = tschchartinfodefaultdeprecatedmasterfontfamily_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tschchartinfodefaultdeprecatedmasterfontfamily_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string tschchartinfodefaultdeprecatedmasterfontfamily = 24;</code>
       */
      public com.google.protobuf.ByteString
          getTschchartinfodefaultdeprecatedmasterfontfamilyBytes() {
        java.lang.Object ref = tschchartinfodefaultdeprecatedmasterfontfamily_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tschchartinfodefaultdeprecatedmasterfontfamily_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string tschchartinfodefaultdeprecatedmasterfontfamily = 24;</code>
       */
      public Builder setTschchartinfodefaultdeprecatedmasterfontfamily(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        tschchartinfodefaultdeprecatedmasterfontfamily_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string tschchartinfodefaultdeprecatedmasterfontfamily = 24;</code>
       */
      public Builder clearTschchartinfodefaultdeprecatedmasterfontfamily() {
        bitField0_ = (bitField0_ & ~0x00004000);
        tschchartinfodefaultdeprecatedmasterfontfamily_ = getDefaultInstance().getTschchartinfodefaultdeprecatedmasterfontfamily();
        onChanged();
        return this;
      }
      /**
       * <code>optional string tschchartinfodefaultdeprecatedmasterfontfamily = 24;</code>
       */
      public Builder setTschchartinfodefaultdeprecatedmasterfontfamilyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        tschchartinfodefaultdeprecatedmasterfontfamily_ = value;
        onChanged();
        return this;
      }

      private int tschchartinfodefaultdeprecatedmasterfontnamedsize_ ;
      /**
       * <code>optional int32 tschchartinfodefaultdeprecatedmasterfontnamedsize = 25;</code>
       */
      public boolean hasTschchartinfodefaultdeprecatedmasterfontnamedsize() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 tschchartinfodefaultdeprecatedmasterfontnamedsize = 25;</code>
       */
      public int getTschchartinfodefaultdeprecatedmasterfontnamedsize() {
        return tschchartinfodefaultdeprecatedmasterfontnamedsize_;
      }
      /**
       * <code>optional int32 tschchartinfodefaultdeprecatedmasterfontnamedsize = 25;</code>
       */
      public Builder setTschchartinfodefaultdeprecatedmasterfontnamedsize(int value) {
        bitField0_ |= 0x00008000;
        tschchartinfodefaultdeprecatedmasterfontnamedsize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartinfodefaultdeprecatedmasterfontnamedsize = 25;</code>
       */
      public Builder clearTschchartinfodefaultdeprecatedmasterfontnamedsize() {
        bitField0_ = (bitField0_ & ~0x00008000);
        tschchartinfodefaultdeprecatedmasterfontnamedsize_ = 0;
        onChanged();
        return this;
      }

      private int tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex = 30;</code>
       */
      public boolean hasTschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex = 30;</code>
       */
      public int getTschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex() {
        return tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex = 30;</code>
       */
      public Builder setTschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex(int value) {
        bitField0_ |= 0x00010000;
        tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex = 30;</code>
       */
      public Builder clearTschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex() {
        bitField0_ = (bitField0_ & ~0x00010000);
        tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex = 31;</code>
       */
      public boolean hasTschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex = 31;</code>
       */
      public int getTschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex() {
        return tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex = 31;</code>
       */
      public Builder setTschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex(int value) {
        bitField0_ |= 0x00020000;
        tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex = 31;</code>
       */
      public Builder clearTschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex() {
        bitField0_ = (bitField0_ & ~0x00020000);
        tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartinfodefaultdeprecatedtrendlineequationshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartinfodefaultdeprecatedtrendlineequationshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlineequationshadow = 32;</code>
       */
      public boolean hasTschchartinfodefaultdeprecatedtrendlineequationshadow() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlineequationshadow = 32;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfodefaultdeprecatedtrendlineequationshadow() {
        if (tschchartinfodefaultdeprecatedtrendlineequationshadowBuilder_ == null) {
          return tschchartinfodefaultdeprecatedtrendlineequationshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfodefaultdeprecatedtrendlineequationshadow_;
        } else {
          return tschchartinfodefaultdeprecatedtrendlineequationshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlineequationshadow = 32;</code>
       */
      public Builder setTschchartinfodefaultdeprecatedtrendlineequationshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartinfodefaultdeprecatedtrendlineequationshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfodefaultdeprecatedtrendlineequationshadow_ = value;
          onChanged();
        } else {
          tschchartinfodefaultdeprecatedtrendlineequationshadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlineequationshadow = 32;</code>
       */
      public Builder setTschchartinfodefaultdeprecatedtrendlineequationshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartinfodefaultdeprecatedtrendlineequationshadowBuilder_ == null) {
          tschchartinfodefaultdeprecatedtrendlineequationshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfodefaultdeprecatedtrendlineequationshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlineequationshadow = 32;</code>
       */
      public Builder mergeTschchartinfodefaultdeprecatedtrendlineequationshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartinfodefaultdeprecatedtrendlineequationshadowBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000) &&
              tschchartinfodefaultdeprecatedtrendlineequationshadow_ != null &&
              tschchartinfodefaultdeprecatedtrendlineequationshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartinfodefaultdeprecatedtrendlineequationshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartinfodefaultdeprecatedtrendlineequationshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfodefaultdeprecatedtrendlineequationshadow_ = value;
          }
          onChanged();
        } else {
          tschchartinfodefaultdeprecatedtrendlineequationshadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlineequationshadow = 32;</code>
       */
      public Builder clearTschchartinfodefaultdeprecatedtrendlineequationshadow() {
        if (tschchartinfodefaultdeprecatedtrendlineequationshadowBuilder_ == null) {
          tschchartinfodefaultdeprecatedtrendlineequationshadow_ = null;
          onChanged();
        } else {
          tschchartinfodefaultdeprecatedtrendlineequationshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlineequationshadow = 32;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartinfodefaultdeprecatedtrendlineequationshadowBuilder() {
        bitField0_ |= 0x00040000;
        onChanged();
        return getTschchartinfodefaultdeprecatedtrendlineequationshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlineequationshadow = 32;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfodefaultdeprecatedtrendlineequationshadowOrBuilder() {
        if (tschchartinfodefaultdeprecatedtrendlineequationshadowBuilder_ != null) {
          return tschchartinfodefaultdeprecatedtrendlineequationshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfodefaultdeprecatedtrendlineequationshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfodefaultdeprecatedtrendlineequationshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlineequationshadow = 32;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartinfodefaultdeprecatedtrendlineequationshadowFieldBuilder() {
        if (tschchartinfodefaultdeprecatedtrendlineequationshadowBuilder_ == null) {
          tschchartinfodefaultdeprecatedtrendlineequationshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartinfodefaultdeprecatedtrendlineequationshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartinfodefaultdeprecatedtrendlineequationshadow_ = null;
        }
        return tschchartinfodefaultdeprecatedtrendlineequationshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartinfodefaultdeprecatedtrendlinersquaredshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartinfodefaultdeprecatedtrendlinersquaredshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlinersquaredshadow = 33;</code>
       */
      public boolean hasTschchartinfodefaultdeprecatedtrendlinersquaredshadow() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlinersquaredshadow = 33;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfodefaultdeprecatedtrendlinersquaredshadow() {
        if (tschchartinfodefaultdeprecatedtrendlinersquaredshadowBuilder_ == null) {
          return tschchartinfodefaultdeprecatedtrendlinersquaredshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfodefaultdeprecatedtrendlinersquaredshadow_;
        } else {
          return tschchartinfodefaultdeprecatedtrendlinersquaredshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlinersquaredshadow = 33;</code>
       */
      public Builder setTschchartinfodefaultdeprecatedtrendlinersquaredshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartinfodefaultdeprecatedtrendlinersquaredshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfodefaultdeprecatedtrendlinersquaredshadow_ = value;
          onChanged();
        } else {
          tschchartinfodefaultdeprecatedtrendlinersquaredshadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlinersquaredshadow = 33;</code>
       */
      public Builder setTschchartinfodefaultdeprecatedtrendlinersquaredshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartinfodefaultdeprecatedtrendlinersquaredshadowBuilder_ == null) {
          tschchartinfodefaultdeprecatedtrendlinersquaredshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfodefaultdeprecatedtrendlinersquaredshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlinersquaredshadow = 33;</code>
       */
      public Builder mergeTschchartinfodefaultdeprecatedtrendlinersquaredshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartinfodefaultdeprecatedtrendlinersquaredshadowBuilder_ == null) {
          if (((bitField0_ & 0x00080000) == 0x00080000) &&
              tschchartinfodefaultdeprecatedtrendlinersquaredshadow_ != null &&
              tschchartinfodefaultdeprecatedtrendlinersquaredshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartinfodefaultdeprecatedtrendlinersquaredshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartinfodefaultdeprecatedtrendlinersquaredshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfodefaultdeprecatedtrendlinersquaredshadow_ = value;
          }
          onChanged();
        } else {
          tschchartinfodefaultdeprecatedtrendlinersquaredshadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlinersquaredshadow = 33;</code>
       */
      public Builder clearTschchartinfodefaultdeprecatedtrendlinersquaredshadow() {
        if (tschchartinfodefaultdeprecatedtrendlinersquaredshadowBuilder_ == null) {
          tschchartinfodefaultdeprecatedtrendlinersquaredshadow_ = null;
          onChanged();
        } else {
          tschchartinfodefaultdeprecatedtrendlinersquaredshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlinersquaredshadow = 33;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartinfodefaultdeprecatedtrendlinersquaredshadowBuilder() {
        bitField0_ |= 0x00080000;
        onChanged();
        return getTschchartinfodefaultdeprecatedtrendlinersquaredshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlinersquaredshadow = 33;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfodefaultdeprecatedtrendlinersquaredshadowOrBuilder() {
        if (tschchartinfodefaultdeprecatedtrendlinersquaredshadowBuilder_ != null) {
          return tschchartinfodefaultdeprecatedtrendlinersquaredshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfodefaultdeprecatedtrendlinersquaredshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfodefaultdeprecatedtrendlinersquaredshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfodefaultdeprecatedtrendlinersquaredshadow = 33;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartinfodefaultdeprecatedtrendlinersquaredshadowFieldBuilder() {
        if (tschchartinfodefaultdeprecatedtrendlinersquaredshadowBuilder_ == null) {
          tschchartinfodefaultdeprecatedtrendlinersquaredshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartinfodefaultdeprecatedtrendlinersquaredshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartinfodefaultdeprecatedtrendlinersquaredshadow_ = null;
        }
        return tschchartinfodefaultdeprecatedtrendlinersquaredshadowBuilder_;
      }

      private float tschchartinfodefaultdeprecatedtrendlineequationopacity_ ;
      /**
       * <code>optional float tschchartinfodefaultdeprecatedtrendlineequationopacity = 34;</code>
       */
      public boolean hasTschchartinfodefaultdeprecatedtrendlineequationopacity() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional float tschchartinfodefaultdeprecatedtrendlineequationopacity = 34;</code>
       */
      public float getTschchartinfodefaultdeprecatedtrendlineequationopacity() {
        return tschchartinfodefaultdeprecatedtrendlineequationopacity_;
      }
      /**
       * <code>optional float tschchartinfodefaultdeprecatedtrendlineequationopacity = 34;</code>
       */
      public Builder setTschchartinfodefaultdeprecatedtrendlineequationopacity(float value) {
        bitField0_ |= 0x00100000;
        tschchartinfodefaultdeprecatedtrendlineequationopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartinfodefaultdeprecatedtrendlineequationopacity = 34;</code>
       */
      public Builder clearTschchartinfodefaultdeprecatedtrendlineequationopacity() {
        bitField0_ = (bitField0_ & ~0x00100000);
        tschchartinfodefaultdeprecatedtrendlineequationopacity_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartinfodefaultdeprecatedtrendlinersquaredopacity_ ;
      /**
       * <code>optional float tschchartinfodefaultdeprecatedtrendlinersquaredopacity = 35;</code>
       */
      public boolean hasTschchartinfodefaultdeprecatedtrendlinersquaredopacity() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional float tschchartinfodefaultdeprecatedtrendlinersquaredopacity = 35;</code>
       */
      public float getTschchartinfodefaultdeprecatedtrendlinersquaredopacity() {
        return tschchartinfodefaultdeprecatedtrendlinersquaredopacity_;
      }
      /**
       * <code>optional float tschchartinfodefaultdeprecatedtrendlinersquaredopacity = 35;</code>
       */
      public Builder setTschchartinfodefaultdeprecatedtrendlinersquaredopacity(float value) {
        bitField0_ |= 0x00200000;
        tschchartinfodefaultdeprecatedtrendlinersquaredopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartinfodefaultdeprecatedtrendlinersquaredopacity = 35;</code>
       */
      public Builder clearTschchartinfodefaultdeprecatedtrendlinersquaredopacity() {
        bitField0_ = (bitField0_ & ~0x00200000);
        tschchartinfodefaultdeprecatedtrendlinersquaredopacity_ = 0F;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartinfobardeprecated3Dshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartinfobardeprecated3DshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfobardeprecated3dshadow = 308;</code>
       */
      public boolean hasTschchartinfobardeprecated3Dshadow() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfobardeprecated3dshadow = 308;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfobardeprecated3Dshadow() {
        if (tschchartinfobardeprecated3DshadowBuilder_ == null) {
          return tschchartinfobardeprecated3Dshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfobardeprecated3Dshadow_;
        } else {
          return tschchartinfobardeprecated3DshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfobardeprecated3dshadow = 308;</code>
       */
      public Builder setTschchartinfobardeprecated3Dshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartinfobardeprecated3DshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfobardeprecated3Dshadow_ = value;
          onChanged();
        } else {
          tschchartinfobardeprecated3DshadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfobardeprecated3dshadow = 308;</code>
       */
      public Builder setTschchartinfobardeprecated3Dshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartinfobardeprecated3DshadowBuilder_ == null) {
          tschchartinfobardeprecated3Dshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfobardeprecated3DshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfobardeprecated3dshadow = 308;</code>
       */
      public Builder mergeTschchartinfobardeprecated3Dshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartinfobardeprecated3DshadowBuilder_ == null) {
          if (((bitField0_ & 0x00400000) == 0x00400000) &&
              tschchartinfobardeprecated3Dshadow_ != null &&
              tschchartinfobardeprecated3Dshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartinfobardeprecated3Dshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartinfobardeprecated3Dshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfobardeprecated3Dshadow_ = value;
          }
          onChanged();
        } else {
          tschchartinfobardeprecated3DshadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfobardeprecated3dshadow = 308;</code>
       */
      public Builder clearTschchartinfobardeprecated3Dshadow() {
        if (tschchartinfobardeprecated3DshadowBuilder_ == null) {
          tschchartinfobardeprecated3Dshadow_ = null;
          onChanged();
        } else {
          tschchartinfobardeprecated3DshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00400000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfobardeprecated3dshadow = 308;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartinfobardeprecated3DshadowBuilder() {
        bitField0_ |= 0x00400000;
        onChanged();
        return getTschchartinfobardeprecated3DshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfobardeprecated3dshadow = 308;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfobardeprecated3DshadowOrBuilder() {
        if (tschchartinfobardeprecated3DshadowBuilder_ != null) {
          return tschchartinfobardeprecated3DshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfobardeprecated3Dshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfobardeprecated3Dshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfobardeprecated3dshadow = 308;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartinfobardeprecated3DshadowFieldBuilder() {
        if (tschchartinfobardeprecated3DshadowBuilder_ == null) {
          tschchartinfobardeprecated3DshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartinfobardeprecated3Dshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartinfobardeprecated3Dshadow_ = null;
        }
        return tschchartinfobardeprecated3DshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartinfocolumndeprecated3Dshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartinfocolumndeprecated3DshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfocolumndeprecated3dshadow = 309;</code>
       */
      public boolean hasTschchartinfocolumndeprecated3Dshadow() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfocolumndeprecated3dshadow = 309;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfocolumndeprecated3Dshadow() {
        if (tschchartinfocolumndeprecated3DshadowBuilder_ == null) {
          return tschchartinfocolumndeprecated3Dshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfocolumndeprecated3Dshadow_;
        } else {
          return tschchartinfocolumndeprecated3DshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfocolumndeprecated3dshadow = 309;</code>
       */
      public Builder setTschchartinfocolumndeprecated3Dshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartinfocolumndeprecated3DshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfocolumndeprecated3Dshadow_ = value;
          onChanged();
        } else {
          tschchartinfocolumndeprecated3DshadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfocolumndeprecated3dshadow = 309;</code>
       */
      public Builder setTschchartinfocolumndeprecated3Dshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartinfocolumndeprecated3DshadowBuilder_ == null) {
          tschchartinfocolumndeprecated3Dshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfocolumndeprecated3DshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfocolumndeprecated3dshadow = 309;</code>
       */
      public Builder mergeTschchartinfocolumndeprecated3Dshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartinfocolumndeprecated3DshadowBuilder_ == null) {
          if (((bitField0_ & 0x00800000) == 0x00800000) &&
              tschchartinfocolumndeprecated3Dshadow_ != null &&
              tschchartinfocolumndeprecated3Dshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartinfocolumndeprecated3Dshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartinfocolumndeprecated3Dshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfocolumndeprecated3Dshadow_ = value;
          }
          onChanged();
        } else {
          tschchartinfocolumndeprecated3DshadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfocolumndeprecated3dshadow = 309;</code>
       */
      public Builder clearTschchartinfocolumndeprecated3Dshadow() {
        if (tschchartinfocolumndeprecated3DshadowBuilder_ == null) {
          tschchartinfocolumndeprecated3Dshadow_ = null;
          onChanged();
        } else {
          tschchartinfocolumndeprecated3DshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00800000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfocolumndeprecated3dshadow = 309;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartinfocolumndeprecated3DshadowBuilder() {
        bitField0_ |= 0x00800000;
        onChanged();
        return getTschchartinfocolumndeprecated3DshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfocolumndeprecated3dshadow = 309;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfocolumndeprecated3DshadowOrBuilder() {
        if (tschchartinfocolumndeprecated3DshadowBuilder_ != null) {
          return tschchartinfocolumndeprecated3DshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfocolumndeprecated3Dshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfocolumndeprecated3Dshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfocolumndeprecated3dshadow = 309;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartinfocolumndeprecated3DshadowFieldBuilder() {
        if (tschchartinfocolumndeprecated3DshadowBuilder_ == null) {
          tschchartinfocolumndeprecated3DshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartinfocolumndeprecated3Dshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartinfocolumndeprecated3Dshadow_ = null;
        }
        return tschchartinfocolumndeprecated3DshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartinfolinedeprecated3Dshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartinfolinedeprecated3DshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfolinedeprecated3dshadow = 310;</code>
       */
      public boolean hasTschchartinfolinedeprecated3Dshadow() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfolinedeprecated3dshadow = 310;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfolinedeprecated3Dshadow() {
        if (tschchartinfolinedeprecated3DshadowBuilder_ == null) {
          return tschchartinfolinedeprecated3Dshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfolinedeprecated3Dshadow_;
        } else {
          return tschchartinfolinedeprecated3DshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfolinedeprecated3dshadow = 310;</code>
       */
      public Builder setTschchartinfolinedeprecated3Dshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartinfolinedeprecated3DshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfolinedeprecated3Dshadow_ = value;
          onChanged();
        } else {
          tschchartinfolinedeprecated3DshadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfolinedeprecated3dshadow = 310;</code>
       */
      public Builder setTschchartinfolinedeprecated3Dshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartinfolinedeprecated3DshadowBuilder_ == null) {
          tschchartinfolinedeprecated3Dshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfolinedeprecated3DshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfolinedeprecated3dshadow = 310;</code>
       */
      public Builder mergeTschchartinfolinedeprecated3Dshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartinfolinedeprecated3DshadowBuilder_ == null) {
          if (((bitField0_ & 0x01000000) == 0x01000000) &&
              tschchartinfolinedeprecated3Dshadow_ != null &&
              tschchartinfolinedeprecated3Dshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartinfolinedeprecated3Dshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartinfolinedeprecated3Dshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfolinedeprecated3Dshadow_ = value;
          }
          onChanged();
        } else {
          tschchartinfolinedeprecated3DshadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfolinedeprecated3dshadow = 310;</code>
       */
      public Builder clearTschchartinfolinedeprecated3Dshadow() {
        if (tschchartinfolinedeprecated3DshadowBuilder_ == null) {
          tschchartinfolinedeprecated3Dshadow_ = null;
          onChanged();
        } else {
          tschchartinfolinedeprecated3DshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x01000000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfolinedeprecated3dshadow = 310;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartinfolinedeprecated3DshadowBuilder() {
        bitField0_ |= 0x01000000;
        onChanged();
        return getTschchartinfolinedeprecated3DshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfolinedeprecated3dshadow = 310;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfolinedeprecated3DshadowOrBuilder() {
        if (tschchartinfolinedeprecated3DshadowBuilder_ != null) {
          return tschchartinfolinedeprecated3DshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfolinedeprecated3Dshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfolinedeprecated3Dshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfolinedeprecated3dshadow = 310;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartinfolinedeprecated3DshadowFieldBuilder() {
        if (tschchartinfolinedeprecated3DshadowBuilder_ == null) {
          tschchartinfolinedeprecated3DshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartinfolinedeprecated3Dshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartinfolinedeprecated3Dshadow_ = null;
        }
        return tschchartinfolinedeprecated3DshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartinfoareadeprecated3Dshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartinfoareadeprecated3DshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfoareadeprecated3dshadow = 311;</code>
       */
      public boolean hasTschchartinfoareadeprecated3Dshadow() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfoareadeprecated3dshadow = 311;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfoareadeprecated3Dshadow() {
        if (tschchartinfoareadeprecated3DshadowBuilder_ == null) {
          return tschchartinfoareadeprecated3Dshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfoareadeprecated3Dshadow_;
        } else {
          return tschchartinfoareadeprecated3DshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfoareadeprecated3dshadow = 311;</code>
       */
      public Builder setTschchartinfoareadeprecated3Dshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartinfoareadeprecated3DshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfoareadeprecated3Dshadow_ = value;
          onChanged();
        } else {
          tschchartinfoareadeprecated3DshadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfoareadeprecated3dshadow = 311;</code>
       */
      public Builder setTschchartinfoareadeprecated3Dshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartinfoareadeprecated3DshadowBuilder_ == null) {
          tschchartinfoareadeprecated3Dshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfoareadeprecated3DshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfoareadeprecated3dshadow = 311;</code>
       */
      public Builder mergeTschchartinfoareadeprecated3Dshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartinfoareadeprecated3DshadowBuilder_ == null) {
          if (((bitField0_ & 0x02000000) == 0x02000000) &&
              tschchartinfoareadeprecated3Dshadow_ != null &&
              tschchartinfoareadeprecated3Dshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartinfoareadeprecated3Dshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartinfoareadeprecated3Dshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfoareadeprecated3Dshadow_ = value;
          }
          onChanged();
        } else {
          tschchartinfoareadeprecated3DshadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfoareadeprecated3dshadow = 311;</code>
       */
      public Builder clearTschchartinfoareadeprecated3Dshadow() {
        if (tschchartinfoareadeprecated3DshadowBuilder_ == null) {
          tschchartinfoareadeprecated3Dshadow_ = null;
          onChanged();
        } else {
          tschchartinfoareadeprecated3DshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x02000000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfoareadeprecated3dshadow = 311;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartinfoareadeprecated3DshadowBuilder() {
        bitField0_ |= 0x02000000;
        onChanged();
        return getTschchartinfoareadeprecated3DshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfoareadeprecated3dshadow = 311;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfoareadeprecated3DshadowOrBuilder() {
        if (tschchartinfoareadeprecated3DshadowBuilder_ != null) {
          return tschchartinfoareadeprecated3DshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfoareadeprecated3Dshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfoareadeprecated3Dshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfoareadeprecated3dshadow = 311;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartinfoareadeprecated3DshadowFieldBuilder() {
        if (tschchartinfoareadeprecated3DshadowBuilder_ == null) {
          tschchartinfoareadeprecated3DshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartinfoareadeprecated3Dshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartinfoareadeprecated3Dshadow_ = null;
        }
        return tschchartinfoareadeprecated3DshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartinfopiedeprecated3Dshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartinfopiedeprecated3DshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfopiedeprecated3dshadow = 312;</code>
       */
      public boolean hasTschchartinfopiedeprecated3Dshadow() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfopiedeprecated3dshadow = 312;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartinfopiedeprecated3Dshadow() {
        if (tschchartinfopiedeprecated3DshadowBuilder_ == null) {
          return tschchartinfopiedeprecated3Dshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfopiedeprecated3Dshadow_;
        } else {
          return tschchartinfopiedeprecated3DshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfopiedeprecated3dshadow = 312;</code>
       */
      public Builder setTschchartinfopiedeprecated3Dshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartinfopiedeprecated3DshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfopiedeprecated3Dshadow_ = value;
          onChanged();
        } else {
          tschchartinfopiedeprecated3DshadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfopiedeprecated3dshadow = 312;</code>
       */
      public Builder setTschchartinfopiedeprecated3Dshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartinfopiedeprecated3DshadowBuilder_ == null) {
          tschchartinfopiedeprecated3Dshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfopiedeprecated3DshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfopiedeprecated3dshadow = 312;</code>
       */
      public Builder mergeTschchartinfopiedeprecated3Dshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartinfopiedeprecated3DshadowBuilder_ == null) {
          if (((bitField0_ & 0x04000000) == 0x04000000) &&
              tschchartinfopiedeprecated3Dshadow_ != null &&
              tschchartinfopiedeprecated3Dshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartinfopiedeprecated3Dshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartinfopiedeprecated3Dshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfopiedeprecated3Dshadow_ = value;
          }
          onChanged();
        } else {
          tschchartinfopiedeprecated3DshadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfopiedeprecated3dshadow = 312;</code>
       */
      public Builder clearTschchartinfopiedeprecated3Dshadow() {
        if (tschchartinfopiedeprecated3DshadowBuilder_ == null) {
          tschchartinfopiedeprecated3Dshadow_ = null;
          onChanged();
        } else {
          tschchartinfopiedeprecated3DshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x04000000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfopiedeprecated3dshadow = 312;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartinfopiedeprecated3DshadowBuilder() {
        bitField0_ |= 0x04000000;
        onChanged();
        return getTschchartinfopiedeprecated3DshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfopiedeprecated3dshadow = 312;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartinfopiedeprecated3DshadowOrBuilder() {
        if (tschchartinfopiedeprecated3DshadowBuilder_ != null) {
          return tschchartinfopiedeprecated3DshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfopiedeprecated3Dshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartinfopiedeprecated3Dshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartinfopiedeprecated3dshadow = 312;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartinfopiedeprecated3DshadowFieldBuilder() {
        if (tschchartinfopiedeprecated3DshadowBuilder_ == null) {
          tschchartinfopiedeprecated3DshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartinfopiedeprecated3Dshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartinfopiedeprecated3Dshadow_ = null;
        }
        return tschchartinfopiedeprecated3DshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfodefault3Dlightingpackage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> tschchartinfodefault3DlightingpackageBuilder_;
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 313;</code>
       */
      public boolean hasTschchartinfodefault3Dlightingpackage() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 313;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfodefault3Dlightingpackage() {
        if (tschchartinfodefault3DlightingpackageBuilder_ == null) {
          return tschchartinfodefault3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfodefault3Dlightingpackage_;
        } else {
          return tschchartinfodefault3DlightingpackageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 313;</code>
       */
      public Builder setTschchartinfodefault3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfodefault3DlightingpackageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfodefault3Dlightingpackage_ = value;
          onChanged();
        } else {
          tschchartinfodefault3DlightingpackageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x08000000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 313;</code>
       */
      public Builder setTschchartinfodefault3Dlightingpackage(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder builderForValue) {
        if (tschchartinfodefault3DlightingpackageBuilder_ == null) {
          tschchartinfodefault3Dlightingpackage_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfodefault3DlightingpackageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x08000000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 313;</code>
       */
      public Builder mergeTschchartinfodefault3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfodefault3DlightingpackageBuilder_ == null) {
          if (((bitField0_ & 0x08000000) == 0x08000000) &&
              tschchartinfodefault3Dlightingpackage_ != null &&
              tschchartinfodefault3Dlightingpackage_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance()) {
            tschchartinfodefault3Dlightingpackage_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.newBuilder(tschchartinfodefault3Dlightingpackage_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfodefault3Dlightingpackage_ = value;
          }
          onChanged();
        } else {
          tschchartinfodefault3DlightingpackageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x08000000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 313;</code>
       */
      public Builder clearTschchartinfodefault3Dlightingpackage() {
        if (tschchartinfodefault3DlightingpackageBuilder_ == null) {
          tschchartinfodefault3Dlightingpackage_ = null;
          onChanged();
        } else {
          tschchartinfodefault3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x08000000);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 313;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder getTschchartinfodefault3DlightingpackageBuilder() {
        bitField0_ |= 0x08000000;
        onChanged();
        return getTschchartinfodefault3DlightingpackageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 313;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfodefault3DlightingpackageOrBuilder() {
        if (tschchartinfodefault3DlightingpackageBuilder_ != null) {
          return tschchartinfodefault3DlightingpackageBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfodefault3Dlightingpackage_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfodefault3Dlightingpackage_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefault3dlightingpackage = 313;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> 
          getTschchartinfodefault3DlightingpackageFieldBuilder() {
        if (tschchartinfodefault3DlightingpackageBuilder_ == null) {
          tschchartinfodefault3DlightingpackageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder>(
                  getTschchartinfodefault3Dlightingpackage(),
                  getParentForChildren(),
                  isClean());
          tschchartinfodefault3Dlightingpackage_ = null;
        }
        return tschchartinfodefault3DlightingpackageBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfocolumn3Dlightingpackage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> tschchartinfocolumn3DlightingpackageBuilder_;
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 314;</code>
       */
      public boolean hasTschchartinfocolumn3Dlightingpackage() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 314;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfocolumn3Dlightingpackage() {
        if (tschchartinfocolumn3DlightingpackageBuilder_ == null) {
          return tschchartinfocolumn3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfocolumn3Dlightingpackage_;
        } else {
          return tschchartinfocolumn3DlightingpackageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 314;</code>
       */
      public Builder setTschchartinfocolumn3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfocolumn3DlightingpackageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfocolumn3Dlightingpackage_ = value;
          onChanged();
        } else {
          tschchartinfocolumn3DlightingpackageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x10000000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 314;</code>
       */
      public Builder setTschchartinfocolumn3Dlightingpackage(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder builderForValue) {
        if (tschchartinfocolumn3DlightingpackageBuilder_ == null) {
          tschchartinfocolumn3Dlightingpackage_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfocolumn3DlightingpackageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x10000000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 314;</code>
       */
      public Builder mergeTschchartinfocolumn3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfocolumn3DlightingpackageBuilder_ == null) {
          if (((bitField0_ & 0x10000000) == 0x10000000) &&
              tschchartinfocolumn3Dlightingpackage_ != null &&
              tschchartinfocolumn3Dlightingpackage_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance()) {
            tschchartinfocolumn3Dlightingpackage_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.newBuilder(tschchartinfocolumn3Dlightingpackage_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfocolumn3Dlightingpackage_ = value;
          }
          onChanged();
        } else {
          tschchartinfocolumn3DlightingpackageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x10000000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 314;</code>
       */
      public Builder clearTschchartinfocolumn3Dlightingpackage() {
        if (tschchartinfocolumn3DlightingpackageBuilder_ == null) {
          tschchartinfocolumn3Dlightingpackage_ = null;
          onChanged();
        } else {
          tschchartinfocolumn3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x10000000);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 314;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder getTschchartinfocolumn3DlightingpackageBuilder() {
        bitField0_ |= 0x10000000;
        onChanged();
        return getTschchartinfocolumn3DlightingpackageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 314;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfocolumn3DlightingpackageOrBuilder() {
        if (tschchartinfocolumn3DlightingpackageBuilder_ != null) {
          return tschchartinfocolumn3DlightingpackageBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfocolumn3Dlightingpackage_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfocolumn3Dlightingpackage_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumn3dlightingpackage = 314;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> 
          getTschchartinfocolumn3DlightingpackageFieldBuilder() {
        if (tschchartinfocolumn3DlightingpackageBuilder_ == null) {
          tschchartinfocolumn3DlightingpackageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder>(
                  getTschchartinfocolumn3Dlightingpackage(),
                  getParentForChildren(),
                  isClean());
          tschchartinfocolumn3Dlightingpackage_ = null;
        }
        return tschchartinfocolumn3DlightingpackageBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfobar3Dlightingpackage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> tschchartinfobar3DlightingpackageBuilder_;
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 315;</code>
       */
      public boolean hasTschchartinfobar3Dlightingpackage() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 315;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfobar3Dlightingpackage() {
        if (tschchartinfobar3DlightingpackageBuilder_ == null) {
          return tschchartinfobar3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfobar3Dlightingpackage_;
        } else {
          return tschchartinfobar3DlightingpackageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 315;</code>
       */
      public Builder setTschchartinfobar3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfobar3DlightingpackageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfobar3Dlightingpackage_ = value;
          onChanged();
        } else {
          tschchartinfobar3DlightingpackageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 315;</code>
       */
      public Builder setTschchartinfobar3Dlightingpackage(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder builderForValue) {
        if (tschchartinfobar3DlightingpackageBuilder_ == null) {
          tschchartinfobar3Dlightingpackage_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfobar3DlightingpackageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 315;</code>
       */
      public Builder mergeTschchartinfobar3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfobar3DlightingpackageBuilder_ == null) {
          if (((bitField0_ & 0x20000000) == 0x20000000) &&
              tschchartinfobar3Dlightingpackage_ != null &&
              tschchartinfobar3Dlightingpackage_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance()) {
            tschchartinfobar3Dlightingpackage_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.newBuilder(tschchartinfobar3Dlightingpackage_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfobar3Dlightingpackage_ = value;
          }
          onChanged();
        } else {
          tschchartinfobar3DlightingpackageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 315;</code>
       */
      public Builder clearTschchartinfobar3Dlightingpackage() {
        if (tschchartinfobar3DlightingpackageBuilder_ == null) {
          tschchartinfobar3Dlightingpackage_ = null;
          onChanged();
        } else {
          tschchartinfobar3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x20000000);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 315;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder getTschchartinfobar3DlightingpackageBuilder() {
        bitField0_ |= 0x20000000;
        onChanged();
        return getTschchartinfobar3DlightingpackageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 315;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfobar3DlightingpackageOrBuilder() {
        if (tschchartinfobar3DlightingpackageBuilder_ != null) {
          return tschchartinfobar3DlightingpackageBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfobar3Dlightingpackage_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfobar3Dlightingpackage_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobar3dlightingpackage = 315;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> 
          getTschchartinfobar3DlightingpackageFieldBuilder() {
        if (tschchartinfobar3DlightingpackageBuilder_ == null) {
          tschchartinfobar3DlightingpackageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder>(
                  getTschchartinfobar3Dlightingpackage(),
                  getParentForChildren(),
                  isClean());
          tschchartinfobar3Dlightingpackage_ = null;
        }
        return tschchartinfobar3DlightingpackageBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfoline3Dlightingpackage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> tschchartinfoline3DlightingpackageBuilder_;
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 316;</code>
       */
      public boolean hasTschchartinfoline3Dlightingpackage() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 316;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfoline3Dlightingpackage() {
        if (tschchartinfoline3DlightingpackageBuilder_ == null) {
          return tschchartinfoline3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfoline3Dlightingpackage_;
        } else {
          return tschchartinfoline3DlightingpackageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 316;</code>
       */
      public Builder setTschchartinfoline3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfoline3DlightingpackageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfoline3Dlightingpackage_ = value;
          onChanged();
        } else {
          tschchartinfoline3DlightingpackageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 316;</code>
       */
      public Builder setTschchartinfoline3Dlightingpackage(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder builderForValue) {
        if (tschchartinfoline3DlightingpackageBuilder_ == null) {
          tschchartinfoline3Dlightingpackage_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfoline3DlightingpackageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 316;</code>
       */
      public Builder mergeTschchartinfoline3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfoline3DlightingpackageBuilder_ == null) {
          if (((bitField0_ & 0x40000000) == 0x40000000) &&
              tschchartinfoline3Dlightingpackage_ != null &&
              tschchartinfoline3Dlightingpackage_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance()) {
            tschchartinfoline3Dlightingpackage_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.newBuilder(tschchartinfoline3Dlightingpackage_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfoline3Dlightingpackage_ = value;
          }
          onChanged();
        } else {
          tschchartinfoline3DlightingpackageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 316;</code>
       */
      public Builder clearTschchartinfoline3Dlightingpackage() {
        if (tschchartinfoline3DlightingpackageBuilder_ == null) {
          tschchartinfoline3Dlightingpackage_ = null;
          onChanged();
        } else {
          tschchartinfoline3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x40000000);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 316;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder getTschchartinfoline3DlightingpackageBuilder() {
        bitField0_ |= 0x40000000;
        onChanged();
        return getTschchartinfoline3DlightingpackageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 316;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfoline3DlightingpackageOrBuilder() {
        if (tschchartinfoline3DlightingpackageBuilder_ != null) {
          return tschchartinfoline3DlightingpackageBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfoline3Dlightingpackage_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfoline3Dlightingpackage_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoline3dlightingpackage = 316;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> 
          getTschchartinfoline3DlightingpackageFieldBuilder() {
        if (tschchartinfoline3DlightingpackageBuilder_ == null) {
          tschchartinfoline3DlightingpackageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder>(
                  getTschchartinfoline3Dlightingpackage(),
                  getParentForChildren(),
                  isClean());
          tschchartinfoline3Dlightingpackage_ = null;
        }
        return tschchartinfoline3DlightingpackageBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfoarea3Dlightingpackage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> tschchartinfoarea3DlightingpackageBuilder_;
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 317;</code>
       */
      public boolean hasTschchartinfoarea3Dlightingpackage() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 317;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfoarea3Dlightingpackage() {
        if (tschchartinfoarea3DlightingpackageBuilder_ == null) {
          return tschchartinfoarea3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfoarea3Dlightingpackage_;
        } else {
          return tschchartinfoarea3DlightingpackageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 317;</code>
       */
      public Builder setTschchartinfoarea3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfoarea3DlightingpackageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfoarea3Dlightingpackage_ = value;
          onChanged();
        } else {
          tschchartinfoarea3DlightingpackageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 317;</code>
       */
      public Builder setTschchartinfoarea3Dlightingpackage(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder builderForValue) {
        if (tschchartinfoarea3DlightingpackageBuilder_ == null) {
          tschchartinfoarea3Dlightingpackage_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfoarea3DlightingpackageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 317;</code>
       */
      public Builder mergeTschchartinfoarea3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfoarea3DlightingpackageBuilder_ == null) {
          if (((bitField0_ & 0x80000000) == 0x80000000) &&
              tschchartinfoarea3Dlightingpackage_ != null &&
              tschchartinfoarea3Dlightingpackage_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance()) {
            tschchartinfoarea3Dlightingpackage_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.newBuilder(tschchartinfoarea3Dlightingpackage_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfoarea3Dlightingpackage_ = value;
          }
          onChanged();
        } else {
          tschchartinfoarea3DlightingpackageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 317;</code>
       */
      public Builder clearTschchartinfoarea3Dlightingpackage() {
        if (tschchartinfoarea3DlightingpackageBuilder_ == null) {
          tschchartinfoarea3Dlightingpackage_ = null;
          onChanged();
        } else {
          tschchartinfoarea3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x80000000);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 317;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder getTschchartinfoarea3DlightingpackageBuilder() {
        bitField0_ |= 0x80000000;
        onChanged();
        return getTschchartinfoarea3DlightingpackageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 317;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfoarea3DlightingpackageOrBuilder() {
        if (tschchartinfoarea3DlightingpackageBuilder_ != null) {
          return tschchartinfoarea3DlightingpackageBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfoarea3Dlightingpackage_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfoarea3Dlightingpackage_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoarea3dlightingpackage = 317;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> 
          getTschchartinfoarea3DlightingpackageFieldBuilder() {
        if (tschchartinfoarea3DlightingpackageBuilder_ == null) {
          tschchartinfoarea3DlightingpackageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder>(
                  getTschchartinfoarea3Dlightingpackage(),
                  getParentForChildren(),
                  isClean());
          tschchartinfoarea3Dlightingpackage_ = null;
        }
        return tschchartinfoarea3DlightingpackageBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfopie3Dlightingpackage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> tschchartinfopie3DlightingpackageBuilder_;
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 318;</code>
       */
      public boolean hasTschchartinfopie3Dlightingpackage() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 318;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfopie3Dlightingpackage() {
        if (tschchartinfopie3DlightingpackageBuilder_ == null) {
          return tschchartinfopie3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfopie3Dlightingpackage_;
        } else {
          return tschchartinfopie3DlightingpackageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 318;</code>
       */
      public Builder setTschchartinfopie3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfopie3DlightingpackageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfopie3Dlightingpackage_ = value;
          onChanged();
        } else {
          tschchartinfopie3DlightingpackageBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 318;</code>
       */
      public Builder setTschchartinfopie3Dlightingpackage(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder builderForValue) {
        if (tschchartinfopie3DlightingpackageBuilder_ == null) {
          tschchartinfopie3Dlightingpackage_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfopie3DlightingpackageBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 318;</code>
       */
      public Builder mergeTschchartinfopie3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfopie3DlightingpackageBuilder_ == null) {
          if (((bitField1_ & 0x00000001) == 0x00000001) &&
              tschchartinfopie3Dlightingpackage_ != null &&
              tschchartinfopie3Dlightingpackage_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance()) {
            tschchartinfopie3Dlightingpackage_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.newBuilder(tschchartinfopie3Dlightingpackage_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfopie3Dlightingpackage_ = value;
          }
          onChanged();
        } else {
          tschchartinfopie3DlightingpackageBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 318;</code>
       */
      public Builder clearTschchartinfopie3Dlightingpackage() {
        if (tschchartinfopie3DlightingpackageBuilder_ == null) {
          tschchartinfopie3Dlightingpackage_ = null;
          onChanged();
        } else {
          tschchartinfopie3DlightingpackageBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 318;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder getTschchartinfopie3DlightingpackageBuilder() {
        bitField1_ |= 0x00000001;
        onChanged();
        return getTschchartinfopie3DlightingpackageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 318;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfopie3DlightingpackageOrBuilder() {
        if (tschchartinfopie3DlightingpackageBuilder_ != null) {
          return tschchartinfopie3DlightingpackageBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfopie3Dlightingpackage_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfopie3Dlightingpackage_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopie3dlightingpackage = 318;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> 
          getTschchartinfopie3DlightingpackageFieldBuilder() {
        if (tschchartinfopie3DlightingpackageBuilder_ == null) {
          tschchartinfopie3DlightingpackageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder>(
                  getTschchartinfopie3Dlightingpackage(),
                  getParentForChildren(),
                  isClean());
          tschchartinfopie3Dlightingpackage_ = null;
        }
        return tschchartinfopie3DlightingpackageBuilder_;
      }

      private boolean tschchartinfodefaultdeprecated3Dbeveledges_ ;
      /**
       * <code>optional bool tschchartinfodefaultdeprecated3dbeveledges = 326;</code>
       */
      public boolean hasTschchartinfodefaultdeprecated3Dbeveledges() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool tschchartinfodefaultdeprecated3dbeveledges = 326;</code>
       */
      public boolean getTschchartinfodefaultdeprecated3Dbeveledges() {
        return tschchartinfodefaultdeprecated3Dbeveledges_;
      }
      /**
       * <code>optional bool tschchartinfodefaultdeprecated3dbeveledges = 326;</code>
       */
      public Builder setTschchartinfodefaultdeprecated3Dbeveledges(boolean value) {
        bitField1_ |= 0x00000002;
        tschchartinfodefaultdeprecated3Dbeveledges_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartinfodefaultdeprecated3dbeveledges = 326;</code>
       */
      public Builder clearTschchartinfodefaultdeprecated3Dbeveledges() {
        bitField1_ = (bitField1_ & ~0x00000002);
        tschchartinfodefaultdeprecated3Dbeveledges_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartinfopiedeprecated3Dbeveledges_ ;
      /**
       * <code>optional bool tschchartinfopiedeprecated3dbeveledges = 327;</code>
       */
      public boolean hasTschchartinfopiedeprecated3Dbeveledges() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool tschchartinfopiedeprecated3dbeveledges = 327;</code>
       */
      public boolean getTschchartinfopiedeprecated3Dbeveledges() {
        return tschchartinfopiedeprecated3Dbeveledges_;
      }
      /**
       * <code>optional bool tschchartinfopiedeprecated3dbeveledges = 327;</code>
       */
      public Builder setTschchartinfopiedeprecated3Dbeveledges(boolean value) {
        bitField1_ |= 0x00000004;
        tschchartinfopiedeprecated3Dbeveledges_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartinfopiedeprecated3dbeveledges = 327;</code>
       */
      public Builder clearTschchartinfopiedeprecated3Dbeveledges() {
        bitField1_ = (bitField1_ & ~0x00000004);
        tschchartinfopiedeprecated3Dbeveledges_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartinfobardeprecated3Dbeveledges_ ;
      /**
       * <code>optional bool tschchartinfobardeprecated3dbeveledges = 328;</code>
       */
      public boolean hasTschchartinfobardeprecated3Dbeveledges() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool tschchartinfobardeprecated3dbeveledges = 328;</code>
       */
      public boolean getTschchartinfobardeprecated3Dbeveledges() {
        return tschchartinfobardeprecated3Dbeveledges_;
      }
      /**
       * <code>optional bool tschchartinfobardeprecated3dbeveledges = 328;</code>
       */
      public Builder setTschchartinfobardeprecated3Dbeveledges(boolean value) {
        bitField1_ |= 0x00000008;
        tschchartinfobardeprecated3Dbeveledges_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartinfobardeprecated3dbeveledges = 328;</code>
       */
      public Builder clearTschchartinfobardeprecated3Dbeveledges() {
        bitField1_ = (bitField1_ & ~0x00000008);
        tschchartinfobardeprecated3Dbeveledges_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartinfocolumndeprecated3Dbeveledges_ ;
      /**
       * <code>optional bool tschchartinfocolumndeprecated3dbeveledges = 329;</code>
       */
      public boolean hasTschchartinfocolumndeprecated3Dbeveledges() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool tschchartinfocolumndeprecated3dbeveledges = 329;</code>
       */
      public boolean getTschchartinfocolumndeprecated3Dbeveledges() {
        return tschchartinfocolumndeprecated3Dbeveledges_;
      }
      /**
       * <code>optional bool tschchartinfocolumndeprecated3dbeveledges = 329;</code>
       */
      public Builder setTschchartinfocolumndeprecated3Dbeveledges(boolean value) {
        bitField1_ |= 0x00000010;
        tschchartinfocolumndeprecated3Dbeveledges_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartinfocolumndeprecated3dbeveledges = 329;</code>
       */
      public Builder clearTschchartinfocolumndeprecated3Dbeveledges() {
        bitField1_ = (bitField1_ & ~0x00000010);
        tschchartinfocolumndeprecated3Dbeveledges_ = false;
        onChanged();
        return this;
      }

      private int tschchartinfodefaultdeprecated3Dbarshape_ ;
      /**
       * <code>optional int32 tschchartinfodefaultdeprecated3dbarshape = 330;</code>
       */
      public boolean hasTschchartinfodefaultdeprecated3Dbarshape() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 tschchartinfodefaultdeprecated3dbarshape = 330;</code>
       */
      public int getTschchartinfodefaultdeprecated3Dbarshape() {
        return tschchartinfodefaultdeprecated3Dbarshape_;
      }
      /**
       * <code>optional int32 tschchartinfodefaultdeprecated3dbarshape = 330;</code>
       */
      public Builder setTschchartinfodefaultdeprecated3Dbarshape(int value) {
        bitField1_ |= 0x00000020;
        tschchartinfodefaultdeprecated3Dbarshape_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartinfodefaultdeprecated3dbarshape = 330;</code>
       */
      public Builder clearTschchartinfodefaultdeprecated3Dbarshape() {
        bitField1_ = (bitField1_ & ~0x00000020);
        tschchartinfodefaultdeprecated3Dbarshape_ = 0;
        onChanged();
        return this;
      }

      private float tschchartinfodefault3Dchartopacity_ ;
      /**
       * <code>optional float tschchartinfodefault3dchartopacity = 335;</code>
       */
      public boolean hasTschchartinfodefault3Dchartopacity() {
        return ((bitField1_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float tschchartinfodefault3dchartopacity = 335;</code>
       */
      public float getTschchartinfodefault3Dchartopacity() {
        return tschchartinfodefault3Dchartopacity_;
      }
      /**
       * <code>optional float tschchartinfodefault3dchartopacity = 335;</code>
       */
      public Builder setTschchartinfodefault3Dchartopacity(float value) {
        bitField1_ |= 0x00000040;
        tschchartinfodefault3Dchartopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartinfodefault3dchartopacity = 335;</code>
       */
      public Builder clearTschchartinfodefault3Dchartopacity() {
        bitField1_ = (bitField1_ & ~0x00000040);
        tschchartinfodefault3Dchartopacity_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TSCH.PreUFF.ChartStyleArchive)
    }

    // @@protoc_insertion_point(class_scope:TSCH.PreUFF.ChartStyleArchive)
    private static final org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive();
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ChartStyleArchive>
        PARSER = new com.google.protobuf.AbstractParser<ChartStyleArchive>() {
      public ChartStyleArchive parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ChartStyleArchive(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChartStyleArchive> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChartStyleArchive> getParserForType() {
      return PARSER;
    }

    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartStyleArchive getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChartNonStyleArchiveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TSCH.PreUFF.ChartNonStyleArchive)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    boolean hasSuper();
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive getSuper();
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder getSuperOrBuilder();

    /**
     * <code>optional string tschchartinfodefaulttitle = 10;</code>
     */
    boolean hasTschchartinfodefaulttitle();
    /**
     * <code>optional string tschchartinfodefaulttitle = 10;</code>
     */
    java.lang.String getTschchartinfodefaulttitle();
    /**
     * <code>optional string tschchartinfodefaulttitle = 10;</code>
     */
    com.google.protobuf.ByteString
        getTschchartinfodefaulttitleBytes();

    /**
     * <code>optional bool tschchartinfodefaultshowlegend = 11;</code>
     */
    boolean hasTschchartinfodefaultshowlegend();
    /**
     * <code>optional bool tschchartinfodefaultshowlegend = 11;</code>
     */
    boolean getTschchartinfodefaultshowlegend();

    /**
     * <code>optional float tschchartinfodefaultpiestartangle = 12;</code>
     */
    boolean hasTschchartinfodefaultpiestartangle();
    /**
     * <code>optional float tschchartinfodefaultpiestartangle = 12;</code>
     */
    float getTschchartinfodefaultpiestartangle();

    /**
     * <code>optional bool tschchartinfodefaultshowtitle = 13;</code>
     */
    boolean hasTschchartinfodefaultshowtitle();
    /**
     * <code>optional bool tschchartinfodefaultshowtitle = 13;</code>
     */
    boolean getTschchartinfodefaultshowtitle();

    /**
     * <code>optional int32 tschchartinfodefaultdeprecatedagainmasterfontnamedsize = 25;</code>
     */
    boolean hasTschchartinfodefaultdeprecatedagainmasterfontnamedsize();
    /**
     * <code>optional int32 tschchartinfodefaultdeprecatedagainmasterfontnamedsize = 25;</code>
     */
    int getTschchartinfodefaultdeprecatedagainmasterfontnamedsize();

    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 300;</code>
     */
    boolean hasTschchartinfodefault3Drotation();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 300;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfodefault3Drotation();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 300;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfodefault3DrotationOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 301;</code>
     */
    boolean hasTschchartinfodefault3Dscale();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 301;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfodefault3Dscale();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 301;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfodefault3DscaleOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 302;</code>
     */
    boolean hasTschchartinfocolumn3Dscale();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 302;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfocolumn3Dscale();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 302;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfocolumn3DscaleOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 303;</code>
     */
    boolean hasTschchartinfobar3Dscale();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 303;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfobar3Dscale();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 303;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfobar3DscaleOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 304;</code>
     */
    boolean hasTschchartinfoline3Dscale();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 304;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfoline3Dscale();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 304;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfoline3DscaleOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 305;</code>
     */
    boolean hasTschchartinfoarea3Dscale();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 305;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfoarea3Dscale();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 305;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfoarea3DscaleOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 306;</code>
     */
    boolean hasTschchartinfopie3Dscale();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 306;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfopie3Dscale();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 306;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfopie3DscaleOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 313;</code>
     */
    boolean hasTschchartinfodefault3Dviewport();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 313;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfodefault3Dviewport();
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 313;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfodefault3DviewportOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefaultdeprecated3dlightingpackage = 320;</code>
     */
    boolean hasTschchartinfodefaultdeprecated3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefaultdeprecated3dlightingpackage = 320;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfodefaultdeprecated3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefaultdeprecated3dlightingpackage = 320;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfodefaultdeprecated3DlightingpackageOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumndeprecated3dlightingpackage = 321;</code>
     */
    boolean hasTschchartinfocolumndeprecated3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumndeprecated3dlightingpackage = 321;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfocolumndeprecated3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumndeprecated3dlightingpackage = 321;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfocolumndeprecated3DlightingpackageOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobardeprecated3dlightingpackage = 322;</code>
     */
    boolean hasTschchartinfobardeprecated3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobardeprecated3dlightingpackage = 322;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfobardeprecated3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobardeprecated3dlightingpackage = 322;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfobardeprecated3DlightingpackageOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfolinedeprecated3dlightingpackage = 323;</code>
     */
    boolean hasTschchartinfolinedeprecated3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfolinedeprecated3dlightingpackage = 323;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfolinedeprecated3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfolinedeprecated3dlightingpackage = 323;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfolinedeprecated3DlightingpackageOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoareadeprecated3dlightingpackage = 324;</code>
     */
    boolean hasTschchartinfoareadeprecated3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoareadeprecated3dlightingpackage = 324;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfoareadeprecated3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoareadeprecated3dlightingpackage = 324;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfoareadeprecated3DlightingpackageOrBuilder();

    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopiedeprecated3dlightingpackage = 325;</code>
     */
    boolean hasTschchartinfopiedeprecated3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopiedeprecated3dlightingpackage = 325;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfopiedeprecated3Dlightingpackage();
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopiedeprecated3dlightingpackage = 325;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfopiedeprecated3DlightingpackageOrBuilder();

    /**
     * <code>optional bool tschchartinfodefaultskiphiddendata = 326;</code>
     */
    boolean hasTschchartinfodefaultskiphiddendata();
    /**
     * <code>optional bool tschchartinfodefaultskiphiddendata = 326;</code>
     */
    boolean getTschchartinfodefaultskiphiddendata();

    /**
     * <code>optional bool tschchartinfodefault3dbeveledges = 327;</code>
     */
    boolean hasTschchartinfodefault3Dbeveledges();
    /**
     * <code>optional bool tschchartinfodefault3dbeveledges = 327;</code>
     */
    boolean getTschchartinfodefault3Dbeveledges();

    /**
     * <code>optional int32 tschchartinfodefault3dbarshape = 336;</code>
     */
    boolean hasTschchartinfodefault3Dbarshape();
    /**
     * <code>optional int32 tschchartinfodefault3dbarshape = 336;</code>
     */
    int getTschchartinfodefault3Dbarshape();

    /**
     * <code>optional float tschchartinfodefault3dintersetdepthgap = 331;</code>
     */
    boolean hasTschchartinfodefault3Dintersetdepthgap();
    /**
     * <code>optional float tschchartinfodefault3dintersetdepthgap = 331;</code>
     */
    float getTschchartinfodefault3Dintersetdepthgap();
  }
  /**
   * Protobuf type {@code TSCH.PreUFF.ChartNonStyleArchive}
   */
  public  static final class ChartNonStyleArchive extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TSCH.PreUFF.ChartNonStyleArchive)
      ChartNonStyleArchiveOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChartNonStyleArchive.newBuilder() to construct.
    private ChartNonStyleArchive(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChartNonStyleArchive() {
      tschchartinfodefaulttitle_ = "";
      tschchartinfodefaultshowlegend_ = false;
      tschchartinfodefaultpiestartangle_ = 0F;
      tschchartinfodefaultshowtitle_ = false;
      tschchartinfodefaultdeprecatedagainmasterfontnamedsize_ = 0;
      tschchartinfodefaultskiphiddendata_ = false;
      tschchartinfodefault3Dbeveledges_ = false;
      tschchartinfodefault3Dbarshape_ = 0;
      tschchartinfodefault3Dintersetdepthgap_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChartNonStyleArchive(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = super_.toBuilder();
              }
              super_ = input.readMessage(org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(super_);
                super_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 82: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              tschchartinfodefaulttitle_ = bs;
              break;
            }
            case 88: {
              bitField0_ |= 0x00000004;
              tschchartinfodefaultshowlegend_ = input.readBool();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000008;
              tschchartinfodefaultpiestartangle_ = input.readFloat();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000010;
              tschchartinfodefaultshowtitle_ = input.readBool();
              break;
            }
            case 200: {
              bitField0_ |= 0x00000020;
              tschchartinfodefaultdeprecatedagainmasterfontnamedsize_ = input.readInt32();
              break;
            }
            case 2402: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = tschchartinfodefault3Drotation_.toBuilder();
              }
              tschchartinfodefault3Drotation_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfodefault3Drotation_);
                tschchartinfodefault3Drotation_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 2410: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = tschchartinfodefault3Dscale_.toBuilder();
              }
              tschchartinfodefault3Dscale_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfodefault3Dscale_);
                tschchartinfodefault3Dscale_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 2418: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = tschchartinfocolumn3Dscale_.toBuilder();
              }
              tschchartinfocolumn3Dscale_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfocolumn3Dscale_);
                tschchartinfocolumn3Dscale_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 2426: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = tschchartinfobar3Dscale_.toBuilder();
              }
              tschchartinfobar3Dscale_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfobar3Dscale_);
                tschchartinfobar3Dscale_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 2434: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = tschchartinfoline3Dscale_.toBuilder();
              }
              tschchartinfoline3Dscale_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfoline3Dscale_);
                tschchartinfoline3Dscale_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 2442: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = tschchartinfoarea3Dscale_.toBuilder();
              }
              tschchartinfoarea3Dscale_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfoarea3Dscale_);
                tschchartinfoarea3Dscale_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 2450: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00001000) == 0x00001000)) {
                subBuilder = tschchartinfopie3Dscale_.toBuilder();
              }
              tschchartinfopie3Dscale_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfopie3Dscale_);
                tschchartinfopie3Dscale_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00001000;
              break;
            }
            case 2506: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00002000) == 0x00002000)) {
                subBuilder = tschchartinfodefault3Dviewport_.toBuilder();
              }
              tschchartinfodefault3Dviewport_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfodefault3Dviewport_);
                tschchartinfodefault3Dviewport_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00002000;
              break;
            }
            case 2562: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00004000) == 0x00004000)) {
                subBuilder = tschchartinfodefaultdeprecated3Dlightingpackage_.toBuilder();
              }
              tschchartinfodefaultdeprecated3Dlightingpackage_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfodefaultdeprecated3Dlightingpackage_);
                tschchartinfodefaultdeprecated3Dlightingpackage_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00004000;
              break;
            }
            case 2570: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00008000) == 0x00008000)) {
                subBuilder = tschchartinfocolumndeprecated3Dlightingpackage_.toBuilder();
              }
              tschchartinfocolumndeprecated3Dlightingpackage_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfocolumndeprecated3Dlightingpackage_);
                tschchartinfocolumndeprecated3Dlightingpackage_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00008000;
              break;
            }
            case 2578: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00010000) == 0x00010000)) {
                subBuilder = tschchartinfobardeprecated3Dlightingpackage_.toBuilder();
              }
              tschchartinfobardeprecated3Dlightingpackage_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfobardeprecated3Dlightingpackage_);
                tschchartinfobardeprecated3Dlightingpackage_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00010000;
              break;
            }
            case 2586: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00020000) == 0x00020000)) {
                subBuilder = tschchartinfolinedeprecated3Dlightingpackage_.toBuilder();
              }
              tschchartinfolinedeprecated3Dlightingpackage_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfolinedeprecated3Dlightingpackage_);
                tschchartinfolinedeprecated3Dlightingpackage_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00020000;
              break;
            }
            case 2594: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00040000) == 0x00040000)) {
                subBuilder = tschchartinfoareadeprecated3Dlightingpackage_.toBuilder();
              }
              tschchartinfoareadeprecated3Dlightingpackage_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfoareadeprecated3Dlightingpackage_);
                tschchartinfoareadeprecated3Dlightingpackage_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00040000;
              break;
            }
            case 2602: {
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00080000) == 0x00080000)) {
                subBuilder = tschchartinfopiedeprecated3Dlightingpackage_.toBuilder();
              }
              tschchartinfopiedeprecated3Dlightingpackage_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartinfopiedeprecated3Dlightingpackage_);
                tschchartinfopiedeprecated3Dlightingpackage_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00080000;
              break;
            }
            case 2608: {
              bitField0_ |= 0x00100000;
              tschchartinfodefaultskiphiddendata_ = input.readBool();
              break;
            }
            case 2616: {
              bitField0_ |= 0x00200000;
              tschchartinfodefault3Dbeveledges_ = input.readBool();
              break;
            }
            case 2653: {
              bitField0_ |= 0x00800000;
              tschchartinfodefault3Dintersetdepthgap_ = input.readFloat();
              break;
            }
            case 2688: {
              bitField0_ |= 0x00400000;
              tschchartinfodefault3Dbarshape_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartNonStyleArchive_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartNonStyleArchive_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive.Builder.class);
    }

    private int bitField0_;
    public static final int SUPER_FIELD_NUMBER = 1;
    private org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive super_;
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    public boolean hasSuper() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive getSuper() {
      return super_ == null ? org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
    }
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder getSuperOrBuilder() {
      return super_ == null ? org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
    }

    public static final int TSCHCHARTINFODEFAULTTITLE_FIELD_NUMBER = 10;
    private volatile java.lang.Object tschchartinfodefaulttitle_;
    /**
     * <code>optional string tschchartinfodefaulttitle = 10;</code>
     */
    public boolean hasTschchartinfodefaulttitle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string tschchartinfodefaulttitle = 10;</code>
     */
    public java.lang.String getTschchartinfodefaulttitle() {
      java.lang.Object ref = tschchartinfodefaulttitle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tschchartinfodefaulttitle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string tschchartinfodefaulttitle = 10;</code>
     */
    public com.google.protobuf.ByteString
        getTschchartinfodefaulttitleBytes() {
      java.lang.Object ref = tschchartinfodefaulttitle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tschchartinfodefaulttitle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TSCHCHARTINFODEFAULTSHOWLEGEND_FIELD_NUMBER = 11;
    private boolean tschchartinfodefaultshowlegend_;
    /**
     * <code>optional bool tschchartinfodefaultshowlegend = 11;</code>
     */
    public boolean hasTschchartinfodefaultshowlegend() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool tschchartinfodefaultshowlegend = 11;</code>
     */
    public boolean getTschchartinfodefaultshowlegend() {
      return tschchartinfodefaultshowlegend_;
    }

    public static final int TSCHCHARTINFODEFAULTPIESTARTANGLE_FIELD_NUMBER = 12;
    private float tschchartinfodefaultpiestartangle_;
    /**
     * <code>optional float tschchartinfodefaultpiestartangle = 12;</code>
     */
    public boolean hasTschchartinfodefaultpiestartangle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float tschchartinfodefaultpiestartangle = 12;</code>
     */
    public float getTschchartinfodefaultpiestartangle() {
      return tschchartinfodefaultpiestartangle_;
    }

    public static final int TSCHCHARTINFODEFAULTSHOWTITLE_FIELD_NUMBER = 13;
    private boolean tschchartinfodefaultshowtitle_;
    /**
     * <code>optional bool tschchartinfodefaultshowtitle = 13;</code>
     */
    public boolean hasTschchartinfodefaultshowtitle() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool tschchartinfodefaultshowtitle = 13;</code>
     */
    public boolean getTschchartinfodefaultshowtitle() {
      return tschchartinfodefaultshowtitle_;
    }

    public static final int TSCHCHARTINFODEFAULTDEPRECATEDAGAINMASTERFONTNAMEDSIZE_FIELD_NUMBER = 25;
    private int tschchartinfodefaultdeprecatedagainmasterfontnamedsize_;
    /**
     * <code>optional int32 tschchartinfodefaultdeprecatedagainmasterfontnamedsize = 25;</code>
     */
    public boolean hasTschchartinfodefaultdeprecatedagainmasterfontnamedsize() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 tschchartinfodefaultdeprecatedagainmasterfontnamedsize = 25;</code>
     */
    public int getTschchartinfodefaultdeprecatedagainmasterfontnamedsize() {
      return tschchartinfodefaultdeprecatedagainmasterfontnamedsize_;
    }

    public static final int TSCHCHARTINFODEFAULT3DROTATION_FIELD_NUMBER = 300;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfodefault3Drotation_;
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 300;</code>
     */
    public boolean hasTschchartinfodefault3Drotation() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 300;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfodefault3Drotation() {
      return tschchartinfodefault3Drotation_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfodefault3Drotation_;
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 300;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfodefault3DrotationOrBuilder() {
      return tschchartinfodefault3Drotation_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfodefault3Drotation_;
    }

    public static final int TSCHCHARTINFODEFAULT3DSCALE_FIELD_NUMBER = 301;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfodefault3Dscale_;
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 301;</code>
     */
    public boolean hasTschchartinfodefault3Dscale() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 301;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfodefault3Dscale() {
      return tschchartinfodefault3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfodefault3Dscale_;
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 301;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfodefault3DscaleOrBuilder() {
      return tschchartinfodefault3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfodefault3Dscale_;
    }

    public static final int TSCHCHARTINFOCOLUMN3DSCALE_FIELD_NUMBER = 302;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfocolumn3Dscale_;
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 302;</code>
     */
    public boolean hasTschchartinfocolumn3Dscale() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 302;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfocolumn3Dscale() {
      return tschchartinfocolumn3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfocolumn3Dscale_;
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 302;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfocolumn3DscaleOrBuilder() {
      return tschchartinfocolumn3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfocolumn3Dscale_;
    }

    public static final int TSCHCHARTINFOBAR3DSCALE_FIELD_NUMBER = 303;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfobar3Dscale_;
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 303;</code>
     */
    public boolean hasTschchartinfobar3Dscale() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 303;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfobar3Dscale() {
      return tschchartinfobar3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfobar3Dscale_;
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 303;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfobar3DscaleOrBuilder() {
      return tschchartinfobar3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfobar3Dscale_;
    }

    public static final int TSCHCHARTINFOLINE3DSCALE_FIELD_NUMBER = 304;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfoline3Dscale_;
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 304;</code>
     */
    public boolean hasTschchartinfoline3Dscale() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 304;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfoline3Dscale() {
      return tschchartinfoline3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfoline3Dscale_;
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 304;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfoline3DscaleOrBuilder() {
      return tschchartinfoline3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfoline3Dscale_;
    }

    public static final int TSCHCHARTINFOAREA3DSCALE_FIELD_NUMBER = 305;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfoarea3Dscale_;
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 305;</code>
     */
    public boolean hasTschchartinfoarea3Dscale() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 305;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfoarea3Dscale() {
      return tschchartinfoarea3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfoarea3Dscale_;
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 305;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfoarea3DscaleOrBuilder() {
      return tschchartinfoarea3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfoarea3Dscale_;
    }

    public static final int TSCHCHARTINFOPIE3DSCALE_FIELD_NUMBER = 306;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfopie3Dscale_;
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 306;</code>
     */
    public boolean hasTschchartinfopie3Dscale() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 306;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfopie3Dscale() {
      return tschchartinfopie3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfopie3Dscale_;
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 306;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfopie3DscaleOrBuilder() {
      return tschchartinfopie3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfopie3Dscale_;
    }

    public static final int TSCHCHARTINFODEFAULT3DVIEWPORT_FIELD_NUMBER = 313;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfodefault3Dviewport_;
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 313;</code>
     */
    public boolean hasTschchartinfodefault3Dviewport() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 313;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfodefault3Dviewport() {
      return tschchartinfodefault3Dviewport_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfodefault3Dviewport_;
    }
    /**
     * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 313;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfodefault3DviewportOrBuilder() {
      return tschchartinfodefault3Dviewport_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfodefault3Dviewport_;
    }

    public static final int TSCHCHARTINFODEFAULTDEPRECATED3DLIGHTINGPACKAGE_FIELD_NUMBER = 320;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfodefaultdeprecated3Dlightingpackage_;
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefaultdeprecated3dlightingpackage = 320;</code>
     */
    public boolean hasTschchartinfodefaultdeprecated3Dlightingpackage() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefaultdeprecated3dlightingpackage = 320;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfodefaultdeprecated3Dlightingpackage() {
      return tschchartinfodefaultdeprecated3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfodefaultdeprecated3Dlightingpackage_;
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefaultdeprecated3dlightingpackage = 320;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfodefaultdeprecated3DlightingpackageOrBuilder() {
      return tschchartinfodefaultdeprecated3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfodefaultdeprecated3Dlightingpackage_;
    }

    public static final int TSCHCHARTINFOCOLUMNDEPRECATED3DLIGHTINGPACKAGE_FIELD_NUMBER = 321;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfocolumndeprecated3Dlightingpackage_;
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumndeprecated3dlightingpackage = 321;</code>
     */
    public boolean hasTschchartinfocolumndeprecated3Dlightingpackage() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumndeprecated3dlightingpackage = 321;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfocolumndeprecated3Dlightingpackage() {
      return tschchartinfocolumndeprecated3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfocolumndeprecated3Dlightingpackage_;
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumndeprecated3dlightingpackage = 321;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfocolumndeprecated3DlightingpackageOrBuilder() {
      return tschchartinfocolumndeprecated3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfocolumndeprecated3Dlightingpackage_;
    }

    public static final int TSCHCHARTINFOBARDEPRECATED3DLIGHTINGPACKAGE_FIELD_NUMBER = 322;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfobardeprecated3Dlightingpackage_;
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobardeprecated3dlightingpackage = 322;</code>
     */
    public boolean hasTschchartinfobardeprecated3Dlightingpackage() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobardeprecated3dlightingpackage = 322;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfobardeprecated3Dlightingpackage() {
      return tschchartinfobardeprecated3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfobardeprecated3Dlightingpackage_;
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobardeprecated3dlightingpackage = 322;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfobardeprecated3DlightingpackageOrBuilder() {
      return tschchartinfobardeprecated3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfobardeprecated3Dlightingpackage_;
    }

    public static final int TSCHCHARTINFOLINEDEPRECATED3DLIGHTINGPACKAGE_FIELD_NUMBER = 323;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfolinedeprecated3Dlightingpackage_;
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfolinedeprecated3dlightingpackage = 323;</code>
     */
    public boolean hasTschchartinfolinedeprecated3Dlightingpackage() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfolinedeprecated3dlightingpackage = 323;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfolinedeprecated3Dlightingpackage() {
      return tschchartinfolinedeprecated3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfolinedeprecated3Dlightingpackage_;
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfolinedeprecated3dlightingpackage = 323;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfolinedeprecated3DlightingpackageOrBuilder() {
      return tschchartinfolinedeprecated3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfolinedeprecated3Dlightingpackage_;
    }

    public static final int TSCHCHARTINFOAREADEPRECATED3DLIGHTINGPACKAGE_FIELD_NUMBER = 324;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfoareadeprecated3Dlightingpackage_;
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoareadeprecated3dlightingpackage = 324;</code>
     */
    public boolean hasTschchartinfoareadeprecated3Dlightingpackage() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoareadeprecated3dlightingpackage = 324;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfoareadeprecated3Dlightingpackage() {
      return tschchartinfoareadeprecated3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfoareadeprecated3Dlightingpackage_;
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoareadeprecated3dlightingpackage = 324;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfoareadeprecated3DlightingpackageOrBuilder() {
      return tschchartinfoareadeprecated3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfoareadeprecated3Dlightingpackage_;
    }

    public static final int TSCHCHARTINFOPIEDEPRECATED3DLIGHTINGPACKAGE_FIELD_NUMBER = 325;
    private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfopiedeprecated3Dlightingpackage_;
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopiedeprecated3dlightingpackage = 325;</code>
     */
    public boolean hasTschchartinfopiedeprecated3Dlightingpackage() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopiedeprecated3dlightingpackage = 325;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfopiedeprecated3Dlightingpackage() {
      return tschchartinfopiedeprecated3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfopiedeprecated3Dlightingpackage_;
    }
    /**
     * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopiedeprecated3dlightingpackage = 325;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfopiedeprecated3DlightingpackageOrBuilder() {
      return tschchartinfopiedeprecated3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfopiedeprecated3Dlightingpackage_;
    }

    public static final int TSCHCHARTINFODEFAULTSKIPHIDDENDATA_FIELD_NUMBER = 326;
    private boolean tschchartinfodefaultskiphiddendata_;
    /**
     * <code>optional bool tschchartinfodefaultskiphiddendata = 326;</code>
     */
    public boolean hasTschchartinfodefaultskiphiddendata() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional bool tschchartinfodefaultskiphiddendata = 326;</code>
     */
    public boolean getTschchartinfodefaultskiphiddendata() {
      return tschchartinfodefaultskiphiddendata_;
    }

    public static final int TSCHCHARTINFODEFAULT3DBEVELEDGES_FIELD_NUMBER = 327;
    private boolean tschchartinfodefault3Dbeveledges_;
    /**
     * <code>optional bool tschchartinfodefault3dbeveledges = 327;</code>
     */
    public boolean hasTschchartinfodefault3Dbeveledges() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional bool tschchartinfodefault3dbeveledges = 327;</code>
     */
    public boolean getTschchartinfodefault3Dbeveledges() {
      return tschchartinfodefault3Dbeveledges_;
    }

    public static final int TSCHCHARTINFODEFAULT3DBARSHAPE_FIELD_NUMBER = 336;
    private int tschchartinfodefault3Dbarshape_;
    /**
     * <code>optional int32 tschchartinfodefault3dbarshape = 336;</code>
     */
    public boolean hasTschchartinfodefault3Dbarshape() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int32 tschchartinfodefault3dbarshape = 336;</code>
     */
    public int getTschchartinfodefault3Dbarshape() {
      return tschchartinfodefault3Dbarshape_;
    }

    public static final int TSCHCHARTINFODEFAULT3DINTERSETDEPTHGAP_FIELD_NUMBER = 331;
    private float tschchartinfodefault3Dintersetdepthgap_;
    /**
     * <code>optional float tschchartinfodefault3dintersetdepthgap = 331;</code>
     */
    public boolean hasTschchartinfodefault3Dintersetdepthgap() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional float tschchartinfodefault3dintersetdepthgap = 331;</code>
     */
    public float getTschchartinfodefault3Dintersetdepthgap() {
      return tschchartinfodefault3Dintersetdepthgap_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSuper()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSuper().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasTschchartinfodefault3Drotation()) {
        if (!getTschchartinfodefault3Drotation().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfodefault3Dscale()) {
        if (!getTschchartinfodefault3Dscale().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfocolumn3Dscale()) {
        if (!getTschchartinfocolumn3Dscale().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfobar3Dscale()) {
        if (!getTschchartinfobar3Dscale().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfoline3Dscale()) {
        if (!getTschchartinfoline3Dscale().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfoarea3Dscale()) {
        if (!getTschchartinfoarea3Dscale().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfopie3Dscale()) {
        if (!getTschchartinfopie3Dscale().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfodefault3Dviewport()) {
        if (!getTschchartinfodefault3Dviewport().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfodefaultdeprecated3Dlightingpackage()) {
        if (!getTschchartinfodefaultdeprecated3Dlightingpackage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfocolumndeprecated3Dlightingpackage()) {
        if (!getTschchartinfocolumndeprecated3Dlightingpackage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfobardeprecated3Dlightingpackage()) {
        if (!getTschchartinfobardeprecated3Dlightingpackage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfolinedeprecated3Dlightingpackage()) {
        if (!getTschchartinfolinedeprecated3Dlightingpackage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfoareadeprecated3Dlightingpackage()) {
        if (!getTschchartinfoareadeprecated3Dlightingpackage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartinfopiedeprecated3Dlightingpackage()) {
        if (!getTschchartinfopiedeprecated3Dlightingpackage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getSuper());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, tschchartinfodefaulttitle_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(11, tschchartinfodefaultshowlegend_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(12, tschchartinfodefaultpiestartangle_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(13, tschchartinfodefaultshowtitle_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(25, tschchartinfodefaultdeprecatedagainmasterfontnamedsize_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(300, getTschchartinfodefault3Drotation());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(301, getTschchartinfodefault3Dscale());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(302, getTschchartinfocolumn3Dscale());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(303, getTschchartinfobar3Dscale());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(304, getTschchartinfoline3Dscale());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(305, getTschchartinfoarea3Dscale());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(306, getTschchartinfopie3Dscale());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(313, getTschchartinfodefault3Dviewport());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(320, getTschchartinfodefaultdeprecated3Dlightingpackage());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(321, getTschchartinfocolumndeprecated3Dlightingpackage());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(322, getTschchartinfobardeprecated3Dlightingpackage());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(323, getTschchartinfolinedeprecated3Dlightingpackage());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeMessage(324, getTschchartinfoareadeprecated3Dlightingpackage());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeMessage(325, getTschchartinfopiedeprecated3Dlightingpackage());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeBool(326, tschchartinfodefaultskiphiddendata_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeBool(327, tschchartinfodefault3Dbeveledges_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeFloat(331, tschchartinfodefault3Dintersetdepthgap_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(336, tschchartinfodefault3Dbarshape_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSuper());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, tschchartinfodefaulttitle_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, tschchartinfodefaultshowlegend_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, tschchartinfodefaultpiestartangle_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, tschchartinfodefaultshowtitle_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, tschchartinfodefaultdeprecatedagainmasterfontnamedsize_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(300, getTschchartinfodefault3Drotation());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(301, getTschchartinfodefault3Dscale());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(302, getTschchartinfocolumn3Dscale());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(303, getTschchartinfobar3Dscale());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(304, getTschchartinfoline3Dscale());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(305, getTschchartinfoarea3Dscale());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(306, getTschchartinfopie3Dscale());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(313, getTschchartinfodefault3Dviewport());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(320, getTschchartinfodefaultdeprecated3Dlightingpackage());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(321, getTschchartinfocolumndeprecated3Dlightingpackage());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(322, getTschchartinfobardeprecated3Dlightingpackage());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(323, getTschchartinfolinedeprecated3Dlightingpackage());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(324, getTschchartinfoareadeprecated3Dlightingpackage());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(325, getTschchartinfopiedeprecated3Dlightingpackage());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(326, tschchartinfodefaultskiphiddendata_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(327, tschchartinfodefault3Dbeveledges_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(331, tschchartinfodefault3Dintersetdepthgap_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(336, tschchartinfodefault3Dbarshape_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive)) {
        return super.equals(obj);
      }
      org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive other = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive) obj;

      boolean result = true;
      result = result && (hasSuper() == other.hasSuper());
      if (hasSuper()) {
        result = result && getSuper()
            .equals(other.getSuper());
      }
      result = result && (hasTschchartinfodefaulttitle() == other.hasTschchartinfodefaulttitle());
      if (hasTschchartinfodefaulttitle()) {
        result = result && getTschchartinfodefaulttitle()
            .equals(other.getTschchartinfodefaulttitle());
      }
      result = result && (hasTschchartinfodefaultshowlegend() == other.hasTschchartinfodefaultshowlegend());
      if (hasTschchartinfodefaultshowlegend()) {
        result = result && (getTschchartinfodefaultshowlegend()
            == other.getTschchartinfodefaultshowlegend());
      }
      result = result && (hasTschchartinfodefaultpiestartangle() == other.hasTschchartinfodefaultpiestartangle());
      if (hasTschchartinfodefaultpiestartangle()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartinfodefaultpiestartangle())
            == java.lang.Float.floatToIntBits(
                other.getTschchartinfodefaultpiestartangle()));
      }
      result = result && (hasTschchartinfodefaultshowtitle() == other.hasTschchartinfodefaultshowtitle());
      if (hasTschchartinfodefaultshowtitle()) {
        result = result && (getTschchartinfodefaultshowtitle()
            == other.getTschchartinfodefaultshowtitle());
      }
      result = result && (hasTschchartinfodefaultdeprecatedagainmasterfontnamedsize() == other.hasTschchartinfodefaultdeprecatedagainmasterfontnamedsize());
      if (hasTschchartinfodefaultdeprecatedagainmasterfontnamedsize()) {
        result = result && (getTschchartinfodefaultdeprecatedagainmasterfontnamedsize()
            == other.getTschchartinfodefaultdeprecatedagainmasterfontnamedsize());
      }
      result = result && (hasTschchartinfodefault3Drotation() == other.hasTschchartinfodefault3Drotation());
      if (hasTschchartinfodefault3Drotation()) {
        result = result && getTschchartinfodefault3Drotation()
            .equals(other.getTschchartinfodefault3Drotation());
      }
      result = result && (hasTschchartinfodefault3Dscale() == other.hasTschchartinfodefault3Dscale());
      if (hasTschchartinfodefault3Dscale()) {
        result = result && getTschchartinfodefault3Dscale()
            .equals(other.getTschchartinfodefault3Dscale());
      }
      result = result && (hasTschchartinfocolumn3Dscale() == other.hasTschchartinfocolumn3Dscale());
      if (hasTschchartinfocolumn3Dscale()) {
        result = result && getTschchartinfocolumn3Dscale()
            .equals(other.getTschchartinfocolumn3Dscale());
      }
      result = result && (hasTschchartinfobar3Dscale() == other.hasTschchartinfobar3Dscale());
      if (hasTschchartinfobar3Dscale()) {
        result = result && getTschchartinfobar3Dscale()
            .equals(other.getTschchartinfobar3Dscale());
      }
      result = result && (hasTschchartinfoline3Dscale() == other.hasTschchartinfoline3Dscale());
      if (hasTschchartinfoline3Dscale()) {
        result = result && getTschchartinfoline3Dscale()
            .equals(other.getTschchartinfoline3Dscale());
      }
      result = result && (hasTschchartinfoarea3Dscale() == other.hasTschchartinfoarea3Dscale());
      if (hasTschchartinfoarea3Dscale()) {
        result = result && getTschchartinfoarea3Dscale()
            .equals(other.getTschchartinfoarea3Dscale());
      }
      result = result && (hasTschchartinfopie3Dscale() == other.hasTschchartinfopie3Dscale());
      if (hasTschchartinfopie3Dscale()) {
        result = result && getTschchartinfopie3Dscale()
            .equals(other.getTschchartinfopie3Dscale());
      }
      result = result && (hasTschchartinfodefault3Dviewport() == other.hasTschchartinfodefault3Dviewport());
      if (hasTschchartinfodefault3Dviewport()) {
        result = result && getTschchartinfodefault3Dviewport()
            .equals(other.getTschchartinfodefault3Dviewport());
      }
      result = result && (hasTschchartinfodefaultdeprecated3Dlightingpackage() == other.hasTschchartinfodefaultdeprecated3Dlightingpackage());
      if (hasTschchartinfodefaultdeprecated3Dlightingpackage()) {
        result = result && getTschchartinfodefaultdeprecated3Dlightingpackage()
            .equals(other.getTschchartinfodefaultdeprecated3Dlightingpackage());
      }
      result = result && (hasTschchartinfocolumndeprecated3Dlightingpackage() == other.hasTschchartinfocolumndeprecated3Dlightingpackage());
      if (hasTschchartinfocolumndeprecated3Dlightingpackage()) {
        result = result && getTschchartinfocolumndeprecated3Dlightingpackage()
            .equals(other.getTschchartinfocolumndeprecated3Dlightingpackage());
      }
      result = result && (hasTschchartinfobardeprecated3Dlightingpackage() == other.hasTschchartinfobardeprecated3Dlightingpackage());
      if (hasTschchartinfobardeprecated3Dlightingpackage()) {
        result = result && getTschchartinfobardeprecated3Dlightingpackage()
            .equals(other.getTschchartinfobardeprecated3Dlightingpackage());
      }
      result = result && (hasTschchartinfolinedeprecated3Dlightingpackage() == other.hasTschchartinfolinedeprecated3Dlightingpackage());
      if (hasTschchartinfolinedeprecated3Dlightingpackage()) {
        result = result && getTschchartinfolinedeprecated3Dlightingpackage()
            .equals(other.getTschchartinfolinedeprecated3Dlightingpackage());
      }
      result = result && (hasTschchartinfoareadeprecated3Dlightingpackage() == other.hasTschchartinfoareadeprecated3Dlightingpackage());
      if (hasTschchartinfoareadeprecated3Dlightingpackage()) {
        result = result && getTschchartinfoareadeprecated3Dlightingpackage()
            .equals(other.getTschchartinfoareadeprecated3Dlightingpackage());
      }
      result = result && (hasTschchartinfopiedeprecated3Dlightingpackage() == other.hasTschchartinfopiedeprecated3Dlightingpackage());
      if (hasTschchartinfopiedeprecated3Dlightingpackage()) {
        result = result && getTschchartinfopiedeprecated3Dlightingpackage()
            .equals(other.getTschchartinfopiedeprecated3Dlightingpackage());
      }
      result = result && (hasTschchartinfodefaultskiphiddendata() == other.hasTschchartinfodefaultskiphiddendata());
      if (hasTschchartinfodefaultskiphiddendata()) {
        result = result && (getTschchartinfodefaultskiphiddendata()
            == other.getTschchartinfodefaultskiphiddendata());
      }
      result = result && (hasTschchartinfodefault3Dbeveledges() == other.hasTschchartinfodefault3Dbeveledges());
      if (hasTschchartinfodefault3Dbeveledges()) {
        result = result && (getTschchartinfodefault3Dbeveledges()
            == other.getTschchartinfodefault3Dbeveledges());
      }
      result = result && (hasTschchartinfodefault3Dbarshape() == other.hasTschchartinfodefault3Dbarshape());
      if (hasTschchartinfodefault3Dbarshape()) {
        result = result && (getTschchartinfodefault3Dbarshape()
            == other.getTschchartinfodefault3Dbarshape());
      }
      result = result && (hasTschchartinfodefault3Dintersetdepthgap() == other.hasTschchartinfodefault3Dintersetdepthgap());
      if (hasTschchartinfodefault3Dintersetdepthgap()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartinfodefault3Dintersetdepthgap())
            == java.lang.Float.floatToIntBits(
                other.getTschchartinfodefault3Dintersetdepthgap()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSuper()) {
        hash = (37 * hash) + SUPER_FIELD_NUMBER;
        hash = (53 * hash) + getSuper().hashCode();
      }
      if (hasTschchartinfodefaulttitle()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTTITLE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaulttitle().hashCode();
      }
      if (hasTschchartinfodefaultshowlegend()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTSHOWLEGEND_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartinfodefaultshowlegend());
      }
      if (hasTschchartinfodefaultpiestartangle()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTPIESTARTANGLE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartinfodefaultpiestartangle());
      }
      if (hasTschchartinfodefaultshowtitle()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTSHOWTITLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartinfodefaultshowtitle());
      }
      if (hasTschchartinfodefaultdeprecatedagainmasterfontnamedsize()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTDEPRECATEDAGAINMASTERFONTNAMEDSIZE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaultdeprecatedagainmasterfontnamedsize();
      }
      if (hasTschchartinfodefault3Drotation()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULT3DROTATION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefault3Drotation().hashCode();
      }
      if (hasTschchartinfodefault3Dscale()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULT3DSCALE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefault3Dscale().hashCode();
      }
      if (hasTschchartinfocolumn3Dscale()) {
        hash = (37 * hash) + TSCHCHARTINFOCOLUMN3DSCALE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfocolumn3Dscale().hashCode();
      }
      if (hasTschchartinfobar3Dscale()) {
        hash = (37 * hash) + TSCHCHARTINFOBAR3DSCALE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfobar3Dscale().hashCode();
      }
      if (hasTschchartinfoline3Dscale()) {
        hash = (37 * hash) + TSCHCHARTINFOLINE3DSCALE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfoline3Dscale().hashCode();
      }
      if (hasTschchartinfoarea3Dscale()) {
        hash = (37 * hash) + TSCHCHARTINFOAREA3DSCALE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfoarea3Dscale().hashCode();
      }
      if (hasTschchartinfopie3Dscale()) {
        hash = (37 * hash) + TSCHCHARTINFOPIE3DSCALE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfopie3Dscale().hashCode();
      }
      if (hasTschchartinfodefault3Dviewport()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULT3DVIEWPORT_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefault3Dviewport().hashCode();
      }
      if (hasTschchartinfodefaultdeprecated3Dlightingpackage()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTDEPRECATED3DLIGHTINGPACKAGE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefaultdeprecated3Dlightingpackage().hashCode();
      }
      if (hasTschchartinfocolumndeprecated3Dlightingpackage()) {
        hash = (37 * hash) + TSCHCHARTINFOCOLUMNDEPRECATED3DLIGHTINGPACKAGE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfocolumndeprecated3Dlightingpackage().hashCode();
      }
      if (hasTschchartinfobardeprecated3Dlightingpackage()) {
        hash = (37 * hash) + TSCHCHARTINFOBARDEPRECATED3DLIGHTINGPACKAGE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfobardeprecated3Dlightingpackage().hashCode();
      }
      if (hasTschchartinfolinedeprecated3Dlightingpackage()) {
        hash = (37 * hash) + TSCHCHARTINFOLINEDEPRECATED3DLIGHTINGPACKAGE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfolinedeprecated3Dlightingpackage().hashCode();
      }
      if (hasTschchartinfoareadeprecated3Dlightingpackage()) {
        hash = (37 * hash) + TSCHCHARTINFOAREADEPRECATED3DLIGHTINGPACKAGE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfoareadeprecated3Dlightingpackage().hashCode();
      }
      if (hasTschchartinfopiedeprecated3Dlightingpackage()) {
        hash = (37 * hash) + TSCHCHARTINFOPIEDEPRECATED3DLIGHTINGPACKAGE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfopiedeprecated3Dlightingpackage().hashCode();
      }
      if (hasTschchartinfodefaultskiphiddendata()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULTSKIPHIDDENDATA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartinfodefaultskiphiddendata());
      }
      if (hasTschchartinfodefault3Dbeveledges()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULT3DBEVELEDGES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartinfodefault3Dbeveledges());
      }
      if (hasTschchartinfodefault3Dbarshape()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULT3DBARSHAPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartinfodefault3Dbarshape();
      }
      if (hasTschchartinfodefault3Dintersetdepthgap()) {
        hash = (37 * hash) + TSCHCHARTINFODEFAULT3DINTERSETDEPTHGAP_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartinfodefault3Dintersetdepthgap());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TSCH.PreUFF.ChartNonStyleArchive}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TSCH.PreUFF.ChartNonStyleArchive)
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchiveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartNonStyleArchive_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartNonStyleArchive_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive.Builder.class);
      }

      // Construct using TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSuperFieldBuilder();
          getTschchartinfodefault3DrotationFieldBuilder();
          getTschchartinfodefault3DscaleFieldBuilder();
          getTschchartinfocolumn3DscaleFieldBuilder();
          getTschchartinfobar3DscaleFieldBuilder();
          getTschchartinfoline3DscaleFieldBuilder();
          getTschchartinfoarea3DscaleFieldBuilder();
          getTschchartinfopie3DscaleFieldBuilder();
          getTschchartinfodefault3DviewportFieldBuilder();
          getTschchartinfodefaultdeprecated3DlightingpackageFieldBuilder();
          getTschchartinfocolumndeprecated3DlightingpackageFieldBuilder();
          getTschchartinfobardeprecated3DlightingpackageFieldBuilder();
          getTschchartinfolinedeprecated3DlightingpackageFieldBuilder();
          getTschchartinfoareadeprecated3DlightingpackageFieldBuilder();
          getTschchartinfopiedeprecated3DlightingpackageFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (superBuilder_ == null) {
          super_ = null;
        } else {
          superBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        tschchartinfodefaulttitle_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        tschchartinfodefaultshowlegend_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        tschchartinfodefaultpiestartangle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        tschchartinfodefaultshowtitle_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        tschchartinfodefaultdeprecatedagainmasterfontnamedsize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (tschchartinfodefault3DrotationBuilder_ == null) {
          tschchartinfodefault3Drotation_ = null;
        } else {
          tschchartinfodefault3DrotationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (tschchartinfodefault3DscaleBuilder_ == null) {
          tschchartinfodefault3Dscale_ = null;
        } else {
          tschchartinfodefault3DscaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (tschchartinfocolumn3DscaleBuilder_ == null) {
          tschchartinfocolumn3Dscale_ = null;
        } else {
          tschchartinfocolumn3DscaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (tschchartinfobar3DscaleBuilder_ == null) {
          tschchartinfobar3Dscale_ = null;
        } else {
          tschchartinfobar3DscaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (tschchartinfoline3DscaleBuilder_ == null) {
          tschchartinfoline3Dscale_ = null;
        } else {
          tschchartinfoline3DscaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        if (tschchartinfoarea3DscaleBuilder_ == null) {
          tschchartinfoarea3Dscale_ = null;
        } else {
          tschchartinfoarea3DscaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        if (tschchartinfopie3DscaleBuilder_ == null) {
          tschchartinfopie3Dscale_ = null;
        } else {
          tschchartinfopie3DscaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        if (tschchartinfodefault3DviewportBuilder_ == null) {
          tschchartinfodefault3Dviewport_ = null;
        } else {
          tschchartinfodefault3DviewportBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        if (tschchartinfodefaultdeprecated3DlightingpackageBuilder_ == null) {
          tschchartinfodefaultdeprecated3Dlightingpackage_ = null;
        } else {
          tschchartinfodefaultdeprecated3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        if (tschchartinfocolumndeprecated3DlightingpackageBuilder_ == null) {
          tschchartinfocolumndeprecated3Dlightingpackage_ = null;
        } else {
          tschchartinfocolumndeprecated3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        if (tschchartinfobardeprecated3DlightingpackageBuilder_ == null) {
          tschchartinfobardeprecated3Dlightingpackage_ = null;
        } else {
          tschchartinfobardeprecated3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        if (tschchartinfolinedeprecated3DlightingpackageBuilder_ == null) {
          tschchartinfolinedeprecated3Dlightingpackage_ = null;
        } else {
          tschchartinfolinedeprecated3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        if (tschchartinfoareadeprecated3DlightingpackageBuilder_ == null) {
          tschchartinfoareadeprecated3Dlightingpackage_ = null;
        } else {
          tschchartinfoareadeprecated3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        if (tschchartinfopiedeprecated3DlightingpackageBuilder_ == null) {
          tschchartinfopiedeprecated3Dlightingpackage_ = null;
        } else {
          tschchartinfopiedeprecated3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        tschchartinfodefaultskiphiddendata_ = false;
        bitField0_ = (bitField0_ & ~0x00100000);
        tschchartinfodefault3Dbeveledges_ = false;
        bitField0_ = (bitField0_ & ~0x00200000);
        tschchartinfodefault3Dbarshape_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        tschchartinfodefault3Dintersetdepthgap_ = 0F;
        bitField0_ = (bitField0_ & ~0x00800000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartNonStyleArchive_descriptor;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive getDefaultInstanceForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive.getDefaultInstance();
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive build() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive buildPartial() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive result = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (superBuilder_ == null) {
          result.super_ = super_;
        } else {
          result.super_ = superBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tschchartinfodefaulttitle_ = tschchartinfodefaulttitle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tschchartinfodefaultshowlegend_ = tschchartinfodefaultshowlegend_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.tschchartinfodefaultpiestartangle_ = tschchartinfodefaultpiestartangle_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.tschchartinfodefaultshowtitle_ = tschchartinfodefaultshowtitle_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.tschchartinfodefaultdeprecatedagainmasterfontnamedsize_ = tschchartinfodefaultdeprecatedagainmasterfontnamedsize_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (tschchartinfodefault3DrotationBuilder_ == null) {
          result.tschchartinfodefault3Drotation_ = tschchartinfodefault3Drotation_;
        } else {
          result.tschchartinfodefault3Drotation_ = tschchartinfodefault3DrotationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (tschchartinfodefault3DscaleBuilder_ == null) {
          result.tschchartinfodefault3Dscale_ = tschchartinfodefault3Dscale_;
        } else {
          result.tschchartinfodefault3Dscale_ = tschchartinfodefault3DscaleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (tschchartinfocolumn3DscaleBuilder_ == null) {
          result.tschchartinfocolumn3Dscale_ = tschchartinfocolumn3Dscale_;
        } else {
          result.tschchartinfocolumn3Dscale_ = tschchartinfocolumn3DscaleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (tschchartinfobar3DscaleBuilder_ == null) {
          result.tschchartinfobar3Dscale_ = tschchartinfobar3Dscale_;
        } else {
          result.tschchartinfobar3Dscale_ = tschchartinfobar3DscaleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (tschchartinfoline3DscaleBuilder_ == null) {
          result.tschchartinfoline3Dscale_ = tschchartinfoline3Dscale_;
        } else {
          result.tschchartinfoline3Dscale_ = tschchartinfoline3DscaleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        if (tschchartinfoarea3DscaleBuilder_ == null) {
          result.tschchartinfoarea3Dscale_ = tschchartinfoarea3Dscale_;
        } else {
          result.tschchartinfoarea3Dscale_ = tschchartinfoarea3DscaleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        if (tschchartinfopie3DscaleBuilder_ == null) {
          result.tschchartinfopie3Dscale_ = tschchartinfopie3Dscale_;
        } else {
          result.tschchartinfopie3Dscale_ = tschchartinfopie3DscaleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        if (tschchartinfodefault3DviewportBuilder_ == null) {
          result.tschchartinfodefault3Dviewport_ = tschchartinfodefault3Dviewport_;
        } else {
          result.tschchartinfodefault3Dviewport_ = tschchartinfodefault3DviewportBuilder_.build();
        }
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        if (tschchartinfodefaultdeprecated3DlightingpackageBuilder_ == null) {
          result.tschchartinfodefaultdeprecated3Dlightingpackage_ = tschchartinfodefaultdeprecated3Dlightingpackage_;
        } else {
          result.tschchartinfodefaultdeprecated3Dlightingpackage_ = tschchartinfodefaultdeprecated3DlightingpackageBuilder_.build();
        }
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        if (tschchartinfocolumndeprecated3DlightingpackageBuilder_ == null) {
          result.tschchartinfocolumndeprecated3Dlightingpackage_ = tschchartinfocolumndeprecated3Dlightingpackage_;
        } else {
          result.tschchartinfocolumndeprecated3Dlightingpackage_ = tschchartinfocolumndeprecated3DlightingpackageBuilder_.build();
        }
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        if (tschchartinfobardeprecated3DlightingpackageBuilder_ == null) {
          result.tschchartinfobardeprecated3Dlightingpackage_ = tschchartinfobardeprecated3Dlightingpackage_;
        } else {
          result.tschchartinfobardeprecated3Dlightingpackage_ = tschchartinfobardeprecated3DlightingpackageBuilder_.build();
        }
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        if (tschchartinfolinedeprecated3DlightingpackageBuilder_ == null) {
          result.tschchartinfolinedeprecated3Dlightingpackage_ = tschchartinfolinedeprecated3Dlightingpackage_;
        } else {
          result.tschchartinfolinedeprecated3Dlightingpackage_ = tschchartinfolinedeprecated3DlightingpackageBuilder_.build();
        }
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        if (tschchartinfoareadeprecated3DlightingpackageBuilder_ == null) {
          result.tschchartinfoareadeprecated3Dlightingpackage_ = tschchartinfoareadeprecated3Dlightingpackage_;
        } else {
          result.tschchartinfoareadeprecated3Dlightingpackage_ = tschchartinfoareadeprecated3DlightingpackageBuilder_.build();
        }
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        if (tschchartinfopiedeprecated3DlightingpackageBuilder_ == null) {
          result.tschchartinfopiedeprecated3Dlightingpackage_ = tschchartinfopiedeprecated3Dlightingpackage_;
        } else {
          result.tschchartinfopiedeprecated3Dlightingpackage_ = tschchartinfopiedeprecated3DlightingpackageBuilder_.build();
        }
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.tschchartinfodefaultskiphiddendata_ = tschchartinfodefaultskiphiddendata_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.tschchartinfodefault3Dbeveledges_ = tschchartinfodefault3Dbeveledges_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.tschchartinfodefault3Dbarshape_ = tschchartinfodefault3Dbarshape_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.tschchartinfodefault3Dintersetdepthgap_ = tschchartinfodefault3Dintersetdepthgap_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive) {
          return mergeFrom((org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive other) {
        if (other == org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive.getDefaultInstance()) return this;
        if (other.hasSuper()) {
          mergeSuper(other.getSuper());
        }
        if (other.hasTschchartinfodefaulttitle()) {
          bitField0_ |= 0x00000002;
          tschchartinfodefaulttitle_ = other.tschchartinfodefaulttitle_;
          onChanged();
        }
        if (other.hasTschchartinfodefaultshowlegend()) {
          setTschchartinfodefaultshowlegend(other.getTschchartinfodefaultshowlegend());
        }
        if (other.hasTschchartinfodefaultpiestartangle()) {
          setTschchartinfodefaultpiestartangle(other.getTschchartinfodefaultpiestartangle());
        }
        if (other.hasTschchartinfodefaultshowtitle()) {
          setTschchartinfodefaultshowtitle(other.getTschchartinfodefaultshowtitle());
        }
        if (other.hasTschchartinfodefaultdeprecatedagainmasterfontnamedsize()) {
          setTschchartinfodefaultdeprecatedagainmasterfontnamedsize(other.getTschchartinfodefaultdeprecatedagainmasterfontnamedsize());
        }
        if (other.hasTschchartinfodefault3Drotation()) {
          mergeTschchartinfodefault3Drotation(other.getTschchartinfodefault3Drotation());
        }
        if (other.hasTschchartinfodefault3Dscale()) {
          mergeTschchartinfodefault3Dscale(other.getTschchartinfodefault3Dscale());
        }
        if (other.hasTschchartinfocolumn3Dscale()) {
          mergeTschchartinfocolumn3Dscale(other.getTschchartinfocolumn3Dscale());
        }
        if (other.hasTschchartinfobar3Dscale()) {
          mergeTschchartinfobar3Dscale(other.getTschchartinfobar3Dscale());
        }
        if (other.hasTschchartinfoline3Dscale()) {
          mergeTschchartinfoline3Dscale(other.getTschchartinfoline3Dscale());
        }
        if (other.hasTschchartinfoarea3Dscale()) {
          mergeTschchartinfoarea3Dscale(other.getTschchartinfoarea3Dscale());
        }
        if (other.hasTschchartinfopie3Dscale()) {
          mergeTschchartinfopie3Dscale(other.getTschchartinfopie3Dscale());
        }
        if (other.hasTschchartinfodefault3Dviewport()) {
          mergeTschchartinfodefault3Dviewport(other.getTschchartinfodefault3Dviewport());
        }
        if (other.hasTschchartinfodefaultdeprecated3Dlightingpackage()) {
          mergeTschchartinfodefaultdeprecated3Dlightingpackage(other.getTschchartinfodefaultdeprecated3Dlightingpackage());
        }
        if (other.hasTschchartinfocolumndeprecated3Dlightingpackage()) {
          mergeTschchartinfocolumndeprecated3Dlightingpackage(other.getTschchartinfocolumndeprecated3Dlightingpackage());
        }
        if (other.hasTschchartinfobardeprecated3Dlightingpackage()) {
          mergeTschchartinfobardeprecated3Dlightingpackage(other.getTschchartinfobardeprecated3Dlightingpackage());
        }
        if (other.hasTschchartinfolinedeprecated3Dlightingpackage()) {
          mergeTschchartinfolinedeprecated3Dlightingpackage(other.getTschchartinfolinedeprecated3Dlightingpackage());
        }
        if (other.hasTschchartinfoareadeprecated3Dlightingpackage()) {
          mergeTschchartinfoareadeprecated3Dlightingpackage(other.getTschchartinfoareadeprecated3Dlightingpackage());
        }
        if (other.hasTschchartinfopiedeprecated3Dlightingpackage()) {
          mergeTschchartinfopiedeprecated3Dlightingpackage(other.getTschchartinfopiedeprecated3Dlightingpackage());
        }
        if (other.hasTschchartinfodefaultskiphiddendata()) {
          setTschchartinfodefaultskiphiddendata(other.getTschchartinfodefaultskiphiddendata());
        }
        if (other.hasTschchartinfodefault3Dbeveledges()) {
          setTschchartinfodefault3Dbeveledges(other.getTschchartinfodefault3Dbeveledges());
        }
        if (other.hasTschchartinfodefault3Dbarshape()) {
          setTschchartinfodefault3Dbarshape(other.getTschchartinfodefault3Dbarshape());
        }
        if (other.hasTschchartinfodefault3Dintersetdepthgap()) {
          setTschchartinfodefault3Dintersetdepthgap(other.getTschchartinfodefault3Dintersetdepthgap());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSuper()) {
          return false;
        }
        if (!getSuper().isInitialized()) {
          return false;
        }
        if (hasTschchartinfodefault3Drotation()) {
          if (!getTschchartinfodefault3Drotation().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfodefault3Dscale()) {
          if (!getTschchartinfodefault3Dscale().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfocolumn3Dscale()) {
          if (!getTschchartinfocolumn3Dscale().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfobar3Dscale()) {
          if (!getTschchartinfobar3Dscale().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfoline3Dscale()) {
          if (!getTschchartinfoline3Dscale().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfoarea3Dscale()) {
          if (!getTschchartinfoarea3Dscale().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfopie3Dscale()) {
          if (!getTschchartinfopie3Dscale().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfodefault3Dviewport()) {
          if (!getTschchartinfodefault3Dviewport().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfodefaultdeprecated3Dlightingpackage()) {
          if (!getTschchartinfodefaultdeprecated3Dlightingpackage().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfocolumndeprecated3Dlightingpackage()) {
          if (!getTschchartinfocolumndeprecated3Dlightingpackage().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfobardeprecated3Dlightingpackage()) {
          if (!getTschchartinfobardeprecated3Dlightingpackage().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfolinedeprecated3Dlightingpackage()) {
          if (!getTschchartinfolinedeprecated3Dlightingpackage().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfoareadeprecated3Dlightingpackage()) {
          if (!getTschchartinfoareadeprecated3Dlightingpackage().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartinfopiedeprecated3Dlightingpackage()) {
          if (!getTschchartinfopiedeprecated3Dlightingpackage().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive super_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder> superBuilder_;
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public boolean hasSuper() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive getSuper() {
        if (superBuilder_ == null) {
          return super_ == null ? org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
        } else {
          return superBuilder_.getMessage();
        }
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder setSuper(org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive value) {
        if (superBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          super_ = value;
          onChanged();
        } else {
          superBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder setSuper(
          org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder builderForValue) {
        if (superBuilder_ == null) {
          super_ = builderForValue.build();
          onChanged();
        } else {
          superBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder mergeSuper(org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive value) {
        if (superBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              super_ != null &&
              super_ != org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance()) {
            super_ =
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.newBuilder(super_).mergeFrom(value).buildPartial();
          } else {
            super_ = value;
          }
          onChanged();
        } else {
          superBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder clearSuper() {
        if (superBuilder_ == null) {
          super_ = null;
          onChanged();
        } else {
          superBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder getSuperBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSuperFieldBuilder().getBuilder();
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder getSuperOrBuilder() {
        if (superBuilder_ != null) {
          return superBuilder_.getMessageOrBuilder();
        } else {
          return super_ == null ?
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
        }
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder> 
          getSuperFieldBuilder() {
        if (superBuilder_ == null) {
          superBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder>(
                  getSuper(),
                  getParentForChildren(),
                  isClean());
          super_ = null;
        }
        return superBuilder_;
      }

      private java.lang.Object tschchartinfodefaulttitle_ = "";
      /**
       * <code>optional string tschchartinfodefaulttitle = 10;</code>
       */
      public boolean hasTschchartinfodefaulttitle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string tschchartinfodefaulttitle = 10;</code>
       */
      public java.lang.String getTschchartinfodefaulttitle() {
        java.lang.Object ref = tschchartinfodefaulttitle_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tschchartinfodefaulttitle_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string tschchartinfodefaulttitle = 10;</code>
       */
      public com.google.protobuf.ByteString
          getTschchartinfodefaulttitleBytes() {
        java.lang.Object ref = tschchartinfodefaulttitle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tschchartinfodefaulttitle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string tschchartinfodefaulttitle = 10;</code>
       */
      public Builder setTschchartinfodefaulttitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        tschchartinfodefaulttitle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string tschchartinfodefaulttitle = 10;</code>
       */
      public Builder clearTschchartinfodefaulttitle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tschchartinfodefaulttitle_ = getDefaultInstance().getTschchartinfodefaulttitle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string tschchartinfodefaulttitle = 10;</code>
       */
      public Builder setTschchartinfodefaulttitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        tschchartinfodefaulttitle_ = value;
        onChanged();
        return this;
      }

      private boolean tschchartinfodefaultshowlegend_ ;
      /**
       * <code>optional bool tschchartinfodefaultshowlegend = 11;</code>
       */
      public boolean hasTschchartinfodefaultshowlegend() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool tschchartinfodefaultshowlegend = 11;</code>
       */
      public boolean getTschchartinfodefaultshowlegend() {
        return tschchartinfodefaultshowlegend_;
      }
      /**
       * <code>optional bool tschchartinfodefaultshowlegend = 11;</code>
       */
      public Builder setTschchartinfodefaultshowlegend(boolean value) {
        bitField0_ |= 0x00000004;
        tschchartinfodefaultshowlegend_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartinfodefaultshowlegend = 11;</code>
       */
      public Builder clearTschchartinfodefaultshowlegend() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tschchartinfodefaultshowlegend_ = false;
        onChanged();
        return this;
      }

      private float tschchartinfodefaultpiestartangle_ ;
      /**
       * <code>optional float tschchartinfodefaultpiestartangle = 12;</code>
       */
      public boolean hasTschchartinfodefaultpiestartangle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float tschchartinfodefaultpiestartangle = 12;</code>
       */
      public float getTschchartinfodefaultpiestartangle() {
        return tschchartinfodefaultpiestartangle_;
      }
      /**
       * <code>optional float tschchartinfodefaultpiestartangle = 12;</code>
       */
      public Builder setTschchartinfodefaultpiestartangle(float value) {
        bitField0_ |= 0x00000008;
        tschchartinfodefaultpiestartangle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartinfodefaultpiestartangle = 12;</code>
       */
      public Builder clearTschchartinfodefaultpiestartangle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        tschchartinfodefaultpiestartangle_ = 0F;
        onChanged();
        return this;
      }

      private boolean tschchartinfodefaultshowtitle_ ;
      /**
       * <code>optional bool tschchartinfodefaultshowtitle = 13;</code>
       */
      public boolean hasTschchartinfodefaultshowtitle() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool tschchartinfodefaultshowtitle = 13;</code>
       */
      public boolean getTschchartinfodefaultshowtitle() {
        return tschchartinfodefaultshowtitle_;
      }
      /**
       * <code>optional bool tschchartinfodefaultshowtitle = 13;</code>
       */
      public Builder setTschchartinfodefaultshowtitle(boolean value) {
        bitField0_ |= 0x00000010;
        tschchartinfodefaultshowtitle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartinfodefaultshowtitle = 13;</code>
       */
      public Builder clearTschchartinfodefaultshowtitle() {
        bitField0_ = (bitField0_ & ~0x00000010);
        tschchartinfodefaultshowtitle_ = false;
        onChanged();
        return this;
      }

      private int tschchartinfodefaultdeprecatedagainmasterfontnamedsize_ ;
      /**
       * <code>optional int32 tschchartinfodefaultdeprecatedagainmasterfontnamedsize = 25;</code>
       */
      public boolean hasTschchartinfodefaultdeprecatedagainmasterfontnamedsize() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 tschchartinfodefaultdeprecatedagainmasterfontnamedsize = 25;</code>
       */
      public int getTschchartinfodefaultdeprecatedagainmasterfontnamedsize() {
        return tschchartinfodefaultdeprecatedagainmasterfontnamedsize_;
      }
      /**
       * <code>optional int32 tschchartinfodefaultdeprecatedagainmasterfontnamedsize = 25;</code>
       */
      public Builder setTschchartinfodefaultdeprecatedagainmasterfontnamedsize(int value) {
        bitField0_ |= 0x00000020;
        tschchartinfodefaultdeprecatedagainmasterfontnamedsize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartinfodefaultdeprecatedagainmasterfontnamedsize = 25;</code>
       */
      public Builder clearTschchartinfodefaultdeprecatedagainmasterfontnamedsize() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tschchartinfodefaultdeprecatedagainmasterfontnamedsize_ = 0;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfodefault3Drotation_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> tschchartinfodefault3DrotationBuilder_;
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 300;</code>
       */
      public boolean hasTschchartinfodefault3Drotation() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 300;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfodefault3Drotation() {
        if (tschchartinfodefault3DrotationBuilder_ == null) {
          return tschchartinfodefault3Drotation_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfodefault3Drotation_;
        } else {
          return tschchartinfodefault3DrotationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 300;</code>
       */
      public Builder setTschchartinfodefault3Drotation(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfodefault3DrotationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfodefault3Drotation_ = value;
          onChanged();
        } else {
          tschchartinfodefault3DrotationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 300;</code>
       */
      public Builder setTschchartinfodefault3Drotation(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder builderForValue) {
        if (tschchartinfodefault3DrotationBuilder_ == null) {
          tschchartinfodefault3Drotation_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfodefault3DrotationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 300;</code>
       */
      public Builder mergeTschchartinfodefault3Drotation(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfodefault3DrotationBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              tschchartinfodefault3Drotation_ != null &&
              tschchartinfodefault3Drotation_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance()) {
            tschchartinfodefault3Drotation_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.newBuilder(tschchartinfodefault3Drotation_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfodefault3Drotation_ = value;
          }
          onChanged();
        } else {
          tschchartinfodefault3DrotationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 300;</code>
       */
      public Builder clearTschchartinfodefault3Drotation() {
        if (tschchartinfodefault3DrotationBuilder_ == null) {
          tschchartinfodefault3Drotation_ = null;
          onChanged();
        } else {
          tschchartinfodefault3DrotationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 300;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder getTschchartinfodefault3DrotationBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getTschchartinfodefault3DrotationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 300;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfodefault3DrotationOrBuilder() {
        if (tschchartinfodefault3DrotationBuilder_ != null) {
          return tschchartinfodefault3DrotationBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfodefault3Drotation_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfodefault3Drotation_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3drotation = 300;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> 
          getTschchartinfodefault3DrotationFieldBuilder() {
        if (tschchartinfodefault3DrotationBuilder_ == null) {
          tschchartinfodefault3DrotationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder>(
                  getTschchartinfodefault3Drotation(),
                  getParentForChildren(),
                  isClean());
          tschchartinfodefault3Drotation_ = null;
        }
        return tschchartinfodefault3DrotationBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfodefault3Dscale_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> tschchartinfodefault3DscaleBuilder_;
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 301;</code>
       */
      public boolean hasTschchartinfodefault3Dscale() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 301;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfodefault3Dscale() {
        if (tschchartinfodefault3DscaleBuilder_ == null) {
          return tschchartinfodefault3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfodefault3Dscale_;
        } else {
          return tschchartinfodefault3DscaleBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 301;</code>
       */
      public Builder setTschchartinfodefault3Dscale(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfodefault3DscaleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfodefault3Dscale_ = value;
          onChanged();
        } else {
          tschchartinfodefault3DscaleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 301;</code>
       */
      public Builder setTschchartinfodefault3Dscale(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder builderForValue) {
        if (tschchartinfodefault3DscaleBuilder_ == null) {
          tschchartinfodefault3Dscale_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfodefault3DscaleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 301;</code>
       */
      public Builder mergeTschchartinfodefault3Dscale(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfodefault3DscaleBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              tschchartinfodefault3Dscale_ != null &&
              tschchartinfodefault3Dscale_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance()) {
            tschchartinfodefault3Dscale_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.newBuilder(tschchartinfodefault3Dscale_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfodefault3Dscale_ = value;
          }
          onChanged();
        } else {
          tschchartinfodefault3DscaleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 301;</code>
       */
      public Builder clearTschchartinfodefault3Dscale() {
        if (tschchartinfodefault3DscaleBuilder_ == null) {
          tschchartinfodefault3Dscale_ = null;
          onChanged();
        } else {
          tschchartinfodefault3DscaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 301;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder getTschchartinfodefault3DscaleBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getTschchartinfodefault3DscaleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 301;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfodefault3DscaleOrBuilder() {
        if (tschchartinfodefault3DscaleBuilder_ != null) {
          return tschchartinfodefault3DscaleBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfodefault3Dscale_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfodefault3Dscale_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dscale = 301;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> 
          getTschchartinfodefault3DscaleFieldBuilder() {
        if (tschchartinfodefault3DscaleBuilder_ == null) {
          tschchartinfodefault3DscaleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder>(
                  getTschchartinfodefault3Dscale(),
                  getParentForChildren(),
                  isClean());
          tschchartinfodefault3Dscale_ = null;
        }
        return tschchartinfodefault3DscaleBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfocolumn3Dscale_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> tschchartinfocolumn3DscaleBuilder_;
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 302;</code>
       */
      public boolean hasTschchartinfocolumn3Dscale() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 302;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfocolumn3Dscale() {
        if (tschchartinfocolumn3DscaleBuilder_ == null) {
          return tschchartinfocolumn3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfocolumn3Dscale_;
        } else {
          return tschchartinfocolumn3DscaleBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 302;</code>
       */
      public Builder setTschchartinfocolumn3Dscale(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfocolumn3DscaleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfocolumn3Dscale_ = value;
          onChanged();
        } else {
          tschchartinfocolumn3DscaleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 302;</code>
       */
      public Builder setTschchartinfocolumn3Dscale(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder builderForValue) {
        if (tschchartinfocolumn3DscaleBuilder_ == null) {
          tschchartinfocolumn3Dscale_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfocolumn3DscaleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 302;</code>
       */
      public Builder mergeTschchartinfocolumn3Dscale(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfocolumn3DscaleBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              tschchartinfocolumn3Dscale_ != null &&
              tschchartinfocolumn3Dscale_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance()) {
            tschchartinfocolumn3Dscale_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.newBuilder(tschchartinfocolumn3Dscale_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfocolumn3Dscale_ = value;
          }
          onChanged();
        } else {
          tschchartinfocolumn3DscaleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 302;</code>
       */
      public Builder clearTschchartinfocolumn3Dscale() {
        if (tschchartinfocolumn3DscaleBuilder_ == null) {
          tschchartinfocolumn3Dscale_ = null;
          onChanged();
        } else {
          tschchartinfocolumn3DscaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 302;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder getTschchartinfocolumn3DscaleBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getTschchartinfocolumn3DscaleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 302;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfocolumn3DscaleOrBuilder() {
        if (tschchartinfocolumn3DscaleBuilder_ != null) {
          return tschchartinfocolumn3DscaleBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfocolumn3Dscale_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfocolumn3Dscale_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfocolumn3dscale = 302;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> 
          getTschchartinfocolumn3DscaleFieldBuilder() {
        if (tschchartinfocolumn3DscaleBuilder_ == null) {
          tschchartinfocolumn3DscaleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder>(
                  getTschchartinfocolumn3Dscale(),
                  getParentForChildren(),
                  isClean());
          tschchartinfocolumn3Dscale_ = null;
        }
        return tschchartinfocolumn3DscaleBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfobar3Dscale_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> tschchartinfobar3DscaleBuilder_;
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 303;</code>
       */
      public boolean hasTschchartinfobar3Dscale() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 303;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfobar3Dscale() {
        if (tschchartinfobar3DscaleBuilder_ == null) {
          return tschchartinfobar3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfobar3Dscale_;
        } else {
          return tschchartinfobar3DscaleBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 303;</code>
       */
      public Builder setTschchartinfobar3Dscale(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfobar3DscaleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfobar3Dscale_ = value;
          onChanged();
        } else {
          tschchartinfobar3DscaleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 303;</code>
       */
      public Builder setTschchartinfobar3Dscale(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder builderForValue) {
        if (tschchartinfobar3DscaleBuilder_ == null) {
          tschchartinfobar3Dscale_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfobar3DscaleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 303;</code>
       */
      public Builder mergeTschchartinfobar3Dscale(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfobar3DscaleBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              tschchartinfobar3Dscale_ != null &&
              tschchartinfobar3Dscale_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance()) {
            tschchartinfobar3Dscale_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.newBuilder(tschchartinfobar3Dscale_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfobar3Dscale_ = value;
          }
          onChanged();
        } else {
          tschchartinfobar3DscaleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 303;</code>
       */
      public Builder clearTschchartinfobar3Dscale() {
        if (tschchartinfobar3DscaleBuilder_ == null) {
          tschchartinfobar3Dscale_ = null;
          onChanged();
        } else {
          tschchartinfobar3DscaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 303;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder getTschchartinfobar3DscaleBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getTschchartinfobar3DscaleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 303;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfobar3DscaleOrBuilder() {
        if (tschchartinfobar3DscaleBuilder_ != null) {
          return tschchartinfobar3DscaleBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfobar3Dscale_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfobar3Dscale_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfobar3dscale = 303;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> 
          getTschchartinfobar3DscaleFieldBuilder() {
        if (tschchartinfobar3DscaleBuilder_ == null) {
          tschchartinfobar3DscaleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder>(
                  getTschchartinfobar3Dscale(),
                  getParentForChildren(),
                  isClean());
          tschchartinfobar3Dscale_ = null;
        }
        return tschchartinfobar3DscaleBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfoline3Dscale_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> tschchartinfoline3DscaleBuilder_;
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 304;</code>
       */
      public boolean hasTschchartinfoline3Dscale() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 304;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfoline3Dscale() {
        if (tschchartinfoline3DscaleBuilder_ == null) {
          return tschchartinfoline3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfoline3Dscale_;
        } else {
          return tschchartinfoline3DscaleBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 304;</code>
       */
      public Builder setTschchartinfoline3Dscale(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfoline3DscaleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfoline3Dscale_ = value;
          onChanged();
        } else {
          tschchartinfoline3DscaleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 304;</code>
       */
      public Builder setTschchartinfoline3Dscale(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder builderForValue) {
        if (tschchartinfoline3DscaleBuilder_ == null) {
          tschchartinfoline3Dscale_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfoline3DscaleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 304;</code>
       */
      public Builder mergeTschchartinfoline3Dscale(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfoline3DscaleBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              tschchartinfoline3Dscale_ != null &&
              tschchartinfoline3Dscale_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance()) {
            tschchartinfoline3Dscale_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.newBuilder(tschchartinfoline3Dscale_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfoline3Dscale_ = value;
          }
          onChanged();
        } else {
          tschchartinfoline3DscaleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 304;</code>
       */
      public Builder clearTschchartinfoline3Dscale() {
        if (tschchartinfoline3DscaleBuilder_ == null) {
          tschchartinfoline3Dscale_ = null;
          onChanged();
        } else {
          tschchartinfoline3DscaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 304;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder getTschchartinfoline3DscaleBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getTschchartinfoline3DscaleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 304;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfoline3DscaleOrBuilder() {
        if (tschchartinfoline3DscaleBuilder_ != null) {
          return tschchartinfoline3DscaleBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfoline3Dscale_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfoline3Dscale_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoline3dscale = 304;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> 
          getTschchartinfoline3DscaleFieldBuilder() {
        if (tschchartinfoline3DscaleBuilder_ == null) {
          tschchartinfoline3DscaleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder>(
                  getTschchartinfoline3Dscale(),
                  getParentForChildren(),
                  isClean());
          tschchartinfoline3Dscale_ = null;
        }
        return tschchartinfoline3DscaleBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfoarea3Dscale_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> tschchartinfoarea3DscaleBuilder_;
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 305;</code>
       */
      public boolean hasTschchartinfoarea3Dscale() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 305;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfoarea3Dscale() {
        if (tschchartinfoarea3DscaleBuilder_ == null) {
          return tschchartinfoarea3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfoarea3Dscale_;
        } else {
          return tschchartinfoarea3DscaleBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 305;</code>
       */
      public Builder setTschchartinfoarea3Dscale(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfoarea3DscaleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfoarea3Dscale_ = value;
          onChanged();
        } else {
          tschchartinfoarea3DscaleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 305;</code>
       */
      public Builder setTschchartinfoarea3Dscale(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder builderForValue) {
        if (tschchartinfoarea3DscaleBuilder_ == null) {
          tschchartinfoarea3Dscale_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfoarea3DscaleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 305;</code>
       */
      public Builder mergeTschchartinfoarea3Dscale(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfoarea3DscaleBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              tschchartinfoarea3Dscale_ != null &&
              tschchartinfoarea3Dscale_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance()) {
            tschchartinfoarea3Dscale_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.newBuilder(tschchartinfoarea3Dscale_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfoarea3Dscale_ = value;
          }
          onChanged();
        } else {
          tschchartinfoarea3DscaleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 305;</code>
       */
      public Builder clearTschchartinfoarea3Dscale() {
        if (tschchartinfoarea3DscaleBuilder_ == null) {
          tschchartinfoarea3Dscale_ = null;
          onChanged();
        } else {
          tschchartinfoarea3DscaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 305;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder getTschchartinfoarea3DscaleBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getTschchartinfoarea3DscaleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 305;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfoarea3DscaleOrBuilder() {
        if (tschchartinfoarea3DscaleBuilder_ != null) {
          return tschchartinfoarea3DscaleBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfoarea3Dscale_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfoarea3Dscale_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfoarea3dscale = 305;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> 
          getTschchartinfoarea3DscaleFieldBuilder() {
        if (tschchartinfoarea3DscaleBuilder_ == null) {
          tschchartinfoarea3DscaleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder>(
                  getTschchartinfoarea3Dscale(),
                  getParentForChildren(),
                  isClean());
          tschchartinfoarea3Dscale_ = null;
        }
        return tschchartinfoarea3DscaleBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfopie3Dscale_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> tschchartinfopie3DscaleBuilder_;
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 306;</code>
       */
      public boolean hasTschchartinfopie3Dscale() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 306;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfopie3Dscale() {
        if (tschchartinfopie3DscaleBuilder_ == null) {
          return tschchartinfopie3Dscale_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfopie3Dscale_;
        } else {
          return tschchartinfopie3DscaleBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 306;</code>
       */
      public Builder setTschchartinfopie3Dscale(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfopie3DscaleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfopie3Dscale_ = value;
          onChanged();
        } else {
          tschchartinfopie3DscaleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 306;</code>
       */
      public Builder setTschchartinfopie3Dscale(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder builderForValue) {
        if (tschchartinfopie3DscaleBuilder_ == null) {
          tschchartinfopie3Dscale_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfopie3DscaleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 306;</code>
       */
      public Builder mergeTschchartinfopie3Dscale(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfopie3DscaleBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000) &&
              tschchartinfopie3Dscale_ != null &&
              tschchartinfopie3Dscale_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance()) {
            tschchartinfopie3Dscale_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.newBuilder(tschchartinfopie3Dscale_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfopie3Dscale_ = value;
          }
          onChanged();
        } else {
          tschchartinfopie3DscaleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 306;</code>
       */
      public Builder clearTschchartinfopie3Dscale() {
        if (tschchartinfopie3DscaleBuilder_ == null) {
          tschchartinfopie3Dscale_ = null;
          onChanged();
        } else {
          tschchartinfopie3DscaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 306;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder getTschchartinfopie3DscaleBuilder() {
        bitField0_ |= 0x00001000;
        onChanged();
        return getTschchartinfopie3DscaleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 306;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfopie3DscaleOrBuilder() {
        if (tschchartinfopie3DscaleBuilder_ != null) {
          return tschchartinfopie3DscaleBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfopie3Dscale_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfopie3Dscale_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfopie3dscale = 306;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> 
          getTschchartinfopie3DscaleFieldBuilder() {
        if (tschchartinfopie3DscaleBuilder_ == null) {
          tschchartinfopie3DscaleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder>(
                  getTschchartinfopie3Dscale(),
                  getParentForChildren(),
                  isClean());
          tschchartinfopie3Dscale_ = null;
        }
        return tschchartinfopie3DscaleBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive tschchartinfodefault3Dviewport_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> tschchartinfodefault3DviewportBuilder_;
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 313;</code>
       */
      public boolean hasTschchartinfodefault3Dviewport() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 313;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive getTschchartinfodefault3Dviewport() {
        if (tschchartinfodefault3DviewportBuilder_ == null) {
          return tschchartinfodefault3Dviewport_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfodefault3Dviewport_;
        } else {
          return tschchartinfodefault3DviewportBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 313;</code>
       */
      public Builder setTschchartinfodefault3Dviewport(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfodefault3DviewportBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfodefault3Dviewport_ = value;
          onChanged();
        } else {
          tschchartinfodefault3DviewportBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 313;</code>
       */
      public Builder setTschchartinfodefault3Dviewport(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder builderForValue) {
        if (tschchartinfodefault3DviewportBuilder_ == null) {
          tschchartinfodefault3Dviewport_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfodefault3DviewportBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 313;</code>
       */
      public Builder mergeTschchartinfodefault3Dviewport(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive value) {
        if (tschchartinfodefault3DviewportBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
              tschchartinfodefault3Dviewport_ != null &&
              tschchartinfodefault3Dviewport_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance()) {
            tschchartinfodefault3Dviewport_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.newBuilder(tschchartinfodefault3Dviewport_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfodefault3Dviewport_ = value;
          }
          onChanged();
        } else {
          tschchartinfodefault3DviewportBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 313;</code>
       */
      public Builder clearTschchartinfodefault3Dviewport() {
        if (tschchartinfodefault3DviewportBuilder_ == null) {
          tschchartinfodefault3Dviewport_ = null;
          onChanged();
        } else {
          tschchartinfodefault3DviewportBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 313;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder getTschchartinfodefault3DviewportBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getTschchartinfodefault3DviewportFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 313;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder getTschchartinfodefault3DviewportOrBuilder() {
        if (tschchartinfodefault3DviewportBuilder_ != null) {
          return tschchartinfodefault3DviewportBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfodefault3Dviewport_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.getDefaultInstance() : tschchartinfodefault3Dviewport_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DVectorArchive tschchartinfodefault3dviewport = 313;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder> 
          getTschchartinfodefault3DviewportFieldBuilder() {
        if (tschchartinfodefault3DviewportBuilder_ == null) {
          tschchartinfodefault3DviewportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DVectorArchiveOrBuilder>(
                  getTschchartinfodefault3Dviewport(),
                  getParentForChildren(),
                  isClean());
          tschchartinfodefault3Dviewport_ = null;
        }
        return tschchartinfodefault3DviewportBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfodefaultdeprecated3Dlightingpackage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> tschchartinfodefaultdeprecated3DlightingpackageBuilder_;
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefaultdeprecated3dlightingpackage = 320;</code>
       */
      public boolean hasTschchartinfodefaultdeprecated3Dlightingpackage() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefaultdeprecated3dlightingpackage = 320;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfodefaultdeprecated3Dlightingpackage() {
        if (tschchartinfodefaultdeprecated3DlightingpackageBuilder_ == null) {
          return tschchartinfodefaultdeprecated3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfodefaultdeprecated3Dlightingpackage_;
        } else {
          return tschchartinfodefaultdeprecated3DlightingpackageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefaultdeprecated3dlightingpackage = 320;</code>
       */
      public Builder setTschchartinfodefaultdeprecated3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfodefaultdeprecated3DlightingpackageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfodefaultdeprecated3Dlightingpackage_ = value;
          onChanged();
        } else {
          tschchartinfodefaultdeprecated3DlightingpackageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefaultdeprecated3dlightingpackage = 320;</code>
       */
      public Builder setTschchartinfodefaultdeprecated3Dlightingpackage(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder builderForValue) {
        if (tschchartinfodefaultdeprecated3DlightingpackageBuilder_ == null) {
          tschchartinfodefaultdeprecated3Dlightingpackage_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfodefaultdeprecated3DlightingpackageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefaultdeprecated3dlightingpackage = 320;</code>
       */
      public Builder mergeTschchartinfodefaultdeprecated3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfodefaultdeprecated3DlightingpackageBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000) &&
              tschchartinfodefaultdeprecated3Dlightingpackage_ != null &&
              tschchartinfodefaultdeprecated3Dlightingpackage_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance()) {
            tschchartinfodefaultdeprecated3Dlightingpackage_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.newBuilder(tschchartinfodefaultdeprecated3Dlightingpackage_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfodefaultdeprecated3Dlightingpackage_ = value;
          }
          onChanged();
        } else {
          tschchartinfodefaultdeprecated3DlightingpackageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefaultdeprecated3dlightingpackage = 320;</code>
       */
      public Builder clearTschchartinfodefaultdeprecated3Dlightingpackage() {
        if (tschchartinfodefaultdeprecated3DlightingpackageBuilder_ == null) {
          tschchartinfodefaultdeprecated3Dlightingpackage_ = null;
          onChanged();
        } else {
          tschchartinfodefaultdeprecated3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefaultdeprecated3dlightingpackage = 320;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder getTschchartinfodefaultdeprecated3DlightingpackageBuilder() {
        bitField0_ |= 0x00004000;
        onChanged();
        return getTschchartinfodefaultdeprecated3DlightingpackageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefaultdeprecated3dlightingpackage = 320;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfodefaultdeprecated3DlightingpackageOrBuilder() {
        if (tschchartinfodefaultdeprecated3DlightingpackageBuilder_ != null) {
          return tschchartinfodefaultdeprecated3DlightingpackageBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfodefaultdeprecated3Dlightingpackage_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfodefaultdeprecated3Dlightingpackage_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfodefaultdeprecated3dlightingpackage = 320;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> 
          getTschchartinfodefaultdeprecated3DlightingpackageFieldBuilder() {
        if (tschchartinfodefaultdeprecated3DlightingpackageBuilder_ == null) {
          tschchartinfodefaultdeprecated3DlightingpackageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder>(
                  getTschchartinfodefaultdeprecated3Dlightingpackage(),
                  getParentForChildren(),
                  isClean());
          tschchartinfodefaultdeprecated3Dlightingpackage_ = null;
        }
        return tschchartinfodefaultdeprecated3DlightingpackageBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfocolumndeprecated3Dlightingpackage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> tschchartinfocolumndeprecated3DlightingpackageBuilder_;
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumndeprecated3dlightingpackage = 321;</code>
       */
      public boolean hasTschchartinfocolumndeprecated3Dlightingpackage() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumndeprecated3dlightingpackage = 321;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfocolumndeprecated3Dlightingpackage() {
        if (tschchartinfocolumndeprecated3DlightingpackageBuilder_ == null) {
          return tschchartinfocolumndeprecated3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfocolumndeprecated3Dlightingpackage_;
        } else {
          return tschchartinfocolumndeprecated3DlightingpackageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumndeprecated3dlightingpackage = 321;</code>
       */
      public Builder setTschchartinfocolumndeprecated3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfocolumndeprecated3DlightingpackageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfocolumndeprecated3Dlightingpackage_ = value;
          onChanged();
        } else {
          tschchartinfocolumndeprecated3DlightingpackageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumndeprecated3dlightingpackage = 321;</code>
       */
      public Builder setTschchartinfocolumndeprecated3Dlightingpackage(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder builderForValue) {
        if (tschchartinfocolumndeprecated3DlightingpackageBuilder_ == null) {
          tschchartinfocolumndeprecated3Dlightingpackage_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfocolumndeprecated3DlightingpackageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumndeprecated3dlightingpackage = 321;</code>
       */
      public Builder mergeTschchartinfocolumndeprecated3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfocolumndeprecated3DlightingpackageBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000) &&
              tschchartinfocolumndeprecated3Dlightingpackage_ != null &&
              tschchartinfocolumndeprecated3Dlightingpackage_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance()) {
            tschchartinfocolumndeprecated3Dlightingpackage_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.newBuilder(tschchartinfocolumndeprecated3Dlightingpackage_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfocolumndeprecated3Dlightingpackage_ = value;
          }
          onChanged();
        } else {
          tschchartinfocolumndeprecated3DlightingpackageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumndeprecated3dlightingpackage = 321;</code>
       */
      public Builder clearTschchartinfocolumndeprecated3Dlightingpackage() {
        if (tschchartinfocolumndeprecated3DlightingpackageBuilder_ == null) {
          tschchartinfocolumndeprecated3Dlightingpackage_ = null;
          onChanged();
        } else {
          tschchartinfocolumndeprecated3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumndeprecated3dlightingpackage = 321;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder getTschchartinfocolumndeprecated3DlightingpackageBuilder() {
        bitField0_ |= 0x00008000;
        onChanged();
        return getTschchartinfocolumndeprecated3DlightingpackageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumndeprecated3dlightingpackage = 321;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfocolumndeprecated3DlightingpackageOrBuilder() {
        if (tschchartinfocolumndeprecated3DlightingpackageBuilder_ != null) {
          return tschchartinfocolumndeprecated3DlightingpackageBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfocolumndeprecated3Dlightingpackage_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfocolumndeprecated3Dlightingpackage_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfocolumndeprecated3dlightingpackage = 321;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> 
          getTschchartinfocolumndeprecated3DlightingpackageFieldBuilder() {
        if (tschchartinfocolumndeprecated3DlightingpackageBuilder_ == null) {
          tschchartinfocolumndeprecated3DlightingpackageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder>(
                  getTschchartinfocolumndeprecated3Dlightingpackage(),
                  getParentForChildren(),
                  isClean());
          tschchartinfocolumndeprecated3Dlightingpackage_ = null;
        }
        return tschchartinfocolumndeprecated3DlightingpackageBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfobardeprecated3Dlightingpackage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> tschchartinfobardeprecated3DlightingpackageBuilder_;
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobardeprecated3dlightingpackage = 322;</code>
       */
      public boolean hasTschchartinfobardeprecated3Dlightingpackage() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobardeprecated3dlightingpackage = 322;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfobardeprecated3Dlightingpackage() {
        if (tschchartinfobardeprecated3DlightingpackageBuilder_ == null) {
          return tschchartinfobardeprecated3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfobardeprecated3Dlightingpackage_;
        } else {
          return tschchartinfobardeprecated3DlightingpackageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobardeprecated3dlightingpackage = 322;</code>
       */
      public Builder setTschchartinfobardeprecated3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfobardeprecated3DlightingpackageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfobardeprecated3Dlightingpackage_ = value;
          onChanged();
        } else {
          tschchartinfobardeprecated3DlightingpackageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobardeprecated3dlightingpackage = 322;</code>
       */
      public Builder setTschchartinfobardeprecated3Dlightingpackage(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder builderForValue) {
        if (tschchartinfobardeprecated3DlightingpackageBuilder_ == null) {
          tschchartinfobardeprecated3Dlightingpackage_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfobardeprecated3DlightingpackageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobardeprecated3dlightingpackage = 322;</code>
       */
      public Builder mergeTschchartinfobardeprecated3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfobardeprecated3DlightingpackageBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000) &&
              tschchartinfobardeprecated3Dlightingpackage_ != null &&
              tschchartinfobardeprecated3Dlightingpackage_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance()) {
            tschchartinfobardeprecated3Dlightingpackage_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.newBuilder(tschchartinfobardeprecated3Dlightingpackage_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfobardeprecated3Dlightingpackage_ = value;
          }
          onChanged();
        } else {
          tschchartinfobardeprecated3DlightingpackageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobardeprecated3dlightingpackage = 322;</code>
       */
      public Builder clearTschchartinfobardeprecated3Dlightingpackage() {
        if (tschchartinfobardeprecated3DlightingpackageBuilder_ == null) {
          tschchartinfobardeprecated3Dlightingpackage_ = null;
          onChanged();
        } else {
          tschchartinfobardeprecated3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobardeprecated3dlightingpackage = 322;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder getTschchartinfobardeprecated3DlightingpackageBuilder() {
        bitField0_ |= 0x00010000;
        onChanged();
        return getTschchartinfobardeprecated3DlightingpackageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobardeprecated3dlightingpackage = 322;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfobardeprecated3DlightingpackageOrBuilder() {
        if (tschchartinfobardeprecated3DlightingpackageBuilder_ != null) {
          return tschchartinfobardeprecated3DlightingpackageBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfobardeprecated3Dlightingpackage_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfobardeprecated3Dlightingpackage_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfobardeprecated3dlightingpackage = 322;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> 
          getTschchartinfobardeprecated3DlightingpackageFieldBuilder() {
        if (tschchartinfobardeprecated3DlightingpackageBuilder_ == null) {
          tschchartinfobardeprecated3DlightingpackageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder>(
                  getTschchartinfobardeprecated3Dlightingpackage(),
                  getParentForChildren(),
                  isClean());
          tschchartinfobardeprecated3Dlightingpackage_ = null;
        }
        return tschchartinfobardeprecated3DlightingpackageBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfolinedeprecated3Dlightingpackage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> tschchartinfolinedeprecated3DlightingpackageBuilder_;
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfolinedeprecated3dlightingpackage = 323;</code>
       */
      public boolean hasTschchartinfolinedeprecated3Dlightingpackage() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfolinedeprecated3dlightingpackage = 323;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfolinedeprecated3Dlightingpackage() {
        if (tschchartinfolinedeprecated3DlightingpackageBuilder_ == null) {
          return tschchartinfolinedeprecated3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfolinedeprecated3Dlightingpackage_;
        } else {
          return tschchartinfolinedeprecated3DlightingpackageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfolinedeprecated3dlightingpackage = 323;</code>
       */
      public Builder setTschchartinfolinedeprecated3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfolinedeprecated3DlightingpackageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfolinedeprecated3Dlightingpackage_ = value;
          onChanged();
        } else {
          tschchartinfolinedeprecated3DlightingpackageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfolinedeprecated3dlightingpackage = 323;</code>
       */
      public Builder setTschchartinfolinedeprecated3Dlightingpackage(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder builderForValue) {
        if (tschchartinfolinedeprecated3DlightingpackageBuilder_ == null) {
          tschchartinfolinedeprecated3Dlightingpackage_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfolinedeprecated3DlightingpackageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfolinedeprecated3dlightingpackage = 323;</code>
       */
      public Builder mergeTschchartinfolinedeprecated3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfolinedeprecated3DlightingpackageBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000) &&
              tschchartinfolinedeprecated3Dlightingpackage_ != null &&
              tschchartinfolinedeprecated3Dlightingpackage_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance()) {
            tschchartinfolinedeprecated3Dlightingpackage_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.newBuilder(tschchartinfolinedeprecated3Dlightingpackage_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfolinedeprecated3Dlightingpackage_ = value;
          }
          onChanged();
        } else {
          tschchartinfolinedeprecated3DlightingpackageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfolinedeprecated3dlightingpackage = 323;</code>
       */
      public Builder clearTschchartinfolinedeprecated3Dlightingpackage() {
        if (tschchartinfolinedeprecated3DlightingpackageBuilder_ == null) {
          tschchartinfolinedeprecated3Dlightingpackage_ = null;
          onChanged();
        } else {
          tschchartinfolinedeprecated3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfolinedeprecated3dlightingpackage = 323;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder getTschchartinfolinedeprecated3DlightingpackageBuilder() {
        bitField0_ |= 0x00020000;
        onChanged();
        return getTschchartinfolinedeprecated3DlightingpackageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfolinedeprecated3dlightingpackage = 323;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfolinedeprecated3DlightingpackageOrBuilder() {
        if (tschchartinfolinedeprecated3DlightingpackageBuilder_ != null) {
          return tschchartinfolinedeprecated3DlightingpackageBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfolinedeprecated3Dlightingpackage_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfolinedeprecated3Dlightingpackage_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfolinedeprecated3dlightingpackage = 323;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> 
          getTschchartinfolinedeprecated3DlightingpackageFieldBuilder() {
        if (tschchartinfolinedeprecated3DlightingpackageBuilder_ == null) {
          tschchartinfolinedeprecated3DlightingpackageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder>(
                  getTschchartinfolinedeprecated3Dlightingpackage(),
                  getParentForChildren(),
                  isClean());
          tschchartinfolinedeprecated3Dlightingpackage_ = null;
        }
        return tschchartinfolinedeprecated3DlightingpackageBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfoareadeprecated3Dlightingpackage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> tschchartinfoareadeprecated3DlightingpackageBuilder_;
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoareadeprecated3dlightingpackage = 324;</code>
       */
      public boolean hasTschchartinfoareadeprecated3Dlightingpackage() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoareadeprecated3dlightingpackage = 324;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfoareadeprecated3Dlightingpackage() {
        if (tschchartinfoareadeprecated3DlightingpackageBuilder_ == null) {
          return tschchartinfoareadeprecated3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfoareadeprecated3Dlightingpackage_;
        } else {
          return tschchartinfoareadeprecated3DlightingpackageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoareadeprecated3dlightingpackage = 324;</code>
       */
      public Builder setTschchartinfoareadeprecated3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfoareadeprecated3DlightingpackageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfoareadeprecated3Dlightingpackage_ = value;
          onChanged();
        } else {
          tschchartinfoareadeprecated3DlightingpackageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoareadeprecated3dlightingpackage = 324;</code>
       */
      public Builder setTschchartinfoareadeprecated3Dlightingpackage(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder builderForValue) {
        if (tschchartinfoareadeprecated3DlightingpackageBuilder_ == null) {
          tschchartinfoareadeprecated3Dlightingpackage_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfoareadeprecated3DlightingpackageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoareadeprecated3dlightingpackage = 324;</code>
       */
      public Builder mergeTschchartinfoareadeprecated3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfoareadeprecated3DlightingpackageBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000) &&
              tschchartinfoareadeprecated3Dlightingpackage_ != null &&
              tschchartinfoareadeprecated3Dlightingpackage_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance()) {
            tschchartinfoareadeprecated3Dlightingpackage_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.newBuilder(tschchartinfoareadeprecated3Dlightingpackage_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfoareadeprecated3Dlightingpackage_ = value;
          }
          onChanged();
        } else {
          tschchartinfoareadeprecated3DlightingpackageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoareadeprecated3dlightingpackage = 324;</code>
       */
      public Builder clearTschchartinfoareadeprecated3Dlightingpackage() {
        if (tschchartinfoareadeprecated3DlightingpackageBuilder_ == null) {
          tschchartinfoareadeprecated3Dlightingpackage_ = null;
          onChanged();
        } else {
          tschchartinfoareadeprecated3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoareadeprecated3dlightingpackage = 324;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder getTschchartinfoareadeprecated3DlightingpackageBuilder() {
        bitField0_ |= 0x00040000;
        onChanged();
        return getTschchartinfoareadeprecated3DlightingpackageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoareadeprecated3dlightingpackage = 324;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfoareadeprecated3DlightingpackageOrBuilder() {
        if (tschchartinfoareadeprecated3DlightingpackageBuilder_ != null) {
          return tschchartinfoareadeprecated3DlightingpackageBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfoareadeprecated3Dlightingpackage_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfoareadeprecated3Dlightingpackage_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfoareadeprecated3dlightingpackage = 324;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> 
          getTschchartinfoareadeprecated3DlightingpackageFieldBuilder() {
        if (tschchartinfoareadeprecated3DlightingpackageBuilder_ == null) {
          tschchartinfoareadeprecated3DlightingpackageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder>(
                  getTschchartinfoareadeprecated3Dlightingpackage(),
                  getParentForChildren(),
                  isClean());
          tschchartinfoareadeprecated3Dlightingpackage_ = null;
        }
        return tschchartinfoareadeprecated3DlightingpackageBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive tschchartinfopiedeprecated3Dlightingpackage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> tschchartinfopiedeprecated3DlightingpackageBuilder_;
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopiedeprecated3dlightingpackage = 325;</code>
       */
      public boolean hasTschchartinfopiedeprecated3Dlightingpackage() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopiedeprecated3dlightingpackage = 325;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive getTschchartinfopiedeprecated3Dlightingpackage() {
        if (tschchartinfopiedeprecated3DlightingpackageBuilder_ == null) {
          return tschchartinfopiedeprecated3Dlightingpackage_ == null ? org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfopiedeprecated3Dlightingpackage_;
        } else {
          return tschchartinfopiedeprecated3DlightingpackageBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopiedeprecated3dlightingpackage = 325;</code>
       */
      public Builder setTschchartinfopiedeprecated3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfopiedeprecated3DlightingpackageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartinfopiedeprecated3Dlightingpackage_ = value;
          onChanged();
        } else {
          tschchartinfopiedeprecated3DlightingpackageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopiedeprecated3dlightingpackage = 325;</code>
       */
      public Builder setTschchartinfopiedeprecated3Dlightingpackage(
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder builderForValue) {
        if (tschchartinfopiedeprecated3DlightingpackageBuilder_ == null) {
          tschchartinfopiedeprecated3Dlightingpackage_ = builderForValue.build();
          onChanged();
        } else {
          tschchartinfopiedeprecated3DlightingpackageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopiedeprecated3dlightingpackage = 325;</code>
       */
      public Builder mergeTschchartinfopiedeprecated3Dlightingpackage(org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive value) {
        if (tschchartinfopiedeprecated3DlightingpackageBuilder_ == null) {
          if (((bitField0_ & 0x00080000) == 0x00080000) &&
              tschchartinfopiedeprecated3Dlightingpackage_ != null &&
              tschchartinfopiedeprecated3Dlightingpackage_ != org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance()) {
            tschchartinfopiedeprecated3Dlightingpackage_ =
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.newBuilder(tschchartinfopiedeprecated3Dlightingpackage_).mergeFrom(value).buildPartial();
          } else {
            tschchartinfopiedeprecated3Dlightingpackage_ = value;
          }
          onChanged();
        } else {
          tschchartinfopiedeprecated3DlightingpackageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopiedeprecated3dlightingpackage = 325;</code>
       */
      public Builder clearTschchartinfopiedeprecated3Dlightingpackage() {
        if (tschchartinfopiedeprecated3DlightingpackageBuilder_ == null) {
          tschchartinfopiedeprecated3Dlightingpackage_ = null;
          onChanged();
        } else {
          tschchartinfopiedeprecated3DlightingpackageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        return this;
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopiedeprecated3dlightingpackage = 325;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder getTschchartinfopiedeprecated3DlightingpackageBuilder() {
        bitField0_ |= 0x00080000;
        onChanged();
        return getTschchartinfopiedeprecated3DlightingpackageFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopiedeprecated3dlightingpackage = 325;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder getTschchartinfopiedeprecated3DlightingpackageOrBuilder() {
        if (tschchartinfopiedeprecated3DlightingpackageBuilder_ != null) {
          return tschchartinfopiedeprecated3DlightingpackageBuilder_.getMessageOrBuilder();
        } else {
          return tschchartinfopiedeprecated3Dlightingpackage_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.getDefaultInstance() : tschchartinfopiedeprecated3Dlightingpackage_;
        }
      }
      /**
       * <code>optional .TSCH.Chart3DLightingPackageArchive tschchartinfopiedeprecated3dlightingpackage = 325;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder> 
          getTschchartinfopiedeprecated3DlightingpackageFieldBuilder() {
        if (tschchartinfopiedeprecated3DlightingpackageBuilder_ == null) {
          tschchartinfopiedeprecated3DlightingpackageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCH3DArchives.Chart3DLightingPackageArchiveOrBuilder>(
                  getTschchartinfopiedeprecated3Dlightingpackage(),
                  getParentForChildren(),
                  isClean());
          tschchartinfopiedeprecated3Dlightingpackage_ = null;
        }
        return tschchartinfopiedeprecated3DlightingpackageBuilder_;
      }

      private boolean tschchartinfodefaultskiphiddendata_ ;
      /**
       * <code>optional bool tschchartinfodefaultskiphiddendata = 326;</code>
       */
      public boolean hasTschchartinfodefaultskiphiddendata() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional bool tschchartinfodefaultskiphiddendata = 326;</code>
       */
      public boolean getTschchartinfodefaultskiphiddendata() {
        return tschchartinfodefaultskiphiddendata_;
      }
      /**
       * <code>optional bool tschchartinfodefaultskiphiddendata = 326;</code>
       */
      public Builder setTschchartinfodefaultskiphiddendata(boolean value) {
        bitField0_ |= 0x00100000;
        tschchartinfodefaultskiphiddendata_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartinfodefaultskiphiddendata = 326;</code>
       */
      public Builder clearTschchartinfodefaultskiphiddendata() {
        bitField0_ = (bitField0_ & ~0x00100000);
        tschchartinfodefaultskiphiddendata_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartinfodefault3Dbeveledges_ ;
      /**
       * <code>optional bool tschchartinfodefault3dbeveledges = 327;</code>
       */
      public boolean hasTschchartinfodefault3Dbeveledges() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional bool tschchartinfodefault3dbeveledges = 327;</code>
       */
      public boolean getTschchartinfodefault3Dbeveledges() {
        return tschchartinfodefault3Dbeveledges_;
      }
      /**
       * <code>optional bool tschchartinfodefault3dbeveledges = 327;</code>
       */
      public Builder setTschchartinfodefault3Dbeveledges(boolean value) {
        bitField0_ |= 0x00200000;
        tschchartinfodefault3Dbeveledges_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartinfodefault3dbeveledges = 327;</code>
       */
      public Builder clearTschchartinfodefault3Dbeveledges() {
        bitField0_ = (bitField0_ & ~0x00200000);
        tschchartinfodefault3Dbeveledges_ = false;
        onChanged();
        return this;
      }

      private int tschchartinfodefault3Dbarshape_ ;
      /**
       * <code>optional int32 tschchartinfodefault3dbarshape = 336;</code>
       */
      public boolean hasTschchartinfodefault3Dbarshape() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 tschchartinfodefault3dbarshape = 336;</code>
       */
      public int getTschchartinfodefault3Dbarshape() {
        return tschchartinfodefault3Dbarshape_;
      }
      /**
       * <code>optional int32 tschchartinfodefault3dbarshape = 336;</code>
       */
      public Builder setTschchartinfodefault3Dbarshape(int value) {
        bitField0_ |= 0x00400000;
        tschchartinfodefault3Dbarshape_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartinfodefault3dbarshape = 336;</code>
       */
      public Builder clearTschchartinfodefault3Dbarshape() {
        bitField0_ = (bitField0_ & ~0x00400000);
        tschchartinfodefault3Dbarshape_ = 0;
        onChanged();
        return this;
      }

      private float tschchartinfodefault3Dintersetdepthgap_ ;
      /**
       * <code>optional float tschchartinfodefault3dintersetdepthgap = 331;</code>
       */
      public boolean hasTschchartinfodefault3Dintersetdepthgap() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional float tschchartinfodefault3dintersetdepthgap = 331;</code>
       */
      public float getTschchartinfodefault3Dintersetdepthgap() {
        return tschchartinfodefault3Dintersetdepthgap_;
      }
      /**
       * <code>optional float tschchartinfodefault3dintersetdepthgap = 331;</code>
       */
      public Builder setTschchartinfodefault3Dintersetdepthgap(float value) {
        bitField0_ |= 0x00800000;
        tschchartinfodefault3Dintersetdepthgap_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartinfodefault3dintersetdepthgap = 331;</code>
       */
      public Builder clearTschchartinfodefault3Dintersetdepthgap() {
        bitField0_ = (bitField0_ & ~0x00800000);
        tschchartinfodefault3Dintersetdepthgap_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TSCH.PreUFF.ChartNonStyleArchive)
    }

    // @@protoc_insertion_point(class_scope:TSCH.PreUFF.ChartNonStyleArchive)
    private static final org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive();
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ChartNonStyleArchive>
        PARSER = new com.google.protobuf.AbstractParser<ChartNonStyleArchive>() {
      public ChartNonStyleArchive parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ChartNonStyleArchive(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChartNonStyleArchive> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChartNonStyleArchive> getParserForType() {
      return PARSER;
    }

    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartNonStyleArchive getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LegendStyleArchiveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TSCH.PreUFF.LegendStyleArchive)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    boolean hasSuper();
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive getSuper();
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder getSuperOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 10;</code>
     */
    boolean hasTschlegendmodeldefaultfill();
    /**
     * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 10;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschlegendmodeldefaultfill();
    /**
     * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 10;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschlegendmodeldefaultfillOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 11;</code>
     */
    boolean hasTschlegendmodeldefaultstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 11;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschlegendmodeldefaultstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 11;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschlegendmodeldefaultstrokeOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 14;</code>
     */
    boolean hasTschlegendmodeldefaultshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 14;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschlegendmodeldefaultshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 14;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschlegendmodeldefaultshadowOrBuilder();

    /**
     * <code>optional float tschlegendmodeldefaultopacity = 15;</code>
     */
    boolean hasTschlegendmodeldefaultopacity();
    /**
     * <code>optional float tschlegendmodeldefaultopacity = 15;</code>
     */
    float getTschlegendmodeldefaultopacity();

    /**
     * <code>optional int32 tschlegendmodeldefaultlabelparagraphstyleindex = 16;</code>
     */
    boolean hasTschlegendmodeldefaultlabelparagraphstyleindex();
    /**
     * <code>optional int32 tschlegendmodeldefaultlabelparagraphstyleindex = 16;</code>
     */
    int getTschlegendmodeldefaultlabelparagraphstyleindex();
  }
  /**
   * Protobuf type {@code TSCH.PreUFF.LegendStyleArchive}
   */
  public  static final class LegendStyleArchive extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TSCH.PreUFF.LegendStyleArchive)
      LegendStyleArchiveOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LegendStyleArchive.newBuilder() to construct.
    private LegendStyleArchive(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LegendStyleArchive() {
      tschlegendmodeldefaultopacity_ = 0F;
      tschlegendmodeldefaultlabelparagraphstyleindex_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LegendStyleArchive(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = super_.toBuilder();
              }
              super_ = input.readMessage(org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(super_);
                super_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 82: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = tschlegendmodeldefaultfill_.toBuilder();
              }
              tschlegendmodeldefaultfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschlegendmodeldefaultfill_);
                tschlegendmodeldefaultfill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 90: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = tschlegendmodeldefaultstroke_.toBuilder();
              }
              tschlegendmodeldefaultstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschlegendmodeldefaultstroke_);
                tschlegendmodeldefaultstroke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 114: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = tschlegendmodeldefaultshadow_.toBuilder();
              }
              tschlegendmodeldefaultshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschlegendmodeldefaultshadow_);
                tschlegendmodeldefaultshadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 125: {
              bitField0_ |= 0x00000010;
              tschlegendmodeldefaultopacity_ = input.readFloat();
              break;
            }
            case 128: {
              bitField0_ |= 0x00000020;
              tschlegendmodeldefaultlabelparagraphstyleindex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_LegendStyleArchive_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_LegendStyleArchive_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive.Builder.class);
    }

    private int bitField0_;
    public static final int SUPER_FIELD_NUMBER = 1;
    private org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive super_;
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    public boolean hasSuper() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive getSuper() {
      return super_ == null ? org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
    }
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder getSuperOrBuilder() {
      return super_ == null ? org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
    }

    public static final int TSCHLEGENDMODELDEFAULTFILL_FIELD_NUMBER = 10;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschlegendmodeldefaultfill_;
    /**
     * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 10;</code>
     */
    public boolean hasTschlegendmodeldefaultfill() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 10;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschlegendmodeldefaultfill() {
      return tschlegendmodeldefaultfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschlegendmodeldefaultfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 10;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschlegendmodeldefaultfillOrBuilder() {
      return tschlegendmodeldefaultfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschlegendmodeldefaultfill_;
    }

    public static final int TSCHLEGENDMODELDEFAULTSTROKE_FIELD_NUMBER = 11;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschlegendmodeldefaultstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 11;</code>
     */
    public boolean hasTschlegendmodeldefaultstroke() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 11;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschlegendmodeldefaultstroke() {
      return tschlegendmodeldefaultstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschlegendmodeldefaultstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 11;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschlegendmodeldefaultstrokeOrBuilder() {
      return tschlegendmodeldefaultstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschlegendmodeldefaultstroke_;
    }

    public static final int TSCHLEGENDMODELDEFAULTSHADOW_FIELD_NUMBER = 14;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschlegendmodeldefaultshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 14;</code>
     */
    public boolean hasTschlegendmodeldefaultshadow() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 14;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschlegendmodeldefaultshadow() {
      return tschlegendmodeldefaultshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschlegendmodeldefaultshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 14;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschlegendmodeldefaultshadowOrBuilder() {
      return tschlegendmodeldefaultshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschlegendmodeldefaultshadow_;
    }

    public static final int TSCHLEGENDMODELDEFAULTOPACITY_FIELD_NUMBER = 15;
    private float tschlegendmodeldefaultopacity_;
    /**
     * <code>optional float tschlegendmodeldefaultopacity = 15;</code>
     */
    public boolean hasTschlegendmodeldefaultopacity() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float tschlegendmodeldefaultopacity = 15;</code>
     */
    public float getTschlegendmodeldefaultopacity() {
      return tschlegendmodeldefaultopacity_;
    }

    public static final int TSCHLEGENDMODELDEFAULTLABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 16;
    private int tschlegendmodeldefaultlabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschlegendmodeldefaultlabelparagraphstyleindex = 16;</code>
     */
    public boolean hasTschlegendmodeldefaultlabelparagraphstyleindex() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 tschlegendmodeldefaultlabelparagraphstyleindex = 16;</code>
     */
    public int getTschlegendmodeldefaultlabelparagraphstyleindex() {
      return tschlegendmodeldefaultlabelparagraphstyleindex_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSuper()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSuper().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasTschlegendmodeldefaultfill()) {
        if (!getTschlegendmodeldefaultfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschlegendmodeldefaultstroke()) {
        if (!getTschlegendmodeldefaultstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschlegendmodeldefaultshadow()) {
        if (!getTschlegendmodeldefaultshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getSuper());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(10, getTschlegendmodeldefaultfill());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(11, getTschlegendmodeldefaultstroke());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(14, getTschlegendmodeldefaultshadow());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(15, tschlegendmodeldefaultopacity_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(16, tschlegendmodeldefaultlabelparagraphstyleindex_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSuper());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getTschlegendmodeldefaultfill());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getTschlegendmodeldefaultstroke());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getTschlegendmodeldefaultshadow());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, tschlegendmodeldefaultopacity_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, tschlegendmodeldefaultlabelparagraphstyleindex_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive)) {
        return super.equals(obj);
      }
      org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive other = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive) obj;

      boolean result = true;
      result = result && (hasSuper() == other.hasSuper());
      if (hasSuper()) {
        result = result && getSuper()
            .equals(other.getSuper());
      }
      result = result && (hasTschlegendmodeldefaultfill() == other.hasTschlegendmodeldefaultfill());
      if (hasTschlegendmodeldefaultfill()) {
        result = result && getTschlegendmodeldefaultfill()
            .equals(other.getTschlegendmodeldefaultfill());
      }
      result = result && (hasTschlegendmodeldefaultstroke() == other.hasTschlegendmodeldefaultstroke());
      if (hasTschlegendmodeldefaultstroke()) {
        result = result && getTschlegendmodeldefaultstroke()
            .equals(other.getTschlegendmodeldefaultstroke());
      }
      result = result && (hasTschlegendmodeldefaultshadow() == other.hasTschlegendmodeldefaultshadow());
      if (hasTschlegendmodeldefaultshadow()) {
        result = result && getTschlegendmodeldefaultshadow()
            .equals(other.getTschlegendmodeldefaultshadow());
      }
      result = result && (hasTschlegendmodeldefaultopacity() == other.hasTschlegendmodeldefaultopacity());
      if (hasTschlegendmodeldefaultopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschlegendmodeldefaultopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschlegendmodeldefaultopacity()));
      }
      result = result && (hasTschlegendmodeldefaultlabelparagraphstyleindex() == other.hasTschlegendmodeldefaultlabelparagraphstyleindex());
      if (hasTschlegendmodeldefaultlabelparagraphstyleindex()) {
        result = result && (getTschlegendmodeldefaultlabelparagraphstyleindex()
            == other.getTschlegendmodeldefaultlabelparagraphstyleindex());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSuper()) {
        hash = (37 * hash) + SUPER_FIELD_NUMBER;
        hash = (53 * hash) + getSuper().hashCode();
      }
      if (hasTschlegendmodeldefaultfill()) {
        hash = (37 * hash) + TSCHLEGENDMODELDEFAULTFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschlegendmodeldefaultfill().hashCode();
      }
      if (hasTschlegendmodeldefaultstroke()) {
        hash = (37 * hash) + TSCHLEGENDMODELDEFAULTSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschlegendmodeldefaultstroke().hashCode();
      }
      if (hasTschlegendmodeldefaultshadow()) {
        hash = (37 * hash) + TSCHLEGENDMODELDEFAULTSHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschlegendmodeldefaultshadow().hashCode();
      }
      if (hasTschlegendmodeldefaultopacity()) {
        hash = (37 * hash) + TSCHLEGENDMODELDEFAULTOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschlegendmodeldefaultopacity());
      }
      if (hasTschlegendmodeldefaultlabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHLEGENDMODELDEFAULTLABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschlegendmodeldefaultlabelparagraphstyleindex();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TSCH.PreUFF.LegendStyleArchive}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TSCH.PreUFF.LegendStyleArchive)
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchiveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_LegendStyleArchive_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_LegendStyleArchive_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive.Builder.class);
      }

      // Construct using TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSuperFieldBuilder();
          getTschlegendmodeldefaultfillFieldBuilder();
          getTschlegendmodeldefaultstrokeFieldBuilder();
          getTschlegendmodeldefaultshadowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (superBuilder_ == null) {
          super_ = null;
        } else {
          superBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (tschlegendmodeldefaultfillBuilder_ == null) {
          tschlegendmodeldefaultfill_ = null;
        } else {
          tschlegendmodeldefaultfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (tschlegendmodeldefaultstrokeBuilder_ == null) {
          tschlegendmodeldefaultstroke_ = null;
        } else {
          tschlegendmodeldefaultstrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (tschlegendmodeldefaultshadowBuilder_ == null) {
          tschlegendmodeldefaultshadow_ = null;
        } else {
          tschlegendmodeldefaultshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        tschlegendmodeldefaultopacity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        tschlegendmodeldefaultlabelparagraphstyleindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_LegendStyleArchive_descriptor;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive getDefaultInstanceForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive.getDefaultInstance();
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive build() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive buildPartial() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive result = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (superBuilder_ == null) {
          result.super_ = super_;
        } else {
          result.super_ = superBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (tschlegendmodeldefaultfillBuilder_ == null) {
          result.tschlegendmodeldefaultfill_ = tschlegendmodeldefaultfill_;
        } else {
          result.tschlegendmodeldefaultfill_ = tschlegendmodeldefaultfillBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (tschlegendmodeldefaultstrokeBuilder_ == null) {
          result.tschlegendmodeldefaultstroke_ = tschlegendmodeldefaultstroke_;
        } else {
          result.tschlegendmodeldefaultstroke_ = tschlegendmodeldefaultstrokeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (tschlegendmodeldefaultshadowBuilder_ == null) {
          result.tschlegendmodeldefaultshadow_ = tschlegendmodeldefaultshadow_;
        } else {
          result.tschlegendmodeldefaultshadow_ = tschlegendmodeldefaultshadowBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.tschlegendmodeldefaultopacity_ = tschlegendmodeldefaultopacity_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.tschlegendmodeldefaultlabelparagraphstyleindex_ = tschlegendmodeldefaultlabelparagraphstyleindex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive) {
          return mergeFrom((org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive other) {
        if (other == org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive.getDefaultInstance()) return this;
        if (other.hasSuper()) {
          mergeSuper(other.getSuper());
        }
        if (other.hasTschlegendmodeldefaultfill()) {
          mergeTschlegendmodeldefaultfill(other.getTschlegendmodeldefaultfill());
        }
        if (other.hasTschlegendmodeldefaultstroke()) {
          mergeTschlegendmodeldefaultstroke(other.getTschlegendmodeldefaultstroke());
        }
        if (other.hasTschlegendmodeldefaultshadow()) {
          mergeTschlegendmodeldefaultshadow(other.getTschlegendmodeldefaultshadow());
        }
        if (other.hasTschlegendmodeldefaultopacity()) {
          setTschlegendmodeldefaultopacity(other.getTschlegendmodeldefaultopacity());
        }
        if (other.hasTschlegendmodeldefaultlabelparagraphstyleindex()) {
          setTschlegendmodeldefaultlabelparagraphstyleindex(other.getTschlegendmodeldefaultlabelparagraphstyleindex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSuper()) {
          return false;
        }
        if (!getSuper().isInitialized()) {
          return false;
        }
        if (hasTschlegendmodeldefaultfill()) {
          if (!getTschlegendmodeldefaultfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschlegendmodeldefaultstroke()) {
          if (!getTschlegendmodeldefaultstroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschlegendmodeldefaultshadow()) {
          if (!getTschlegendmodeldefaultshadow().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive super_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder> superBuilder_;
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public boolean hasSuper() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive getSuper() {
        if (superBuilder_ == null) {
          return super_ == null ? org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
        } else {
          return superBuilder_.getMessage();
        }
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder setSuper(org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive value) {
        if (superBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          super_ = value;
          onChanged();
        } else {
          superBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder setSuper(
          org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder builderForValue) {
        if (superBuilder_ == null) {
          super_ = builderForValue.build();
          onChanged();
        } else {
          superBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder mergeSuper(org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive value) {
        if (superBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              super_ != null &&
              super_ != org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance()) {
            super_ =
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.newBuilder(super_).mergeFrom(value).buildPartial();
          } else {
            super_ = value;
          }
          onChanged();
        } else {
          superBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder clearSuper() {
        if (superBuilder_ == null) {
          super_ = null;
          onChanged();
        } else {
          superBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder getSuperBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSuperFieldBuilder().getBuilder();
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder getSuperOrBuilder() {
        if (superBuilder_ != null) {
          return superBuilder_.getMessageOrBuilder();
        } else {
          return super_ == null ?
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
        }
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder> 
          getSuperFieldBuilder() {
        if (superBuilder_ == null) {
          superBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder>(
                  getSuper(),
                  getParentForChildren(),
                  isClean());
          super_ = null;
        }
        return superBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschlegendmodeldefaultfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschlegendmodeldefaultfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 10;</code>
       */
      public boolean hasTschlegendmodeldefaultfill() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 10;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschlegendmodeldefaultfill() {
        if (tschlegendmodeldefaultfillBuilder_ == null) {
          return tschlegendmodeldefaultfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschlegendmodeldefaultfill_;
        } else {
          return tschlegendmodeldefaultfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 10;</code>
       */
      public Builder setTschlegendmodeldefaultfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschlegendmodeldefaultfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschlegendmodeldefaultfill_ = value;
          onChanged();
        } else {
          tschlegendmodeldefaultfillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 10;</code>
       */
      public Builder setTschlegendmodeldefaultfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschlegendmodeldefaultfillBuilder_ == null) {
          tschlegendmodeldefaultfill_ = builderForValue.build();
          onChanged();
        } else {
          tschlegendmodeldefaultfillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 10;</code>
       */
      public Builder mergeTschlegendmodeldefaultfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschlegendmodeldefaultfillBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              tschlegendmodeldefaultfill_ != null &&
              tschlegendmodeldefaultfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschlegendmodeldefaultfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschlegendmodeldefaultfill_).mergeFrom(value).buildPartial();
          } else {
            tschlegendmodeldefaultfill_ = value;
          }
          onChanged();
        } else {
          tschlegendmodeldefaultfillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 10;</code>
       */
      public Builder clearTschlegendmodeldefaultfill() {
        if (tschlegendmodeldefaultfillBuilder_ == null) {
          tschlegendmodeldefaultfill_ = null;
          onChanged();
        } else {
          tschlegendmodeldefaultfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 10;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschlegendmodeldefaultfillBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTschlegendmodeldefaultfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 10;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschlegendmodeldefaultfillOrBuilder() {
        if (tschlegendmodeldefaultfillBuilder_ != null) {
          return tschlegendmodeldefaultfillBuilder_.getMessageOrBuilder();
        } else {
          return tschlegendmodeldefaultfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschlegendmodeldefaultfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschlegendmodeldefaultfill = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschlegendmodeldefaultfillFieldBuilder() {
        if (tschlegendmodeldefaultfillBuilder_ == null) {
          tschlegendmodeldefaultfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschlegendmodeldefaultfill(),
                  getParentForChildren(),
                  isClean());
          tschlegendmodeldefaultfill_ = null;
        }
        return tschlegendmodeldefaultfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschlegendmodeldefaultstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschlegendmodeldefaultstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 11;</code>
       */
      public boolean hasTschlegendmodeldefaultstroke() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 11;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschlegendmodeldefaultstroke() {
        if (tschlegendmodeldefaultstrokeBuilder_ == null) {
          return tschlegendmodeldefaultstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschlegendmodeldefaultstroke_;
        } else {
          return tschlegendmodeldefaultstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 11;</code>
       */
      public Builder setTschlegendmodeldefaultstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschlegendmodeldefaultstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschlegendmodeldefaultstroke_ = value;
          onChanged();
        } else {
          tschlegendmodeldefaultstrokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 11;</code>
       */
      public Builder setTschlegendmodeldefaultstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschlegendmodeldefaultstrokeBuilder_ == null) {
          tschlegendmodeldefaultstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschlegendmodeldefaultstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 11;</code>
       */
      public Builder mergeTschlegendmodeldefaultstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschlegendmodeldefaultstrokeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              tschlegendmodeldefaultstroke_ != null &&
              tschlegendmodeldefaultstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschlegendmodeldefaultstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschlegendmodeldefaultstroke_).mergeFrom(value).buildPartial();
          } else {
            tschlegendmodeldefaultstroke_ = value;
          }
          onChanged();
        } else {
          tschlegendmodeldefaultstrokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 11;</code>
       */
      public Builder clearTschlegendmodeldefaultstroke() {
        if (tschlegendmodeldefaultstrokeBuilder_ == null) {
          tschlegendmodeldefaultstroke_ = null;
          onChanged();
        } else {
          tschlegendmodeldefaultstrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 11;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschlegendmodeldefaultstrokeBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getTschlegendmodeldefaultstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 11;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschlegendmodeldefaultstrokeOrBuilder() {
        if (tschlegendmodeldefaultstrokeBuilder_ != null) {
          return tschlegendmodeldefaultstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschlegendmodeldefaultstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschlegendmodeldefaultstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschlegendmodeldefaultstroke = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschlegendmodeldefaultstrokeFieldBuilder() {
        if (tschlegendmodeldefaultstrokeBuilder_ == null) {
          tschlegendmodeldefaultstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschlegendmodeldefaultstroke(),
                  getParentForChildren(),
                  isClean());
          tschlegendmodeldefaultstroke_ = null;
        }
        return tschlegendmodeldefaultstrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschlegendmodeldefaultshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschlegendmodeldefaultshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 14;</code>
       */
      public boolean hasTschlegendmodeldefaultshadow() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 14;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschlegendmodeldefaultshadow() {
        if (tschlegendmodeldefaultshadowBuilder_ == null) {
          return tschlegendmodeldefaultshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschlegendmodeldefaultshadow_;
        } else {
          return tschlegendmodeldefaultshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 14;</code>
       */
      public Builder setTschlegendmodeldefaultshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschlegendmodeldefaultshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschlegendmodeldefaultshadow_ = value;
          onChanged();
        } else {
          tschlegendmodeldefaultshadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 14;</code>
       */
      public Builder setTschlegendmodeldefaultshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschlegendmodeldefaultshadowBuilder_ == null) {
          tschlegendmodeldefaultshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschlegendmodeldefaultshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 14;</code>
       */
      public Builder mergeTschlegendmodeldefaultshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschlegendmodeldefaultshadowBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              tschlegendmodeldefaultshadow_ != null &&
              tschlegendmodeldefaultshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschlegendmodeldefaultshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschlegendmodeldefaultshadow_).mergeFrom(value).buildPartial();
          } else {
            tschlegendmodeldefaultshadow_ = value;
          }
          onChanged();
        } else {
          tschlegendmodeldefaultshadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 14;</code>
       */
      public Builder clearTschlegendmodeldefaultshadow() {
        if (tschlegendmodeldefaultshadowBuilder_ == null) {
          tschlegendmodeldefaultshadow_ = null;
          onChanged();
        } else {
          tschlegendmodeldefaultshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 14;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschlegendmodeldefaultshadowBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getTschlegendmodeldefaultshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 14;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschlegendmodeldefaultshadowOrBuilder() {
        if (tschlegendmodeldefaultshadowBuilder_ != null) {
          return tschlegendmodeldefaultshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschlegendmodeldefaultshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschlegendmodeldefaultshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschlegendmodeldefaultshadow = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschlegendmodeldefaultshadowFieldBuilder() {
        if (tschlegendmodeldefaultshadowBuilder_ == null) {
          tschlegendmodeldefaultshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschlegendmodeldefaultshadow(),
                  getParentForChildren(),
                  isClean());
          tschlegendmodeldefaultshadow_ = null;
        }
        return tschlegendmodeldefaultshadowBuilder_;
      }

      private float tschlegendmodeldefaultopacity_ ;
      /**
       * <code>optional float tschlegendmodeldefaultopacity = 15;</code>
       */
      public boolean hasTschlegendmodeldefaultopacity() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float tschlegendmodeldefaultopacity = 15;</code>
       */
      public float getTschlegendmodeldefaultopacity() {
        return tschlegendmodeldefaultopacity_;
      }
      /**
       * <code>optional float tschlegendmodeldefaultopacity = 15;</code>
       */
      public Builder setTschlegendmodeldefaultopacity(float value) {
        bitField0_ |= 0x00000010;
        tschlegendmodeldefaultopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschlegendmodeldefaultopacity = 15;</code>
       */
      public Builder clearTschlegendmodeldefaultopacity() {
        bitField0_ = (bitField0_ & ~0x00000010);
        tschlegendmodeldefaultopacity_ = 0F;
        onChanged();
        return this;
      }

      private int tschlegendmodeldefaultlabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschlegendmodeldefaultlabelparagraphstyleindex = 16;</code>
       */
      public boolean hasTschlegendmodeldefaultlabelparagraphstyleindex() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 tschlegendmodeldefaultlabelparagraphstyleindex = 16;</code>
       */
      public int getTschlegendmodeldefaultlabelparagraphstyleindex() {
        return tschlegendmodeldefaultlabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschlegendmodeldefaultlabelparagraphstyleindex = 16;</code>
       */
      public Builder setTschlegendmodeldefaultlabelparagraphstyleindex(int value) {
        bitField0_ |= 0x00000020;
        tschlegendmodeldefaultlabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschlegendmodeldefaultlabelparagraphstyleindex = 16;</code>
       */
      public Builder clearTschlegendmodeldefaultlabelparagraphstyleindex() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tschlegendmodeldefaultlabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TSCH.PreUFF.LegendStyleArchive)
    }

    // @@protoc_insertion_point(class_scope:TSCH.PreUFF.LegendStyleArchive)
    private static final org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive();
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<LegendStyleArchive>
        PARSER = new com.google.protobuf.AbstractParser<LegendStyleArchive>() {
      public LegendStyleArchive parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new LegendStyleArchive(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LegendStyleArchive> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LegendStyleArchive> getParserForType() {
      return PARSER;
    }

    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendStyleArchive getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LegendNonStyleArchiveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TSCH.PreUFF.LegendNonStyleArchive)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    boolean hasSuper();
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive getSuper();
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder getSuperOrBuilder();
  }
  /**
   * Protobuf type {@code TSCH.PreUFF.LegendNonStyleArchive}
   */
  public  static final class LegendNonStyleArchive extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TSCH.PreUFF.LegendNonStyleArchive)
      LegendNonStyleArchiveOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LegendNonStyleArchive.newBuilder() to construct.
    private LegendNonStyleArchive(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LegendNonStyleArchive() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LegendNonStyleArchive(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = super_.toBuilder();
              }
              super_ = input.readMessage(org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(super_);
                super_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_LegendNonStyleArchive_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_LegendNonStyleArchive_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive.Builder.class);
    }

    private int bitField0_;
    public static final int SUPER_FIELD_NUMBER = 1;
    private org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive super_;
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    public boolean hasSuper() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive getSuper() {
      return super_ == null ? org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
    }
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder getSuperOrBuilder() {
      return super_ == null ? org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSuper()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSuper().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getSuper());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSuper());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive)) {
        return super.equals(obj);
      }
      org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive other = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive) obj;

      boolean result = true;
      result = result && (hasSuper() == other.hasSuper());
      if (hasSuper()) {
        result = result && getSuper()
            .equals(other.getSuper());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSuper()) {
        hash = (37 * hash) + SUPER_FIELD_NUMBER;
        hash = (53 * hash) + getSuper().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TSCH.PreUFF.LegendNonStyleArchive}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TSCH.PreUFF.LegendNonStyleArchive)
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchiveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_LegendNonStyleArchive_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_LegendNonStyleArchive_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive.Builder.class);
      }

      // Construct using TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSuperFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (superBuilder_ == null) {
          super_ = null;
        } else {
          superBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_LegendNonStyleArchive_descriptor;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive getDefaultInstanceForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive.getDefaultInstance();
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive build() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive buildPartial() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive result = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (superBuilder_ == null) {
          result.super_ = super_;
        } else {
          result.super_ = superBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive) {
          return mergeFrom((org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive other) {
        if (other == org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive.getDefaultInstance()) return this;
        if (other.hasSuper()) {
          mergeSuper(other.getSuper());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSuper()) {
          return false;
        }
        if (!getSuper().isInitialized()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive super_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder> superBuilder_;
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public boolean hasSuper() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive getSuper() {
        if (superBuilder_ == null) {
          return super_ == null ? org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
        } else {
          return superBuilder_.getMessage();
        }
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder setSuper(org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive value) {
        if (superBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          super_ = value;
          onChanged();
        } else {
          superBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder setSuper(
          org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder builderForValue) {
        if (superBuilder_ == null) {
          super_ = builderForValue.build();
          onChanged();
        } else {
          superBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder mergeSuper(org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive value) {
        if (superBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              super_ != null &&
              super_ != org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance()) {
            super_ =
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.newBuilder(super_).mergeFrom(value).buildPartial();
          } else {
            super_ = value;
          }
          onChanged();
        } else {
          superBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder clearSuper() {
        if (superBuilder_ == null) {
          super_ = null;
          onChanged();
        } else {
          superBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder getSuperBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSuperFieldBuilder().getBuilder();
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder getSuperOrBuilder() {
        if (superBuilder_ != null) {
          return superBuilder_.getMessageOrBuilder();
        } else {
          return super_ == null ?
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
        }
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder> 
          getSuperFieldBuilder() {
        if (superBuilder_ == null) {
          superBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder>(
                  getSuper(),
                  getParentForChildren(),
                  isClean());
          super_ = null;
        }
        return superBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TSCH.PreUFF.LegendNonStyleArchive)
    }

    // @@protoc_insertion_point(class_scope:TSCH.PreUFF.LegendNonStyleArchive)
    private static final org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive();
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<LegendNonStyleArchive>
        PARSER = new com.google.protobuf.AbstractParser<LegendNonStyleArchive>() {
      public LegendNonStyleArchive parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new LegendNonStyleArchive(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LegendNonStyleArchive> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LegendNonStyleArchive> getParserForType() {
      return PARSER;
    }

    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.LegendNonStyleArchive getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChartAxisStyleArchiveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TSCH.PreUFF.ChartAxisStyleArchive)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    boolean hasSuper();
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive getSuper();
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder getSuperOrBuilder();

    /**
     * <code>optional bool tschchartaxisvalueshowmajorgridlines = 10;</code>
     */
    boolean hasTschchartaxisvalueshowmajorgridlines();
    /**
     * <code>optional bool tschchartaxisvalueshowmajorgridlines = 10;</code>
     */
    boolean getTschchartaxisvalueshowmajorgridlines();

    /**
     * <code>optional bool tschchartaxisvalueshowminorgridlines = 11;</code>
     */
    boolean hasTschchartaxisvalueshowminorgridlines();
    /**
     * <code>optional bool tschchartaxisvalueshowminorgridlines = 11;</code>
     */
    boolean getTschchartaxisvalueshowminorgridlines();

    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 12;</code>
     */
    boolean hasTschchartaxisvaluemajorgridlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 12;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxisvaluemajorgridlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 12;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxisvaluemajorgridlinestrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 13;</code>
     */
    boolean hasTschchartaxisvalueminorgridlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 13;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxisvalueminorgridlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 13;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxisvalueminorgridlinestrokeOrBuilder();

    /**
     * <code>optional int32 tschchartaxisvaluetickmarklocation = 14;</code>
     */
    boolean hasTschchartaxisvaluetickmarklocation();
    /**
     * <code>optional int32 tschchartaxisvaluetickmarklocation = 14;</code>
     */
    int getTschchartaxisvaluetickmarklocation();

    /**
     * <code>optional bool tschchartaxisvalueshowmajortickmarks = 15;</code>
     */
    boolean hasTschchartaxisvalueshowmajortickmarks();
    /**
     * <code>optional bool tschchartaxisvalueshowmajortickmarks = 15;</code>
     */
    boolean getTschchartaxisvalueshowmajortickmarks();

    /**
     * <code>optional bool tschchartaxisvalueshowminortickmarks = 16;</code>
     */
    boolean hasTschchartaxisvalueshowminortickmarks();
    /**
     * <code>optional bool tschchartaxisvalueshowminortickmarks = 16;</code>
     */
    boolean getTschchartaxisvalueshowminortickmarks();

    /**
     * <code>optional float tschchartaxisvaluelabelsorientation = 17;</code>
     */
    boolean hasTschchartaxisvaluelabelsorientation();
    /**
     * <code>optional float tschchartaxisvaluelabelsorientation = 17;</code>
     */
    float getTschchartaxisvaluelabelsorientation();

    /**
     * <code>optional bool tschchartaxisvalueshowminimumlabel = 18;</code>
     */
    boolean hasTschchartaxisvalueshowminimumlabel();
    /**
     * <code>optional bool tschchartaxisvalueshowminimumlabel = 18;</code>
     */
    boolean getTschchartaxisvalueshowminimumlabel();

    /**
     * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 21;</code>
     */
    boolean hasTschchartaxisvaluemajorgridlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 21;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartaxisvaluemajorgridlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 21;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartaxisvaluemajorgridlineshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 22;</code>
     */
    boolean hasTschchartaxisvalueminorgridlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 22;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartaxisvalueminorgridlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 22;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartaxisvalueminorgridlineshadowOrBuilder();

    /**
     * <code>optional float tschchartaxisvaluemajorgridlineopacity = 23;</code>
     */
    boolean hasTschchartaxisvaluemajorgridlineopacity();
    /**
     * <code>optional float tschchartaxisvaluemajorgridlineopacity = 23;</code>
     */
    float getTschchartaxisvaluemajorgridlineopacity();

    /**
     * <code>optional float tschchartaxisvalueminorgridlineopacity = 24;</code>
     */
    boolean hasTschchartaxisvalueminorgridlineopacity();
    /**
     * <code>optional float tschchartaxisvalueminorgridlineopacity = 24;</code>
     */
    float getTschchartaxisvalueminorgridlineopacity();

    /**
     * <code>optional bool tschchartaxisvalueshowaxis = 25;</code>
     */
    boolean hasTschchartaxisvalueshowaxis();
    /**
     * <code>optional bool tschchartaxisvalueshowaxis = 25;</code>
     */
    boolean getTschchartaxisvalueshowaxis();

    /**
     * <code>optional bool tschchartaxiscategoryshowmajorgridlines = 50;</code>
     */
    boolean hasTschchartaxiscategoryshowmajorgridlines();
    /**
     * <code>optional bool tschchartaxiscategoryshowmajorgridlines = 50;</code>
     */
    boolean getTschchartaxiscategoryshowmajorgridlines();

    /**
     * <code>optional bool tschchartaxiscategoryshowminorgridlines = 51;</code>
     */
    boolean hasTschchartaxiscategoryshowminorgridlines();
    /**
     * <code>optional bool tschchartaxiscategoryshowminorgridlines = 51;</code>
     */
    boolean getTschchartaxiscategoryshowminorgridlines();

    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 52;</code>
     */
    boolean hasTschchartaxiscategorymajorgridlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 52;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxiscategorymajorgridlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 52;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxiscategorymajorgridlinestrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 53;</code>
     */
    boolean hasTschchartaxiscategoryminorgridlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 53;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxiscategoryminorgridlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 53;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxiscategoryminorgridlinestrokeOrBuilder();

    /**
     * <code>optional int32 tschchartaxiscategorytickmarklocation = 54;</code>
     */
    boolean hasTschchartaxiscategorytickmarklocation();
    /**
     * <code>optional int32 tschchartaxiscategorytickmarklocation = 54;</code>
     */
    int getTschchartaxiscategorytickmarklocation();

    /**
     * <code>optional bool tschchartaxiscategoryshowmajortickmarks = 55;</code>
     */
    boolean hasTschchartaxiscategoryshowmajortickmarks();
    /**
     * <code>optional bool tschchartaxiscategoryshowmajortickmarks = 55;</code>
     */
    boolean getTschchartaxiscategoryshowmajortickmarks();

    /**
     * <code>optional bool tschchartaxiscategoryshowminortickmarks = 56;</code>
     */
    boolean hasTschchartaxiscategoryshowminortickmarks();
    /**
     * <code>optional bool tschchartaxiscategoryshowminortickmarks = 56;</code>
     */
    boolean getTschchartaxiscategoryshowminortickmarks();

    /**
     * <code>optional float tschchartaxiscategorylabelsorientation = 57;</code>
     */
    boolean hasTschchartaxiscategorylabelsorientation();
    /**
     * <code>optional float tschchartaxiscategorylabelsorientation = 57;</code>
     */
    float getTschchartaxiscategorylabelsorientation();

    /**
     * <code>optional int32 tschchartaxiscategoryhorizontalspacing = 58;</code>
     */
    boolean hasTschchartaxiscategoryhorizontalspacing();
    /**
     * <code>optional int32 tschchartaxiscategoryhorizontalspacing = 58;</code>
     */
    int getTschchartaxiscategoryhorizontalspacing();

    /**
     * <code>optional int32 tschchartaxiscategoryverticalspacing = 59;</code>
     */
    boolean hasTschchartaxiscategoryverticalspacing();
    /**
     * <code>optional int32 tschchartaxiscategoryverticalspacing = 59;</code>
     */
    int getTschchartaxiscategoryverticalspacing();

    /**
     * <code>optional bool tschchartaxiscategoryshowlastlabel = 60;</code>
     */
    boolean hasTschchartaxiscategoryshowlastlabel();
    /**
     * <code>optional bool tschchartaxiscategoryshowlastlabel = 60;</code>
     */
    boolean getTschchartaxiscategoryshowlastlabel();

    /**
     * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 63;</code>
     */
    boolean hasTschchartaxiscategorymajorgridlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 63;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartaxiscategorymajorgridlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 63;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartaxiscategorymajorgridlineshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 64;</code>
     */
    boolean hasTschchartaxiscategoryminorgridlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 64;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartaxiscategoryminorgridlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 64;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartaxiscategoryminorgridlineshadowOrBuilder();

    /**
     * <code>optional float tschchartaxiscategorymajorgridlineopacity = 65;</code>
     */
    boolean hasTschchartaxiscategorymajorgridlineopacity();
    /**
     * <code>optional float tschchartaxiscategorymajorgridlineopacity = 65;</code>
     */
    float getTschchartaxiscategorymajorgridlineopacity();

    /**
     * <code>optional float tschchartaxiscategoryminorgridlineopacity = 66;</code>
     */
    boolean hasTschchartaxiscategoryminorgridlineopacity();
    /**
     * <code>optional float tschchartaxiscategoryminorgridlineopacity = 66;</code>
     */
    float getTschchartaxiscategoryminorgridlineopacity();

    /**
     * <code>optional bool tschchartaxiscategoryshowaxis = 67;</code>
     */
    boolean hasTschchartaxiscategoryshowaxis();
    /**
     * <code>optional bool tschchartaxiscategoryshowaxis = 67;</code>
     */
    boolean getTschchartaxiscategoryshowaxis();

    /**
     * <code>optional float tschchartaxisdefaultlabelsorientation = 102;</code>
     */
    boolean hasTschchartaxisdefaultlabelsorientation();
    /**
     * <code>optional float tschchartaxisdefaultlabelsorientation = 102;</code>
     */
    float getTschchartaxisdefaultlabelsorientation();

    /**
     * <code>optional int32 tschchartaxisdefaulttitleparagraphstyleindex = 110;</code>
     */
    boolean hasTschchartaxisdefaulttitleparagraphstyleindex();
    /**
     * <code>optional int32 tschchartaxisdefaulttitleparagraphstyleindex = 110;</code>
     */
    int getTschchartaxisdefaulttitleparagraphstyleindex();

    /**
     * <code>optional int32 tschchartaxisdefaultlabelparagraphstyleindex = 111;</code>
     */
    boolean hasTschchartaxisdefaultlabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartaxisdefaultlabelparagraphstyleindex = 111;</code>
     */
    int getTschchartaxisdefaultlabelparagraphstyleindex();

    /**
     * <code>optional int32 tschchartaxisvaluetitleparagraphstyleindex = 112;</code>
     */
    boolean hasTschchartaxisvaluetitleparagraphstyleindex();
    /**
     * <code>optional int32 tschchartaxisvaluetitleparagraphstyleindex = 112;</code>
     */
    int getTschchartaxisvaluetitleparagraphstyleindex();

    /**
     * <code>optional int32 tschchartaxisvaluelabelparagraphstyleindex = 113;</code>
     */
    boolean hasTschchartaxisvaluelabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartaxisvaluelabelparagraphstyleindex = 113;</code>
     */
    int getTschchartaxisvaluelabelparagraphstyleindex();

    /**
     * <code>optional int32 tschchartaxiscategorytitleparagraphstyleindex = 114;</code>
     */
    boolean hasTschchartaxiscategorytitleparagraphstyleindex();
    /**
     * <code>optional int32 tschchartaxiscategorytitleparagraphstyleindex = 114;</code>
     */
    int getTschchartaxiscategorytitleparagraphstyleindex();

    /**
     * <code>optional int32 tschchartaxiscategorylabelparagraphstyleindex = 115;</code>
     */
    boolean hasTschchartaxiscategorylabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartaxiscategorylabelparagraphstyleindex = 115;</code>
     */
    int getTschchartaxiscategorylabelparagraphstyleindex();

    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 331;</code>
     */
    boolean hasTschchartaxisvalue3Dgridlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 331;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxisvalue3Dgridlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 331;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxisvalue3DgridlinestrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 332;</code>
     */
    boolean hasTschchartaxiscategory3Dgridlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 332;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxiscategory3Dgridlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 332;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxiscategory3DgridlinestrokeOrBuilder();

    /**
     * <code>optional float tschchartaxisvalue3dgridlineopacity = 333;</code>
     */
    boolean hasTschchartaxisvalue3Dgridlineopacity();
    /**
     * <code>optional float tschchartaxisvalue3dgridlineopacity = 333;</code>
     */
    float getTschchartaxisvalue3Dgridlineopacity();

    /**
     * <code>optional float tschchartaxiscategory3dgridlineopacity = 334;</code>
     */
    boolean hasTschchartaxiscategory3Dgridlineopacity();
    /**
     * <code>optional float tschchartaxiscategory3dgridlineopacity = 334;</code>
     */
    float getTschchartaxiscategory3Dgridlineopacity();
  }
  /**
   * Protobuf type {@code TSCH.PreUFF.ChartAxisStyleArchive}
   */
  public  static final class ChartAxisStyleArchive extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TSCH.PreUFF.ChartAxisStyleArchive)
      ChartAxisStyleArchiveOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChartAxisStyleArchive.newBuilder() to construct.
    private ChartAxisStyleArchive(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChartAxisStyleArchive() {
      tschchartaxisvalueshowmajorgridlines_ = false;
      tschchartaxisvalueshowminorgridlines_ = false;
      tschchartaxisvaluetickmarklocation_ = 0;
      tschchartaxisvalueshowmajortickmarks_ = false;
      tschchartaxisvalueshowminortickmarks_ = false;
      tschchartaxisvaluelabelsorientation_ = 0F;
      tschchartaxisvalueshowminimumlabel_ = false;
      tschchartaxisvaluemajorgridlineopacity_ = 0F;
      tschchartaxisvalueminorgridlineopacity_ = 0F;
      tschchartaxisvalueshowaxis_ = false;
      tschchartaxiscategoryshowmajorgridlines_ = false;
      tschchartaxiscategoryshowminorgridlines_ = false;
      tschchartaxiscategorytickmarklocation_ = 0;
      tschchartaxiscategoryshowmajortickmarks_ = false;
      tschchartaxiscategoryshowminortickmarks_ = false;
      tschchartaxiscategorylabelsorientation_ = 0F;
      tschchartaxiscategoryhorizontalspacing_ = 0;
      tschchartaxiscategoryverticalspacing_ = 0;
      tschchartaxiscategoryshowlastlabel_ = false;
      tschchartaxiscategorymajorgridlineopacity_ = 0F;
      tschchartaxiscategoryminorgridlineopacity_ = 0F;
      tschchartaxiscategoryshowaxis_ = false;
      tschchartaxisdefaultlabelsorientation_ = 0F;
      tschchartaxisdefaulttitleparagraphstyleindex_ = 0;
      tschchartaxisdefaultlabelparagraphstyleindex_ = 0;
      tschchartaxisvaluetitleparagraphstyleindex_ = 0;
      tschchartaxisvaluelabelparagraphstyleindex_ = 0;
      tschchartaxiscategorytitleparagraphstyleindex_ = 0;
      tschchartaxiscategorylabelparagraphstyleindex_ = 0;
      tschchartaxisvalue3Dgridlineopacity_ = 0F;
      tschchartaxiscategory3Dgridlineopacity_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChartAxisStyleArchive(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = super_.toBuilder();
              }
              super_ = input.readMessage(org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(super_);
                super_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 80: {
              bitField0_ |= 0x00000002;
              tschchartaxisvalueshowmajorgridlines_ = input.readBool();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000004;
              tschchartaxisvalueshowminorgridlines_ = input.readBool();
              break;
            }
            case 98: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = tschchartaxisvaluemajorgridlinestroke_.toBuilder();
              }
              tschchartaxisvaluemajorgridlinestroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxisvaluemajorgridlinestroke_);
                tschchartaxisvaluemajorgridlinestroke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 106: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = tschchartaxisvalueminorgridlinestroke_.toBuilder();
              }
              tschchartaxisvalueminorgridlinestroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxisvalueminorgridlinestroke_);
                tschchartaxisvalueminorgridlinestroke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 112: {
              bitField0_ |= 0x00000020;
              tschchartaxisvaluetickmarklocation_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000040;
              tschchartaxisvalueshowmajortickmarks_ = input.readBool();
              break;
            }
            case 128: {
              bitField0_ |= 0x00000080;
              tschchartaxisvalueshowminortickmarks_ = input.readBool();
              break;
            }
            case 141: {
              bitField0_ |= 0x00000100;
              tschchartaxisvaluelabelsorientation_ = input.readFloat();
              break;
            }
            case 144: {
              bitField0_ |= 0x00000200;
              tschchartaxisvalueshowminimumlabel_ = input.readBool();
              break;
            }
            case 170: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = tschchartaxisvaluemajorgridlineshadow_.toBuilder();
              }
              tschchartaxisvaluemajorgridlineshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxisvaluemajorgridlineshadow_);
                tschchartaxisvaluemajorgridlineshadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 178: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = tschchartaxisvalueminorgridlineshadow_.toBuilder();
              }
              tschchartaxisvalueminorgridlineshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxisvalueminorgridlineshadow_);
                tschchartaxisvalueminorgridlineshadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 189: {
              bitField0_ |= 0x00001000;
              tschchartaxisvaluemajorgridlineopacity_ = input.readFloat();
              break;
            }
            case 197: {
              bitField0_ |= 0x00002000;
              tschchartaxisvalueminorgridlineopacity_ = input.readFloat();
              break;
            }
            case 200: {
              bitField0_ |= 0x00004000;
              tschchartaxisvalueshowaxis_ = input.readBool();
              break;
            }
            case 400: {
              bitField0_ |= 0x00008000;
              tschchartaxiscategoryshowmajorgridlines_ = input.readBool();
              break;
            }
            case 408: {
              bitField0_ |= 0x00010000;
              tschchartaxiscategoryshowminorgridlines_ = input.readBool();
              break;
            }
            case 418: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00020000) == 0x00020000)) {
                subBuilder = tschchartaxiscategorymajorgridlinestroke_.toBuilder();
              }
              tschchartaxiscategorymajorgridlinestroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxiscategorymajorgridlinestroke_);
                tschchartaxiscategorymajorgridlinestroke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00020000;
              break;
            }
            case 426: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00040000) == 0x00040000)) {
                subBuilder = tschchartaxiscategoryminorgridlinestroke_.toBuilder();
              }
              tschchartaxiscategoryminorgridlinestroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxiscategoryminorgridlinestroke_);
                tschchartaxiscategoryminorgridlinestroke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00040000;
              break;
            }
            case 432: {
              bitField0_ |= 0x00080000;
              tschchartaxiscategorytickmarklocation_ = input.readInt32();
              break;
            }
            case 440: {
              bitField0_ |= 0x00100000;
              tschchartaxiscategoryshowmajortickmarks_ = input.readBool();
              break;
            }
            case 448: {
              bitField0_ |= 0x00200000;
              tschchartaxiscategoryshowminortickmarks_ = input.readBool();
              break;
            }
            case 461: {
              bitField0_ |= 0x00400000;
              tschchartaxiscategorylabelsorientation_ = input.readFloat();
              break;
            }
            case 464: {
              bitField0_ |= 0x00800000;
              tschchartaxiscategoryhorizontalspacing_ = input.readInt32();
              break;
            }
            case 472: {
              bitField0_ |= 0x01000000;
              tschchartaxiscategoryverticalspacing_ = input.readInt32();
              break;
            }
            case 480: {
              bitField0_ |= 0x02000000;
              tschchartaxiscategoryshowlastlabel_ = input.readBool();
              break;
            }
            case 506: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x04000000) == 0x04000000)) {
                subBuilder = tschchartaxiscategorymajorgridlineshadow_.toBuilder();
              }
              tschchartaxiscategorymajorgridlineshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxiscategorymajorgridlineshadow_);
                tschchartaxiscategorymajorgridlineshadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x04000000;
              break;
            }
            case 514: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x08000000) == 0x08000000)) {
                subBuilder = tschchartaxiscategoryminorgridlineshadow_.toBuilder();
              }
              tschchartaxiscategoryminorgridlineshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxiscategoryminorgridlineshadow_);
                tschchartaxiscategoryminorgridlineshadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x08000000;
              break;
            }
            case 525: {
              bitField0_ |= 0x10000000;
              tschchartaxiscategorymajorgridlineopacity_ = input.readFloat();
              break;
            }
            case 533: {
              bitField0_ |= 0x20000000;
              tschchartaxiscategoryminorgridlineopacity_ = input.readFloat();
              break;
            }
            case 536: {
              bitField0_ |= 0x40000000;
              tschchartaxiscategoryshowaxis_ = input.readBool();
              break;
            }
            case 821: {
              bitField0_ |= 0x80000000;
              tschchartaxisdefaultlabelsorientation_ = input.readFloat();
              break;
            }
            case 880: {
              bitField1_ |= 0x00000001;
              tschchartaxisdefaulttitleparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 888: {
              bitField1_ |= 0x00000002;
              tschchartaxisdefaultlabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 896: {
              bitField1_ |= 0x00000004;
              tschchartaxisvaluetitleparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 904: {
              bitField1_ |= 0x00000008;
              tschchartaxisvaluelabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 912: {
              bitField1_ |= 0x00000010;
              tschchartaxiscategorytitleparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 920: {
              bitField1_ |= 0x00000020;
              tschchartaxiscategorylabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 2650: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000040) == 0x00000040)) {
                subBuilder = tschchartaxisvalue3Dgridlinestroke_.toBuilder();
              }
              tschchartaxisvalue3Dgridlinestroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxisvalue3Dgridlinestroke_);
                tschchartaxisvalue3Dgridlinestroke_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000040;
              break;
            }
            case 2658: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000080) == 0x00000080)) {
                subBuilder = tschchartaxiscategory3Dgridlinestroke_.toBuilder();
              }
              tschchartaxiscategory3Dgridlinestroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxiscategory3Dgridlinestroke_);
                tschchartaxiscategory3Dgridlinestroke_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000080;
              break;
            }
            case 2669: {
              bitField1_ |= 0x00000100;
              tschchartaxisvalue3Dgridlineopacity_ = input.readFloat();
              break;
            }
            case 2677: {
              bitField1_ |= 0x00000200;
              tschchartaxiscategory3Dgridlineopacity_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartAxisStyleArchive_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartAxisStyleArchive_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive.Builder.class);
    }

    private int bitField0_;
    private int bitField1_;
    public static final int SUPER_FIELD_NUMBER = 1;
    private org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive super_;
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    public boolean hasSuper() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive getSuper() {
      return super_ == null ? org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
    }
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder getSuperOrBuilder() {
      return super_ == null ? org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
    }

    public static final int TSCHCHARTAXISVALUESHOWMAJORGRIDLINES_FIELD_NUMBER = 10;
    private boolean tschchartaxisvalueshowmajorgridlines_;
    /**
     * <code>optional bool tschchartaxisvalueshowmajorgridlines = 10;</code>
     */
    public boolean hasTschchartaxisvalueshowmajorgridlines() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool tschchartaxisvalueshowmajorgridlines = 10;</code>
     */
    public boolean getTschchartaxisvalueshowmajorgridlines() {
      return tschchartaxisvalueshowmajorgridlines_;
    }

    public static final int TSCHCHARTAXISVALUESHOWMINORGRIDLINES_FIELD_NUMBER = 11;
    private boolean tschchartaxisvalueshowminorgridlines_;
    /**
     * <code>optional bool tschchartaxisvalueshowminorgridlines = 11;</code>
     */
    public boolean hasTschchartaxisvalueshowminorgridlines() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool tschchartaxisvalueshowminorgridlines = 11;</code>
     */
    public boolean getTschchartaxisvalueshowminorgridlines() {
      return tschchartaxisvalueshowminorgridlines_;
    }

    public static final int TSCHCHARTAXISVALUEMAJORGRIDLINESTROKE_FIELD_NUMBER = 12;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartaxisvaluemajorgridlinestroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 12;</code>
     */
    public boolean hasTschchartaxisvaluemajorgridlinestroke() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 12;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxisvaluemajorgridlinestroke() {
      return tschchartaxisvaluemajorgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxisvaluemajorgridlinestroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 12;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxisvaluemajorgridlinestrokeOrBuilder() {
      return tschchartaxisvaluemajorgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxisvaluemajorgridlinestroke_;
    }

    public static final int TSCHCHARTAXISVALUEMINORGRIDLINESTROKE_FIELD_NUMBER = 13;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartaxisvalueminorgridlinestroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 13;</code>
     */
    public boolean hasTschchartaxisvalueminorgridlinestroke() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 13;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxisvalueminorgridlinestroke() {
      return tschchartaxisvalueminorgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxisvalueminorgridlinestroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 13;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxisvalueminorgridlinestrokeOrBuilder() {
      return tschchartaxisvalueminorgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxisvalueminorgridlinestroke_;
    }

    public static final int TSCHCHARTAXISVALUETICKMARKLOCATION_FIELD_NUMBER = 14;
    private int tschchartaxisvaluetickmarklocation_;
    /**
     * <code>optional int32 tschchartaxisvaluetickmarklocation = 14;</code>
     */
    public boolean hasTschchartaxisvaluetickmarklocation() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 tschchartaxisvaluetickmarklocation = 14;</code>
     */
    public int getTschchartaxisvaluetickmarklocation() {
      return tschchartaxisvaluetickmarklocation_;
    }

    public static final int TSCHCHARTAXISVALUESHOWMAJORTICKMARKS_FIELD_NUMBER = 15;
    private boolean tschchartaxisvalueshowmajortickmarks_;
    /**
     * <code>optional bool tschchartaxisvalueshowmajortickmarks = 15;</code>
     */
    public boolean hasTschchartaxisvalueshowmajortickmarks() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool tschchartaxisvalueshowmajortickmarks = 15;</code>
     */
    public boolean getTschchartaxisvalueshowmajortickmarks() {
      return tschchartaxisvalueshowmajortickmarks_;
    }

    public static final int TSCHCHARTAXISVALUESHOWMINORTICKMARKS_FIELD_NUMBER = 16;
    private boolean tschchartaxisvalueshowminortickmarks_;
    /**
     * <code>optional bool tschchartaxisvalueshowminortickmarks = 16;</code>
     */
    public boolean hasTschchartaxisvalueshowminortickmarks() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool tschchartaxisvalueshowminortickmarks = 16;</code>
     */
    public boolean getTschchartaxisvalueshowminortickmarks() {
      return tschchartaxisvalueshowminortickmarks_;
    }

    public static final int TSCHCHARTAXISVALUELABELSORIENTATION_FIELD_NUMBER = 17;
    private float tschchartaxisvaluelabelsorientation_;
    /**
     * <code>optional float tschchartaxisvaluelabelsorientation = 17;</code>
     */
    public boolean hasTschchartaxisvaluelabelsorientation() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float tschchartaxisvaluelabelsorientation = 17;</code>
     */
    public float getTschchartaxisvaluelabelsorientation() {
      return tschchartaxisvaluelabelsorientation_;
    }

    public static final int TSCHCHARTAXISVALUESHOWMINIMUMLABEL_FIELD_NUMBER = 18;
    private boolean tschchartaxisvalueshowminimumlabel_;
    /**
     * <code>optional bool tschchartaxisvalueshowminimumlabel = 18;</code>
     */
    public boolean hasTschchartaxisvalueshowminimumlabel() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool tschchartaxisvalueshowminimumlabel = 18;</code>
     */
    public boolean getTschchartaxisvalueshowminimumlabel() {
      return tschchartaxisvalueshowminimumlabel_;
    }

    public static final int TSCHCHARTAXISVALUEMAJORGRIDLINESHADOW_FIELD_NUMBER = 21;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartaxisvaluemajorgridlineshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 21;</code>
     */
    public boolean hasTschchartaxisvaluemajorgridlineshadow() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 21;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartaxisvaluemajorgridlineshadow() {
      return tschchartaxisvaluemajorgridlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxisvaluemajorgridlineshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 21;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartaxisvaluemajorgridlineshadowOrBuilder() {
      return tschchartaxisvaluemajorgridlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxisvaluemajorgridlineshadow_;
    }

    public static final int TSCHCHARTAXISVALUEMINORGRIDLINESHADOW_FIELD_NUMBER = 22;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartaxisvalueminorgridlineshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 22;</code>
     */
    public boolean hasTschchartaxisvalueminorgridlineshadow() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 22;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartaxisvalueminorgridlineshadow() {
      return tschchartaxisvalueminorgridlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxisvalueminorgridlineshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 22;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartaxisvalueminorgridlineshadowOrBuilder() {
      return tschchartaxisvalueminorgridlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxisvalueminorgridlineshadow_;
    }

    public static final int TSCHCHARTAXISVALUEMAJORGRIDLINEOPACITY_FIELD_NUMBER = 23;
    private float tschchartaxisvaluemajorgridlineopacity_;
    /**
     * <code>optional float tschchartaxisvaluemajorgridlineopacity = 23;</code>
     */
    public boolean hasTschchartaxisvaluemajorgridlineopacity() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional float tschchartaxisvaluemajorgridlineopacity = 23;</code>
     */
    public float getTschchartaxisvaluemajorgridlineopacity() {
      return tschchartaxisvaluemajorgridlineopacity_;
    }

    public static final int TSCHCHARTAXISVALUEMINORGRIDLINEOPACITY_FIELD_NUMBER = 24;
    private float tschchartaxisvalueminorgridlineopacity_;
    /**
     * <code>optional float tschchartaxisvalueminorgridlineopacity = 24;</code>
     */
    public boolean hasTschchartaxisvalueminorgridlineopacity() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional float tschchartaxisvalueminorgridlineopacity = 24;</code>
     */
    public float getTschchartaxisvalueminorgridlineopacity() {
      return tschchartaxisvalueminorgridlineopacity_;
    }

    public static final int TSCHCHARTAXISVALUESHOWAXIS_FIELD_NUMBER = 25;
    private boolean tschchartaxisvalueshowaxis_;
    /**
     * <code>optional bool tschchartaxisvalueshowaxis = 25;</code>
     */
    public boolean hasTschchartaxisvalueshowaxis() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional bool tschchartaxisvalueshowaxis = 25;</code>
     */
    public boolean getTschchartaxisvalueshowaxis() {
      return tschchartaxisvalueshowaxis_;
    }

    public static final int TSCHCHARTAXISCATEGORYSHOWMAJORGRIDLINES_FIELD_NUMBER = 50;
    private boolean tschchartaxiscategoryshowmajorgridlines_;
    /**
     * <code>optional bool tschchartaxiscategoryshowmajorgridlines = 50;</code>
     */
    public boolean hasTschchartaxiscategoryshowmajorgridlines() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional bool tschchartaxiscategoryshowmajorgridlines = 50;</code>
     */
    public boolean getTschchartaxiscategoryshowmajorgridlines() {
      return tschchartaxiscategoryshowmajorgridlines_;
    }

    public static final int TSCHCHARTAXISCATEGORYSHOWMINORGRIDLINES_FIELD_NUMBER = 51;
    private boolean tschchartaxiscategoryshowminorgridlines_;
    /**
     * <code>optional bool tschchartaxiscategoryshowminorgridlines = 51;</code>
     */
    public boolean hasTschchartaxiscategoryshowminorgridlines() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional bool tschchartaxiscategoryshowminorgridlines = 51;</code>
     */
    public boolean getTschchartaxiscategoryshowminorgridlines() {
      return tschchartaxiscategoryshowminorgridlines_;
    }

    public static final int TSCHCHARTAXISCATEGORYMAJORGRIDLINESTROKE_FIELD_NUMBER = 52;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartaxiscategorymajorgridlinestroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 52;</code>
     */
    public boolean hasTschchartaxiscategorymajorgridlinestroke() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 52;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxiscategorymajorgridlinestroke() {
      return tschchartaxiscategorymajorgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxiscategorymajorgridlinestroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 52;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxiscategorymajorgridlinestrokeOrBuilder() {
      return tschchartaxiscategorymajorgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxiscategorymajorgridlinestroke_;
    }

    public static final int TSCHCHARTAXISCATEGORYMINORGRIDLINESTROKE_FIELD_NUMBER = 53;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartaxiscategoryminorgridlinestroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 53;</code>
     */
    public boolean hasTschchartaxiscategoryminorgridlinestroke() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 53;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxiscategoryminorgridlinestroke() {
      return tschchartaxiscategoryminorgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxiscategoryminorgridlinestroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 53;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxiscategoryminorgridlinestrokeOrBuilder() {
      return tschchartaxiscategoryminorgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxiscategoryminorgridlinestroke_;
    }

    public static final int TSCHCHARTAXISCATEGORYTICKMARKLOCATION_FIELD_NUMBER = 54;
    private int tschchartaxiscategorytickmarklocation_;
    /**
     * <code>optional int32 tschchartaxiscategorytickmarklocation = 54;</code>
     */
    public boolean hasTschchartaxiscategorytickmarklocation() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 tschchartaxiscategorytickmarklocation = 54;</code>
     */
    public int getTschchartaxiscategorytickmarklocation() {
      return tschchartaxiscategorytickmarklocation_;
    }

    public static final int TSCHCHARTAXISCATEGORYSHOWMAJORTICKMARKS_FIELD_NUMBER = 55;
    private boolean tschchartaxiscategoryshowmajortickmarks_;
    /**
     * <code>optional bool tschchartaxiscategoryshowmajortickmarks = 55;</code>
     */
    public boolean hasTschchartaxiscategoryshowmajortickmarks() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional bool tschchartaxiscategoryshowmajortickmarks = 55;</code>
     */
    public boolean getTschchartaxiscategoryshowmajortickmarks() {
      return tschchartaxiscategoryshowmajortickmarks_;
    }

    public static final int TSCHCHARTAXISCATEGORYSHOWMINORTICKMARKS_FIELD_NUMBER = 56;
    private boolean tschchartaxiscategoryshowminortickmarks_;
    /**
     * <code>optional bool tschchartaxiscategoryshowminortickmarks = 56;</code>
     */
    public boolean hasTschchartaxiscategoryshowminortickmarks() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional bool tschchartaxiscategoryshowminortickmarks = 56;</code>
     */
    public boolean getTschchartaxiscategoryshowminortickmarks() {
      return tschchartaxiscategoryshowminortickmarks_;
    }

    public static final int TSCHCHARTAXISCATEGORYLABELSORIENTATION_FIELD_NUMBER = 57;
    private float tschchartaxiscategorylabelsorientation_;
    /**
     * <code>optional float tschchartaxiscategorylabelsorientation = 57;</code>
     */
    public boolean hasTschchartaxiscategorylabelsorientation() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional float tschchartaxiscategorylabelsorientation = 57;</code>
     */
    public float getTschchartaxiscategorylabelsorientation() {
      return tschchartaxiscategorylabelsorientation_;
    }

    public static final int TSCHCHARTAXISCATEGORYHORIZONTALSPACING_FIELD_NUMBER = 58;
    private int tschchartaxiscategoryhorizontalspacing_;
    /**
     * <code>optional int32 tschchartaxiscategoryhorizontalspacing = 58;</code>
     */
    public boolean hasTschchartaxiscategoryhorizontalspacing() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int32 tschchartaxiscategoryhorizontalspacing = 58;</code>
     */
    public int getTschchartaxiscategoryhorizontalspacing() {
      return tschchartaxiscategoryhorizontalspacing_;
    }

    public static final int TSCHCHARTAXISCATEGORYVERTICALSPACING_FIELD_NUMBER = 59;
    private int tschchartaxiscategoryverticalspacing_;
    /**
     * <code>optional int32 tschchartaxiscategoryverticalspacing = 59;</code>
     */
    public boolean hasTschchartaxiscategoryverticalspacing() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int32 tschchartaxiscategoryverticalspacing = 59;</code>
     */
    public int getTschchartaxiscategoryverticalspacing() {
      return tschchartaxiscategoryverticalspacing_;
    }

    public static final int TSCHCHARTAXISCATEGORYSHOWLASTLABEL_FIELD_NUMBER = 60;
    private boolean tschchartaxiscategoryshowlastlabel_;
    /**
     * <code>optional bool tschchartaxiscategoryshowlastlabel = 60;</code>
     */
    public boolean hasTschchartaxiscategoryshowlastlabel() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional bool tschchartaxiscategoryshowlastlabel = 60;</code>
     */
    public boolean getTschchartaxiscategoryshowlastlabel() {
      return tschchartaxiscategoryshowlastlabel_;
    }

    public static final int TSCHCHARTAXISCATEGORYMAJORGRIDLINESHADOW_FIELD_NUMBER = 63;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartaxiscategorymajorgridlineshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 63;</code>
     */
    public boolean hasTschchartaxiscategorymajorgridlineshadow() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 63;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartaxiscategorymajorgridlineshadow() {
      return tschchartaxiscategorymajorgridlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxiscategorymajorgridlineshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 63;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartaxiscategorymajorgridlineshadowOrBuilder() {
      return tschchartaxiscategorymajorgridlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxiscategorymajorgridlineshadow_;
    }

    public static final int TSCHCHARTAXISCATEGORYMINORGRIDLINESHADOW_FIELD_NUMBER = 64;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartaxiscategoryminorgridlineshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 64;</code>
     */
    public boolean hasTschchartaxiscategoryminorgridlineshadow() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 64;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartaxiscategoryminorgridlineshadow() {
      return tschchartaxiscategoryminorgridlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxiscategoryminorgridlineshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 64;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartaxiscategoryminorgridlineshadowOrBuilder() {
      return tschchartaxiscategoryminorgridlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxiscategoryminorgridlineshadow_;
    }

    public static final int TSCHCHARTAXISCATEGORYMAJORGRIDLINEOPACITY_FIELD_NUMBER = 65;
    private float tschchartaxiscategorymajorgridlineopacity_;
    /**
     * <code>optional float tschchartaxiscategorymajorgridlineopacity = 65;</code>
     */
    public boolean hasTschchartaxiscategorymajorgridlineopacity() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional float tschchartaxiscategorymajorgridlineopacity = 65;</code>
     */
    public float getTschchartaxiscategorymajorgridlineopacity() {
      return tschchartaxiscategorymajorgridlineopacity_;
    }

    public static final int TSCHCHARTAXISCATEGORYMINORGRIDLINEOPACITY_FIELD_NUMBER = 66;
    private float tschchartaxiscategoryminorgridlineopacity_;
    /**
     * <code>optional float tschchartaxiscategoryminorgridlineopacity = 66;</code>
     */
    public boolean hasTschchartaxiscategoryminorgridlineopacity() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional float tschchartaxiscategoryminorgridlineopacity = 66;</code>
     */
    public float getTschchartaxiscategoryminorgridlineopacity() {
      return tschchartaxiscategoryminorgridlineopacity_;
    }

    public static final int TSCHCHARTAXISCATEGORYSHOWAXIS_FIELD_NUMBER = 67;
    private boolean tschchartaxiscategoryshowaxis_;
    /**
     * <code>optional bool tschchartaxiscategoryshowaxis = 67;</code>
     */
    public boolean hasTschchartaxiscategoryshowaxis() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional bool tschchartaxiscategoryshowaxis = 67;</code>
     */
    public boolean getTschchartaxiscategoryshowaxis() {
      return tschchartaxiscategoryshowaxis_;
    }

    public static final int TSCHCHARTAXISDEFAULTLABELSORIENTATION_FIELD_NUMBER = 102;
    private float tschchartaxisdefaultlabelsorientation_;
    /**
     * <code>optional float tschchartaxisdefaultlabelsorientation = 102;</code>
     */
    public boolean hasTschchartaxisdefaultlabelsorientation() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional float tschchartaxisdefaultlabelsorientation = 102;</code>
     */
    public float getTschchartaxisdefaultlabelsorientation() {
      return tschchartaxisdefaultlabelsorientation_;
    }

    public static final int TSCHCHARTAXISDEFAULTTITLEPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 110;
    private int tschchartaxisdefaulttitleparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartaxisdefaulttitleparagraphstyleindex = 110;</code>
     */
    public boolean hasTschchartaxisdefaulttitleparagraphstyleindex() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 tschchartaxisdefaulttitleparagraphstyleindex = 110;</code>
     */
    public int getTschchartaxisdefaulttitleparagraphstyleindex() {
      return tschchartaxisdefaulttitleparagraphstyleindex_;
    }

    public static final int TSCHCHARTAXISDEFAULTLABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 111;
    private int tschchartaxisdefaultlabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartaxisdefaultlabelparagraphstyleindex = 111;</code>
     */
    public boolean hasTschchartaxisdefaultlabelparagraphstyleindex() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 tschchartaxisdefaultlabelparagraphstyleindex = 111;</code>
     */
    public int getTschchartaxisdefaultlabelparagraphstyleindex() {
      return tschchartaxisdefaultlabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTAXISVALUETITLEPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 112;
    private int tschchartaxisvaluetitleparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartaxisvaluetitleparagraphstyleindex = 112;</code>
     */
    public boolean hasTschchartaxisvaluetitleparagraphstyleindex() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 tschchartaxisvaluetitleparagraphstyleindex = 112;</code>
     */
    public int getTschchartaxisvaluetitleparagraphstyleindex() {
      return tschchartaxisvaluetitleparagraphstyleindex_;
    }

    public static final int TSCHCHARTAXISVALUELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 113;
    private int tschchartaxisvaluelabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartaxisvaluelabelparagraphstyleindex = 113;</code>
     */
    public boolean hasTschchartaxisvaluelabelparagraphstyleindex() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 tschchartaxisvaluelabelparagraphstyleindex = 113;</code>
     */
    public int getTschchartaxisvaluelabelparagraphstyleindex() {
      return tschchartaxisvaluelabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTAXISCATEGORYTITLEPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 114;
    private int tschchartaxiscategorytitleparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartaxiscategorytitleparagraphstyleindex = 114;</code>
     */
    public boolean hasTschchartaxiscategorytitleparagraphstyleindex() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 tschchartaxiscategorytitleparagraphstyleindex = 114;</code>
     */
    public int getTschchartaxiscategorytitleparagraphstyleindex() {
      return tschchartaxiscategorytitleparagraphstyleindex_;
    }

    public static final int TSCHCHARTAXISCATEGORYLABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 115;
    private int tschchartaxiscategorylabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartaxiscategorylabelparagraphstyleindex = 115;</code>
     */
    public boolean hasTschchartaxiscategorylabelparagraphstyleindex() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 tschchartaxiscategorylabelparagraphstyleindex = 115;</code>
     */
    public int getTschchartaxiscategorylabelparagraphstyleindex() {
      return tschchartaxiscategorylabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTAXISVALUE3DGRIDLINESTROKE_FIELD_NUMBER = 331;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartaxisvalue3Dgridlinestroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 331;</code>
     */
    public boolean hasTschchartaxisvalue3Dgridlinestroke() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 331;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxisvalue3Dgridlinestroke() {
      return tschchartaxisvalue3Dgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxisvalue3Dgridlinestroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 331;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxisvalue3DgridlinestrokeOrBuilder() {
      return tschchartaxisvalue3Dgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxisvalue3Dgridlinestroke_;
    }

    public static final int TSCHCHARTAXISCATEGORY3DGRIDLINESTROKE_FIELD_NUMBER = 332;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartaxiscategory3Dgridlinestroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 332;</code>
     */
    public boolean hasTschchartaxiscategory3Dgridlinestroke() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 332;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxiscategory3Dgridlinestroke() {
      return tschchartaxiscategory3Dgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxiscategory3Dgridlinestroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 332;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxiscategory3DgridlinestrokeOrBuilder() {
      return tschchartaxiscategory3Dgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxiscategory3Dgridlinestroke_;
    }

    public static final int TSCHCHARTAXISVALUE3DGRIDLINEOPACITY_FIELD_NUMBER = 333;
    private float tschchartaxisvalue3Dgridlineopacity_;
    /**
     * <code>optional float tschchartaxisvalue3dgridlineopacity = 333;</code>
     */
    public boolean hasTschchartaxisvalue3Dgridlineopacity() {
      return ((bitField1_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float tschchartaxisvalue3dgridlineopacity = 333;</code>
     */
    public float getTschchartaxisvalue3Dgridlineopacity() {
      return tschchartaxisvalue3Dgridlineopacity_;
    }

    public static final int TSCHCHARTAXISCATEGORY3DGRIDLINEOPACITY_FIELD_NUMBER = 334;
    private float tschchartaxiscategory3Dgridlineopacity_;
    /**
     * <code>optional float tschchartaxiscategory3dgridlineopacity = 334;</code>
     */
    public boolean hasTschchartaxiscategory3Dgridlineopacity() {
      return ((bitField1_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional float tschchartaxiscategory3dgridlineopacity = 334;</code>
     */
    public float getTschchartaxiscategory3Dgridlineopacity() {
      return tschchartaxiscategory3Dgridlineopacity_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSuper()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSuper().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasTschchartaxisvaluemajorgridlinestroke()) {
        if (!getTschchartaxisvaluemajorgridlinestroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartaxisvalueminorgridlinestroke()) {
        if (!getTschchartaxisvalueminorgridlinestroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartaxisvaluemajorgridlineshadow()) {
        if (!getTschchartaxisvaluemajorgridlineshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartaxisvalueminorgridlineshadow()) {
        if (!getTschchartaxisvalueminorgridlineshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartaxiscategorymajorgridlinestroke()) {
        if (!getTschchartaxiscategorymajorgridlinestroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartaxiscategoryminorgridlinestroke()) {
        if (!getTschchartaxiscategoryminorgridlinestroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartaxiscategorymajorgridlineshadow()) {
        if (!getTschchartaxiscategorymajorgridlineshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartaxiscategoryminorgridlineshadow()) {
        if (!getTschchartaxiscategoryminorgridlineshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartaxisvalue3Dgridlinestroke()) {
        if (!getTschchartaxisvalue3Dgridlinestroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartaxiscategory3Dgridlinestroke()) {
        if (!getTschchartaxiscategory3Dgridlinestroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getSuper());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(10, tschchartaxisvalueshowmajorgridlines_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(11, tschchartaxisvalueshowminorgridlines_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(12, getTschchartaxisvaluemajorgridlinestroke());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(13, getTschchartaxisvalueminorgridlinestroke());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(14, tschchartaxisvaluetickmarklocation_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(15, tschchartaxisvalueshowmajortickmarks_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(16, tschchartaxisvalueshowminortickmarks_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(17, tschchartaxisvaluelabelsorientation_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(18, tschchartaxisvalueshowminimumlabel_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(21, getTschchartaxisvaluemajorgridlineshadow());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(22, getTschchartaxisvalueminorgridlineshadow());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeFloat(23, tschchartaxisvaluemajorgridlineopacity_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeFloat(24, tschchartaxisvalueminorgridlineopacity_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBool(25, tschchartaxisvalueshowaxis_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeBool(50, tschchartaxiscategoryshowmajorgridlines_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBool(51, tschchartaxiscategoryshowminorgridlines_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(52, getTschchartaxiscategorymajorgridlinestroke());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeMessage(53, getTschchartaxiscategoryminorgridlinestroke());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(54, tschchartaxiscategorytickmarklocation_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeBool(55, tschchartaxiscategoryshowmajortickmarks_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeBool(56, tschchartaxiscategoryshowminortickmarks_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeFloat(57, tschchartaxiscategorylabelsorientation_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(58, tschchartaxiscategoryhorizontalspacing_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(59, tschchartaxiscategoryverticalspacing_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeBool(60, tschchartaxiscategoryshowlastlabel_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeMessage(63, getTschchartaxiscategorymajorgridlineshadow());
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeMessage(64, getTschchartaxiscategoryminorgridlineshadow());
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeFloat(65, tschchartaxiscategorymajorgridlineopacity_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeFloat(66, tschchartaxiscategoryminorgridlineopacity_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeBool(67, tschchartaxiscategoryshowaxis_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeFloat(102, tschchartaxisdefaultlabelsorientation_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(110, tschchartaxisdefaulttitleparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(111, tschchartaxisdefaultlabelparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(112, tschchartaxisvaluetitleparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(113, tschchartaxisvaluelabelparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(114, tschchartaxiscategorytitleparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(115, tschchartaxiscategorylabelparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(331, getTschchartaxisvalue3Dgridlinestroke());
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(332, getTschchartaxiscategory3Dgridlinestroke());
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(333, tschchartaxisvalue3Dgridlineopacity_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(334, tschchartaxiscategory3Dgridlineopacity_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSuper());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, tschchartaxisvalueshowmajorgridlines_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, tschchartaxisvalueshowminorgridlines_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getTschchartaxisvaluemajorgridlinestroke());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getTschchartaxisvalueminorgridlinestroke());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, tschchartaxisvaluetickmarklocation_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, tschchartaxisvalueshowmajortickmarks_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, tschchartaxisvalueshowminortickmarks_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(17, tschchartaxisvaluelabelsorientation_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, tschchartaxisvalueshowminimumlabel_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, getTschchartaxisvaluemajorgridlineshadow());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, getTschchartaxisvalueminorgridlineshadow());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(23, tschchartaxisvaluemajorgridlineopacity_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(24, tschchartaxisvalueminorgridlineopacity_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(25, tschchartaxisvalueshowaxis_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(50, tschchartaxiscategoryshowmajorgridlines_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(51, tschchartaxiscategoryshowminorgridlines_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(52, getTschchartaxiscategorymajorgridlinestroke());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(53, getTschchartaxiscategoryminorgridlinestroke());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(54, tschchartaxiscategorytickmarklocation_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(55, tschchartaxiscategoryshowmajortickmarks_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(56, tschchartaxiscategoryshowminortickmarks_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(57, tschchartaxiscategorylabelsorientation_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(58, tschchartaxiscategoryhorizontalspacing_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(59, tschchartaxiscategoryverticalspacing_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(60, tschchartaxiscategoryshowlastlabel_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(63, getTschchartaxiscategorymajorgridlineshadow());
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(64, getTschchartaxiscategoryminorgridlineshadow());
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(65, tschchartaxiscategorymajorgridlineopacity_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(66, tschchartaxiscategoryminorgridlineopacity_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(67, tschchartaxiscategoryshowaxis_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(102, tschchartaxisdefaultlabelsorientation_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(110, tschchartaxisdefaulttitleparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(111, tschchartaxisdefaultlabelparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(112, tschchartaxisvaluetitleparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(113, tschchartaxisvaluelabelparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(114, tschchartaxiscategorytitleparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(115, tschchartaxiscategorylabelparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(331, getTschchartaxisvalue3Dgridlinestroke());
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(332, getTschchartaxiscategory3Dgridlinestroke());
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(333, tschchartaxisvalue3Dgridlineopacity_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(334, tschchartaxiscategory3Dgridlineopacity_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive)) {
        return super.equals(obj);
      }
      org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive other = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive) obj;

      boolean result = true;
      result = result && (hasSuper() == other.hasSuper());
      if (hasSuper()) {
        result = result && getSuper()
            .equals(other.getSuper());
      }
      result = result && (hasTschchartaxisvalueshowmajorgridlines() == other.hasTschchartaxisvalueshowmajorgridlines());
      if (hasTschchartaxisvalueshowmajorgridlines()) {
        result = result && (getTschchartaxisvalueshowmajorgridlines()
            == other.getTschchartaxisvalueshowmajorgridlines());
      }
      result = result && (hasTschchartaxisvalueshowminorgridlines() == other.hasTschchartaxisvalueshowminorgridlines());
      if (hasTschchartaxisvalueshowminorgridlines()) {
        result = result && (getTschchartaxisvalueshowminorgridlines()
            == other.getTschchartaxisvalueshowminorgridlines());
      }
      result = result && (hasTschchartaxisvaluemajorgridlinestroke() == other.hasTschchartaxisvaluemajorgridlinestroke());
      if (hasTschchartaxisvaluemajorgridlinestroke()) {
        result = result && getTschchartaxisvaluemajorgridlinestroke()
            .equals(other.getTschchartaxisvaluemajorgridlinestroke());
      }
      result = result && (hasTschchartaxisvalueminorgridlinestroke() == other.hasTschchartaxisvalueminorgridlinestroke());
      if (hasTschchartaxisvalueminorgridlinestroke()) {
        result = result && getTschchartaxisvalueminorgridlinestroke()
            .equals(other.getTschchartaxisvalueminorgridlinestroke());
      }
      result = result && (hasTschchartaxisvaluetickmarklocation() == other.hasTschchartaxisvaluetickmarklocation());
      if (hasTschchartaxisvaluetickmarklocation()) {
        result = result && (getTschchartaxisvaluetickmarklocation()
            == other.getTschchartaxisvaluetickmarklocation());
      }
      result = result && (hasTschchartaxisvalueshowmajortickmarks() == other.hasTschchartaxisvalueshowmajortickmarks());
      if (hasTschchartaxisvalueshowmajortickmarks()) {
        result = result && (getTschchartaxisvalueshowmajortickmarks()
            == other.getTschchartaxisvalueshowmajortickmarks());
      }
      result = result && (hasTschchartaxisvalueshowminortickmarks() == other.hasTschchartaxisvalueshowminortickmarks());
      if (hasTschchartaxisvalueshowminortickmarks()) {
        result = result && (getTschchartaxisvalueshowminortickmarks()
            == other.getTschchartaxisvalueshowminortickmarks());
      }
      result = result && (hasTschchartaxisvaluelabelsorientation() == other.hasTschchartaxisvaluelabelsorientation());
      if (hasTschchartaxisvaluelabelsorientation()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartaxisvaluelabelsorientation())
            == java.lang.Float.floatToIntBits(
                other.getTschchartaxisvaluelabelsorientation()));
      }
      result = result && (hasTschchartaxisvalueshowminimumlabel() == other.hasTschchartaxisvalueshowminimumlabel());
      if (hasTschchartaxisvalueshowminimumlabel()) {
        result = result && (getTschchartaxisvalueshowminimumlabel()
            == other.getTschchartaxisvalueshowminimumlabel());
      }
      result = result && (hasTschchartaxisvaluemajorgridlineshadow() == other.hasTschchartaxisvaluemajorgridlineshadow());
      if (hasTschchartaxisvaluemajorgridlineshadow()) {
        result = result && getTschchartaxisvaluemajorgridlineshadow()
            .equals(other.getTschchartaxisvaluemajorgridlineshadow());
      }
      result = result && (hasTschchartaxisvalueminorgridlineshadow() == other.hasTschchartaxisvalueminorgridlineshadow());
      if (hasTschchartaxisvalueminorgridlineshadow()) {
        result = result && getTschchartaxisvalueminorgridlineshadow()
            .equals(other.getTschchartaxisvalueminorgridlineshadow());
      }
      result = result && (hasTschchartaxisvaluemajorgridlineopacity() == other.hasTschchartaxisvaluemajorgridlineopacity());
      if (hasTschchartaxisvaluemajorgridlineopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartaxisvaluemajorgridlineopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartaxisvaluemajorgridlineopacity()));
      }
      result = result && (hasTschchartaxisvalueminorgridlineopacity() == other.hasTschchartaxisvalueminorgridlineopacity());
      if (hasTschchartaxisvalueminorgridlineopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartaxisvalueminorgridlineopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartaxisvalueminorgridlineopacity()));
      }
      result = result && (hasTschchartaxisvalueshowaxis() == other.hasTschchartaxisvalueshowaxis());
      if (hasTschchartaxisvalueshowaxis()) {
        result = result && (getTschchartaxisvalueshowaxis()
            == other.getTschchartaxisvalueshowaxis());
      }
      result = result && (hasTschchartaxiscategoryshowmajorgridlines() == other.hasTschchartaxiscategoryshowmajorgridlines());
      if (hasTschchartaxiscategoryshowmajorgridlines()) {
        result = result && (getTschchartaxiscategoryshowmajorgridlines()
            == other.getTschchartaxiscategoryshowmajorgridlines());
      }
      result = result && (hasTschchartaxiscategoryshowminorgridlines() == other.hasTschchartaxiscategoryshowminorgridlines());
      if (hasTschchartaxiscategoryshowminorgridlines()) {
        result = result && (getTschchartaxiscategoryshowminorgridlines()
            == other.getTschchartaxiscategoryshowminorgridlines());
      }
      result = result && (hasTschchartaxiscategorymajorgridlinestroke() == other.hasTschchartaxiscategorymajorgridlinestroke());
      if (hasTschchartaxiscategorymajorgridlinestroke()) {
        result = result && getTschchartaxiscategorymajorgridlinestroke()
            .equals(other.getTschchartaxiscategorymajorgridlinestroke());
      }
      result = result && (hasTschchartaxiscategoryminorgridlinestroke() == other.hasTschchartaxiscategoryminorgridlinestroke());
      if (hasTschchartaxiscategoryminorgridlinestroke()) {
        result = result && getTschchartaxiscategoryminorgridlinestroke()
            .equals(other.getTschchartaxiscategoryminorgridlinestroke());
      }
      result = result && (hasTschchartaxiscategorytickmarklocation() == other.hasTschchartaxiscategorytickmarklocation());
      if (hasTschchartaxiscategorytickmarklocation()) {
        result = result && (getTschchartaxiscategorytickmarklocation()
            == other.getTschchartaxiscategorytickmarklocation());
      }
      result = result && (hasTschchartaxiscategoryshowmajortickmarks() == other.hasTschchartaxiscategoryshowmajortickmarks());
      if (hasTschchartaxiscategoryshowmajortickmarks()) {
        result = result && (getTschchartaxiscategoryshowmajortickmarks()
            == other.getTschchartaxiscategoryshowmajortickmarks());
      }
      result = result && (hasTschchartaxiscategoryshowminortickmarks() == other.hasTschchartaxiscategoryshowminortickmarks());
      if (hasTschchartaxiscategoryshowminortickmarks()) {
        result = result && (getTschchartaxiscategoryshowminortickmarks()
            == other.getTschchartaxiscategoryshowminortickmarks());
      }
      result = result && (hasTschchartaxiscategorylabelsorientation() == other.hasTschchartaxiscategorylabelsorientation());
      if (hasTschchartaxiscategorylabelsorientation()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartaxiscategorylabelsorientation())
            == java.lang.Float.floatToIntBits(
                other.getTschchartaxiscategorylabelsorientation()));
      }
      result = result && (hasTschchartaxiscategoryhorizontalspacing() == other.hasTschchartaxiscategoryhorizontalspacing());
      if (hasTschchartaxiscategoryhorizontalspacing()) {
        result = result && (getTschchartaxiscategoryhorizontalspacing()
            == other.getTschchartaxiscategoryhorizontalspacing());
      }
      result = result && (hasTschchartaxiscategoryverticalspacing() == other.hasTschchartaxiscategoryverticalspacing());
      if (hasTschchartaxiscategoryverticalspacing()) {
        result = result && (getTschchartaxiscategoryverticalspacing()
            == other.getTschchartaxiscategoryverticalspacing());
      }
      result = result && (hasTschchartaxiscategoryshowlastlabel() == other.hasTschchartaxiscategoryshowlastlabel());
      if (hasTschchartaxiscategoryshowlastlabel()) {
        result = result && (getTschchartaxiscategoryshowlastlabel()
            == other.getTschchartaxiscategoryshowlastlabel());
      }
      result = result && (hasTschchartaxiscategorymajorgridlineshadow() == other.hasTschchartaxiscategorymajorgridlineshadow());
      if (hasTschchartaxiscategorymajorgridlineshadow()) {
        result = result && getTschchartaxiscategorymajorgridlineshadow()
            .equals(other.getTschchartaxiscategorymajorgridlineshadow());
      }
      result = result && (hasTschchartaxiscategoryminorgridlineshadow() == other.hasTschchartaxiscategoryminorgridlineshadow());
      if (hasTschchartaxiscategoryminorgridlineshadow()) {
        result = result && getTschchartaxiscategoryminorgridlineshadow()
            .equals(other.getTschchartaxiscategoryminorgridlineshadow());
      }
      result = result && (hasTschchartaxiscategorymajorgridlineopacity() == other.hasTschchartaxiscategorymajorgridlineopacity());
      if (hasTschchartaxiscategorymajorgridlineopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartaxiscategorymajorgridlineopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartaxiscategorymajorgridlineopacity()));
      }
      result = result && (hasTschchartaxiscategoryminorgridlineopacity() == other.hasTschchartaxiscategoryminorgridlineopacity());
      if (hasTschchartaxiscategoryminorgridlineopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartaxiscategoryminorgridlineopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartaxiscategoryminorgridlineopacity()));
      }
      result = result && (hasTschchartaxiscategoryshowaxis() == other.hasTschchartaxiscategoryshowaxis());
      if (hasTschchartaxiscategoryshowaxis()) {
        result = result && (getTschchartaxiscategoryshowaxis()
            == other.getTschchartaxiscategoryshowaxis());
      }
      result = result && (hasTschchartaxisdefaultlabelsorientation() == other.hasTschchartaxisdefaultlabelsorientation());
      if (hasTschchartaxisdefaultlabelsorientation()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartaxisdefaultlabelsorientation())
            == java.lang.Float.floatToIntBits(
                other.getTschchartaxisdefaultlabelsorientation()));
      }
      result = result && (hasTschchartaxisdefaulttitleparagraphstyleindex() == other.hasTschchartaxisdefaulttitleparagraphstyleindex());
      if (hasTschchartaxisdefaulttitleparagraphstyleindex()) {
        result = result && (getTschchartaxisdefaulttitleparagraphstyleindex()
            == other.getTschchartaxisdefaulttitleparagraphstyleindex());
      }
      result = result && (hasTschchartaxisdefaultlabelparagraphstyleindex() == other.hasTschchartaxisdefaultlabelparagraphstyleindex());
      if (hasTschchartaxisdefaultlabelparagraphstyleindex()) {
        result = result && (getTschchartaxisdefaultlabelparagraphstyleindex()
            == other.getTschchartaxisdefaultlabelparagraphstyleindex());
      }
      result = result && (hasTschchartaxisvaluetitleparagraphstyleindex() == other.hasTschchartaxisvaluetitleparagraphstyleindex());
      if (hasTschchartaxisvaluetitleparagraphstyleindex()) {
        result = result && (getTschchartaxisvaluetitleparagraphstyleindex()
            == other.getTschchartaxisvaluetitleparagraphstyleindex());
      }
      result = result && (hasTschchartaxisvaluelabelparagraphstyleindex() == other.hasTschchartaxisvaluelabelparagraphstyleindex());
      if (hasTschchartaxisvaluelabelparagraphstyleindex()) {
        result = result && (getTschchartaxisvaluelabelparagraphstyleindex()
            == other.getTschchartaxisvaluelabelparagraphstyleindex());
      }
      result = result && (hasTschchartaxiscategorytitleparagraphstyleindex() == other.hasTschchartaxiscategorytitleparagraphstyleindex());
      if (hasTschchartaxiscategorytitleparagraphstyleindex()) {
        result = result && (getTschchartaxiscategorytitleparagraphstyleindex()
            == other.getTschchartaxiscategorytitleparagraphstyleindex());
      }
      result = result && (hasTschchartaxiscategorylabelparagraphstyleindex() == other.hasTschchartaxiscategorylabelparagraphstyleindex());
      if (hasTschchartaxiscategorylabelparagraphstyleindex()) {
        result = result && (getTschchartaxiscategorylabelparagraphstyleindex()
            == other.getTschchartaxiscategorylabelparagraphstyleindex());
      }
      result = result && (hasTschchartaxisvalue3Dgridlinestroke() == other.hasTschchartaxisvalue3Dgridlinestroke());
      if (hasTschchartaxisvalue3Dgridlinestroke()) {
        result = result && getTschchartaxisvalue3Dgridlinestroke()
            .equals(other.getTschchartaxisvalue3Dgridlinestroke());
      }
      result = result && (hasTschchartaxiscategory3Dgridlinestroke() == other.hasTschchartaxiscategory3Dgridlinestroke());
      if (hasTschchartaxiscategory3Dgridlinestroke()) {
        result = result && getTschchartaxiscategory3Dgridlinestroke()
            .equals(other.getTschchartaxiscategory3Dgridlinestroke());
      }
      result = result && (hasTschchartaxisvalue3Dgridlineopacity() == other.hasTschchartaxisvalue3Dgridlineopacity());
      if (hasTschchartaxisvalue3Dgridlineopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartaxisvalue3Dgridlineopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartaxisvalue3Dgridlineopacity()));
      }
      result = result && (hasTschchartaxiscategory3Dgridlineopacity() == other.hasTschchartaxiscategory3Dgridlineopacity());
      if (hasTschchartaxiscategory3Dgridlineopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartaxiscategory3Dgridlineopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartaxiscategory3Dgridlineopacity()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSuper()) {
        hash = (37 * hash) + SUPER_FIELD_NUMBER;
        hash = (53 * hash) + getSuper().hashCode();
      }
      if (hasTschchartaxisvalueshowmajorgridlines()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUESHOWMAJORGRIDLINES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxisvalueshowmajorgridlines());
      }
      if (hasTschchartaxisvalueshowminorgridlines()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUESHOWMINORGRIDLINES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxisvalueshowminorgridlines());
      }
      if (hasTschchartaxisvaluemajorgridlinestroke()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUEMAJORGRIDLINESTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvaluemajorgridlinestroke().hashCode();
      }
      if (hasTschchartaxisvalueminorgridlinestroke()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUEMINORGRIDLINESTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvalueminorgridlinestroke().hashCode();
      }
      if (hasTschchartaxisvaluetickmarklocation()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUETICKMARKLOCATION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvaluetickmarklocation();
      }
      if (hasTschchartaxisvalueshowmajortickmarks()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUESHOWMAJORTICKMARKS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxisvalueshowmajortickmarks());
      }
      if (hasTschchartaxisvalueshowminortickmarks()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUESHOWMINORTICKMARKS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxisvalueshowminortickmarks());
      }
      if (hasTschchartaxisvaluelabelsorientation()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUELABELSORIENTATION_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartaxisvaluelabelsorientation());
      }
      if (hasTschchartaxisvalueshowminimumlabel()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUESHOWMINIMUMLABEL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxisvalueshowminimumlabel());
      }
      if (hasTschchartaxisvaluemajorgridlineshadow()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUEMAJORGRIDLINESHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvaluemajorgridlineshadow().hashCode();
      }
      if (hasTschchartaxisvalueminorgridlineshadow()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUEMINORGRIDLINESHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvalueminorgridlineshadow().hashCode();
      }
      if (hasTschchartaxisvaluemajorgridlineopacity()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUEMAJORGRIDLINEOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartaxisvaluemajorgridlineopacity());
      }
      if (hasTschchartaxisvalueminorgridlineopacity()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUEMINORGRIDLINEOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartaxisvalueminorgridlineopacity());
      }
      if (hasTschchartaxisvalueshowaxis()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUESHOWAXIS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxisvalueshowaxis());
      }
      if (hasTschchartaxiscategoryshowmajorgridlines()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYSHOWMAJORGRIDLINES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxiscategoryshowmajorgridlines());
      }
      if (hasTschchartaxiscategoryshowminorgridlines()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYSHOWMINORGRIDLINES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxiscategoryshowminorgridlines());
      }
      if (hasTschchartaxiscategorymajorgridlinestroke()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYMAJORGRIDLINESTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxiscategorymajorgridlinestroke().hashCode();
      }
      if (hasTschchartaxiscategoryminorgridlinestroke()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYMINORGRIDLINESTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxiscategoryminorgridlinestroke().hashCode();
      }
      if (hasTschchartaxiscategorytickmarklocation()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYTICKMARKLOCATION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxiscategorytickmarklocation();
      }
      if (hasTschchartaxiscategoryshowmajortickmarks()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYSHOWMAJORTICKMARKS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxiscategoryshowmajortickmarks());
      }
      if (hasTschchartaxiscategoryshowminortickmarks()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYSHOWMINORTICKMARKS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxiscategoryshowminortickmarks());
      }
      if (hasTschchartaxiscategorylabelsorientation()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYLABELSORIENTATION_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartaxiscategorylabelsorientation());
      }
      if (hasTschchartaxiscategoryhorizontalspacing()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYHORIZONTALSPACING_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxiscategoryhorizontalspacing();
      }
      if (hasTschchartaxiscategoryverticalspacing()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYVERTICALSPACING_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxiscategoryverticalspacing();
      }
      if (hasTschchartaxiscategoryshowlastlabel()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYSHOWLASTLABEL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxiscategoryshowlastlabel());
      }
      if (hasTschchartaxiscategorymajorgridlineshadow()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYMAJORGRIDLINESHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxiscategorymajorgridlineshadow().hashCode();
      }
      if (hasTschchartaxiscategoryminorgridlineshadow()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYMINORGRIDLINESHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxiscategoryminorgridlineshadow().hashCode();
      }
      if (hasTschchartaxiscategorymajorgridlineopacity()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYMAJORGRIDLINEOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartaxiscategorymajorgridlineopacity());
      }
      if (hasTschchartaxiscategoryminorgridlineopacity()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYMINORGRIDLINEOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartaxiscategoryminorgridlineopacity());
      }
      if (hasTschchartaxiscategoryshowaxis()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYSHOWAXIS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxiscategoryshowaxis());
      }
      if (hasTschchartaxisdefaultlabelsorientation()) {
        hash = (37 * hash) + TSCHCHARTAXISDEFAULTLABELSORIENTATION_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartaxisdefaultlabelsorientation());
      }
      if (hasTschchartaxisdefaulttitleparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTAXISDEFAULTTITLEPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisdefaulttitleparagraphstyleindex();
      }
      if (hasTschchartaxisdefaultlabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTAXISDEFAULTLABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisdefaultlabelparagraphstyleindex();
      }
      if (hasTschchartaxisvaluetitleparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUETITLEPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvaluetitleparagraphstyleindex();
      }
      if (hasTschchartaxisvaluelabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvaluelabelparagraphstyleindex();
      }
      if (hasTschchartaxiscategorytitleparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYTITLEPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxiscategorytitleparagraphstyleindex();
      }
      if (hasTschchartaxiscategorylabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYLABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxiscategorylabelparagraphstyleindex();
      }
      if (hasTschchartaxisvalue3Dgridlinestroke()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUE3DGRIDLINESTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvalue3Dgridlinestroke().hashCode();
      }
      if (hasTschchartaxiscategory3Dgridlinestroke()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORY3DGRIDLINESTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxiscategory3Dgridlinestroke().hashCode();
      }
      if (hasTschchartaxisvalue3Dgridlineopacity()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUE3DGRIDLINEOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartaxisvalue3Dgridlineopacity());
      }
      if (hasTschchartaxiscategory3Dgridlineopacity()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORY3DGRIDLINEOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartaxiscategory3Dgridlineopacity());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TSCH.PreUFF.ChartAxisStyleArchive}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TSCH.PreUFF.ChartAxisStyleArchive)
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchiveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartAxisStyleArchive_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartAxisStyleArchive_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive.Builder.class);
      }

      // Construct using TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSuperFieldBuilder();
          getTschchartaxisvaluemajorgridlinestrokeFieldBuilder();
          getTschchartaxisvalueminorgridlinestrokeFieldBuilder();
          getTschchartaxisvaluemajorgridlineshadowFieldBuilder();
          getTschchartaxisvalueminorgridlineshadowFieldBuilder();
          getTschchartaxiscategorymajorgridlinestrokeFieldBuilder();
          getTschchartaxiscategoryminorgridlinestrokeFieldBuilder();
          getTschchartaxiscategorymajorgridlineshadowFieldBuilder();
          getTschchartaxiscategoryminorgridlineshadowFieldBuilder();
          getTschchartaxisvalue3DgridlinestrokeFieldBuilder();
          getTschchartaxiscategory3DgridlinestrokeFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (superBuilder_ == null) {
          super_ = null;
        } else {
          superBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        tschchartaxisvalueshowmajorgridlines_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        tschchartaxisvalueshowminorgridlines_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (tschchartaxisvaluemajorgridlinestrokeBuilder_ == null) {
          tschchartaxisvaluemajorgridlinestroke_ = null;
        } else {
          tschchartaxisvaluemajorgridlinestrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (tschchartaxisvalueminorgridlinestrokeBuilder_ == null) {
          tschchartaxisvalueminorgridlinestroke_ = null;
        } else {
          tschchartaxisvalueminorgridlinestrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        tschchartaxisvaluetickmarklocation_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        tschchartaxisvalueshowmajortickmarks_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        tschchartaxisvalueshowminortickmarks_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        tschchartaxisvaluelabelsorientation_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        tschchartaxisvalueshowminimumlabel_ = false;
        bitField0_ = (bitField0_ & ~0x00000200);
        if (tschchartaxisvaluemajorgridlineshadowBuilder_ == null) {
          tschchartaxisvaluemajorgridlineshadow_ = null;
        } else {
          tschchartaxisvaluemajorgridlineshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        if (tschchartaxisvalueminorgridlineshadowBuilder_ == null) {
          tschchartaxisvalueminorgridlineshadow_ = null;
        } else {
          tschchartaxisvalueminorgridlineshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        tschchartaxisvaluemajorgridlineopacity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00001000);
        tschchartaxisvalueminorgridlineopacity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00002000);
        tschchartaxisvalueshowaxis_ = false;
        bitField0_ = (bitField0_ & ~0x00004000);
        tschchartaxiscategoryshowmajorgridlines_ = false;
        bitField0_ = (bitField0_ & ~0x00008000);
        tschchartaxiscategoryshowminorgridlines_ = false;
        bitField0_ = (bitField0_ & ~0x00010000);
        if (tschchartaxiscategorymajorgridlinestrokeBuilder_ == null) {
          tschchartaxiscategorymajorgridlinestroke_ = null;
        } else {
          tschchartaxiscategorymajorgridlinestrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        if (tschchartaxiscategoryminorgridlinestrokeBuilder_ == null) {
          tschchartaxiscategoryminorgridlinestroke_ = null;
        } else {
          tschchartaxiscategoryminorgridlinestrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        tschchartaxiscategorytickmarklocation_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        tschchartaxiscategoryshowmajortickmarks_ = false;
        bitField0_ = (bitField0_ & ~0x00100000);
        tschchartaxiscategoryshowminortickmarks_ = false;
        bitField0_ = (bitField0_ & ~0x00200000);
        tschchartaxiscategorylabelsorientation_ = 0F;
        bitField0_ = (bitField0_ & ~0x00400000);
        tschchartaxiscategoryhorizontalspacing_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        tschchartaxiscategoryverticalspacing_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        tschchartaxiscategoryshowlastlabel_ = false;
        bitField0_ = (bitField0_ & ~0x02000000);
        if (tschchartaxiscategorymajorgridlineshadowBuilder_ == null) {
          tschchartaxiscategorymajorgridlineshadow_ = null;
        } else {
          tschchartaxiscategorymajorgridlineshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x04000000);
        if (tschchartaxiscategoryminorgridlineshadowBuilder_ == null) {
          tschchartaxiscategoryminorgridlineshadow_ = null;
        } else {
          tschchartaxiscategoryminorgridlineshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x08000000);
        tschchartaxiscategorymajorgridlineopacity_ = 0F;
        bitField0_ = (bitField0_ & ~0x10000000);
        tschchartaxiscategoryminorgridlineopacity_ = 0F;
        bitField0_ = (bitField0_ & ~0x20000000);
        tschchartaxiscategoryshowaxis_ = false;
        bitField0_ = (bitField0_ & ~0x40000000);
        tschchartaxisdefaultlabelsorientation_ = 0F;
        bitField0_ = (bitField0_ & ~0x80000000);
        tschchartaxisdefaulttitleparagraphstyleindex_ = 0;
        bitField1_ = (bitField1_ & ~0x00000001);
        tschchartaxisdefaultlabelparagraphstyleindex_ = 0;
        bitField1_ = (bitField1_ & ~0x00000002);
        tschchartaxisvaluetitleparagraphstyleindex_ = 0;
        bitField1_ = (bitField1_ & ~0x00000004);
        tschchartaxisvaluelabelparagraphstyleindex_ = 0;
        bitField1_ = (bitField1_ & ~0x00000008);
        tschchartaxiscategorytitleparagraphstyleindex_ = 0;
        bitField1_ = (bitField1_ & ~0x00000010);
        tschchartaxiscategorylabelparagraphstyleindex_ = 0;
        bitField1_ = (bitField1_ & ~0x00000020);
        if (tschchartaxisvalue3DgridlinestrokeBuilder_ == null) {
          tschchartaxisvalue3Dgridlinestroke_ = null;
        } else {
          tschchartaxisvalue3DgridlinestrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000040);
        if (tschchartaxiscategory3DgridlinestrokeBuilder_ == null) {
          tschchartaxiscategory3Dgridlinestroke_ = null;
        } else {
          tschchartaxiscategory3DgridlinestrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000080);
        tschchartaxisvalue3Dgridlineopacity_ = 0F;
        bitField1_ = (bitField1_ & ~0x00000100);
        tschchartaxiscategory3Dgridlineopacity_ = 0F;
        bitField1_ = (bitField1_ & ~0x00000200);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartAxisStyleArchive_descriptor;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive getDefaultInstanceForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive.getDefaultInstance();
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive build() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive buildPartial() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive result = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (superBuilder_ == null) {
          result.super_ = super_;
        } else {
          result.super_ = superBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tschchartaxisvalueshowmajorgridlines_ = tschchartaxisvalueshowmajorgridlines_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tschchartaxisvalueshowminorgridlines_ = tschchartaxisvalueshowminorgridlines_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (tschchartaxisvaluemajorgridlinestrokeBuilder_ == null) {
          result.tschchartaxisvaluemajorgridlinestroke_ = tschchartaxisvaluemajorgridlinestroke_;
        } else {
          result.tschchartaxisvaluemajorgridlinestroke_ = tschchartaxisvaluemajorgridlinestrokeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (tschchartaxisvalueminorgridlinestrokeBuilder_ == null) {
          result.tschchartaxisvalueminorgridlinestroke_ = tschchartaxisvalueminorgridlinestroke_;
        } else {
          result.tschchartaxisvalueminorgridlinestroke_ = tschchartaxisvalueminorgridlinestrokeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.tschchartaxisvaluetickmarklocation_ = tschchartaxisvaluetickmarklocation_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.tschchartaxisvalueshowmajortickmarks_ = tschchartaxisvalueshowmajortickmarks_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.tschchartaxisvalueshowminortickmarks_ = tschchartaxisvalueshowminortickmarks_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.tschchartaxisvaluelabelsorientation_ = tschchartaxisvaluelabelsorientation_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.tschchartaxisvalueshowminimumlabel_ = tschchartaxisvalueshowminimumlabel_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (tschchartaxisvaluemajorgridlineshadowBuilder_ == null) {
          result.tschchartaxisvaluemajorgridlineshadow_ = tschchartaxisvaluemajorgridlineshadow_;
        } else {
          result.tschchartaxisvaluemajorgridlineshadow_ = tschchartaxisvaluemajorgridlineshadowBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        if (tschchartaxisvalueminorgridlineshadowBuilder_ == null) {
          result.tschchartaxisvalueminorgridlineshadow_ = tschchartaxisvalueminorgridlineshadow_;
        } else {
          result.tschchartaxisvalueminorgridlineshadow_ = tschchartaxisvalueminorgridlineshadowBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.tschchartaxisvaluemajorgridlineopacity_ = tschchartaxisvaluemajorgridlineopacity_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.tschchartaxisvalueminorgridlineopacity_ = tschchartaxisvalueminorgridlineopacity_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.tschchartaxisvalueshowaxis_ = tschchartaxisvalueshowaxis_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.tschchartaxiscategoryshowmajorgridlines_ = tschchartaxiscategoryshowmajorgridlines_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.tschchartaxiscategoryshowminorgridlines_ = tschchartaxiscategoryshowminorgridlines_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        if (tschchartaxiscategorymajorgridlinestrokeBuilder_ == null) {
          result.tschchartaxiscategorymajorgridlinestroke_ = tschchartaxiscategorymajorgridlinestroke_;
        } else {
          result.tschchartaxiscategorymajorgridlinestroke_ = tschchartaxiscategorymajorgridlinestrokeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        if (tschchartaxiscategoryminorgridlinestrokeBuilder_ == null) {
          result.tschchartaxiscategoryminorgridlinestroke_ = tschchartaxiscategoryminorgridlinestroke_;
        } else {
          result.tschchartaxiscategoryminorgridlinestroke_ = tschchartaxiscategoryminorgridlinestrokeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.tschchartaxiscategorytickmarklocation_ = tschchartaxiscategorytickmarklocation_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.tschchartaxiscategoryshowmajortickmarks_ = tschchartaxiscategoryshowmajortickmarks_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.tschchartaxiscategoryshowminortickmarks_ = tschchartaxiscategoryshowminortickmarks_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.tschchartaxiscategorylabelsorientation_ = tschchartaxiscategorylabelsorientation_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.tschchartaxiscategoryhorizontalspacing_ = tschchartaxiscategoryhorizontalspacing_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.tschchartaxiscategoryverticalspacing_ = tschchartaxiscategoryverticalspacing_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.tschchartaxiscategoryshowlastlabel_ = tschchartaxiscategoryshowlastlabel_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        if (tschchartaxiscategorymajorgridlineshadowBuilder_ == null) {
          result.tschchartaxiscategorymajorgridlineshadow_ = tschchartaxiscategorymajorgridlineshadow_;
        } else {
          result.tschchartaxiscategorymajorgridlineshadow_ = tschchartaxiscategorymajorgridlineshadowBuilder_.build();
        }
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        if (tschchartaxiscategoryminorgridlineshadowBuilder_ == null) {
          result.tschchartaxiscategoryminorgridlineshadow_ = tschchartaxiscategoryminorgridlineshadow_;
        } else {
          result.tschchartaxiscategoryminorgridlineshadow_ = tschchartaxiscategoryminorgridlineshadowBuilder_.build();
        }
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.tschchartaxiscategorymajorgridlineopacity_ = tschchartaxiscategorymajorgridlineopacity_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.tschchartaxiscategoryminorgridlineopacity_ = tschchartaxiscategoryminorgridlineopacity_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.tschchartaxiscategoryshowaxis_ = tschchartaxiscategoryshowaxis_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        result.tschchartaxisdefaultlabelsorientation_ = tschchartaxisdefaultlabelsorientation_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        result.tschchartaxisdefaulttitleparagraphstyleindex_ = tschchartaxisdefaulttitleparagraphstyleindex_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000002;
        }
        result.tschchartaxisdefaultlabelparagraphstyleindex_ = tschchartaxisdefaultlabelparagraphstyleindex_;
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000004;
        }
        result.tschchartaxisvaluetitleparagraphstyleindex_ = tschchartaxisvaluetitleparagraphstyleindex_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000008;
        }
        result.tschchartaxisvaluelabelparagraphstyleindex_ = tschchartaxisvaluelabelparagraphstyleindex_;
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000010;
        }
        result.tschchartaxiscategorytitleparagraphstyleindex_ = tschchartaxiscategorytitleparagraphstyleindex_;
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000020;
        }
        result.tschchartaxiscategorylabelparagraphstyleindex_ = tschchartaxiscategorylabelparagraphstyleindex_;
        if (((from_bitField1_ & 0x00000040) == 0x00000040)) {
          to_bitField1_ |= 0x00000040;
        }
        if (tschchartaxisvalue3DgridlinestrokeBuilder_ == null) {
          result.tschchartaxisvalue3Dgridlinestroke_ = tschchartaxisvalue3Dgridlinestroke_;
        } else {
          result.tschchartaxisvalue3Dgridlinestroke_ = tschchartaxisvalue3DgridlinestrokeBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000080) == 0x00000080)) {
          to_bitField1_ |= 0x00000080;
        }
        if (tschchartaxiscategory3DgridlinestrokeBuilder_ == null) {
          result.tschchartaxiscategory3Dgridlinestroke_ = tschchartaxiscategory3Dgridlinestroke_;
        } else {
          result.tschchartaxiscategory3Dgridlinestroke_ = tschchartaxiscategory3DgridlinestrokeBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000100) == 0x00000100)) {
          to_bitField1_ |= 0x00000100;
        }
        result.tschchartaxisvalue3Dgridlineopacity_ = tschchartaxisvalue3Dgridlineopacity_;
        if (((from_bitField1_ & 0x00000200) == 0x00000200)) {
          to_bitField1_ |= 0x00000200;
        }
        result.tschchartaxiscategory3Dgridlineopacity_ = tschchartaxiscategory3Dgridlineopacity_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive) {
          return mergeFrom((org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive other) {
        if (other == org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive.getDefaultInstance()) return this;
        if (other.hasSuper()) {
          mergeSuper(other.getSuper());
        }
        if (other.hasTschchartaxisvalueshowmajorgridlines()) {
          setTschchartaxisvalueshowmajorgridlines(other.getTschchartaxisvalueshowmajorgridlines());
        }
        if (other.hasTschchartaxisvalueshowminorgridlines()) {
          setTschchartaxisvalueshowminorgridlines(other.getTschchartaxisvalueshowminorgridlines());
        }
        if (other.hasTschchartaxisvaluemajorgridlinestroke()) {
          mergeTschchartaxisvaluemajorgridlinestroke(other.getTschchartaxisvaluemajorgridlinestroke());
        }
        if (other.hasTschchartaxisvalueminorgridlinestroke()) {
          mergeTschchartaxisvalueminorgridlinestroke(other.getTschchartaxisvalueminorgridlinestroke());
        }
        if (other.hasTschchartaxisvaluetickmarklocation()) {
          setTschchartaxisvaluetickmarklocation(other.getTschchartaxisvaluetickmarklocation());
        }
        if (other.hasTschchartaxisvalueshowmajortickmarks()) {
          setTschchartaxisvalueshowmajortickmarks(other.getTschchartaxisvalueshowmajortickmarks());
        }
        if (other.hasTschchartaxisvalueshowminortickmarks()) {
          setTschchartaxisvalueshowminortickmarks(other.getTschchartaxisvalueshowminortickmarks());
        }
        if (other.hasTschchartaxisvaluelabelsorientation()) {
          setTschchartaxisvaluelabelsorientation(other.getTschchartaxisvaluelabelsorientation());
        }
        if (other.hasTschchartaxisvalueshowminimumlabel()) {
          setTschchartaxisvalueshowminimumlabel(other.getTschchartaxisvalueshowminimumlabel());
        }
        if (other.hasTschchartaxisvaluemajorgridlineshadow()) {
          mergeTschchartaxisvaluemajorgridlineshadow(other.getTschchartaxisvaluemajorgridlineshadow());
        }
        if (other.hasTschchartaxisvalueminorgridlineshadow()) {
          mergeTschchartaxisvalueminorgridlineshadow(other.getTschchartaxisvalueminorgridlineshadow());
        }
        if (other.hasTschchartaxisvaluemajorgridlineopacity()) {
          setTschchartaxisvaluemajorgridlineopacity(other.getTschchartaxisvaluemajorgridlineopacity());
        }
        if (other.hasTschchartaxisvalueminorgridlineopacity()) {
          setTschchartaxisvalueminorgridlineopacity(other.getTschchartaxisvalueminorgridlineopacity());
        }
        if (other.hasTschchartaxisvalueshowaxis()) {
          setTschchartaxisvalueshowaxis(other.getTschchartaxisvalueshowaxis());
        }
        if (other.hasTschchartaxiscategoryshowmajorgridlines()) {
          setTschchartaxiscategoryshowmajorgridlines(other.getTschchartaxiscategoryshowmajorgridlines());
        }
        if (other.hasTschchartaxiscategoryshowminorgridlines()) {
          setTschchartaxiscategoryshowminorgridlines(other.getTschchartaxiscategoryshowminorgridlines());
        }
        if (other.hasTschchartaxiscategorymajorgridlinestroke()) {
          mergeTschchartaxiscategorymajorgridlinestroke(other.getTschchartaxiscategorymajorgridlinestroke());
        }
        if (other.hasTschchartaxiscategoryminorgridlinestroke()) {
          mergeTschchartaxiscategoryminorgridlinestroke(other.getTschchartaxiscategoryminorgridlinestroke());
        }
        if (other.hasTschchartaxiscategorytickmarklocation()) {
          setTschchartaxiscategorytickmarklocation(other.getTschchartaxiscategorytickmarklocation());
        }
        if (other.hasTschchartaxiscategoryshowmajortickmarks()) {
          setTschchartaxiscategoryshowmajortickmarks(other.getTschchartaxiscategoryshowmajortickmarks());
        }
        if (other.hasTschchartaxiscategoryshowminortickmarks()) {
          setTschchartaxiscategoryshowminortickmarks(other.getTschchartaxiscategoryshowminortickmarks());
        }
        if (other.hasTschchartaxiscategorylabelsorientation()) {
          setTschchartaxiscategorylabelsorientation(other.getTschchartaxiscategorylabelsorientation());
        }
        if (other.hasTschchartaxiscategoryhorizontalspacing()) {
          setTschchartaxiscategoryhorizontalspacing(other.getTschchartaxiscategoryhorizontalspacing());
        }
        if (other.hasTschchartaxiscategoryverticalspacing()) {
          setTschchartaxiscategoryverticalspacing(other.getTschchartaxiscategoryverticalspacing());
        }
        if (other.hasTschchartaxiscategoryshowlastlabel()) {
          setTschchartaxiscategoryshowlastlabel(other.getTschchartaxiscategoryshowlastlabel());
        }
        if (other.hasTschchartaxiscategorymajorgridlineshadow()) {
          mergeTschchartaxiscategorymajorgridlineshadow(other.getTschchartaxiscategorymajorgridlineshadow());
        }
        if (other.hasTschchartaxiscategoryminorgridlineshadow()) {
          mergeTschchartaxiscategoryminorgridlineshadow(other.getTschchartaxiscategoryminorgridlineshadow());
        }
        if (other.hasTschchartaxiscategorymajorgridlineopacity()) {
          setTschchartaxiscategorymajorgridlineopacity(other.getTschchartaxiscategorymajorgridlineopacity());
        }
        if (other.hasTschchartaxiscategoryminorgridlineopacity()) {
          setTschchartaxiscategoryminorgridlineopacity(other.getTschchartaxiscategoryminorgridlineopacity());
        }
        if (other.hasTschchartaxiscategoryshowaxis()) {
          setTschchartaxiscategoryshowaxis(other.getTschchartaxiscategoryshowaxis());
        }
        if (other.hasTschchartaxisdefaultlabelsorientation()) {
          setTschchartaxisdefaultlabelsorientation(other.getTschchartaxisdefaultlabelsorientation());
        }
        if (other.hasTschchartaxisdefaulttitleparagraphstyleindex()) {
          setTschchartaxisdefaulttitleparagraphstyleindex(other.getTschchartaxisdefaulttitleparagraphstyleindex());
        }
        if (other.hasTschchartaxisdefaultlabelparagraphstyleindex()) {
          setTschchartaxisdefaultlabelparagraphstyleindex(other.getTschchartaxisdefaultlabelparagraphstyleindex());
        }
        if (other.hasTschchartaxisvaluetitleparagraphstyleindex()) {
          setTschchartaxisvaluetitleparagraphstyleindex(other.getTschchartaxisvaluetitleparagraphstyleindex());
        }
        if (other.hasTschchartaxisvaluelabelparagraphstyleindex()) {
          setTschchartaxisvaluelabelparagraphstyleindex(other.getTschchartaxisvaluelabelparagraphstyleindex());
        }
        if (other.hasTschchartaxiscategorytitleparagraphstyleindex()) {
          setTschchartaxiscategorytitleparagraphstyleindex(other.getTschchartaxiscategorytitleparagraphstyleindex());
        }
        if (other.hasTschchartaxiscategorylabelparagraphstyleindex()) {
          setTschchartaxiscategorylabelparagraphstyleindex(other.getTschchartaxiscategorylabelparagraphstyleindex());
        }
        if (other.hasTschchartaxisvalue3Dgridlinestroke()) {
          mergeTschchartaxisvalue3Dgridlinestroke(other.getTschchartaxisvalue3Dgridlinestroke());
        }
        if (other.hasTschchartaxiscategory3Dgridlinestroke()) {
          mergeTschchartaxiscategory3Dgridlinestroke(other.getTschchartaxiscategory3Dgridlinestroke());
        }
        if (other.hasTschchartaxisvalue3Dgridlineopacity()) {
          setTschchartaxisvalue3Dgridlineopacity(other.getTschchartaxisvalue3Dgridlineopacity());
        }
        if (other.hasTschchartaxiscategory3Dgridlineopacity()) {
          setTschchartaxiscategory3Dgridlineopacity(other.getTschchartaxiscategory3Dgridlineopacity());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSuper()) {
          return false;
        }
        if (!getSuper().isInitialized()) {
          return false;
        }
        if (hasTschchartaxisvaluemajorgridlinestroke()) {
          if (!getTschchartaxisvaluemajorgridlinestroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartaxisvalueminorgridlinestroke()) {
          if (!getTschchartaxisvalueminorgridlinestroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartaxisvaluemajorgridlineshadow()) {
          if (!getTschchartaxisvaluemajorgridlineshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartaxisvalueminorgridlineshadow()) {
          if (!getTschchartaxisvalueminorgridlineshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartaxiscategorymajorgridlinestroke()) {
          if (!getTschchartaxiscategorymajorgridlinestroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartaxiscategoryminorgridlinestroke()) {
          if (!getTschchartaxiscategoryminorgridlinestroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartaxiscategorymajorgridlineshadow()) {
          if (!getTschchartaxiscategorymajorgridlineshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartaxiscategoryminorgridlineshadow()) {
          if (!getTschchartaxiscategoryminorgridlineshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartaxisvalue3Dgridlinestroke()) {
          if (!getTschchartaxisvalue3Dgridlinestroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartaxiscategory3Dgridlinestroke()) {
          if (!getTschchartaxiscategory3Dgridlinestroke().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      private org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive super_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder> superBuilder_;
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public boolean hasSuper() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive getSuper() {
        if (superBuilder_ == null) {
          return super_ == null ? org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
        } else {
          return superBuilder_.getMessage();
        }
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder setSuper(org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive value) {
        if (superBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          super_ = value;
          onChanged();
        } else {
          superBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder setSuper(
          org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder builderForValue) {
        if (superBuilder_ == null) {
          super_ = builderForValue.build();
          onChanged();
        } else {
          superBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder mergeSuper(org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive value) {
        if (superBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              super_ != null &&
              super_ != org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance()) {
            super_ =
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.newBuilder(super_).mergeFrom(value).buildPartial();
          } else {
            super_ = value;
          }
          onChanged();
        } else {
          superBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder clearSuper() {
        if (superBuilder_ == null) {
          super_ = null;
          onChanged();
        } else {
          superBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder getSuperBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSuperFieldBuilder().getBuilder();
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder getSuperOrBuilder() {
        if (superBuilder_ != null) {
          return superBuilder_.getMessageOrBuilder();
        } else {
          return super_ == null ?
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
        }
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder> 
          getSuperFieldBuilder() {
        if (superBuilder_ == null) {
          superBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder>(
                  getSuper(),
                  getParentForChildren(),
                  isClean());
          super_ = null;
        }
        return superBuilder_;
      }

      private boolean tschchartaxisvalueshowmajorgridlines_ ;
      /**
       * <code>optional bool tschchartaxisvalueshowmajorgridlines = 10;</code>
       */
      public boolean hasTschchartaxisvalueshowmajorgridlines() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool tschchartaxisvalueshowmajorgridlines = 10;</code>
       */
      public boolean getTschchartaxisvalueshowmajorgridlines() {
        return tschchartaxisvalueshowmajorgridlines_;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowmajorgridlines = 10;</code>
       */
      public Builder setTschchartaxisvalueshowmajorgridlines(boolean value) {
        bitField0_ |= 0x00000002;
        tschchartaxisvalueshowmajorgridlines_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowmajorgridlines = 10;</code>
       */
      public Builder clearTschchartaxisvalueshowmajorgridlines() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tschchartaxisvalueshowmajorgridlines_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartaxisvalueshowminorgridlines_ ;
      /**
       * <code>optional bool tschchartaxisvalueshowminorgridlines = 11;</code>
       */
      public boolean hasTschchartaxisvalueshowminorgridlines() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool tschchartaxisvalueshowminorgridlines = 11;</code>
       */
      public boolean getTschchartaxisvalueshowminorgridlines() {
        return tschchartaxisvalueshowminorgridlines_;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowminorgridlines = 11;</code>
       */
      public Builder setTschchartaxisvalueshowminorgridlines(boolean value) {
        bitField0_ |= 0x00000004;
        tschchartaxisvalueshowminorgridlines_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowminorgridlines = 11;</code>
       */
      public Builder clearTschchartaxisvalueshowminorgridlines() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tschchartaxisvalueshowminorgridlines_ = false;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartaxisvaluemajorgridlinestroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartaxisvaluemajorgridlinestrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 12;</code>
       */
      public boolean hasTschchartaxisvaluemajorgridlinestroke() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 12;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxisvaluemajorgridlinestroke() {
        if (tschchartaxisvaluemajorgridlinestrokeBuilder_ == null) {
          return tschchartaxisvaluemajorgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxisvaluemajorgridlinestroke_;
        } else {
          return tschchartaxisvaluemajorgridlinestrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 12;</code>
       */
      public Builder setTschchartaxisvaluemajorgridlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartaxisvaluemajorgridlinestrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxisvaluemajorgridlinestroke_ = value;
          onChanged();
        } else {
          tschchartaxisvaluemajorgridlinestrokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 12;</code>
       */
      public Builder setTschchartaxisvaluemajorgridlinestroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartaxisvaluemajorgridlinestrokeBuilder_ == null) {
          tschchartaxisvaluemajorgridlinestroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxisvaluemajorgridlinestrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 12;</code>
       */
      public Builder mergeTschchartaxisvaluemajorgridlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartaxisvaluemajorgridlinestrokeBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              tschchartaxisvaluemajorgridlinestroke_ != null &&
              tschchartaxisvaluemajorgridlinestroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartaxisvaluemajorgridlinestroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartaxisvaluemajorgridlinestroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxisvaluemajorgridlinestroke_ = value;
          }
          onChanged();
        } else {
          tschchartaxisvaluemajorgridlinestrokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 12;</code>
       */
      public Builder clearTschchartaxisvaluemajorgridlinestroke() {
        if (tschchartaxisvaluemajorgridlinestrokeBuilder_ == null) {
          tschchartaxisvaluemajorgridlinestroke_ = null;
          onChanged();
        } else {
          tschchartaxisvaluemajorgridlinestrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 12;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartaxisvaluemajorgridlinestrokeBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getTschchartaxisvaluemajorgridlinestrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 12;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxisvaluemajorgridlinestrokeOrBuilder() {
        if (tschchartaxisvaluemajorgridlinestrokeBuilder_ != null) {
          return tschchartaxisvaluemajorgridlinestrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxisvaluemajorgridlinestroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxisvaluemajorgridlinestroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvaluemajorgridlinestroke = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartaxisvaluemajorgridlinestrokeFieldBuilder() {
        if (tschchartaxisvaluemajorgridlinestrokeBuilder_ == null) {
          tschchartaxisvaluemajorgridlinestrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartaxisvaluemajorgridlinestroke(),
                  getParentForChildren(),
                  isClean());
          tschchartaxisvaluemajorgridlinestroke_ = null;
        }
        return tschchartaxisvaluemajorgridlinestrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartaxisvalueminorgridlinestroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartaxisvalueminorgridlinestrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 13;</code>
       */
      public boolean hasTschchartaxisvalueminorgridlinestroke() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 13;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxisvalueminorgridlinestroke() {
        if (tschchartaxisvalueminorgridlinestrokeBuilder_ == null) {
          return tschchartaxisvalueminorgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxisvalueminorgridlinestroke_;
        } else {
          return tschchartaxisvalueminorgridlinestrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 13;</code>
       */
      public Builder setTschchartaxisvalueminorgridlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartaxisvalueminorgridlinestrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxisvalueminorgridlinestroke_ = value;
          onChanged();
        } else {
          tschchartaxisvalueminorgridlinestrokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 13;</code>
       */
      public Builder setTschchartaxisvalueminorgridlinestroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartaxisvalueminorgridlinestrokeBuilder_ == null) {
          tschchartaxisvalueminorgridlinestroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxisvalueminorgridlinestrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 13;</code>
       */
      public Builder mergeTschchartaxisvalueminorgridlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartaxisvalueminorgridlinestrokeBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              tschchartaxisvalueminorgridlinestroke_ != null &&
              tschchartaxisvalueminorgridlinestroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartaxisvalueminorgridlinestroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartaxisvalueminorgridlinestroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxisvalueminorgridlinestroke_ = value;
          }
          onChanged();
        } else {
          tschchartaxisvalueminorgridlinestrokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 13;</code>
       */
      public Builder clearTschchartaxisvalueminorgridlinestroke() {
        if (tschchartaxisvalueminorgridlinestrokeBuilder_ == null) {
          tschchartaxisvalueminorgridlinestroke_ = null;
          onChanged();
        } else {
          tschchartaxisvalueminorgridlinestrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 13;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartaxisvalueminorgridlinestrokeBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getTschchartaxisvalueminorgridlinestrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 13;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxisvalueminorgridlinestrokeOrBuilder() {
        if (tschchartaxisvalueminorgridlinestrokeBuilder_ != null) {
          return tschchartaxisvalueminorgridlinestrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxisvalueminorgridlinestroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxisvalueminorgridlinestroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalueminorgridlinestroke = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartaxisvalueminorgridlinestrokeFieldBuilder() {
        if (tschchartaxisvalueminorgridlinestrokeBuilder_ == null) {
          tschchartaxisvalueminorgridlinestrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartaxisvalueminorgridlinestroke(),
                  getParentForChildren(),
                  isClean());
          tschchartaxisvalueminorgridlinestroke_ = null;
        }
        return tschchartaxisvalueminorgridlinestrokeBuilder_;
      }

      private int tschchartaxisvaluetickmarklocation_ ;
      /**
       * <code>optional int32 tschchartaxisvaluetickmarklocation = 14;</code>
       */
      public boolean hasTschchartaxisvaluetickmarklocation() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 tschchartaxisvaluetickmarklocation = 14;</code>
       */
      public int getTschchartaxisvaluetickmarklocation() {
        return tschchartaxisvaluetickmarklocation_;
      }
      /**
       * <code>optional int32 tschchartaxisvaluetickmarklocation = 14;</code>
       */
      public Builder setTschchartaxisvaluetickmarklocation(int value) {
        bitField0_ |= 0x00000020;
        tschchartaxisvaluetickmarklocation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxisvaluetickmarklocation = 14;</code>
       */
      public Builder clearTschchartaxisvaluetickmarklocation() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tschchartaxisvaluetickmarklocation_ = 0;
        onChanged();
        return this;
      }

      private boolean tschchartaxisvalueshowmajortickmarks_ ;
      /**
       * <code>optional bool tschchartaxisvalueshowmajortickmarks = 15;</code>
       */
      public boolean hasTschchartaxisvalueshowmajortickmarks() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool tschchartaxisvalueshowmajortickmarks = 15;</code>
       */
      public boolean getTschchartaxisvalueshowmajortickmarks() {
        return tschchartaxisvalueshowmajortickmarks_;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowmajortickmarks = 15;</code>
       */
      public Builder setTschchartaxisvalueshowmajortickmarks(boolean value) {
        bitField0_ |= 0x00000040;
        tschchartaxisvalueshowmajortickmarks_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowmajortickmarks = 15;</code>
       */
      public Builder clearTschchartaxisvalueshowmajortickmarks() {
        bitField0_ = (bitField0_ & ~0x00000040);
        tschchartaxisvalueshowmajortickmarks_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartaxisvalueshowminortickmarks_ ;
      /**
       * <code>optional bool tschchartaxisvalueshowminortickmarks = 16;</code>
       */
      public boolean hasTschchartaxisvalueshowminortickmarks() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool tschchartaxisvalueshowminortickmarks = 16;</code>
       */
      public boolean getTschchartaxisvalueshowminortickmarks() {
        return tschchartaxisvalueshowminortickmarks_;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowminortickmarks = 16;</code>
       */
      public Builder setTschchartaxisvalueshowminortickmarks(boolean value) {
        bitField0_ |= 0x00000080;
        tschchartaxisvalueshowminortickmarks_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowminortickmarks = 16;</code>
       */
      public Builder clearTschchartaxisvalueshowminortickmarks() {
        bitField0_ = (bitField0_ & ~0x00000080);
        tschchartaxisvalueshowminortickmarks_ = false;
        onChanged();
        return this;
      }

      private float tschchartaxisvaluelabelsorientation_ ;
      /**
       * <code>optional float tschchartaxisvaluelabelsorientation = 17;</code>
       */
      public boolean hasTschchartaxisvaluelabelsorientation() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float tschchartaxisvaluelabelsorientation = 17;</code>
       */
      public float getTschchartaxisvaluelabelsorientation() {
        return tschchartaxisvaluelabelsorientation_;
      }
      /**
       * <code>optional float tschchartaxisvaluelabelsorientation = 17;</code>
       */
      public Builder setTschchartaxisvaluelabelsorientation(float value) {
        bitField0_ |= 0x00000100;
        tschchartaxisvaluelabelsorientation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartaxisvaluelabelsorientation = 17;</code>
       */
      public Builder clearTschchartaxisvaluelabelsorientation() {
        bitField0_ = (bitField0_ & ~0x00000100);
        tschchartaxisvaluelabelsorientation_ = 0F;
        onChanged();
        return this;
      }

      private boolean tschchartaxisvalueshowminimumlabel_ ;
      /**
       * <code>optional bool tschchartaxisvalueshowminimumlabel = 18;</code>
       */
      public boolean hasTschchartaxisvalueshowminimumlabel() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool tschchartaxisvalueshowminimumlabel = 18;</code>
       */
      public boolean getTschchartaxisvalueshowminimumlabel() {
        return tschchartaxisvalueshowminimumlabel_;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowminimumlabel = 18;</code>
       */
      public Builder setTschchartaxisvalueshowminimumlabel(boolean value) {
        bitField0_ |= 0x00000200;
        tschchartaxisvalueshowminimumlabel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowminimumlabel = 18;</code>
       */
      public Builder clearTschchartaxisvalueshowminimumlabel() {
        bitField0_ = (bitField0_ & ~0x00000200);
        tschchartaxisvalueshowminimumlabel_ = false;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartaxisvaluemajorgridlineshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartaxisvaluemajorgridlineshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 21;</code>
       */
      public boolean hasTschchartaxisvaluemajorgridlineshadow() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 21;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartaxisvaluemajorgridlineshadow() {
        if (tschchartaxisvaluemajorgridlineshadowBuilder_ == null) {
          return tschchartaxisvaluemajorgridlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxisvaluemajorgridlineshadow_;
        } else {
          return tschchartaxisvaluemajorgridlineshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 21;</code>
       */
      public Builder setTschchartaxisvaluemajorgridlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartaxisvaluemajorgridlineshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxisvaluemajorgridlineshadow_ = value;
          onChanged();
        } else {
          tschchartaxisvaluemajorgridlineshadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 21;</code>
       */
      public Builder setTschchartaxisvaluemajorgridlineshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartaxisvaluemajorgridlineshadowBuilder_ == null) {
          tschchartaxisvaluemajorgridlineshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxisvaluemajorgridlineshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 21;</code>
       */
      public Builder mergeTschchartaxisvaluemajorgridlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartaxisvaluemajorgridlineshadowBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              tschchartaxisvaluemajorgridlineshadow_ != null &&
              tschchartaxisvaluemajorgridlineshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartaxisvaluemajorgridlineshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartaxisvaluemajorgridlineshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxisvaluemajorgridlineshadow_ = value;
          }
          onChanged();
        } else {
          tschchartaxisvaluemajorgridlineshadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 21;</code>
       */
      public Builder clearTschchartaxisvaluemajorgridlineshadow() {
        if (tschchartaxisvaluemajorgridlineshadowBuilder_ == null) {
          tschchartaxisvaluemajorgridlineshadow_ = null;
          onChanged();
        } else {
          tschchartaxisvaluemajorgridlineshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 21;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartaxisvaluemajorgridlineshadowBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getTschchartaxisvaluemajorgridlineshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 21;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartaxisvaluemajorgridlineshadowOrBuilder() {
        if (tschchartaxisvaluemajorgridlineshadowBuilder_ != null) {
          return tschchartaxisvaluemajorgridlineshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxisvaluemajorgridlineshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxisvaluemajorgridlineshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvaluemajorgridlineshadow = 21;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartaxisvaluemajorgridlineshadowFieldBuilder() {
        if (tschchartaxisvaluemajorgridlineshadowBuilder_ == null) {
          tschchartaxisvaluemajorgridlineshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartaxisvaluemajorgridlineshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartaxisvaluemajorgridlineshadow_ = null;
        }
        return tschchartaxisvaluemajorgridlineshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartaxisvalueminorgridlineshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartaxisvalueminorgridlineshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 22;</code>
       */
      public boolean hasTschchartaxisvalueminorgridlineshadow() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 22;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartaxisvalueminorgridlineshadow() {
        if (tschchartaxisvalueminorgridlineshadowBuilder_ == null) {
          return tschchartaxisvalueminorgridlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxisvalueminorgridlineshadow_;
        } else {
          return tschchartaxisvalueminorgridlineshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 22;</code>
       */
      public Builder setTschchartaxisvalueminorgridlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartaxisvalueminorgridlineshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxisvalueminorgridlineshadow_ = value;
          onChanged();
        } else {
          tschchartaxisvalueminorgridlineshadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 22;</code>
       */
      public Builder setTschchartaxisvalueminorgridlineshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartaxisvalueminorgridlineshadowBuilder_ == null) {
          tschchartaxisvalueminorgridlineshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxisvalueminorgridlineshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 22;</code>
       */
      public Builder mergeTschchartaxisvalueminorgridlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartaxisvalueminorgridlineshadowBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              tschchartaxisvalueminorgridlineshadow_ != null &&
              tschchartaxisvalueminorgridlineshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartaxisvalueminorgridlineshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartaxisvalueminorgridlineshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxisvalueminorgridlineshadow_ = value;
          }
          onChanged();
        } else {
          tschchartaxisvalueminorgridlineshadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 22;</code>
       */
      public Builder clearTschchartaxisvalueminorgridlineshadow() {
        if (tschchartaxisvalueminorgridlineshadowBuilder_ == null) {
          tschchartaxisvalueminorgridlineshadow_ = null;
          onChanged();
        } else {
          tschchartaxisvalueminorgridlineshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 22;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartaxisvalueminorgridlineshadowBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getTschchartaxisvalueminorgridlineshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 22;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartaxisvalueminorgridlineshadowOrBuilder() {
        if (tschchartaxisvalueminorgridlineshadowBuilder_ != null) {
          return tschchartaxisvalueminorgridlineshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxisvalueminorgridlineshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxisvalueminorgridlineshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxisvalueminorgridlineshadow = 22;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartaxisvalueminorgridlineshadowFieldBuilder() {
        if (tschchartaxisvalueminorgridlineshadowBuilder_ == null) {
          tschchartaxisvalueminorgridlineshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartaxisvalueminorgridlineshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartaxisvalueminorgridlineshadow_ = null;
        }
        return tschchartaxisvalueminorgridlineshadowBuilder_;
      }

      private float tschchartaxisvaluemajorgridlineopacity_ ;
      /**
       * <code>optional float tschchartaxisvaluemajorgridlineopacity = 23;</code>
       */
      public boolean hasTschchartaxisvaluemajorgridlineopacity() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional float tschchartaxisvaluemajorgridlineopacity = 23;</code>
       */
      public float getTschchartaxisvaluemajorgridlineopacity() {
        return tschchartaxisvaluemajorgridlineopacity_;
      }
      /**
       * <code>optional float tschchartaxisvaluemajorgridlineopacity = 23;</code>
       */
      public Builder setTschchartaxisvaluemajorgridlineopacity(float value) {
        bitField0_ |= 0x00001000;
        tschchartaxisvaluemajorgridlineopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartaxisvaluemajorgridlineopacity = 23;</code>
       */
      public Builder clearTschchartaxisvaluemajorgridlineopacity() {
        bitField0_ = (bitField0_ & ~0x00001000);
        tschchartaxisvaluemajorgridlineopacity_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartaxisvalueminorgridlineopacity_ ;
      /**
       * <code>optional float tschchartaxisvalueminorgridlineopacity = 24;</code>
       */
      public boolean hasTschchartaxisvalueminorgridlineopacity() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional float tschchartaxisvalueminorgridlineopacity = 24;</code>
       */
      public float getTschchartaxisvalueminorgridlineopacity() {
        return tschchartaxisvalueminorgridlineopacity_;
      }
      /**
       * <code>optional float tschchartaxisvalueminorgridlineopacity = 24;</code>
       */
      public Builder setTschchartaxisvalueminorgridlineopacity(float value) {
        bitField0_ |= 0x00002000;
        tschchartaxisvalueminorgridlineopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartaxisvalueminorgridlineopacity = 24;</code>
       */
      public Builder clearTschchartaxisvalueminorgridlineopacity() {
        bitField0_ = (bitField0_ & ~0x00002000);
        tschchartaxisvalueminorgridlineopacity_ = 0F;
        onChanged();
        return this;
      }

      private boolean tschchartaxisvalueshowaxis_ ;
      /**
       * <code>optional bool tschchartaxisvalueshowaxis = 25;</code>
       */
      public boolean hasTschchartaxisvalueshowaxis() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional bool tschchartaxisvalueshowaxis = 25;</code>
       */
      public boolean getTschchartaxisvalueshowaxis() {
        return tschchartaxisvalueshowaxis_;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowaxis = 25;</code>
       */
      public Builder setTschchartaxisvalueshowaxis(boolean value) {
        bitField0_ |= 0x00004000;
        tschchartaxisvalueshowaxis_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowaxis = 25;</code>
       */
      public Builder clearTschchartaxisvalueshowaxis() {
        bitField0_ = (bitField0_ & ~0x00004000);
        tschchartaxisvalueshowaxis_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartaxiscategoryshowmajorgridlines_ ;
      /**
       * <code>optional bool tschchartaxiscategoryshowmajorgridlines = 50;</code>
       */
      public boolean hasTschchartaxiscategoryshowmajorgridlines() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowmajorgridlines = 50;</code>
       */
      public boolean getTschchartaxiscategoryshowmajorgridlines() {
        return tschchartaxiscategoryshowmajorgridlines_;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowmajorgridlines = 50;</code>
       */
      public Builder setTschchartaxiscategoryshowmajorgridlines(boolean value) {
        bitField0_ |= 0x00008000;
        tschchartaxiscategoryshowmajorgridlines_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowmajorgridlines = 50;</code>
       */
      public Builder clearTschchartaxiscategoryshowmajorgridlines() {
        bitField0_ = (bitField0_ & ~0x00008000);
        tschchartaxiscategoryshowmajorgridlines_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartaxiscategoryshowminorgridlines_ ;
      /**
       * <code>optional bool tschchartaxiscategoryshowminorgridlines = 51;</code>
       */
      public boolean hasTschchartaxiscategoryshowminorgridlines() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowminorgridlines = 51;</code>
       */
      public boolean getTschchartaxiscategoryshowminorgridlines() {
        return tschchartaxiscategoryshowminorgridlines_;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowminorgridlines = 51;</code>
       */
      public Builder setTschchartaxiscategoryshowminorgridlines(boolean value) {
        bitField0_ |= 0x00010000;
        tschchartaxiscategoryshowminorgridlines_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowminorgridlines = 51;</code>
       */
      public Builder clearTschchartaxiscategoryshowminorgridlines() {
        bitField0_ = (bitField0_ & ~0x00010000);
        tschchartaxiscategoryshowminorgridlines_ = false;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartaxiscategorymajorgridlinestroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartaxiscategorymajorgridlinestrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 52;</code>
       */
      public boolean hasTschchartaxiscategorymajorgridlinestroke() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 52;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxiscategorymajorgridlinestroke() {
        if (tschchartaxiscategorymajorgridlinestrokeBuilder_ == null) {
          return tschchartaxiscategorymajorgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxiscategorymajorgridlinestroke_;
        } else {
          return tschchartaxiscategorymajorgridlinestrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 52;</code>
       */
      public Builder setTschchartaxiscategorymajorgridlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartaxiscategorymajorgridlinestrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxiscategorymajorgridlinestroke_ = value;
          onChanged();
        } else {
          tschchartaxiscategorymajorgridlinestrokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 52;</code>
       */
      public Builder setTschchartaxiscategorymajorgridlinestroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartaxiscategorymajorgridlinestrokeBuilder_ == null) {
          tschchartaxiscategorymajorgridlinestroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxiscategorymajorgridlinestrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 52;</code>
       */
      public Builder mergeTschchartaxiscategorymajorgridlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartaxiscategorymajorgridlinestrokeBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000) &&
              tschchartaxiscategorymajorgridlinestroke_ != null &&
              tschchartaxiscategorymajorgridlinestroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartaxiscategorymajorgridlinestroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartaxiscategorymajorgridlinestroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxiscategorymajorgridlinestroke_ = value;
          }
          onChanged();
        } else {
          tschchartaxiscategorymajorgridlinestrokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 52;</code>
       */
      public Builder clearTschchartaxiscategorymajorgridlinestroke() {
        if (tschchartaxiscategorymajorgridlinestrokeBuilder_ == null) {
          tschchartaxiscategorymajorgridlinestroke_ = null;
          onChanged();
        } else {
          tschchartaxiscategorymajorgridlinestrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 52;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartaxiscategorymajorgridlinestrokeBuilder() {
        bitField0_ |= 0x00020000;
        onChanged();
        return getTschchartaxiscategorymajorgridlinestrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 52;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxiscategorymajorgridlinestrokeOrBuilder() {
        if (tschchartaxiscategorymajorgridlinestrokeBuilder_ != null) {
          return tschchartaxiscategorymajorgridlinestrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxiscategorymajorgridlinestroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxiscategorymajorgridlinestroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategorymajorgridlinestroke = 52;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartaxiscategorymajorgridlinestrokeFieldBuilder() {
        if (tschchartaxiscategorymajorgridlinestrokeBuilder_ == null) {
          tschchartaxiscategorymajorgridlinestrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartaxiscategorymajorgridlinestroke(),
                  getParentForChildren(),
                  isClean());
          tschchartaxiscategorymajorgridlinestroke_ = null;
        }
        return tschchartaxiscategorymajorgridlinestrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartaxiscategoryminorgridlinestroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartaxiscategoryminorgridlinestrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 53;</code>
       */
      public boolean hasTschchartaxiscategoryminorgridlinestroke() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 53;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxiscategoryminorgridlinestroke() {
        if (tschchartaxiscategoryminorgridlinestrokeBuilder_ == null) {
          return tschchartaxiscategoryminorgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxiscategoryminorgridlinestroke_;
        } else {
          return tschchartaxiscategoryminorgridlinestrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 53;</code>
       */
      public Builder setTschchartaxiscategoryminorgridlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartaxiscategoryminorgridlinestrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxiscategoryminorgridlinestroke_ = value;
          onChanged();
        } else {
          tschchartaxiscategoryminorgridlinestrokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 53;</code>
       */
      public Builder setTschchartaxiscategoryminorgridlinestroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartaxiscategoryminorgridlinestrokeBuilder_ == null) {
          tschchartaxiscategoryminorgridlinestroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxiscategoryminorgridlinestrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 53;</code>
       */
      public Builder mergeTschchartaxiscategoryminorgridlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartaxiscategoryminorgridlinestrokeBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000) &&
              tschchartaxiscategoryminorgridlinestroke_ != null &&
              tschchartaxiscategoryminorgridlinestroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartaxiscategoryminorgridlinestroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartaxiscategoryminorgridlinestroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxiscategoryminorgridlinestroke_ = value;
          }
          onChanged();
        } else {
          tschchartaxiscategoryminorgridlinestrokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 53;</code>
       */
      public Builder clearTschchartaxiscategoryminorgridlinestroke() {
        if (tschchartaxiscategoryminorgridlinestrokeBuilder_ == null) {
          tschchartaxiscategoryminorgridlinestroke_ = null;
          onChanged();
        } else {
          tschchartaxiscategoryminorgridlinestrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 53;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartaxiscategoryminorgridlinestrokeBuilder() {
        bitField0_ |= 0x00040000;
        onChanged();
        return getTschchartaxiscategoryminorgridlinestrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 53;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxiscategoryminorgridlinestrokeOrBuilder() {
        if (tschchartaxiscategoryminorgridlinestrokeBuilder_ != null) {
          return tschchartaxiscategoryminorgridlinestrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxiscategoryminorgridlinestroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxiscategoryminorgridlinestroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategoryminorgridlinestroke = 53;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartaxiscategoryminorgridlinestrokeFieldBuilder() {
        if (tschchartaxiscategoryminorgridlinestrokeBuilder_ == null) {
          tschchartaxiscategoryminorgridlinestrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartaxiscategoryminorgridlinestroke(),
                  getParentForChildren(),
                  isClean());
          tschchartaxiscategoryminorgridlinestroke_ = null;
        }
        return tschchartaxiscategoryminorgridlinestrokeBuilder_;
      }

      private int tschchartaxiscategorytickmarklocation_ ;
      /**
       * <code>optional int32 tschchartaxiscategorytickmarklocation = 54;</code>
       */
      public boolean hasTschchartaxiscategorytickmarklocation() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 tschchartaxiscategorytickmarklocation = 54;</code>
       */
      public int getTschchartaxiscategorytickmarklocation() {
        return tschchartaxiscategorytickmarklocation_;
      }
      /**
       * <code>optional int32 tschchartaxiscategorytickmarklocation = 54;</code>
       */
      public Builder setTschchartaxiscategorytickmarklocation(int value) {
        bitField0_ |= 0x00080000;
        tschchartaxiscategorytickmarklocation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxiscategorytickmarklocation = 54;</code>
       */
      public Builder clearTschchartaxiscategorytickmarklocation() {
        bitField0_ = (bitField0_ & ~0x00080000);
        tschchartaxiscategorytickmarklocation_ = 0;
        onChanged();
        return this;
      }

      private boolean tschchartaxiscategoryshowmajortickmarks_ ;
      /**
       * <code>optional bool tschchartaxiscategoryshowmajortickmarks = 55;</code>
       */
      public boolean hasTschchartaxiscategoryshowmajortickmarks() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowmajortickmarks = 55;</code>
       */
      public boolean getTschchartaxiscategoryshowmajortickmarks() {
        return tschchartaxiscategoryshowmajortickmarks_;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowmajortickmarks = 55;</code>
       */
      public Builder setTschchartaxiscategoryshowmajortickmarks(boolean value) {
        bitField0_ |= 0x00100000;
        tschchartaxiscategoryshowmajortickmarks_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowmajortickmarks = 55;</code>
       */
      public Builder clearTschchartaxiscategoryshowmajortickmarks() {
        bitField0_ = (bitField0_ & ~0x00100000);
        tschchartaxiscategoryshowmajortickmarks_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartaxiscategoryshowminortickmarks_ ;
      /**
       * <code>optional bool tschchartaxiscategoryshowminortickmarks = 56;</code>
       */
      public boolean hasTschchartaxiscategoryshowminortickmarks() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowminortickmarks = 56;</code>
       */
      public boolean getTschchartaxiscategoryshowminortickmarks() {
        return tschchartaxiscategoryshowminortickmarks_;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowminortickmarks = 56;</code>
       */
      public Builder setTschchartaxiscategoryshowminortickmarks(boolean value) {
        bitField0_ |= 0x00200000;
        tschchartaxiscategoryshowminortickmarks_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowminortickmarks = 56;</code>
       */
      public Builder clearTschchartaxiscategoryshowminortickmarks() {
        bitField0_ = (bitField0_ & ~0x00200000);
        tschchartaxiscategoryshowminortickmarks_ = false;
        onChanged();
        return this;
      }

      private float tschchartaxiscategorylabelsorientation_ ;
      /**
       * <code>optional float tschchartaxiscategorylabelsorientation = 57;</code>
       */
      public boolean hasTschchartaxiscategorylabelsorientation() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional float tschchartaxiscategorylabelsorientation = 57;</code>
       */
      public float getTschchartaxiscategorylabelsorientation() {
        return tschchartaxiscategorylabelsorientation_;
      }
      /**
       * <code>optional float tschchartaxiscategorylabelsorientation = 57;</code>
       */
      public Builder setTschchartaxiscategorylabelsorientation(float value) {
        bitField0_ |= 0x00400000;
        tschchartaxiscategorylabelsorientation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartaxiscategorylabelsorientation = 57;</code>
       */
      public Builder clearTschchartaxiscategorylabelsorientation() {
        bitField0_ = (bitField0_ & ~0x00400000);
        tschchartaxiscategorylabelsorientation_ = 0F;
        onChanged();
        return this;
      }

      private int tschchartaxiscategoryhorizontalspacing_ ;
      /**
       * <code>optional int32 tschchartaxiscategoryhorizontalspacing = 58;</code>
       */
      public boolean hasTschchartaxiscategoryhorizontalspacing() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int32 tschchartaxiscategoryhorizontalspacing = 58;</code>
       */
      public int getTschchartaxiscategoryhorizontalspacing() {
        return tschchartaxiscategoryhorizontalspacing_;
      }
      /**
       * <code>optional int32 tschchartaxiscategoryhorizontalspacing = 58;</code>
       */
      public Builder setTschchartaxiscategoryhorizontalspacing(int value) {
        bitField0_ |= 0x00800000;
        tschchartaxiscategoryhorizontalspacing_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxiscategoryhorizontalspacing = 58;</code>
       */
      public Builder clearTschchartaxiscategoryhorizontalspacing() {
        bitField0_ = (bitField0_ & ~0x00800000);
        tschchartaxiscategoryhorizontalspacing_ = 0;
        onChanged();
        return this;
      }

      private int tschchartaxiscategoryverticalspacing_ ;
      /**
       * <code>optional int32 tschchartaxiscategoryverticalspacing = 59;</code>
       */
      public boolean hasTschchartaxiscategoryverticalspacing() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int32 tschchartaxiscategoryverticalspacing = 59;</code>
       */
      public int getTschchartaxiscategoryverticalspacing() {
        return tschchartaxiscategoryverticalspacing_;
      }
      /**
       * <code>optional int32 tschchartaxiscategoryverticalspacing = 59;</code>
       */
      public Builder setTschchartaxiscategoryverticalspacing(int value) {
        bitField0_ |= 0x01000000;
        tschchartaxiscategoryverticalspacing_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxiscategoryverticalspacing = 59;</code>
       */
      public Builder clearTschchartaxiscategoryverticalspacing() {
        bitField0_ = (bitField0_ & ~0x01000000);
        tschchartaxiscategoryverticalspacing_ = 0;
        onChanged();
        return this;
      }

      private boolean tschchartaxiscategoryshowlastlabel_ ;
      /**
       * <code>optional bool tschchartaxiscategoryshowlastlabel = 60;</code>
       */
      public boolean hasTschchartaxiscategoryshowlastlabel() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowlastlabel = 60;</code>
       */
      public boolean getTschchartaxiscategoryshowlastlabel() {
        return tschchartaxiscategoryshowlastlabel_;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowlastlabel = 60;</code>
       */
      public Builder setTschchartaxiscategoryshowlastlabel(boolean value) {
        bitField0_ |= 0x02000000;
        tschchartaxiscategoryshowlastlabel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowlastlabel = 60;</code>
       */
      public Builder clearTschchartaxiscategoryshowlastlabel() {
        bitField0_ = (bitField0_ & ~0x02000000);
        tschchartaxiscategoryshowlastlabel_ = false;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartaxiscategorymajorgridlineshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartaxiscategorymajorgridlineshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 63;</code>
       */
      public boolean hasTschchartaxiscategorymajorgridlineshadow() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 63;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartaxiscategorymajorgridlineshadow() {
        if (tschchartaxiscategorymajorgridlineshadowBuilder_ == null) {
          return tschchartaxiscategorymajorgridlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxiscategorymajorgridlineshadow_;
        } else {
          return tschchartaxiscategorymajorgridlineshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 63;</code>
       */
      public Builder setTschchartaxiscategorymajorgridlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartaxiscategorymajorgridlineshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxiscategorymajorgridlineshadow_ = value;
          onChanged();
        } else {
          tschchartaxiscategorymajorgridlineshadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 63;</code>
       */
      public Builder setTschchartaxiscategorymajorgridlineshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartaxiscategorymajorgridlineshadowBuilder_ == null) {
          tschchartaxiscategorymajorgridlineshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxiscategorymajorgridlineshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 63;</code>
       */
      public Builder mergeTschchartaxiscategorymajorgridlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartaxiscategorymajorgridlineshadowBuilder_ == null) {
          if (((bitField0_ & 0x04000000) == 0x04000000) &&
              tschchartaxiscategorymajorgridlineshadow_ != null &&
              tschchartaxiscategorymajorgridlineshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartaxiscategorymajorgridlineshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartaxiscategorymajorgridlineshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxiscategorymajorgridlineshadow_ = value;
          }
          onChanged();
        } else {
          tschchartaxiscategorymajorgridlineshadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 63;</code>
       */
      public Builder clearTschchartaxiscategorymajorgridlineshadow() {
        if (tschchartaxiscategorymajorgridlineshadowBuilder_ == null) {
          tschchartaxiscategorymajorgridlineshadow_ = null;
          onChanged();
        } else {
          tschchartaxiscategorymajorgridlineshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x04000000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 63;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartaxiscategorymajorgridlineshadowBuilder() {
        bitField0_ |= 0x04000000;
        onChanged();
        return getTschchartaxiscategorymajorgridlineshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 63;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartaxiscategorymajorgridlineshadowOrBuilder() {
        if (tschchartaxiscategorymajorgridlineshadowBuilder_ != null) {
          return tschchartaxiscategorymajorgridlineshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxiscategorymajorgridlineshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxiscategorymajorgridlineshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategorymajorgridlineshadow = 63;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartaxiscategorymajorgridlineshadowFieldBuilder() {
        if (tschchartaxiscategorymajorgridlineshadowBuilder_ == null) {
          tschchartaxiscategorymajorgridlineshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartaxiscategorymajorgridlineshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartaxiscategorymajorgridlineshadow_ = null;
        }
        return tschchartaxiscategorymajorgridlineshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartaxiscategoryminorgridlineshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartaxiscategoryminorgridlineshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 64;</code>
       */
      public boolean hasTschchartaxiscategoryminorgridlineshadow() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 64;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartaxiscategoryminorgridlineshadow() {
        if (tschchartaxiscategoryminorgridlineshadowBuilder_ == null) {
          return tschchartaxiscategoryminorgridlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxiscategoryminorgridlineshadow_;
        } else {
          return tschchartaxiscategoryminorgridlineshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 64;</code>
       */
      public Builder setTschchartaxiscategoryminorgridlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartaxiscategoryminorgridlineshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxiscategoryminorgridlineshadow_ = value;
          onChanged();
        } else {
          tschchartaxiscategoryminorgridlineshadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x08000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 64;</code>
       */
      public Builder setTschchartaxiscategoryminorgridlineshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartaxiscategoryminorgridlineshadowBuilder_ == null) {
          tschchartaxiscategoryminorgridlineshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxiscategoryminorgridlineshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x08000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 64;</code>
       */
      public Builder mergeTschchartaxiscategoryminorgridlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartaxiscategoryminorgridlineshadowBuilder_ == null) {
          if (((bitField0_ & 0x08000000) == 0x08000000) &&
              tschchartaxiscategoryminorgridlineshadow_ != null &&
              tschchartaxiscategoryminorgridlineshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartaxiscategoryminorgridlineshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartaxiscategoryminorgridlineshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxiscategoryminorgridlineshadow_ = value;
          }
          onChanged();
        } else {
          tschchartaxiscategoryminorgridlineshadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x08000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 64;</code>
       */
      public Builder clearTschchartaxiscategoryminorgridlineshadow() {
        if (tschchartaxiscategoryminorgridlineshadowBuilder_ == null) {
          tschchartaxiscategoryminorgridlineshadow_ = null;
          onChanged();
        } else {
          tschchartaxiscategoryminorgridlineshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x08000000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 64;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartaxiscategoryminorgridlineshadowBuilder() {
        bitField0_ |= 0x08000000;
        onChanged();
        return getTschchartaxiscategoryminorgridlineshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 64;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartaxiscategoryminorgridlineshadowOrBuilder() {
        if (tschchartaxiscategoryminorgridlineshadowBuilder_ != null) {
          return tschchartaxiscategoryminorgridlineshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxiscategoryminorgridlineshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartaxiscategoryminorgridlineshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartaxiscategoryminorgridlineshadow = 64;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartaxiscategoryminorgridlineshadowFieldBuilder() {
        if (tschchartaxiscategoryminorgridlineshadowBuilder_ == null) {
          tschchartaxiscategoryminorgridlineshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartaxiscategoryminorgridlineshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartaxiscategoryminorgridlineshadow_ = null;
        }
        return tschchartaxiscategoryminorgridlineshadowBuilder_;
      }

      private float tschchartaxiscategorymajorgridlineopacity_ ;
      /**
       * <code>optional float tschchartaxiscategorymajorgridlineopacity = 65;</code>
       */
      public boolean hasTschchartaxiscategorymajorgridlineopacity() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional float tschchartaxiscategorymajorgridlineopacity = 65;</code>
       */
      public float getTschchartaxiscategorymajorgridlineopacity() {
        return tschchartaxiscategorymajorgridlineopacity_;
      }
      /**
       * <code>optional float tschchartaxiscategorymajorgridlineopacity = 65;</code>
       */
      public Builder setTschchartaxiscategorymajorgridlineopacity(float value) {
        bitField0_ |= 0x10000000;
        tschchartaxiscategorymajorgridlineopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartaxiscategorymajorgridlineopacity = 65;</code>
       */
      public Builder clearTschchartaxiscategorymajorgridlineopacity() {
        bitField0_ = (bitField0_ & ~0x10000000);
        tschchartaxiscategorymajorgridlineopacity_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartaxiscategoryminorgridlineopacity_ ;
      /**
       * <code>optional float tschchartaxiscategoryminorgridlineopacity = 66;</code>
       */
      public boolean hasTschchartaxiscategoryminorgridlineopacity() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional float tschchartaxiscategoryminorgridlineopacity = 66;</code>
       */
      public float getTschchartaxiscategoryminorgridlineopacity() {
        return tschchartaxiscategoryminorgridlineopacity_;
      }
      /**
       * <code>optional float tschchartaxiscategoryminorgridlineopacity = 66;</code>
       */
      public Builder setTschchartaxiscategoryminorgridlineopacity(float value) {
        bitField0_ |= 0x20000000;
        tschchartaxiscategoryminorgridlineopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartaxiscategoryminorgridlineopacity = 66;</code>
       */
      public Builder clearTschchartaxiscategoryminorgridlineopacity() {
        bitField0_ = (bitField0_ & ~0x20000000);
        tschchartaxiscategoryminorgridlineopacity_ = 0F;
        onChanged();
        return this;
      }

      private boolean tschchartaxiscategoryshowaxis_ ;
      /**
       * <code>optional bool tschchartaxiscategoryshowaxis = 67;</code>
       */
      public boolean hasTschchartaxiscategoryshowaxis() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowaxis = 67;</code>
       */
      public boolean getTschchartaxiscategoryshowaxis() {
        return tschchartaxiscategoryshowaxis_;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowaxis = 67;</code>
       */
      public Builder setTschchartaxiscategoryshowaxis(boolean value) {
        bitField0_ |= 0x40000000;
        tschchartaxiscategoryshowaxis_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowaxis = 67;</code>
       */
      public Builder clearTschchartaxiscategoryshowaxis() {
        bitField0_ = (bitField0_ & ~0x40000000);
        tschchartaxiscategoryshowaxis_ = false;
        onChanged();
        return this;
      }

      private float tschchartaxisdefaultlabelsorientation_ ;
      /**
       * <code>optional float tschchartaxisdefaultlabelsorientation = 102;</code>
       */
      public boolean hasTschchartaxisdefaultlabelsorientation() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional float tschchartaxisdefaultlabelsorientation = 102;</code>
       */
      public float getTschchartaxisdefaultlabelsorientation() {
        return tschchartaxisdefaultlabelsorientation_;
      }
      /**
       * <code>optional float tschchartaxisdefaultlabelsorientation = 102;</code>
       */
      public Builder setTschchartaxisdefaultlabelsorientation(float value) {
        bitField0_ |= 0x80000000;
        tschchartaxisdefaultlabelsorientation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartaxisdefaultlabelsorientation = 102;</code>
       */
      public Builder clearTschchartaxisdefaultlabelsorientation() {
        bitField0_ = (bitField0_ & ~0x80000000);
        tschchartaxisdefaultlabelsorientation_ = 0F;
        onChanged();
        return this;
      }

      private int tschchartaxisdefaulttitleparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartaxisdefaulttitleparagraphstyleindex = 110;</code>
       */
      public boolean hasTschchartaxisdefaulttitleparagraphstyleindex() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 tschchartaxisdefaulttitleparagraphstyleindex = 110;</code>
       */
      public int getTschchartaxisdefaulttitleparagraphstyleindex() {
        return tschchartaxisdefaulttitleparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartaxisdefaulttitleparagraphstyleindex = 110;</code>
       */
      public Builder setTschchartaxisdefaulttitleparagraphstyleindex(int value) {
        bitField1_ |= 0x00000001;
        tschchartaxisdefaulttitleparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxisdefaulttitleparagraphstyleindex = 110;</code>
       */
      public Builder clearTschchartaxisdefaulttitleparagraphstyleindex() {
        bitField1_ = (bitField1_ & ~0x00000001);
        tschchartaxisdefaulttitleparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartaxisdefaultlabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartaxisdefaultlabelparagraphstyleindex = 111;</code>
       */
      public boolean hasTschchartaxisdefaultlabelparagraphstyleindex() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 tschchartaxisdefaultlabelparagraphstyleindex = 111;</code>
       */
      public int getTschchartaxisdefaultlabelparagraphstyleindex() {
        return tschchartaxisdefaultlabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartaxisdefaultlabelparagraphstyleindex = 111;</code>
       */
      public Builder setTschchartaxisdefaultlabelparagraphstyleindex(int value) {
        bitField1_ |= 0x00000002;
        tschchartaxisdefaultlabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxisdefaultlabelparagraphstyleindex = 111;</code>
       */
      public Builder clearTschchartaxisdefaultlabelparagraphstyleindex() {
        bitField1_ = (bitField1_ & ~0x00000002);
        tschchartaxisdefaultlabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartaxisvaluetitleparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartaxisvaluetitleparagraphstyleindex = 112;</code>
       */
      public boolean hasTschchartaxisvaluetitleparagraphstyleindex() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 tschchartaxisvaluetitleparagraphstyleindex = 112;</code>
       */
      public int getTschchartaxisvaluetitleparagraphstyleindex() {
        return tschchartaxisvaluetitleparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartaxisvaluetitleparagraphstyleindex = 112;</code>
       */
      public Builder setTschchartaxisvaluetitleparagraphstyleindex(int value) {
        bitField1_ |= 0x00000004;
        tschchartaxisvaluetitleparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxisvaluetitleparagraphstyleindex = 112;</code>
       */
      public Builder clearTschchartaxisvaluetitleparagraphstyleindex() {
        bitField1_ = (bitField1_ & ~0x00000004);
        tschchartaxisvaluetitleparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartaxisvaluelabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartaxisvaluelabelparagraphstyleindex = 113;</code>
       */
      public boolean hasTschchartaxisvaluelabelparagraphstyleindex() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 tschchartaxisvaluelabelparagraphstyleindex = 113;</code>
       */
      public int getTschchartaxisvaluelabelparagraphstyleindex() {
        return tschchartaxisvaluelabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartaxisvaluelabelparagraphstyleindex = 113;</code>
       */
      public Builder setTschchartaxisvaluelabelparagraphstyleindex(int value) {
        bitField1_ |= 0x00000008;
        tschchartaxisvaluelabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxisvaluelabelparagraphstyleindex = 113;</code>
       */
      public Builder clearTschchartaxisvaluelabelparagraphstyleindex() {
        bitField1_ = (bitField1_ & ~0x00000008);
        tschchartaxisvaluelabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartaxiscategorytitleparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartaxiscategorytitleparagraphstyleindex = 114;</code>
       */
      public boolean hasTschchartaxiscategorytitleparagraphstyleindex() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 tschchartaxiscategorytitleparagraphstyleindex = 114;</code>
       */
      public int getTschchartaxiscategorytitleparagraphstyleindex() {
        return tschchartaxiscategorytitleparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartaxiscategorytitleparagraphstyleindex = 114;</code>
       */
      public Builder setTschchartaxiscategorytitleparagraphstyleindex(int value) {
        bitField1_ |= 0x00000010;
        tschchartaxiscategorytitleparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxiscategorytitleparagraphstyleindex = 114;</code>
       */
      public Builder clearTschchartaxiscategorytitleparagraphstyleindex() {
        bitField1_ = (bitField1_ & ~0x00000010);
        tschchartaxiscategorytitleparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartaxiscategorylabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartaxiscategorylabelparagraphstyleindex = 115;</code>
       */
      public boolean hasTschchartaxiscategorylabelparagraphstyleindex() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 tschchartaxiscategorylabelparagraphstyleindex = 115;</code>
       */
      public int getTschchartaxiscategorylabelparagraphstyleindex() {
        return tschchartaxiscategorylabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartaxiscategorylabelparagraphstyleindex = 115;</code>
       */
      public Builder setTschchartaxiscategorylabelparagraphstyleindex(int value) {
        bitField1_ |= 0x00000020;
        tschchartaxiscategorylabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxiscategorylabelparagraphstyleindex = 115;</code>
       */
      public Builder clearTschchartaxiscategorylabelparagraphstyleindex() {
        bitField1_ = (bitField1_ & ~0x00000020);
        tschchartaxiscategorylabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartaxisvalue3Dgridlinestroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartaxisvalue3DgridlinestrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 331;</code>
       */
      public boolean hasTschchartaxisvalue3Dgridlinestroke() {
        return ((bitField1_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 331;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxisvalue3Dgridlinestroke() {
        if (tschchartaxisvalue3DgridlinestrokeBuilder_ == null) {
          return tschchartaxisvalue3Dgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxisvalue3Dgridlinestroke_;
        } else {
          return tschchartaxisvalue3DgridlinestrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 331;</code>
       */
      public Builder setTschchartaxisvalue3Dgridlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartaxisvalue3DgridlinestrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxisvalue3Dgridlinestroke_ = value;
          onChanged();
        } else {
          tschchartaxisvalue3DgridlinestrokeBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 331;</code>
       */
      public Builder setTschchartaxisvalue3Dgridlinestroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartaxisvalue3DgridlinestrokeBuilder_ == null) {
          tschchartaxisvalue3Dgridlinestroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxisvalue3DgridlinestrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 331;</code>
       */
      public Builder mergeTschchartaxisvalue3Dgridlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartaxisvalue3DgridlinestrokeBuilder_ == null) {
          if (((bitField1_ & 0x00000040) == 0x00000040) &&
              tschchartaxisvalue3Dgridlinestroke_ != null &&
              tschchartaxisvalue3Dgridlinestroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartaxisvalue3Dgridlinestroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartaxisvalue3Dgridlinestroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxisvalue3Dgridlinestroke_ = value;
          }
          onChanged();
        } else {
          tschchartaxisvalue3DgridlinestrokeBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 331;</code>
       */
      public Builder clearTschchartaxisvalue3Dgridlinestroke() {
        if (tschchartaxisvalue3DgridlinestrokeBuilder_ == null) {
          tschchartaxisvalue3Dgridlinestroke_ = null;
          onChanged();
        } else {
          tschchartaxisvalue3DgridlinestrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 331;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartaxisvalue3DgridlinestrokeBuilder() {
        bitField1_ |= 0x00000040;
        onChanged();
        return getTschchartaxisvalue3DgridlinestrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 331;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxisvalue3DgridlinestrokeOrBuilder() {
        if (tschchartaxisvalue3DgridlinestrokeBuilder_ != null) {
          return tschchartaxisvalue3DgridlinestrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxisvalue3Dgridlinestroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxisvalue3Dgridlinestroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxisvalue3dgridlinestroke = 331;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartaxisvalue3DgridlinestrokeFieldBuilder() {
        if (tschchartaxisvalue3DgridlinestrokeBuilder_ == null) {
          tschchartaxisvalue3DgridlinestrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartaxisvalue3Dgridlinestroke(),
                  getParentForChildren(),
                  isClean());
          tschchartaxisvalue3Dgridlinestroke_ = null;
        }
        return tschchartaxisvalue3DgridlinestrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartaxiscategory3Dgridlinestroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartaxiscategory3DgridlinestrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 332;</code>
       */
      public boolean hasTschchartaxiscategory3Dgridlinestroke() {
        return ((bitField1_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 332;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartaxiscategory3Dgridlinestroke() {
        if (tschchartaxiscategory3DgridlinestrokeBuilder_ == null) {
          return tschchartaxiscategory3Dgridlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxiscategory3Dgridlinestroke_;
        } else {
          return tschchartaxiscategory3DgridlinestrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 332;</code>
       */
      public Builder setTschchartaxiscategory3Dgridlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartaxiscategory3DgridlinestrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxiscategory3Dgridlinestroke_ = value;
          onChanged();
        } else {
          tschchartaxiscategory3DgridlinestrokeBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 332;</code>
       */
      public Builder setTschchartaxiscategory3Dgridlinestroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartaxiscategory3DgridlinestrokeBuilder_ == null) {
          tschchartaxiscategory3Dgridlinestroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxiscategory3DgridlinestrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 332;</code>
       */
      public Builder mergeTschchartaxiscategory3Dgridlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartaxiscategory3DgridlinestrokeBuilder_ == null) {
          if (((bitField1_ & 0x00000080) == 0x00000080) &&
              tschchartaxiscategory3Dgridlinestroke_ != null &&
              tschchartaxiscategory3Dgridlinestroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartaxiscategory3Dgridlinestroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartaxiscategory3Dgridlinestroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxiscategory3Dgridlinestroke_ = value;
          }
          onChanged();
        } else {
          tschchartaxiscategory3DgridlinestrokeBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 332;</code>
       */
      public Builder clearTschchartaxiscategory3Dgridlinestroke() {
        if (tschchartaxiscategory3DgridlinestrokeBuilder_ == null) {
          tschchartaxiscategory3Dgridlinestroke_ = null;
          onChanged();
        } else {
          tschchartaxiscategory3DgridlinestrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 332;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartaxiscategory3DgridlinestrokeBuilder() {
        bitField1_ |= 0x00000080;
        onChanged();
        return getTschchartaxiscategory3DgridlinestrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 332;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartaxiscategory3DgridlinestrokeOrBuilder() {
        if (tschchartaxiscategory3DgridlinestrokeBuilder_ != null) {
          return tschchartaxiscategory3DgridlinestrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxiscategory3Dgridlinestroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartaxiscategory3Dgridlinestroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartaxiscategory3dgridlinestroke = 332;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartaxiscategory3DgridlinestrokeFieldBuilder() {
        if (tschchartaxiscategory3DgridlinestrokeBuilder_ == null) {
          tschchartaxiscategory3DgridlinestrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartaxiscategory3Dgridlinestroke(),
                  getParentForChildren(),
                  isClean());
          tschchartaxiscategory3Dgridlinestroke_ = null;
        }
        return tschchartaxiscategory3DgridlinestrokeBuilder_;
      }

      private float tschchartaxisvalue3Dgridlineopacity_ ;
      /**
       * <code>optional float tschchartaxisvalue3dgridlineopacity = 333;</code>
       */
      public boolean hasTschchartaxisvalue3Dgridlineopacity() {
        return ((bitField1_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float tschchartaxisvalue3dgridlineopacity = 333;</code>
       */
      public float getTschchartaxisvalue3Dgridlineopacity() {
        return tschchartaxisvalue3Dgridlineopacity_;
      }
      /**
       * <code>optional float tschchartaxisvalue3dgridlineopacity = 333;</code>
       */
      public Builder setTschchartaxisvalue3Dgridlineopacity(float value) {
        bitField1_ |= 0x00000100;
        tschchartaxisvalue3Dgridlineopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartaxisvalue3dgridlineopacity = 333;</code>
       */
      public Builder clearTschchartaxisvalue3Dgridlineopacity() {
        bitField1_ = (bitField1_ & ~0x00000100);
        tschchartaxisvalue3Dgridlineopacity_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartaxiscategory3Dgridlineopacity_ ;
      /**
       * <code>optional float tschchartaxiscategory3dgridlineopacity = 334;</code>
       */
      public boolean hasTschchartaxiscategory3Dgridlineopacity() {
        return ((bitField1_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float tschchartaxiscategory3dgridlineopacity = 334;</code>
       */
      public float getTschchartaxiscategory3Dgridlineopacity() {
        return tschchartaxiscategory3Dgridlineopacity_;
      }
      /**
       * <code>optional float tschchartaxiscategory3dgridlineopacity = 334;</code>
       */
      public Builder setTschchartaxiscategory3Dgridlineopacity(float value) {
        bitField1_ |= 0x00000200;
        tschchartaxiscategory3Dgridlineopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartaxiscategory3dgridlineopacity = 334;</code>
       */
      public Builder clearTschchartaxiscategory3Dgridlineopacity() {
        bitField1_ = (bitField1_ & ~0x00000200);
        tschchartaxiscategory3Dgridlineopacity_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TSCH.PreUFF.ChartAxisStyleArchive)
    }

    // @@protoc_insertion_point(class_scope:TSCH.PreUFF.ChartAxisStyleArchive)
    private static final org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive();
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ChartAxisStyleArchive>
        PARSER = new com.google.protobuf.AbstractParser<ChartAxisStyleArchive>() {
      public ChartAxisStyleArchive parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ChartAxisStyleArchive(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChartAxisStyleArchive> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChartAxisStyleArchive> getParserForType() {
      return PARSER;
    }

    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisStyleArchive getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChartAxisNonStyleArchiveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TSCH.PreUFF.ChartAxisNonStyleArchive)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    boolean hasSuper();
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive getSuper();
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder getSuperOrBuilder();

    /**
     * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 11;</code>
     */
    boolean hasTschchartaxisdefaultusermin();
    /**
     * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 11;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive getTschchartaxisdefaultusermin();
    /**
     * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 11;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchiveOrBuilder getTschchartaxisdefaultuserminOrBuilder();

    /**
     * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 12;</code>
     */
    boolean hasTschchartaxisdefaultusermax();
    /**
     * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 12;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive getTschchartaxisdefaultusermax();
    /**
     * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 12;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchiveOrBuilder getTschchartaxisdefaultusermaxOrBuilder();

    /**
     * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartaxisdefaultnumberformat = 13;</code>
     */
    boolean hasTschchartaxisdefaultnumberformat();
    /**
     * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartaxisdefaultnumberformat = 13;</code>
     */
    org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive getTschchartaxisdefaultnumberformat();
    /**
     * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartaxisdefaultnumberformat = 13;</code>
     */
    org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchiveOrBuilder getTschchartaxisdefaultnumberformatOrBuilder();

    /**
     * <code>optional bool tschchartaxisdefaultshowlabels = 14;</code>
     */
    boolean hasTschchartaxisdefaultshowlabels();
    /**
     * <code>optional bool tschchartaxisdefaultshowlabels = 14;</code>
     */
    boolean getTschchartaxisdefaultshowlabels();

    /**
     * <code>optional int32 tschchartaxisvaluenumberofminorgridlines = 50;</code>
     */
    boolean hasTschchartaxisvaluenumberofminorgridlines();
    /**
     * <code>optional int32 tschchartaxisvaluenumberofminorgridlines = 50;</code>
     */
    int getTschchartaxisvaluenumberofminorgridlines();

    /**
     * <code>optional int32 tschchartaxisvaluescale = 51;</code>
     */
    boolean hasTschchartaxisvaluescale();
    /**
     * <code>optional int32 tschchartaxisvaluescale = 51;</code>
     */
    int getTschchartaxisvaluescale();

    /**
     * <code>optional int32 tschchartaxisvaluenumberofdecades = 52;</code>
     */
    boolean hasTschchartaxisvaluenumberofdecades();
    /**
     * <code>optional int32 tschchartaxisvaluenumberofdecades = 52;</code>
     */
    int getTschchartaxisvaluenumberofdecades();

    /**
     * <code>optional bool tschchartaxisvalueshowlabels = 53;</code>
     */
    boolean hasTschchartaxisvalueshowlabels();
    /**
     * <code>optional bool tschchartaxisvalueshowlabels = 53;</code>
     */
    boolean getTschchartaxisvalueshowlabels();

    /**
     * <code>optional bool tschchartaxisvalueshowtitle = 54;</code>
     */
    boolean hasTschchartaxisvalueshowtitle();
    /**
     * <code>optional bool tschchartaxisvalueshowtitle = 54;</code>
     */
    boolean getTschchartaxisvalueshowtitle();

    /**
     * <code>optional int32 tschchartaxisvaluenumberofmajorgridlines = 55;</code>
     */
    boolean hasTschchartaxisvaluenumberofmajorgridlines();
    /**
     * <code>optional int32 tschchartaxisvaluenumberofmajorgridlines = 55;</code>
     */
    int getTschchartaxisvaluenumberofmajorgridlines();

    /**
     * <code>optional string tschchartaxisvaluetitle = 56;</code>
     */
    boolean hasTschchartaxisvaluetitle();
    /**
     * <code>optional string tschchartaxisvaluetitle = 56;</code>
     */
    java.lang.String getTschchartaxisvaluetitle();
    /**
     * <code>optional string tschchartaxisvaluetitle = 56;</code>
     */
    com.google.protobuf.ByteString
        getTschchartaxisvaluetitleBytes();

    /**
     * <code>optional bool tschchartaxiscategoryshowlabels = 100;</code>
     */
    boolean hasTschchartaxiscategoryshowlabels();
    /**
     * <code>optional bool tschchartaxiscategoryshowlabels = 100;</code>
     */
    boolean getTschchartaxiscategoryshowlabels();

    /**
     * <code>optional bool tschchartaxiscategoryshowserieslabels = 101;</code>
     */
    boolean hasTschchartaxiscategoryshowserieslabels();
    /**
     * <code>optional bool tschchartaxiscategoryshowserieslabels = 101;</code>
     */
    boolean getTschchartaxiscategoryshowserieslabels();

    /**
     * <code>optional bool tschchartaxiscategoryshowtitle = 102;</code>
     */
    boolean hasTschchartaxiscategoryshowtitle();
    /**
     * <code>optional bool tschchartaxiscategoryshowtitle = 102;</code>
     */
    boolean getTschchartaxiscategoryshowtitle();

    /**
     * <code>optional string tschchartaxiscategorytitle = 103;</code>
     */
    boolean hasTschchartaxiscategorytitle();
    /**
     * <code>optional string tschchartaxiscategorytitle = 103;</code>
     */
    java.lang.String getTschchartaxiscategorytitle();
    /**
     * <code>optional string tschchartaxiscategorytitle = 103;</code>
     */
    com.google.protobuf.ByteString
        getTschchartaxiscategorytitleBytes();

    /**
     * <code>optional int32 tschchartaxisdefaultnumberformattype = 120;</code>
     */
    boolean hasTschchartaxisdefaultnumberformattype();
    /**
     * <code>optional int32 tschchartaxisdefaultnumberformattype = 120;</code>
     */
    int getTschchartaxisdefaultnumberformattype();

    /**
     * <code>optional int32 tschchartaxisdefault3dlabelposition = 336;</code>
     */
    boolean hasTschchartaxisdefault3Dlabelposition();
    /**
     * <code>optional int32 tschchartaxisdefault3dlabelposition = 336;</code>
     */
    int getTschchartaxisdefault3Dlabelposition();

    /**
     * <code>optional bool tschchartaxiscategoryplottoedges = 116;</code>
     */
    boolean hasTschchartaxiscategoryplottoedges();
    /**
     * <code>optional bool tschchartaxiscategoryplottoedges = 116;</code>
     */
    boolean getTschchartaxiscategoryplottoedges();
  }
  /**
   * Protobuf type {@code TSCH.PreUFF.ChartAxisNonStyleArchive}
   */
  public  static final class ChartAxisNonStyleArchive extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TSCH.PreUFF.ChartAxisNonStyleArchive)
      ChartAxisNonStyleArchiveOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChartAxisNonStyleArchive.newBuilder() to construct.
    private ChartAxisNonStyleArchive(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChartAxisNonStyleArchive() {
      tschchartaxisdefaultshowlabels_ = false;
      tschchartaxisvaluenumberofminorgridlines_ = 0;
      tschchartaxisvaluescale_ = 0;
      tschchartaxisvaluenumberofdecades_ = 0;
      tschchartaxisvalueshowlabels_ = false;
      tschchartaxisvalueshowtitle_ = false;
      tschchartaxisvaluenumberofmajorgridlines_ = 0;
      tschchartaxisvaluetitle_ = "";
      tschchartaxiscategoryshowlabels_ = false;
      tschchartaxiscategoryshowserieslabels_ = false;
      tschchartaxiscategoryshowtitle_ = false;
      tschchartaxiscategorytitle_ = "";
      tschchartaxisdefaultnumberformattype_ = 0;
      tschchartaxisdefault3Dlabelposition_ = 0;
      tschchartaxiscategoryplottoedges_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChartAxisNonStyleArchive(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = super_.toBuilder();
              }
              super_ = input.readMessage(org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(super_);
                super_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 90: {
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = tschchartaxisdefaultusermin_.toBuilder();
              }
              tschchartaxisdefaultusermin_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxisdefaultusermin_);
                tschchartaxisdefaultusermin_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 98: {
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = tschchartaxisdefaultusermax_.toBuilder();
              }
              tschchartaxisdefaultusermax_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxisdefaultusermax_);
                tschchartaxisdefaultusermax_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 106: {
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = tschchartaxisdefaultnumberformat_.toBuilder();
              }
              tschchartaxisdefaultnumberformat_ = input.readMessage(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartaxisdefaultnumberformat_);
                tschchartaxisdefaultnumberformat_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 112: {
              bitField0_ |= 0x00000010;
              tschchartaxisdefaultshowlabels_ = input.readBool();
              break;
            }
            case 400: {
              bitField0_ |= 0x00000020;
              tschchartaxisvaluenumberofminorgridlines_ = input.readInt32();
              break;
            }
            case 408: {
              bitField0_ |= 0x00000040;
              tschchartaxisvaluescale_ = input.readInt32();
              break;
            }
            case 416: {
              bitField0_ |= 0x00000080;
              tschchartaxisvaluenumberofdecades_ = input.readInt32();
              break;
            }
            case 424: {
              bitField0_ |= 0x00000100;
              tschchartaxisvalueshowlabels_ = input.readBool();
              break;
            }
            case 432: {
              bitField0_ |= 0x00000200;
              tschchartaxisvalueshowtitle_ = input.readBool();
              break;
            }
            case 440: {
              bitField0_ |= 0x00000400;
              tschchartaxisvaluenumberofmajorgridlines_ = input.readInt32();
              break;
            }
            case 450: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000800;
              tschchartaxisvaluetitle_ = bs;
              break;
            }
            case 800: {
              bitField0_ |= 0x00001000;
              tschchartaxiscategoryshowlabels_ = input.readBool();
              break;
            }
            case 808: {
              bitField0_ |= 0x00002000;
              tschchartaxiscategoryshowserieslabels_ = input.readBool();
              break;
            }
            case 816: {
              bitField0_ |= 0x00004000;
              tschchartaxiscategoryshowtitle_ = input.readBool();
              break;
            }
            case 826: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00008000;
              tschchartaxiscategorytitle_ = bs;
              break;
            }
            case 928: {
              bitField0_ |= 0x00040000;
              tschchartaxiscategoryplottoedges_ = input.readBool();
              break;
            }
            case 960: {
              bitField0_ |= 0x00010000;
              tschchartaxisdefaultnumberformattype_ = input.readInt32();
              break;
            }
            case 2688: {
              bitField0_ |= 0x00020000;
              tschchartaxisdefault3Dlabelposition_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartAxisNonStyleArchive_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartAxisNonStyleArchive_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive.Builder.class);
    }

    private int bitField0_;
    public static final int SUPER_FIELD_NUMBER = 1;
    private org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive super_;
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    public boolean hasSuper() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive getSuper() {
      return super_ == null ? org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
    }
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder getSuperOrBuilder() {
      return super_ == null ? org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
    }

    public static final int TSCHCHARTAXISDEFAULTUSERMIN_FIELD_NUMBER = 11;
    private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin_;
    /**
     * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 11;</code>
     */
    public boolean hasTschchartaxisdefaultusermin() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 11;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive getTschchartaxisdefaultusermin() {
      return tschchartaxisdefaultusermin_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.getDefaultInstance() : tschchartaxisdefaultusermin_;
    }
    /**
     * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 11;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchiveOrBuilder getTschchartaxisdefaultuserminOrBuilder() {
      return tschchartaxisdefaultusermin_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.getDefaultInstance() : tschchartaxisdefaultusermin_;
    }

    public static final int TSCHCHARTAXISDEFAULTUSERMAX_FIELD_NUMBER = 12;
    private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax_;
    /**
     * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 12;</code>
     */
    public boolean hasTschchartaxisdefaultusermax() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 12;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive getTschchartaxisdefaultusermax() {
      return tschchartaxisdefaultusermax_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.getDefaultInstance() : tschchartaxisdefaultusermax_;
    }
    /**
     * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 12;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchiveOrBuilder getTschchartaxisdefaultusermaxOrBuilder() {
      return tschchartaxisdefaultusermax_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.getDefaultInstance() : tschchartaxisdefaultusermax_;
    }

    public static final int TSCHCHARTAXISDEFAULTNUMBERFORMAT_FIELD_NUMBER = 13;
    private org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive tschchartaxisdefaultnumberformat_;
    /**
     * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartaxisdefaultnumberformat = 13;</code>
     */
    public boolean hasTschchartaxisdefaultnumberformat() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartaxisdefaultnumberformat = 13;</code>
     */
    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive getTschchartaxisdefaultnumberformat() {
      return tschchartaxisdefaultnumberformat_ == null ? org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.getDefaultInstance() : tschchartaxisdefaultnumberformat_;
    }
    /**
     * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartaxisdefaultnumberformat = 13;</code>
     */
    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchiveOrBuilder getTschchartaxisdefaultnumberformatOrBuilder() {
      return tschchartaxisdefaultnumberformat_ == null ? org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.getDefaultInstance() : tschchartaxisdefaultnumberformat_;
    }

    public static final int TSCHCHARTAXISDEFAULTSHOWLABELS_FIELD_NUMBER = 14;
    private boolean tschchartaxisdefaultshowlabels_;
    /**
     * <code>optional bool tschchartaxisdefaultshowlabels = 14;</code>
     */
    public boolean hasTschchartaxisdefaultshowlabels() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool tschchartaxisdefaultshowlabels = 14;</code>
     */
    public boolean getTschchartaxisdefaultshowlabels() {
      return tschchartaxisdefaultshowlabels_;
    }

    public static final int TSCHCHARTAXISVALUENUMBEROFMINORGRIDLINES_FIELD_NUMBER = 50;
    private int tschchartaxisvaluenumberofminorgridlines_;
    /**
     * <code>optional int32 tschchartaxisvaluenumberofminorgridlines = 50;</code>
     */
    public boolean hasTschchartaxisvaluenumberofminorgridlines() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 tschchartaxisvaluenumberofminorgridlines = 50;</code>
     */
    public int getTschchartaxisvaluenumberofminorgridlines() {
      return tschchartaxisvaluenumberofminorgridlines_;
    }

    public static final int TSCHCHARTAXISVALUESCALE_FIELD_NUMBER = 51;
    private int tschchartaxisvaluescale_;
    /**
     * <code>optional int32 tschchartaxisvaluescale = 51;</code>
     */
    public boolean hasTschchartaxisvaluescale() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 tschchartaxisvaluescale = 51;</code>
     */
    public int getTschchartaxisvaluescale() {
      return tschchartaxisvaluescale_;
    }

    public static final int TSCHCHARTAXISVALUENUMBEROFDECADES_FIELD_NUMBER = 52;
    private int tschchartaxisvaluenumberofdecades_;
    /**
     * <code>optional int32 tschchartaxisvaluenumberofdecades = 52;</code>
     */
    public boolean hasTschchartaxisvaluenumberofdecades() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 tschchartaxisvaluenumberofdecades = 52;</code>
     */
    public int getTschchartaxisvaluenumberofdecades() {
      return tschchartaxisvaluenumberofdecades_;
    }

    public static final int TSCHCHARTAXISVALUESHOWLABELS_FIELD_NUMBER = 53;
    private boolean tschchartaxisvalueshowlabels_;
    /**
     * <code>optional bool tschchartaxisvalueshowlabels = 53;</code>
     */
    public boolean hasTschchartaxisvalueshowlabels() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool tschchartaxisvalueshowlabels = 53;</code>
     */
    public boolean getTschchartaxisvalueshowlabels() {
      return tschchartaxisvalueshowlabels_;
    }

    public static final int TSCHCHARTAXISVALUESHOWTITLE_FIELD_NUMBER = 54;
    private boolean tschchartaxisvalueshowtitle_;
    /**
     * <code>optional bool tschchartaxisvalueshowtitle = 54;</code>
     */
    public boolean hasTschchartaxisvalueshowtitle() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool tschchartaxisvalueshowtitle = 54;</code>
     */
    public boolean getTschchartaxisvalueshowtitle() {
      return tschchartaxisvalueshowtitle_;
    }

    public static final int TSCHCHARTAXISVALUENUMBEROFMAJORGRIDLINES_FIELD_NUMBER = 55;
    private int tschchartaxisvaluenumberofmajorgridlines_;
    /**
     * <code>optional int32 tschchartaxisvaluenumberofmajorgridlines = 55;</code>
     */
    public boolean hasTschchartaxisvaluenumberofmajorgridlines() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 tschchartaxisvaluenumberofmajorgridlines = 55;</code>
     */
    public int getTschchartaxisvaluenumberofmajorgridlines() {
      return tschchartaxisvaluenumberofmajorgridlines_;
    }

    public static final int TSCHCHARTAXISVALUETITLE_FIELD_NUMBER = 56;
    private volatile java.lang.Object tschchartaxisvaluetitle_;
    /**
     * <code>optional string tschchartaxisvaluetitle = 56;</code>
     */
    public boolean hasTschchartaxisvaluetitle() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string tschchartaxisvaluetitle = 56;</code>
     */
    public java.lang.String getTschchartaxisvaluetitle() {
      java.lang.Object ref = tschchartaxisvaluetitle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tschchartaxisvaluetitle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string tschchartaxisvaluetitle = 56;</code>
     */
    public com.google.protobuf.ByteString
        getTschchartaxisvaluetitleBytes() {
      java.lang.Object ref = tschchartaxisvaluetitle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tschchartaxisvaluetitle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TSCHCHARTAXISCATEGORYSHOWLABELS_FIELD_NUMBER = 100;
    private boolean tschchartaxiscategoryshowlabels_;
    /**
     * <code>optional bool tschchartaxiscategoryshowlabels = 100;</code>
     */
    public boolean hasTschchartaxiscategoryshowlabels() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional bool tschchartaxiscategoryshowlabels = 100;</code>
     */
    public boolean getTschchartaxiscategoryshowlabels() {
      return tschchartaxiscategoryshowlabels_;
    }

    public static final int TSCHCHARTAXISCATEGORYSHOWSERIESLABELS_FIELD_NUMBER = 101;
    private boolean tschchartaxiscategoryshowserieslabels_;
    /**
     * <code>optional bool tschchartaxiscategoryshowserieslabels = 101;</code>
     */
    public boolean hasTschchartaxiscategoryshowserieslabels() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional bool tschchartaxiscategoryshowserieslabels = 101;</code>
     */
    public boolean getTschchartaxiscategoryshowserieslabels() {
      return tschchartaxiscategoryshowserieslabels_;
    }

    public static final int TSCHCHARTAXISCATEGORYSHOWTITLE_FIELD_NUMBER = 102;
    private boolean tschchartaxiscategoryshowtitle_;
    /**
     * <code>optional bool tschchartaxiscategoryshowtitle = 102;</code>
     */
    public boolean hasTschchartaxiscategoryshowtitle() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional bool tschchartaxiscategoryshowtitle = 102;</code>
     */
    public boolean getTschchartaxiscategoryshowtitle() {
      return tschchartaxiscategoryshowtitle_;
    }

    public static final int TSCHCHARTAXISCATEGORYTITLE_FIELD_NUMBER = 103;
    private volatile java.lang.Object tschchartaxiscategorytitle_;
    /**
     * <code>optional string tschchartaxiscategorytitle = 103;</code>
     */
    public boolean hasTschchartaxiscategorytitle() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional string tschchartaxiscategorytitle = 103;</code>
     */
    public java.lang.String getTschchartaxiscategorytitle() {
      java.lang.Object ref = tschchartaxiscategorytitle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tschchartaxiscategorytitle_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string tschchartaxiscategorytitle = 103;</code>
     */
    public com.google.protobuf.ByteString
        getTschchartaxiscategorytitleBytes() {
      java.lang.Object ref = tschchartaxiscategorytitle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tschchartaxiscategorytitle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TSCHCHARTAXISDEFAULTNUMBERFORMATTYPE_FIELD_NUMBER = 120;
    private int tschchartaxisdefaultnumberformattype_;
    /**
     * <code>optional int32 tschchartaxisdefaultnumberformattype = 120;</code>
     */
    public boolean hasTschchartaxisdefaultnumberformattype() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 tschchartaxisdefaultnumberformattype = 120;</code>
     */
    public int getTschchartaxisdefaultnumberformattype() {
      return tschchartaxisdefaultnumberformattype_;
    }

    public static final int TSCHCHARTAXISDEFAULT3DLABELPOSITION_FIELD_NUMBER = 336;
    private int tschchartaxisdefault3Dlabelposition_;
    /**
     * <code>optional int32 tschchartaxisdefault3dlabelposition = 336;</code>
     */
    public boolean hasTschchartaxisdefault3Dlabelposition() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 tschchartaxisdefault3dlabelposition = 336;</code>
     */
    public int getTschchartaxisdefault3Dlabelposition() {
      return tschchartaxisdefault3Dlabelposition_;
    }

    public static final int TSCHCHARTAXISCATEGORYPLOTTOEDGES_FIELD_NUMBER = 116;
    private boolean tschchartaxiscategoryplottoedges_;
    /**
     * <code>optional bool tschchartaxiscategoryplottoedges = 116;</code>
     */
    public boolean hasTschchartaxiscategoryplottoedges() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional bool tschchartaxiscategoryplottoedges = 116;</code>
     */
    public boolean getTschchartaxiscategoryplottoedges() {
      return tschchartaxiscategoryplottoedges_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSuper()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSuper().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasTschchartaxisdefaultnumberformat()) {
        if (!getTschchartaxisdefaultnumberformat().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getSuper());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(11, getTschchartaxisdefaultusermin());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(12, getTschchartaxisdefaultusermax());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(13, getTschchartaxisdefaultnumberformat());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(14, tschchartaxisdefaultshowlabels_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(50, tschchartaxisvaluenumberofminorgridlines_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(51, tschchartaxisvaluescale_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(52, tschchartaxisvaluenumberofdecades_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(53, tschchartaxisvalueshowlabels_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(54, tschchartaxisvalueshowtitle_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(55, tschchartaxisvaluenumberofmajorgridlines_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 56, tschchartaxisvaluetitle_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBool(100, tschchartaxiscategoryshowlabels_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBool(101, tschchartaxiscategoryshowserieslabels_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBool(102, tschchartaxiscategoryshowtitle_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 103, tschchartaxiscategorytitle_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeBool(116, tschchartaxiscategoryplottoedges_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(120, tschchartaxisdefaultnumberformattype_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(336, tschchartaxisdefault3Dlabelposition_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSuper());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getTschchartaxisdefaultusermin());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getTschchartaxisdefaultusermax());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getTschchartaxisdefaultnumberformat());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, tschchartaxisdefaultshowlabels_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(50, tschchartaxisvaluenumberofminorgridlines_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(51, tschchartaxisvaluescale_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(52, tschchartaxisvaluenumberofdecades_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(53, tschchartaxisvalueshowlabels_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(54, tschchartaxisvalueshowtitle_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(55, tschchartaxisvaluenumberofmajorgridlines_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(56, tschchartaxisvaluetitle_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(100, tschchartaxiscategoryshowlabels_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(101, tschchartaxiscategoryshowserieslabels_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(102, tschchartaxiscategoryshowtitle_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(103, tschchartaxiscategorytitle_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(116, tschchartaxiscategoryplottoedges_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(120, tschchartaxisdefaultnumberformattype_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(336, tschchartaxisdefault3Dlabelposition_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive)) {
        return super.equals(obj);
      }
      org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive other = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive) obj;

      boolean result = true;
      result = result && (hasSuper() == other.hasSuper());
      if (hasSuper()) {
        result = result && getSuper()
            .equals(other.getSuper());
      }
      result = result && (hasTschchartaxisdefaultusermin() == other.hasTschchartaxisdefaultusermin());
      if (hasTschchartaxisdefaultusermin()) {
        result = result && getTschchartaxisdefaultusermin()
            .equals(other.getTschchartaxisdefaultusermin());
      }
      result = result && (hasTschchartaxisdefaultusermax() == other.hasTschchartaxisdefaultusermax());
      if (hasTschchartaxisdefaultusermax()) {
        result = result && getTschchartaxisdefaultusermax()
            .equals(other.getTschchartaxisdefaultusermax());
      }
      result = result && (hasTschchartaxisdefaultnumberformat() == other.hasTschchartaxisdefaultnumberformat());
      if (hasTschchartaxisdefaultnumberformat()) {
        result = result && getTschchartaxisdefaultnumberformat()
            .equals(other.getTschchartaxisdefaultnumberformat());
      }
      result = result && (hasTschchartaxisdefaultshowlabels() == other.hasTschchartaxisdefaultshowlabels());
      if (hasTschchartaxisdefaultshowlabels()) {
        result = result && (getTschchartaxisdefaultshowlabels()
            == other.getTschchartaxisdefaultshowlabels());
      }
      result = result && (hasTschchartaxisvaluenumberofminorgridlines() == other.hasTschchartaxisvaluenumberofminorgridlines());
      if (hasTschchartaxisvaluenumberofminorgridlines()) {
        result = result && (getTschchartaxisvaluenumberofminorgridlines()
            == other.getTschchartaxisvaluenumberofminorgridlines());
      }
      result = result && (hasTschchartaxisvaluescale() == other.hasTschchartaxisvaluescale());
      if (hasTschchartaxisvaluescale()) {
        result = result && (getTschchartaxisvaluescale()
            == other.getTschchartaxisvaluescale());
      }
      result = result && (hasTschchartaxisvaluenumberofdecades() == other.hasTschchartaxisvaluenumberofdecades());
      if (hasTschchartaxisvaluenumberofdecades()) {
        result = result && (getTschchartaxisvaluenumberofdecades()
            == other.getTschchartaxisvaluenumberofdecades());
      }
      result = result && (hasTschchartaxisvalueshowlabels() == other.hasTschchartaxisvalueshowlabels());
      if (hasTschchartaxisvalueshowlabels()) {
        result = result && (getTschchartaxisvalueshowlabels()
            == other.getTschchartaxisvalueshowlabels());
      }
      result = result && (hasTschchartaxisvalueshowtitle() == other.hasTschchartaxisvalueshowtitle());
      if (hasTschchartaxisvalueshowtitle()) {
        result = result && (getTschchartaxisvalueshowtitle()
            == other.getTschchartaxisvalueshowtitle());
      }
      result = result && (hasTschchartaxisvaluenumberofmajorgridlines() == other.hasTschchartaxisvaluenumberofmajorgridlines());
      if (hasTschchartaxisvaluenumberofmajorgridlines()) {
        result = result && (getTschchartaxisvaluenumberofmajorgridlines()
            == other.getTschchartaxisvaluenumberofmajorgridlines());
      }
      result = result && (hasTschchartaxisvaluetitle() == other.hasTschchartaxisvaluetitle());
      if (hasTschchartaxisvaluetitle()) {
        result = result && getTschchartaxisvaluetitle()
            .equals(other.getTschchartaxisvaluetitle());
      }
      result = result && (hasTschchartaxiscategoryshowlabels() == other.hasTschchartaxiscategoryshowlabels());
      if (hasTschchartaxiscategoryshowlabels()) {
        result = result && (getTschchartaxiscategoryshowlabels()
            == other.getTschchartaxiscategoryshowlabels());
      }
      result = result && (hasTschchartaxiscategoryshowserieslabels() == other.hasTschchartaxiscategoryshowserieslabels());
      if (hasTschchartaxiscategoryshowserieslabels()) {
        result = result && (getTschchartaxiscategoryshowserieslabels()
            == other.getTschchartaxiscategoryshowserieslabels());
      }
      result = result && (hasTschchartaxiscategoryshowtitle() == other.hasTschchartaxiscategoryshowtitle());
      if (hasTschchartaxiscategoryshowtitle()) {
        result = result && (getTschchartaxiscategoryshowtitle()
            == other.getTschchartaxiscategoryshowtitle());
      }
      result = result && (hasTschchartaxiscategorytitle() == other.hasTschchartaxiscategorytitle());
      if (hasTschchartaxiscategorytitle()) {
        result = result && getTschchartaxiscategorytitle()
            .equals(other.getTschchartaxiscategorytitle());
      }
      result = result && (hasTschchartaxisdefaultnumberformattype() == other.hasTschchartaxisdefaultnumberformattype());
      if (hasTschchartaxisdefaultnumberformattype()) {
        result = result && (getTschchartaxisdefaultnumberformattype()
            == other.getTschchartaxisdefaultnumberformattype());
      }
      result = result && (hasTschchartaxisdefault3Dlabelposition() == other.hasTschchartaxisdefault3Dlabelposition());
      if (hasTschchartaxisdefault3Dlabelposition()) {
        result = result && (getTschchartaxisdefault3Dlabelposition()
            == other.getTschchartaxisdefault3Dlabelposition());
      }
      result = result && (hasTschchartaxiscategoryplottoedges() == other.hasTschchartaxiscategoryplottoedges());
      if (hasTschchartaxiscategoryplottoedges()) {
        result = result && (getTschchartaxiscategoryplottoedges()
            == other.getTschchartaxiscategoryplottoedges());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSuper()) {
        hash = (37 * hash) + SUPER_FIELD_NUMBER;
        hash = (53 * hash) + getSuper().hashCode();
      }
      if (hasTschchartaxisdefaultusermin()) {
        hash = (37 * hash) + TSCHCHARTAXISDEFAULTUSERMIN_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisdefaultusermin().hashCode();
      }
      if (hasTschchartaxisdefaultusermax()) {
        hash = (37 * hash) + TSCHCHARTAXISDEFAULTUSERMAX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisdefaultusermax().hashCode();
      }
      if (hasTschchartaxisdefaultnumberformat()) {
        hash = (37 * hash) + TSCHCHARTAXISDEFAULTNUMBERFORMAT_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisdefaultnumberformat().hashCode();
      }
      if (hasTschchartaxisdefaultshowlabels()) {
        hash = (37 * hash) + TSCHCHARTAXISDEFAULTSHOWLABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxisdefaultshowlabels());
      }
      if (hasTschchartaxisvaluenumberofminorgridlines()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUENUMBEROFMINORGRIDLINES_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvaluenumberofminorgridlines();
      }
      if (hasTschchartaxisvaluescale()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUESCALE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvaluescale();
      }
      if (hasTschchartaxisvaluenumberofdecades()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUENUMBEROFDECADES_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvaluenumberofdecades();
      }
      if (hasTschchartaxisvalueshowlabels()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUESHOWLABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxisvalueshowlabels());
      }
      if (hasTschchartaxisvalueshowtitle()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUESHOWTITLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxisvalueshowtitle());
      }
      if (hasTschchartaxisvaluenumberofmajorgridlines()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUENUMBEROFMAJORGRIDLINES_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvaluenumberofmajorgridlines();
      }
      if (hasTschchartaxisvaluetitle()) {
        hash = (37 * hash) + TSCHCHARTAXISVALUETITLE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisvaluetitle().hashCode();
      }
      if (hasTschchartaxiscategoryshowlabels()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYSHOWLABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxiscategoryshowlabels());
      }
      if (hasTschchartaxiscategoryshowserieslabels()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYSHOWSERIESLABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxiscategoryshowserieslabels());
      }
      if (hasTschchartaxiscategoryshowtitle()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYSHOWTITLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxiscategoryshowtitle());
      }
      if (hasTschchartaxiscategorytitle()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYTITLE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxiscategorytitle().hashCode();
      }
      if (hasTschchartaxisdefaultnumberformattype()) {
        hash = (37 * hash) + TSCHCHARTAXISDEFAULTNUMBERFORMATTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisdefaultnumberformattype();
      }
      if (hasTschchartaxisdefault3Dlabelposition()) {
        hash = (37 * hash) + TSCHCHARTAXISDEFAULT3DLABELPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartaxisdefault3Dlabelposition();
      }
      if (hasTschchartaxiscategoryplottoedges()) {
        hash = (37 * hash) + TSCHCHARTAXISCATEGORYPLOTTOEDGES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartaxiscategoryplottoedges());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TSCH.PreUFF.ChartAxisNonStyleArchive}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TSCH.PreUFF.ChartAxisNonStyleArchive)
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchiveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartAxisNonStyleArchive_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartAxisNonStyleArchive_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive.Builder.class);
      }

      // Construct using TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSuperFieldBuilder();
          getTschchartaxisdefaultuserminFieldBuilder();
          getTschchartaxisdefaultusermaxFieldBuilder();
          getTschchartaxisdefaultnumberformatFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (superBuilder_ == null) {
          super_ = null;
        } else {
          superBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (tschchartaxisdefaultuserminBuilder_ == null) {
          tschchartaxisdefaultusermin_ = null;
        } else {
          tschchartaxisdefaultuserminBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (tschchartaxisdefaultusermaxBuilder_ == null) {
          tschchartaxisdefaultusermax_ = null;
        } else {
          tschchartaxisdefaultusermaxBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (tschchartaxisdefaultnumberformatBuilder_ == null) {
          tschchartaxisdefaultnumberformat_ = null;
        } else {
          tschchartaxisdefaultnumberformatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        tschchartaxisdefaultshowlabels_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        tschchartaxisvaluenumberofminorgridlines_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        tschchartaxisvaluescale_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        tschchartaxisvaluenumberofdecades_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        tschchartaxisvalueshowlabels_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        tschchartaxisvalueshowtitle_ = false;
        bitField0_ = (bitField0_ & ~0x00000200);
        tschchartaxisvaluenumberofmajorgridlines_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        tschchartaxisvaluetitle_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        tschchartaxiscategoryshowlabels_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        tschchartaxiscategoryshowserieslabels_ = false;
        bitField0_ = (bitField0_ & ~0x00002000);
        tschchartaxiscategoryshowtitle_ = false;
        bitField0_ = (bitField0_ & ~0x00004000);
        tschchartaxiscategorytitle_ = "";
        bitField0_ = (bitField0_ & ~0x00008000);
        tschchartaxisdefaultnumberformattype_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        tschchartaxisdefault3Dlabelposition_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        tschchartaxiscategoryplottoedges_ = false;
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartAxisNonStyleArchive_descriptor;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive getDefaultInstanceForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive.getDefaultInstance();
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive build() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive buildPartial() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive result = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (superBuilder_ == null) {
          result.super_ = super_;
        } else {
          result.super_ = superBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (tschchartaxisdefaultuserminBuilder_ == null) {
          result.tschchartaxisdefaultusermin_ = tschchartaxisdefaultusermin_;
        } else {
          result.tschchartaxisdefaultusermin_ = tschchartaxisdefaultuserminBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (tschchartaxisdefaultusermaxBuilder_ == null) {
          result.tschchartaxisdefaultusermax_ = tschchartaxisdefaultusermax_;
        } else {
          result.tschchartaxisdefaultusermax_ = tschchartaxisdefaultusermaxBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (tschchartaxisdefaultnumberformatBuilder_ == null) {
          result.tschchartaxisdefaultnumberformat_ = tschchartaxisdefaultnumberformat_;
        } else {
          result.tschchartaxisdefaultnumberformat_ = tschchartaxisdefaultnumberformatBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.tschchartaxisdefaultshowlabels_ = tschchartaxisdefaultshowlabels_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.tschchartaxisvaluenumberofminorgridlines_ = tschchartaxisvaluenumberofminorgridlines_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.tschchartaxisvaluescale_ = tschchartaxisvaluescale_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.tschchartaxisvaluenumberofdecades_ = tschchartaxisvaluenumberofdecades_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.tschchartaxisvalueshowlabels_ = tschchartaxisvalueshowlabels_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.tschchartaxisvalueshowtitle_ = tschchartaxisvalueshowtitle_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.tschchartaxisvaluenumberofmajorgridlines_ = tschchartaxisvaluenumberofmajorgridlines_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.tschchartaxisvaluetitle_ = tschchartaxisvaluetitle_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.tschchartaxiscategoryshowlabels_ = tschchartaxiscategoryshowlabels_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.tschchartaxiscategoryshowserieslabels_ = tschchartaxiscategoryshowserieslabels_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.tschchartaxiscategoryshowtitle_ = tschchartaxiscategoryshowtitle_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.tschchartaxiscategorytitle_ = tschchartaxiscategorytitle_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.tschchartaxisdefaultnumberformattype_ = tschchartaxisdefaultnumberformattype_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.tschchartaxisdefault3Dlabelposition_ = tschchartaxisdefault3Dlabelposition_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.tschchartaxiscategoryplottoedges_ = tschchartaxiscategoryplottoedges_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive) {
          return mergeFrom((org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive other) {
        if (other == org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive.getDefaultInstance()) return this;
        if (other.hasSuper()) {
          mergeSuper(other.getSuper());
        }
        if (other.hasTschchartaxisdefaultusermin()) {
          mergeTschchartaxisdefaultusermin(other.getTschchartaxisdefaultusermin());
        }
        if (other.hasTschchartaxisdefaultusermax()) {
          mergeTschchartaxisdefaultusermax(other.getTschchartaxisdefaultusermax());
        }
        if (other.hasTschchartaxisdefaultnumberformat()) {
          mergeTschchartaxisdefaultnumberformat(other.getTschchartaxisdefaultnumberformat());
        }
        if (other.hasTschchartaxisdefaultshowlabels()) {
          setTschchartaxisdefaultshowlabels(other.getTschchartaxisdefaultshowlabels());
        }
        if (other.hasTschchartaxisvaluenumberofminorgridlines()) {
          setTschchartaxisvaluenumberofminorgridlines(other.getTschchartaxisvaluenumberofminorgridlines());
        }
        if (other.hasTschchartaxisvaluescale()) {
          setTschchartaxisvaluescale(other.getTschchartaxisvaluescale());
        }
        if (other.hasTschchartaxisvaluenumberofdecades()) {
          setTschchartaxisvaluenumberofdecades(other.getTschchartaxisvaluenumberofdecades());
        }
        if (other.hasTschchartaxisvalueshowlabels()) {
          setTschchartaxisvalueshowlabels(other.getTschchartaxisvalueshowlabels());
        }
        if (other.hasTschchartaxisvalueshowtitle()) {
          setTschchartaxisvalueshowtitle(other.getTschchartaxisvalueshowtitle());
        }
        if (other.hasTschchartaxisvaluenumberofmajorgridlines()) {
          setTschchartaxisvaluenumberofmajorgridlines(other.getTschchartaxisvaluenumberofmajorgridlines());
        }
        if (other.hasTschchartaxisvaluetitle()) {
          bitField0_ |= 0x00000800;
          tschchartaxisvaluetitle_ = other.tschchartaxisvaluetitle_;
          onChanged();
        }
        if (other.hasTschchartaxiscategoryshowlabels()) {
          setTschchartaxiscategoryshowlabels(other.getTschchartaxiscategoryshowlabels());
        }
        if (other.hasTschchartaxiscategoryshowserieslabels()) {
          setTschchartaxiscategoryshowserieslabels(other.getTschchartaxiscategoryshowserieslabels());
        }
        if (other.hasTschchartaxiscategoryshowtitle()) {
          setTschchartaxiscategoryshowtitle(other.getTschchartaxiscategoryshowtitle());
        }
        if (other.hasTschchartaxiscategorytitle()) {
          bitField0_ |= 0x00008000;
          tschchartaxiscategorytitle_ = other.tschchartaxiscategorytitle_;
          onChanged();
        }
        if (other.hasTschchartaxisdefaultnumberformattype()) {
          setTschchartaxisdefaultnumberformattype(other.getTschchartaxisdefaultnumberformattype());
        }
        if (other.hasTschchartaxisdefault3Dlabelposition()) {
          setTschchartaxisdefault3Dlabelposition(other.getTschchartaxisdefault3Dlabelposition());
        }
        if (other.hasTschchartaxiscategoryplottoedges()) {
          setTschchartaxiscategoryplottoedges(other.getTschchartaxiscategoryplottoedges());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSuper()) {
          return false;
        }
        if (!getSuper().isInitialized()) {
          return false;
        }
        if (hasTschchartaxisdefaultnumberformat()) {
          if (!getTschchartaxisdefaultnumberformat().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive super_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder> superBuilder_;
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public boolean hasSuper() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive getSuper() {
        if (superBuilder_ == null) {
          return super_ == null ? org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
        } else {
          return superBuilder_.getMessage();
        }
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder setSuper(org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive value) {
        if (superBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          super_ = value;
          onChanged();
        } else {
          superBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder setSuper(
          org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder builderForValue) {
        if (superBuilder_ == null) {
          super_ = builderForValue.build();
          onChanged();
        } else {
          superBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder mergeSuper(org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive value) {
        if (superBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              super_ != null &&
              super_ != org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance()) {
            super_ =
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.newBuilder(super_).mergeFrom(value).buildPartial();
          } else {
            super_ = value;
          }
          onChanged();
        } else {
          superBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder clearSuper() {
        if (superBuilder_ == null) {
          super_ = null;
          onChanged();
        } else {
          superBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder getSuperBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSuperFieldBuilder().getBuilder();
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder getSuperOrBuilder() {
        if (superBuilder_ != null) {
          return superBuilder_.getMessageOrBuilder();
        } else {
          return super_ == null ?
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
        }
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder> 
          getSuperFieldBuilder() {
        if (superBuilder_ == null) {
          superBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder>(
                  getSuper(),
                  getParentForChildren(),
                  isClean());
          super_ = null;
        }
        return superBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchiveOrBuilder> tschchartaxisdefaultuserminBuilder_;
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 11;</code>
       */
      public boolean hasTschchartaxisdefaultusermin() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 11;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive getTschchartaxisdefaultusermin() {
        if (tschchartaxisdefaultuserminBuilder_ == null) {
          return tschchartaxisdefaultusermin_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.getDefaultInstance() : tschchartaxisdefaultusermin_;
        } else {
          return tschchartaxisdefaultuserminBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 11;</code>
       */
      public Builder setTschchartaxisdefaultusermin(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive value) {
        if (tschchartaxisdefaultuserminBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxisdefaultusermin_ = value;
          onChanged();
        } else {
          tschchartaxisdefaultuserminBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 11;</code>
       */
      public Builder setTschchartaxisdefaultusermin(
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.Builder builderForValue) {
        if (tschchartaxisdefaultuserminBuilder_ == null) {
          tschchartaxisdefaultusermin_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxisdefaultuserminBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 11;</code>
       */
      public Builder mergeTschchartaxisdefaultusermin(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive value) {
        if (tschchartaxisdefaultuserminBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              tschchartaxisdefaultusermin_ != null &&
              tschchartaxisdefaultusermin_ != org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.getDefaultInstance()) {
            tschchartaxisdefaultusermin_ =
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.newBuilder(tschchartaxisdefaultusermin_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxisdefaultusermin_ = value;
          }
          onChanged();
        } else {
          tschchartaxisdefaultuserminBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 11;</code>
       */
      public Builder clearTschchartaxisdefaultusermin() {
        if (tschchartaxisdefaultuserminBuilder_ == null) {
          tschchartaxisdefaultusermin_ = null;
          onChanged();
        } else {
          tschchartaxisdefaultuserminBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 11;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.Builder getTschchartaxisdefaultuserminBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTschchartaxisdefaultuserminFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 11;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchiveOrBuilder getTschchartaxisdefaultuserminOrBuilder() {
        if (tschchartaxisdefaultuserminBuilder_ != null) {
          return tschchartaxisdefaultuserminBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxisdefaultusermin_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.getDefaultInstance() : tschchartaxisdefaultusermin_;
        }
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermin = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchiveOrBuilder> 
          getTschchartaxisdefaultuserminFieldBuilder() {
        if (tschchartaxisdefaultuserminBuilder_ == null) {
          tschchartaxisdefaultuserminBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchiveOrBuilder>(
                  getTschchartaxisdefaultusermin(),
                  getParentForChildren(),
                  isClean());
          tschchartaxisdefaultusermin_ = null;
        }
        return tschchartaxisdefaultuserminBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchiveOrBuilder> tschchartaxisdefaultusermaxBuilder_;
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 12;</code>
       */
      public boolean hasTschchartaxisdefaultusermax() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 12;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive getTschchartaxisdefaultusermax() {
        if (tschchartaxisdefaultusermaxBuilder_ == null) {
          return tschchartaxisdefaultusermax_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.getDefaultInstance() : tschchartaxisdefaultusermax_;
        } else {
          return tschchartaxisdefaultusermaxBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 12;</code>
       */
      public Builder setTschchartaxisdefaultusermax(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive value) {
        if (tschchartaxisdefaultusermaxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxisdefaultusermax_ = value;
          onChanged();
        } else {
          tschchartaxisdefaultusermaxBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 12;</code>
       */
      public Builder setTschchartaxisdefaultusermax(
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.Builder builderForValue) {
        if (tschchartaxisdefaultusermaxBuilder_ == null) {
          tschchartaxisdefaultusermax_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxisdefaultusermaxBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 12;</code>
       */
      public Builder mergeTschchartaxisdefaultusermax(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive value) {
        if (tschchartaxisdefaultusermaxBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              tschchartaxisdefaultusermax_ != null &&
              tschchartaxisdefaultusermax_ != org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.getDefaultInstance()) {
            tschchartaxisdefaultusermax_ =
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.newBuilder(tschchartaxisdefaultusermax_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxisdefaultusermax_ = value;
          }
          onChanged();
        } else {
          tschchartaxisdefaultusermaxBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 12;</code>
       */
      public Builder clearTschchartaxisdefaultusermax() {
        if (tschchartaxisdefaultusermaxBuilder_ == null) {
          tschchartaxisdefaultusermax_ = null;
          onChanged();
        } else {
          tschchartaxisdefaultusermaxBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 12;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.Builder getTschchartaxisdefaultusermaxBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getTschchartaxisdefaultusermaxFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 12;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchiveOrBuilder getTschchartaxisdefaultusermaxOrBuilder() {
        if (tschchartaxisdefaultusermaxBuilder_ != null) {
          return tschchartaxisdefaultusermaxBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxisdefaultusermax_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.getDefaultInstance() : tschchartaxisdefaultusermax_;
        }
      }
      /**
       * <code>optional .TSCH.ChartsNSNumberDoubleArchive tschchartaxisdefaultusermax = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchiveOrBuilder> 
          getTschchartaxisdefaultusermaxFieldBuilder() {
        if (tschchartaxisdefaultusermaxBuilder_ == null) {
          tschchartaxisdefaultusermaxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSNumberDoubleArchiveOrBuilder>(
                  getTschchartaxisdefaultusermax(),
                  getParentForChildren(),
                  isClean());
          tschchartaxisdefaultusermax_ = null;
        }
        return tschchartaxisdefaultusermaxBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive tschchartaxisdefaultnumberformat_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchiveOrBuilder> tschchartaxisdefaultnumberformatBuilder_;
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartaxisdefaultnumberformat = 13;</code>
       */
      public boolean hasTschchartaxisdefaultnumberformat() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartaxisdefaultnumberformat = 13;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive getTschchartaxisdefaultnumberformat() {
        if (tschchartaxisdefaultnumberformatBuilder_ == null) {
          return tschchartaxisdefaultnumberformat_ == null ? org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.getDefaultInstance() : tschchartaxisdefaultnumberformat_;
        } else {
          return tschchartaxisdefaultnumberformatBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartaxisdefaultnumberformat = 13;</code>
       */
      public Builder setTschchartaxisdefaultnumberformat(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive value) {
        if (tschchartaxisdefaultnumberformatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartaxisdefaultnumberformat_ = value;
          onChanged();
        } else {
          tschchartaxisdefaultnumberformatBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartaxisdefaultnumberformat = 13;</code>
       */
      public Builder setTschchartaxisdefaultnumberformat(
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder builderForValue) {
        if (tschchartaxisdefaultnumberformatBuilder_ == null) {
          tschchartaxisdefaultnumberformat_ = builderForValue.build();
          onChanged();
        } else {
          tschchartaxisdefaultnumberformatBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartaxisdefaultnumberformat = 13;</code>
       */
      public Builder mergeTschchartaxisdefaultnumberformat(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive value) {
        if (tschchartaxisdefaultnumberformatBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              tschchartaxisdefaultnumberformat_ != null &&
              tschchartaxisdefaultnumberformat_ != org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.getDefaultInstance()) {
            tschchartaxisdefaultnumberformat_ =
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.newBuilder(tschchartaxisdefaultnumberformat_).mergeFrom(value).buildPartial();
          } else {
            tschchartaxisdefaultnumberformat_ = value;
          }
          onChanged();
        } else {
          tschchartaxisdefaultnumberformatBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartaxisdefaultnumberformat = 13;</code>
       */
      public Builder clearTschchartaxisdefaultnumberformat() {
        if (tschchartaxisdefaultnumberformatBuilder_ == null) {
          tschchartaxisdefaultnumberformat_ = null;
          onChanged();
        } else {
          tschchartaxisdefaultnumberformatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartaxisdefaultnumberformat = 13;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder getTschchartaxisdefaultnumberformatBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getTschchartaxisdefaultnumberformatFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartaxisdefaultnumberformat = 13;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchiveOrBuilder getTschchartaxisdefaultnumberformatOrBuilder() {
        if (tschchartaxisdefaultnumberformatBuilder_ != null) {
          return tschchartaxisdefaultnumberformatBuilder_.getMessageOrBuilder();
        } else {
          return tschchartaxisdefaultnumberformat_ == null ?
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.getDefaultInstance() : tschchartaxisdefaultnumberformat_;
        }
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartaxisdefaultnumberformat = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchiveOrBuilder> 
          getTschchartaxisdefaultnumberformatFieldBuilder() {
        if (tschchartaxisdefaultnumberformatBuilder_ == null) {
          tschchartaxisdefaultnumberformatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchiveOrBuilder>(
                  getTschchartaxisdefaultnumberformat(),
                  getParentForChildren(),
                  isClean());
          tschchartaxisdefaultnumberformat_ = null;
        }
        return tschchartaxisdefaultnumberformatBuilder_;
      }

      private boolean tschchartaxisdefaultshowlabels_ ;
      /**
       * <code>optional bool tschchartaxisdefaultshowlabels = 14;</code>
       */
      public boolean hasTschchartaxisdefaultshowlabels() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool tschchartaxisdefaultshowlabels = 14;</code>
       */
      public boolean getTschchartaxisdefaultshowlabels() {
        return tschchartaxisdefaultshowlabels_;
      }
      /**
       * <code>optional bool tschchartaxisdefaultshowlabels = 14;</code>
       */
      public Builder setTschchartaxisdefaultshowlabels(boolean value) {
        bitField0_ |= 0x00000010;
        tschchartaxisdefaultshowlabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxisdefaultshowlabels = 14;</code>
       */
      public Builder clearTschchartaxisdefaultshowlabels() {
        bitField0_ = (bitField0_ & ~0x00000010);
        tschchartaxisdefaultshowlabels_ = false;
        onChanged();
        return this;
      }

      private int tschchartaxisvaluenumberofminorgridlines_ ;
      /**
       * <code>optional int32 tschchartaxisvaluenumberofminorgridlines = 50;</code>
       */
      public boolean hasTschchartaxisvaluenumberofminorgridlines() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 tschchartaxisvaluenumberofminorgridlines = 50;</code>
       */
      public int getTschchartaxisvaluenumberofminorgridlines() {
        return tschchartaxisvaluenumberofminorgridlines_;
      }
      /**
       * <code>optional int32 tschchartaxisvaluenumberofminorgridlines = 50;</code>
       */
      public Builder setTschchartaxisvaluenumberofminorgridlines(int value) {
        bitField0_ |= 0x00000020;
        tschchartaxisvaluenumberofminorgridlines_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxisvaluenumberofminorgridlines = 50;</code>
       */
      public Builder clearTschchartaxisvaluenumberofminorgridlines() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tschchartaxisvaluenumberofminorgridlines_ = 0;
        onChanged();
        return this;
      }

      private int tschchartaxisvaluescale_ ;
      /**
       * <code>optional int32 tschchartaxisvaluescale = 51;</code>
       */
      public boolean hasTschchartaxisvaluescale() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 tschchartaxisvaluescale = 51;</code>
       */
      public int getTschchartaxisvaluescale() {
        return tschchartaxisvaluescale_;
      }
      /**
       * <code>optional int32 tschchartaxisvaluescale = 51;</code>
       */
      public Builder setTschchartaxisvaluescale(int value) {
        bitField0_ |= 0x00000040;
        tschchartaxisvaluescale_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxisvaluescale = 51;</code>
       */
      public Builder clearTschchartaxisvaluescale() {
        bitField0_ = (bitField0_ & ~0x00000040);
        tschchartaxisvaluescale_ = 0;
        onChanged();
        return this;
      }

      private int tschchartaxisvaluenumberofdecades_ ;
      /**
       * <code>optional int32 tschchartaxisvaluenumberofdecades = 52;</code>
       */
      public boolean hasTschchartaxisvaluenumberofdecades() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 tschchartaxisvaluenumberofdecades = 52;</code>
       */
      public int getTschchartaxisvaluenumberofdecades() {
        return tschchartaxisvaluenumberofdecades_;
      }
      /**
       * <code>optional int32 tschchartaxisvaluenumberofdecades = 52;</code>
       */
      public Builder setTschchartaxisvaluenumberofdecades(int value) {
        bitField0_ |= 0x00000080;
        tschchartaxisvaluenumberofdecades_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxisvaluenumberofdecades = 52;</code>
       */
      public Builder clearTschchartaxisvaluenumberofdecades() {
        bitField0_ = (bitField0_ & ~0x00000080);
        tschchartaxisvaluenumberofdecades_ = 0;
        onChanged();
        return this;
      }

      private boolean tschchartaxisvalueshowlabels_ ;
      /**
       * <code>optional bool tschchartaxisvalueshowlabels = 53;</code>
       */
      public boolean hasTschchartaxisvalueshowlabels() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool tschchartaxisvalueshowlabels = 53;</code>
       */
      public boolean getTschchartaxisvalueshowlabels() {
        return tschchartaxisvalueshowlabels_;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowlabels = 53;</code>
       */
      public Builder setTschchartaxisvalueshowlabels(boolean value) {
        bitField0_ |= 0x00000100;
        tschchartaxisvalueshowlabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowlabels = 53;</code>
       */
      public Builder clearTschchartaxisvalueshowlabels() {
        bitField0_ = (bitField0_ & ~0x00000100);
        tschchartaxisvalueshowlabels_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartaxisvalueshowtitle_ ;
      /**
       * <code>optional bool tschchartaxisvalueshowtitle = 54;</code>
       */
      public boolean hasTschchartaxisvalueshowtitle() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool tschchartaxisvalueshowtitle = 54;</code>
       */
      public boolean getTschchartaxisvalueshowtitle() {
        return tschchartaxisvalueshowtitle_;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowtitle = 54;</code>
       */
      public Builder setTschchartaxisvalueshowtitle(boolean value) {
        bitField0_ |= 0x00000200;
        tschchartaxisvalueshowtitle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxisvalueshowtitle = 54;</code>
       */
      public Builder clearTschchartaxisvalueshowtitle() {
        bitField0_ = (bitField0_ & ~0x00000200);
        tschchartaxisvalueshowtitle_ = false;
        onChanged();
        return this;
      }

      private int tschchartaxisvaluenumberofmajorgridlines_ ;
      /**
       * <code>optional int32 tschchartaxisvaluenumberofmajorgridlines = 55;</code>
       */
      public boolean hasTschchartaxisvaluenumberofmajorgridlines() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 tschchartaxisvaluenumberofmajorgridlines = 55;</code>
       */
      public int getTschchartaxisvaluenumberofmajorgridlines() {
        return tschchartaxisvaluenumberofmajorgridlines_;
      }
      /**
       * <code>optional int32 tschchartaxisvaluenumberofmajorgridlines = 55;</code>
       */
      public Builder setTschchartaxisvaluenumberofmajorgridlines(int value) {
        bitField0_ |= 0x00000400;
        tschchartaxisvaluenumberofmajorgridlines_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxisvaluenumberofmajorgridlines = 55;</code>
       */
      public Builder clearTschchartaxisvaluenumberofmajorgridlines() {
        bitField0_ = (bitField0_ & ~0x00000400);
        tschchartaxisvaluenumberofmajorgridlines_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object tschchartaxisvaluetitle_ = "";
      /**
       * <code>optional string tschchartaxisvaluetitle = 56;</code>
       */
      public boolean hasTschchartaxisvaluetitle() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string tschchartaxisvaluetitle = 56;</code>
       */
      public java.lang.String getTschchartaxisvaluetitle() {
        java.lang.Object ref = tschchartaxisvaluetitle_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tschchartaxisvaluetitle_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string tschchartaxisvaluetitle = 56;</code>
       */
      public com.google.protobuf.ByteString
          getTschchartaxisvaluetitleBytes() {
        java.lang.Object ref = tschchartaxisvaluetitle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tschchartaxisvaluetitle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string tschchartaxisvaluetitle = 56;</code>
       */
      public Builder setTschchartaxisvaluetitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        tschchartaxisvaluetitle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string tschchartaxisvaluetitle = 56;</code>
       */
      public Builder clearTschchartaxisvaluetitle() {
        bitField0_ = (bitField0_ & ~0x00000800);
        tschchartaxisvaluetitle_ = getDefaultInstance().getTschchartaxisvaluetitle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string tschchartaxisvaluetitle = 56;</code>
       */
      public Builder setTschchartaxisvaluetitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        tschchartaxisvaluetitle_ = value;
        onChanged();
        return this;
      }

      private boolean tschchartaxiscategoryshowlabels_ ;
      /**
       * <code>optional bool tschchartaxiscategoryshowlabels = 100;</code>
       */
      public boolean hasTschchartaxiscategoryshowlabels() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowlabels = 100;</code>
       */
      public boolean getTschchartaxiscategoryshowlabels() {
        return tschchartaxiscategoryshowlabels_;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowlabels = 100;</code>
       */
      public Builder setTschchartaxiscategoryshowlabels(boolean value) {
        bitField0_ |= 0x00001000;
        tschchartaxiscategoryshowlabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowlabels = 100;</code>
       */
      public Builder clearTschchartaxiscategoryshowlabels() {
        bitField0_ = (bitField0_ & ~0x00001000);
        tschchartaxiscategoryshowlabels_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartaxiscategoryshowserieslabels_ ;
      /**
       * <code>optional bool tschchartaxiscategoryshowserieslabels = 101;</code>
       */
      public boolean hasTschchartaxiscategoryshowserieslabels() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowserieslabels = 101;</code>
       */
      public boolean getTschchartaxiscategoryshowserieslabels() {
        return tschchartaxiscategoryshowserieslabels_;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowserieslabels = 101;</code>
       */
      public Builder setTschchartaxiscategoryshowserieslabels(boolean value) {
        bitField0_ |= 0x00002000;
        tschchartaxiscategoryshowserieslabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowserieslabels = 101;</code>
       */
      public Builder clearTschchartaxiscategoryshowserieslabels() {
        bitField0_ = (bitField0_ & ~0x00002000);
        tschchartaxiscategoryshowserieslabels_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartaxiscategoryshowtitle_ ;
      /**
       * <code>optional bool tschchartaxiscategoryshowtitle = 102;</code>
       */
      public boolean hasTschchartaxiscategoryshowtitle() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowtitle = 102;</code>
       */
      public boolean getTschchartaxiscategoryshowtitle() {
        return tschchartaxiscategoryshowtitle_;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowtitle = 102;</code>
       */
      public Builder setTschchartaxiscategoryshowtitle(boolean value) {
        bitField0_ |= 0x00004000;
        tschchartaxiscategoryshowtitle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxiscategoryshowtitle = 102;</code>
       */
      public Builder clearTschchartaxiscategoryshowtitle() {
        bitField0_ = (bitField0_ & ~0x00004000);
        tschchartaxiscategoryshowtitle_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object tschchartaxiscategorytitle_ = "";
      /**
       * <code>optional string tschchartaxiscategorytitle = 103;</code>
       */
      public boolean hasTschchartaxiscategorytitle() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional string tschchartaxiscategorytitle = 103;</code>
       */
      public java.lang.String getTschchartaxiscategorytitle() {
        java.lang.Object ref = tschchartaxiscategorytitle_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tschchartaxiscategorytitle_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string tschchartaxiscategorytitle = 103;</code>
       */
      public com.google.protobuf.ByteString
          getTschchartaxiscategorytitleBytes() {
        java.lang.Object ref = tschchartaxiscategorytitle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tschchartaxiscategorytitle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string tschchartaxiscategorytitle = 103;</code>
       */
      public Builder setTschchartaxiscategorytitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        tschchartaxiscategorytitle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string tschchartaxiscategorytitle = 103;</code>
       */
      public Builder clearTschchartaxiscategorytitle() {
        bitField0_ = (bitField0_ & ~0x00008000);
        tschchartaxiscategorytitle_ = getDefaultInstance().getTschchartaxiscategorytitle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string tschchartaxiscategorytitle = 103;</code>
       */
      public Builder setTschchartaxiscategorytitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        tschchartaxiscategorytitle_ = value;
        onChanged();
        return this;
      }

      private int tschchartaxisdefaultnumberformattype_ ;
      /**
       * <code>optional int32 tschchartaxisdefaultnumberformattype = 120;</code>
       */
      public boolean hasTschchartaxisdefaultnumberformattype() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 tschchartaxisdefaultnumberformattype = 120;</code>
       */
      public int getTschchartaxisdefaultnumberformattype() {
        return tschchartaxisdefaultnumberformattype_;
      }
      /**
       * <code>optional int32 tschchartaxisdefaultnumberformattype = 120;</code>
       */
      public Builder setTschchartaxisdefaultnumberformattype(int value) {
        bitField0_ |= 0x00010000;
        tschchartaxisdefaultnumberformattype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxisdefaultnumberformattype = 120;</code>
       */
      public Builder clearTschchartaxisdefaultnumberformattype() {
        bitField0_ = (bitField0_ & ~0x00010000);
        tschchartaxisdefaultnumberformattype_ = 0;
        onChanged();
        return this;
      }

      private int tschchartaxisdefault3Dlabelposition_ ;
      /**
       * <code>optional int32 tschchartaxisdefault3dlabelposition = 336;</code>
       */
      public boolean hasTschchartaxisdefault3Dlabelposition() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 tschchartaxisdefault3dlabelposition = 336;</code>
       */
      public int getTschchartaxisdefault3Dlabelposition() {
        return tschchartaxisdefault3Dlabelposition_;
      }
      /**
       * <code>optional int32 tschchartaxisdefault3dlabelposition = 336;</code>
       */
      public Builder setTschchartaxisdefault3Dlabelposition(int value) {
        bitField0_ |= 0x00020000;
        tschchartaxisdefault3Dlabelposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartaxisdefault3dlabelposition = 336;</code>
       */
      public Builder clearTschchartaxisdefault3Dlabelposition() {
        bitField0_ = (bitField0_ & ~0x00020000);
        tschchartaxisdefault3Dlabelposition_ = 0;
        onChanged();
        return this;
      }

      private boolean tschchartaxiscategoryplottoedges_ ;
      /**
       * <code>optional bool tschchartaxiscategoryplottoedges = 116;</code>
       */
      public boolean hasTschchartaxiscategoryplottoedges() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional bool tschchartaxiscategoryplottoedges = 116;</code>
       */
      public boolean getTschchartaxiscategoryplottoedges() {
        return tschchartaxiscategoryplottoedges_;
      }
      /**
       * <code>optional bool tschchartaxiscategoryplottoedges = 116;</code>
       */
      public Builder setTschchartaxiscategoryplottoedges(boolean value) {
        bitField0_ |= 0x00040000;
        tschchartaxiscategoryplottoedges_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartaxiscategoryplottoedges = 116;</code>
       */
      public Builder clearTschchartaxiscategoryplottoedges() {
        bitField0_ = (bitField0_ & ~0x00040000);
        tschchartaxiscategoryplottoedges_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TSCH.PreUFF.ChartAxisNonStyleArchive)
    }

    // @@protoc_insertion_point(class_scope:TSCH.PreUFF.ChartAxisNonStyleArchive)
    private static final org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive();
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ChartAxisNonStyleArchive>
        PARSER = new com.google.protobuf.AbstractParser<ChartAxisNonStyleArchive>() {
      public ChartAxisNonStyleArchive parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ChartAxisNonStyleArchive(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChartAxisNonStyleArchive> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChartAxisNonStyleArchive> getParserForType() {
      return PARSER;
    }

    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartAxisNonStyleArchive getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChartSeriesStyleArchiveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TSCH.PreUFF.ChartSeriesStyleArchive)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    boolean hasSuper();
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive getSuper();
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder getSuperOrBuilder();

    /**
     * <code>optional int32 tschchartseriesdefaulttrendlineequationparagraphstyleindex = 201;</code>
     */
    boolean hasTschchartseriesdefaulttrendlineequationparagraphstyleindex();
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlineequationparagraphstyleindex = 201;</code>
     */
    int getTschchartseriesdefaulttrendlineequationparagraphstyleindex();

    /**
     * <code>optional int32 tschchartseriesdefaulttrendlinersquaredparagraphstyleindex = 202;</code>
     */
    boolean hasTschchartseriesdefaulttrendlinersquaredparagraphstyleindex();
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlinersquaredparagraphstyleindex = 202;</code>
     */
    int getTschchartseriesdefaulttrendlinersquaredparagraphstyleindex();

    /**
     * <code>optional float tschchartseriesdefaulttrendlineequationopacity = 205;</code>
     */
    boolean hasTschchartseriesdefaulttrendlineequationopacity();
    /**
     * <code>optional float tschchartseriesdefaulttrendlineequationopacity = 205;</code>
     */
    float getTschchartseriesdefaulttrendlineequationopacity();

    /**
     * <code>optional float tschchartseriesdefaulttrendlinersquaredopacity = 206;</code>
     */
    boolean hasTschchartseriesdefaulttrendlinersquaredopacity();
    /**
     * <code>optional float tschchartseriesdefaulttrendlinersquaredopacity = 206;</code>
     */
    float getTschchartseriesdefaulttrendlinersquaredopacity();

    /**
     * <code>optional .TSD.FillArchive tschchartseriesbarfill = 10;</code>
     */
    boolean hasTschchartseriesbarfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesbarfill = 10;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesbarfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesbarfill = 10;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesbarfillOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 11;</code>
     */
    boolean hasTschchartseriesbarstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 11;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesbarstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 11;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesbarstrokeOrBuilder();

    /**
     * <code>optional int32 tschchartseriesbarvaluelabelposition = 13;</code>
     */
    boolean hasTschchartseriesbarvaluelabelposition();
    /**
     * <code>optional int32 tschchartseriesbarvaluelabelposition = 13;</code>
     */
    int getTschchartseriesbarvaluelabelposition();

    /**
     * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 16;</code>
     */
    boolean hasTschchartserieslinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 16;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartserieslinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 16;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartserieslinestrokeOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 17;</code>
     */
    boolean hasTschchartserieslinesymbolfill();
    /**
     * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 17;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartserieslinesymbolfill();
    /**
     * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 17;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartserieslinesymbolfillOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 18;</code>
     */
    boolean hasTschchartserieslinesymbolstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 18;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartserieslinesymbolstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 18;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartserieslinesymbolstrokeOrBuilder();

    /**
     * <code>optional float tschchartserieslinesymbolsize = 20;</code>
     */
    boolean hasTschchartserieslinesymbolsize();
    /**
     * <code>optional float tschchartserieslinesymbolsize = 20;</code>
     */
    float getTschchartserieslinesymbolsize();

    /**
     * <code>optional int32 tschchartserieslinevaluelabelposition = 22;</code>
     */
    boolean hasTschchartserieslinevaluelabelposition();
    /**
     * <code>optional int32 tschchartserieslinevaluelabelposition = 22;</code>
     */
    int getTschchartserieslinevaluelabelposition();

    /**
     * <code>optional .TSD.FillArchive tschchartseriesareafill = 25;</code>
     */
    boolean hasTschchartseriesareafill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesareafill = 25;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesareafill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesareafill = 25;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesareafillOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 26;</code>
     */
    boolean hasTschchartseriesareastroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 26;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesareastroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 26;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesareastrokeOrBuilder();

    /**
     * <code>optional int32 tschchartseriesareavaluelabelposition = 28;</code>
     */
    boolean hasTschchartseriesareavaluelabelposition();
    /**
     * <code>optional int32 tschchartseriesareavaluelabelposition = 28;</code>
     */
    int getTschchartseriesareavaluelabelposition();

    /**
     * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 29;</code>
     */
    boolean hasTschchartseriesareasymbolfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 29;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesareasymbolfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 29;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesareasymbolfillOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 30;</code>
     */
    boolean hasTschchartseriesareasymbolstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 30;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesareasymbolstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 30;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesareasymbolstrokeOrBuilder();

    /**
     * <code>optional float tschchartseriesareasymbolsize = 32;</code>
     */
    boolean hasTschchartseriesareasymbolsize();
    /**
     * <code>optional float tschchartseriesareasymbolsize = 32;</code>
     */
    float getTschchartseriesareasymbolsize();

    /**
     * <code>optional .TSD.FillArchive tschchartseriespiefill = 35;</code>
     */
    boolean hasTschchartseriespiefill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriespiefill = 35;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriespiefill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriespiefill = 35;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriespiefillOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 36;</code>
     */
    boolean hasTschchartseriespiestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 36;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriespiestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 36;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriespiestrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 40;</code>
     */
    boolean hasTschchartseriesscatterstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 40;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesscatterstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 40;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesscatterstrokeOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 41;</code>
     */
    boolean hasTschchartseriesscattersymbolfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 41;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesscattersymbolfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 41;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesscattersymbolfillOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 42;</code>
     */
    boolean hasTschchartseriesscattersymbolstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 42;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesscattersymbolstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 42;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesscattersymbolstrokeOrBuilder();

    /**
     * <code>optional float tschchartseriesscattersymbolsize = 44;</code>
     */
    boolean hasTschchartseriesscattersymbolsize();
    /**
     * <code>optional float tschchartseriesscattersymbolsize = 44;</code>
     */
    float getTschchartseriesscattersymbolsize();

    /**
     * <code>optional int32 tschchartseriesscattervaluelabelposition = 46;</code>
     */
    boolean hasTschchartseriesscattervaluelabelposition();
    /**
     * <code>optional int32 tschchartseriesscattervaluelabelposition = 46;</code>
     */
    int getTschchartseriesscattervaluelabelposition();

    /**
     * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 50;</code>
     */
    boolean hasTschchartseriesdefaultfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 50;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesdefaultfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 50;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesdefaultfillOrBuilder();

    /**
     * <code>optional int32 tschchartseriesdefaultvaluelabelposition = 52;</code>
     */
    boolean hasTschchartseriesdefaultvaluelabelposition();
    /**
     * <code>optional int32 tschchartseriesdefaultvaluelabelposition = 52;</code>
     */
    int getTschchartseriesdefaultvaluelabelposition();

    /**
     * <code>optional bool tschchartseriespiedeprecatedserieslabelson = 60;</code>
     */
    boolean hasTschchartseriespiedeprecatedserieslabelson();
    /**
     * <code>optional bool tschchartseriespiedeprecatedserieslabelson = 60;</code>
     */
    boolean getTschchartseriespiedeprecatedserieslabelson();

    /**
     * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 62;</code>
     */
    boolean hasTschchartseriescolumnfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 62;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriescolumnfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 62;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriescolumnfillOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 100;</code>
     */
    boolean hasTschchartseriespieshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 100;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriespieshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 100;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriespieshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 101;</code>
     */
    boolean hasTschchartseriesbarshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 101;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesbarshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 101;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesbarshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 102;</code>
     */
    boolean hasTschchartseriesareashadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 102;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesareashadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 102;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesareashadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 103;</code>
     */
    boolean hasTschchartseriesscattershadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 103;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesscattershadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 103;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesscattershadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 104;</code>
     */
    boolean hasTschchartseriesmixedlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 104;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesmixedlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 104;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesmixedlineshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 105;</code>
     */
    boolean hasTschchartseriesmixedareashadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 105;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesmixedareashadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 105;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesmixedareashadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 106;</code>
     */
    boolean hasTschchartseriesmixedcolumnshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 106;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesmixedcolumnshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 106;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesmixedcolumnshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 107;</code>
     */
    boolean hasTschchartserieslineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 107;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartserieslineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 107;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartserieslineshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 108;</code>
     */
    boolean hasTschchartseriesdefaultshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 108;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesdefaultshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 108;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesdefaultshadowOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 207;</code>
     */
    boolean hasTschchartseriesbubblesymbolfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 207;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesbubblesymbolfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 207;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesbubblesymbolfillOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 211;</code>
     */
    boolean hasTschchartseriesbubblestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 211;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesbubblestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 211;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesbubblestrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 212;</code>
     */
    boolean hasTschchartseriesbubblesymbolstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 212;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesbubblesymbolstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 212;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesbubblesymbolstrokeOrBuilder();

    /**
     * <code>optional int32 tschchartseriesbubblevaluelabelposition = 213;</code>
     */
    boolean hasTschchartseriesbubblevaluelabelposition();
    /**
     * <code>optional int32 tschchartseriesbubblevaluelabelposition = 213;</code>
     */
    int getTschchartseriesbubblevaluelabelposition();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 214;</code>
     */
    boolean hasTschchartseriesbubbleshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 214;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesbubbleshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 214;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesbubbleshadowOrBuilder();

    /**
     * <code>optional bool tschchartseriesbubblesymbolfilluseseriesstroke = 215;</code>
     */
    boolean hasTschchartseriesbubblesymbolfilluseseriesstroke();
    /**
     * <code>optional bool tschchartseriesbubblesymbolfilluseseriesstroke = 215;</code>
     */
    boolean getTschchartseriesbubblesymbolfilluseseriesstroke();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 306;</code>
     */
    boolean hasTschchartseries3Dbarshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 306;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dbarshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 306;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DbarshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 307;</code>
     */
    boolean hasTschchartseries3Dcolumnshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 307;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dcolumnshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 307;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DcolumnshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 308;</code>
     */
    boolean hasTschchartseries3Dlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 308;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 308;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DlineshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 309;</code>
     */
    boolean hasTschchartseries3Dareashadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 309;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dareashadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 309;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DareashadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 310;</code>
     */
    boolean hasTschchartseries3Dpieshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 310;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dpieshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 310;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DpieshadowOrBuilder();

    /**
     * <code>optional int32 tschchartseriesdefaultlabelparagraphstyleindex = 110;</code>
     */
    boolean hasTschchartseriesdefaultlabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartseriesdefaultlabelparagraphstyleindex = 110;</code>
     */
    int getTschchartseriesdefaultlabelparagraphstyleindex();

    /**
     * <code>optional int32 tschchartseriesbarlabelparagraphstyleindex = 111;</code>
     */
    boolean hasTschchartseriesbarlabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartseriesbarlabelparagraphstyleindex = 111;</code>
     */
    int getTschchartseriesbarlabelparagraphstyleindex();

    /**
     * <code>optional int32 tschchartserieslinelabelparagraphstyleindex = 112;</code>
     */
    boolean hasTschchartserieslinelabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartserieslinelabelparagraphstyleindex = 112;</code>
     */
    int getTschchartserieslinelabelparagraphstyleindex();

    /**
     * <code>optional int32 tschchartseriesarealabelparagraphstyleindex = 113;</code>
     */
    boolean hasTschchartseriesarealabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartseriesarealabelparagraphstyleindex = 113;</code>
     */
    int getTschchartseriesarealabelparagraphstyleindex();

    /**
     * <code>optional int32 tschchartseriespielabelparagraphstyleindex = 114;</code>
     */
    boolean hasTschchartseriespielabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartseriespielabelparagraphstyleindex = 114;</code>
     */
    int getTschchartseriespielabelparagraphstyleindex();

    /**
     * <code>optional int32 tschchartseriesmixedlabelparagraphstyleindex = 115;</code>
     */
    boolean hasTschchartseriesmixedlabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartseriesmixedlabelparagraphstyleindex = 115;</code>
     */
    int getTschchartseriesmixedlabelparagraphstyleindex();

    /**
     * <code>optional float tschchartseriesdefaultopacity = 116;</code>
     */
    boolean hasTschchartseriesdefaultopacity();
    /**
     * <code>optional float tschchartseriesdefaultopacity = 116;</code>
     */
    float getTschchartseriesdefaultopacity();

    /**
     * <code>optional bool tschchartserieslinesymbolfilluseseriesstroke = 117;</code>
     */
    boolean hasTschchartserieslinesymbolfilluseseriesstroke();
    /**
     * <code>optional bool tschchartserieslinesymbolfilluseseriesstroke = 117;</code>
     */
    boolean getTschchartserieslinesymbolfilluseseriesstroke();

    /**
     * <code>optional bool tschchartseriesareasymbolfilluseseriesstroke = 118;</code>
     */
    boolean hasTschchartseriesareasymbolfilluseseriesstroke();
    /**
     * <code>optional bool tschchartseriesareasymbolfilluseseriesstroke = 118;</code>
     */
    boolean getTschchartseriesareasymbolfilluseseriesstroke();

    /**
     * <code>optional bool tschchartseriesscattersymbolfilluseseriesstroke = 119;</code>
     */
    boolean hasTschchartseriesscattersymbolfilluseseriesstroke();
    /**
     * <code>optional bool tschchartseriesscattersymbolfilluseseriesstroke = 119;</code>
     */
    boolean getTschchartseriesscattersymbolfilluseseriesstroke();

    /**
     * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesstroke = 120;</code>
     */
    boolean hasTschchartseriesmixedlinesymbolfilluseseriesstroke();
    /**
     * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesstroke = 120;</code>
     */
    boolean getTschchartseriesmixedlinesymbolfilluseseriesstroke();

    /**
     * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesstroke = 121;</code>
     */
    boolean hasTschchartseriesmixedareasymbolfilluseseriesstroke();
    /**
     * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesstroke = 121;</code>
     */
    boolean getTschchartseriesmixedareasymbolfilluseseriesstroke();

    /**
     * <code>optional bool tschchartserieslinesymbolfilluseseriesfill = 122;</code>
     */
    boolean hasTschchartserieslinesymbolfilluseseriesfill();
    /**
     * <code>optional bool tschchartserieslinesymbolfilluseseriesfill = 122;</code>
     */
    boolean getTschchartserieslinesymbolfilluseseriesfill();

    /**
     * <code>optional bool tschchartseriesareasymbolfilluseseriesfill = 123;</code>
     */
    boolean hasTschchartseriesareasymbolfilluseseriesfill();
    /**
     * <code>optional bool tschchartseriesareasymbolfilluseseriesfill = 123;</code>
     */
    boolean getTschchartseriesareasymbolfilluseseriesfill();

    /**
     * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesfill = 124;</code>
     */
    boolean hasTschchartseriesmixedlinesymbolfilluseseriesfill();
    /**
     * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesfill = 124;</code>
     */
    boolean getTschchartseriesmixedlinesymbolfilluseseriesfill();

    /**
     * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesfill = 125;</code>
     */
    boolean hasTschchartseriesmixedareasymbolfilluseseriesfill();
    /**
     * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesfill = 125;</code>
     */
    boolean getTschchartseriesmixedareasymbolfilluseseriesfill();

    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 130;</code>
     */
    boolean hasTschchartseriesmixedcolumnfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 130;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesmixedcolumnfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 130;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesmixedcolumnfillOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 131;</code>
     */
    boolean hasTschchartseriesmixedareafill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 131;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesmixedareafill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 131;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesmixedareafillOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 132;</code>
     */
    boolean hasTschchartseriesmixedcolumnstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 132;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedcolumnstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 132;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedcolumnstrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 133;</code>
     */
    boolean hasTschchartseriesmixedlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 133;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 133;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedlinestrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 134;</code>
     */
    boolean hasTschchartseriesmixedareastroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 134;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedareastroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 134;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedareastrokeOrBuilder();

    /**
     * <code>optional float tschchartseriesmixedlinesymbolsize = 135;</code>
     */
    boolean hasTschchartseriesmixedlinesymbolsize();
    /**
     * <code>optional float tschchartseriesmixedlinesymbolsize = 135;</code>
     */
    float getTschchartseriesmixedlinesymbolsize();

    /**
     * <code>optional float tschchartseriesmixedareasymbolsize = 136;</code>
     */
    boolean hasTschchartseriesmixedareasymbolsize();
    /**
     * <code>optional float tschchartseriesmixedareasymbolsize = 136;</code>
     */
    float getTschchartseriesmixedareasymbolsize();

    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 137;</code>
     */
    boolean hasTschchartseriesmixedlinesymbolfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 137;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesmixedlinesymbolfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 137;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesmixedlinesymbolfillOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 138;</code>
     */
    boolean hasTschchartseriesmixedareasymbolfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 138;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesmixedareasymbolfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 138;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesmixedareasymbolfillOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 139;</code>
     */
    boolean hasTschchartseriesmixedlinesymbolstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 139;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedlinesymbolstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 139;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedlinesymbolstrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 140;</code>
     */
    boolean hasTschchartseriesmixedareasymbolstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 140;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedareasymbolstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 140;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedareasymbolstrokeOrBuilder();

    /**
     * <code>optional int32 tschchartseriesmixedcolumnvaluelabelposition = 141;</code>
     */
    boolean hasTschchartseriesmixedcolumnvaluelabelposition();
    /**
     * <code>optional int32 tschchartseriesmixedcolumnvaluelabelposition = 141;</code>
     */
    int getTschchartseriesmixedcolumnvaluelabelposition();

    /**
     * <code>optional int32 tschchartseriesmixedlinevaluelabelposition = 142;</code>
     */
    boolean hasTschchartseriesmixedlinevaluelabelposition();
    /**
     * <code>optional int32 tschchartseriesmixedlinevaluelabelposition = 142;</code>
     */
    int getTschchartseriesmixedlinevaluelabelposition();

    /**
     * <code>optional int32 tschchartseriesmixedareavaluelabelposition = 143;</code>
     */
    boolean hasTschchartseriesmixedareavaluelabelposition();
    /**
     * <code>optional int32 tschchartseriesmixedareavaluelabelposition = 143;</code>
     */
    int getTschchartseriesmixedareavaluelabelposition();

    /**
     * <code>optional int32 tschchartseriesdefaultoutsidelabelparagraphstyleindex = 150;</code>
     */
    boolean hasTschchartseriesdefaultoutsidelabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartseriesdefaultoutsidelabelparagraphstyleindex = 150;</code>
     */
    int getTschchartseriesdefaultoutsidelabelparagraphstyleindex();

    /**
     * <code>optional int32 tschchartseriesbaroutsidelabelparagraphstyleindex = 151;</code>
     */
    boolean hasTschchartseriesbaroutsidelabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartseriesbaroutsidelabelparagraphstyleindex = 151;</code>
     */
    int getTschchartseriesbaroutsidelabelparagraphstyleindex();

    /**
     * <code>optional int32 tschchartseriesareaoutsidelabelparagraphstyleindex = 153;</code>
     */
    boolean hasTschchartseriesareaoutsidelabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartseriesareaoutsidelabelparagraphstyleindex = 153;</code>
     */
    int getTschchartseriesareaoutsidelabelparagraphstyleindex();

    /**
     * <code>optional int32 tschchartseriespieoutsidelabelparagraphstyleindex = 154;</code>
     */
    boolean hasTschchartseriespieoutsidelabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartseriespieoutsidelabelparagraphstyleindex = 154;</code>
     */
    int getTschchartseriespieoutsidelabelparagraphstyleindex();

    /**
     * <code>optional int32 tschchartseriesmixedoutsidelabelparagraphstyleindex = 155;</code>
     */
    boolean hasTschchartseriesmixedoutsidelabelparagraphstyleindex();
    /**
     * <code>optional int32 tschchartseriesmixedoutsidelabelparagraphstyleindex = 155;</code>
     */
    int getTschchartseriesmixedoutsidelabelparagraphstyleindex();

    /**
     * <code>optional int32 tschchartseriesstackedbarvaluelabelposition = 156;</code>
     */
    boolean hasTschchartseriesstackedbarvaluelabelposition();
    /**
     * <code>optional int32 tschchartseriesstackedbarvaluelabelposition = 156;</code>
     */
    int getTschchartseriesstackedbarvaluelabelposition();

    /**
     * <code>optional int32 tschchartseriesstackedareavaluelabelposition = 157;</code>
     */
    boolean hasTschchartseriesstackedareavaluelabelposition();
    /**
     * <code>optional int32 tschchartseriesstackedareavaluelabelposition = 157;</code>
     */
    int getTschchartseriesstackedareavaluelabelposition();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 167;</code>
     */
    boolean hasTschchartseriesdefaulttrendlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 167;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesdefaulttrendlinestroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 167;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesdefaulttrendlinestrokeOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 168;</code>
     */
    boolean hasTschchartseriesdefaulttrendlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 168;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesdefaulttrendlineshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 168;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesdefaulttrendlineshadowOrBuilder();

    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 180;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 180;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesdefaulterrorbarshadow();
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 180;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesdefaulterrorbarshadowOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 181;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 181;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesdefaulterrorbarstroke();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 181;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesdefaulterrorbarstrokeOrBuilder();

    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 182;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarstrokescatterx();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 182;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesdefaulterrorbarstrokescatterx();
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 182;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesdefaulterrorbarstrokescatterxOrBuilder();

    /**
     * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 183;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarlineend();
    /**
     * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 183;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive getTschchartseriesdefaulterrorbarlineend();
    /**
     * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 183;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchiveOrBuilder getTschchartseriesdefaulterrorbarlineendOrBuilder();

    /**
     * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 184;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarlineendscatterx();
    /**
     * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 184;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive getTschchartseriesdefaulterrorbarlineendscatterx();
    /**
     * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 184;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchiveOrBuilder getTschchartseriesdefaulterrorbarlineendscatterxOrBuilder();

    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesdefaultdeprecated3dfill = 300;</code>
     */
    boolean hasTschchartseriesdefaultdeprecated3Dfill();
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesdefaultdeprecated3dfill = 300;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive getTschchartseriesdefaultdeprecated3Dfill();
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesdefaultdeprecated3dfill = 300;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder getTschchartseriesdefaultdeprecated3DfillOrBuilder();

    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesbardeprecated3dfill = 301;</code>
     */
    boolean hasTschchartseriesbardeprecated3Dfill();
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesbardeprecated3dfill = 301;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive getTschchartseriesbardeprecated3Dfill();
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesbardeprecated3dfill = 301;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder getTschchartseriesbardeprecated3DfillOrBuilder();

    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriescolumndeprecated3dfill = 302;</code>
     */
    boolean hasTschchartseriescolumndeprecated3Dfill();
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriescolumndeprecated3dfill = 302;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive getTschchartseriescolumndeprecated3Dfill();
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriescolumndeprecated3dfill = 302;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder getTschchartseriescolumndeprecated3DfillOrBuilder();

    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartserieslinedeprecated3dfill = 303;</code>
     */
    boolean hasTschchartserieslinedeprecated3Dfill();
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartserieslinedeprecated3dfill = 303;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive getTschchartserieslinedeprecated3Dfill();
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartserieslinedeprecated3dfill = 303;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder getTschchartserieslinedeprecated3DfillOrBuilder();

    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesareadeprecated3dfill = 304;</code>
     */
    boolean hasTschchartseriesareadeprecated3Dfill();
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesareadeprecated3dfill = 304;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive getTschchartseriesareadeprecated3Dfill();
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesareadeprecated3dfill = 304;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder getTschchartseriesareadeprecated3DfillOrBuilder();

    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriespiedeprecated3dfill = 305;</code>
     */
    boolean hasTschchartseriespiedeprecated3Dfill();
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriespiedeprecated3dfill = 305;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive getTschchartseriespiedeprecated3Dfill();
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriespiedeprecated3dfill = 305;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder getTschchartseriespiedeprecated3DfillOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 320;</code>
     */
    boolean hasTschchartseries3Dbarfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 320;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dbarfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 320;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DbarfillOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 321;</code>
     */
    boolean hasTschchartseries3Dcolumnfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 321;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dcolumnfill();
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 321;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DcolumnfillOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 322;</code>
     */
    boolean hasTschchartseries3Dlinefill();
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 322;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dlinefill();
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 322;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DlinefillOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseries3dareafill = 323;</code>
     */
    boolean hasTschchartseries3Dareafill();
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dareafill = 323;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dareafill();
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dareafill = 323;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DareafillOrBuilder();

    /**
     * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 324;</code>
     */
    boolean hasTschchartseries3Dpiefill();
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 324;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dpiefill();
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 324;</code>
     */
    org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DpiefillOrBuilder();
  }
  /**
   * Protobuf type {@code TSCH.PreUFF.ChartSeriesStyleArchive}
   */
  public  static final class ChartSeriesStyleArchive extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TSCH.PreUFF.ChartSeriesStyleArchive)
      ChartSeriesStyleArchiveOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChartSeriesStyleArchive.newBuilder() to construct.
    private ChartSeriesStyleArchive(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChartSeriesStyleArchive() {
      tschchartseriesdefaulttrendlineequationparagraphstyleindex_ = 0;
      tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_ = 0;
      tschchartseriesdefaulttrendlineequationopacity_ = 0F;
      tschchartseriesdefaulttrendlinersquaredopacity_ = 0F;
      tschchartseriesbarvaluelabelposition_ = 0;
      tschchartserieslinesymbolsize_ = 0F;
      tschchartserieslinevaluelabelposition_ = 0;
      tschchartseriesareavaluelabelposition_ = 0;
      tschchartseriesareasymbolsize_ = 0F;
      tschchartseriesscattersymbolsize_ = 0F;
      tschchartseriesscattervaluelabelposition_ = 0;
      tschchartseriesdefaultvaluelabelposition_ = 0;
      tschchartseriespiedeprecatedserieslabelson_ = false;
      tschchartseriesbubblevaluelabelposition_ = 0;
      tschchartseriesbubblesymbolfilluseseriesstroke_ = false;
      tschchartseriesdefaultlabelparagraphstyleindex_ = 0;
      tschchartseriesbarlabelparagraphstyleindex_ = 0;
      tschchartserieslinelabelparagraphstyleindex_ = 0;
      tschchartseriesarealabelparagraphstyleindex_ = 0;
      tschchartseriespielabelparagraphstyleindex_ = 0;
      tschchartseriesmixedlabelparagraphstyleindex_ = 0;
      tschchartseriesdefaultopacity_ = 0F;
      tschchartserieslinesymbolfilluseseriesstroke_ = false;
      tschchartseriesareasymbolfilluseseriesstroke_ = false;
      tschchartseriesscattersymbolfilluseseriesstroke_ = false;
      tschchartseriesmixedlinesymbolfilluseseriesstroke_ = false;
      tschchartseriesmixedareasymbolfilluseseriesstroke_ = false;
      tschchartserieslinesymbolfilluseseriesfill_ = false;
      tschchartseriesareasymbolfilluseseriesfill_ = false;
      tschchartseriesmixedlinesymbolfilluseseriesfill_ = false;
      tschchartseriesmixedareasymbolfilluseseriesfill_ = false;
      tschchartseriesmixedlinesymbolsize_ = 0F;
      tschchartseriesmixedareasymbolsize_ = 0F;
      tschchartseriesmixedcolumnvaluelabelposition_ = 0;
      tschchartseriesmixedlinevaluelabelposition_ = 0;
      tschchartseriesmixedareavaluelabelposition_ = 0;
      tschchartseriesdefaultoutsidelabelparagraphstyleindex_ = 0;
      tschchartseriesbaroutsidelabelparagraphstyleindex_ = 0;
      tschchartseriesareaoutsidelabelparagraphstyleindex_ = 0;
      tschchartseriespieoutsidelabelparagraphstyleindex_ = 0;
      tschchartseriesmixedoutsidelabelparagraphstyleindex_ = 0;
      tschchartseriesstackedbarvaluelabelposition_ = 0;
      tschchartseriesstackedareavaluelabelposition_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChartSeriesStyleArchive(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      int mutable_bitField2_ = 0;
      int mutable_bitField3_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = super_.toBuilder();
              }
              super_ = input.readMessage(org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(super_);
                super_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 82: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = tschchartseriesbarfill_.toBuilder();
              }
              tschchartseriesbarfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesbarfill_);
                tschchartseriesbarfill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 90: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = tschchartseriesbarstroke_.toBuilder();
              }
              tschchartseriesbarstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesbarstroke_);
                tschchartseriesbarstroke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 104: {
              bitField0_ |= 0x00000080;
              tschchartseriesbarvaluelabelposition_ = input.readInt32();
              break;
            }
            case 130: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = tschchartserieslinestroke_.toBuilder();
              }
              tschchartserieslinestroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartserieslinestroke_);
                tschchartserieslinestroke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 138: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = tschchartserieslinesymbolfill_.toBuilder();
              }
              tschchartserieslinesymbolfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartserieslinesymbolfill_);
                tschchartserieslinesymbolfill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 146: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = tschchartserieslinesymbolstroke_.toBuilder();
              }
              tschchartserieslinesymbolstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartserieslinesymbolstroke_);
                tschchartserieslinesymbolstroke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 165: {
              bitField0_ |= 0x00000800;
              tschchartserieslinesymbolsize_ = input.readFloat();
              break;
            }
            case 176: {
              bitField0_ |= 0x00001000;
              tschchartserieslinevaluelabelposition_ = input.readInt32();
              break;
            }
            case 202: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00002000) == 0x00002000)) {
                subBuilder = tschchartseriesareafill_.toBuilder();
              }
              tschchartseriesareafill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesareafill_);
                tschchartseriesareafill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00002000;
              break;
            }
            case 210: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00004000) == 0x00004000)) {
                subBuilder = tschchartseriesareastroke_.toBuilder();
              }
              tschchartseriesareastroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesareastroke_);
                tschchartseriesareastroke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00004000;
              break;
            }
            case 224: {
              bitField0_ |= 0x00008000;
              tschchartseriesareavaluelabelposition_ = input.readInt32();
              break;
            }
            case 234: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00010000) == 0x00010000)) {
                subBuilder = tschchartseriesareasymbolfill_.toBuilder();
              }
              tschchartseriesareasymbolfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesareasymbolfill_);
                tschchartseriesareasymbolfill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00010000;
              break;
            }
            case 242: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00020000) == 0x00020000)) {
                subBuilder = tschchartseriesareasymbolstroke_.toBuilder();
              }
              tschchartseriesareasymbolstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesareasymbolstroke_);
                tschchartseriesareasymbolstroke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00020000;
              break;
            }
            case 261: {
              bitField0_ |= 0x00040000;
              tschchartseriesareasymbolsize_ = input.readFloat();
              break;
            }
            case 282: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00080000) == 0x00080000)) {
                subBuilder = tschchartseriespiefill_.toBuilder();
              }
              tschchartseriespiefill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriespiefill_);
                tschchartseriespiefill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00080000;
              break;
            }
            case 290: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00100000) == 0x00100000)) {
                subBuilder = tschchartseriespiestroke_.toBuilder();
              }
              tschchartseriespiestroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriespiestroke_);
                tschchartseriespiestroke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00100000;
              break;
            }
            case 322: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00200000) == 0x00200000)) {
                subBuilder = tschchartseriesscatterstroke_.toBuilder();
              }
              tschchartseriesscatterstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesscatterstroke_);
                tschchartseriesscatterstroke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00200000;
              break;
            }
            case 330: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00400000) == 0x00400000)) {
                subBuilder = tschchartseriesscattersymbolfill_.toBuilder();
              }
              tschchartseriesscattersymbolfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesscattersymbolfill_);
                tschchartseriesscattersymbolfill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00400000;
              break;
            }
            case 338: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00800000) == 0x00800000)) {
                subBuilder = tschchartseriesscattersymbolstroke_.toBuilder();
              }
              tschchartseriesscattersymbolstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesscattersymbolstroke_);
                tschchartseriesscattersymbolstroke_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00800000;
              break;
            }
            case 357: {
              bitField0_ |= 0x01000000;
              tschchartseriesscattersymbolsize_ = input.readFloat();
              break;
            }
            case 368: {
              bitField0_ |= 0x02000000;
              tschchartseriesscattervaluelabelposition_ = input.readInt32();
              break;
            }
            case 402: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x04000000) == 0x04000000)) {
                subBuilder = tschchartseriesdefaultfill_.toBuilder();
              }
              tschchartseriesdefaultfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaultfill_);
                tschchartseriesdefaultfill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x04000000;
              break;
            }
            case 416: {
              bitField0_ |= 0x08000000;
              tschchartseriesdefaultvaluelabelposition_ = input.readInt32();
              break;
            }
            case 480: {
              bitField0_ |= 0x10000000;
              tschchartseriespiedeprecatedserieslabelson_ = input.readBool();
              break;
            }
            case 498: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x20000000) == 0x20000000)) {
                subBuilder = tschchartseriescolumnfill_.toBuilder();
              }
              tschchartseriescolumnfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriescolumnfill_);
                tschchartseriescolumnfill_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x20000000;
              break;
            }
            case 802: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x40000000) == 0x40000000)) {
                subBuilder = tschchartseriespieshadow_.toBuilder();
              }
              tschchartseriespieshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriespieshadow_);
                tschchartseriespieshadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x40000000;
              break;
            }
            case 810: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x80000000) == 0x80000000)) {
                subBuilder = tschchartseriesbarshadow_.toBuilder();
              }
              tschchartseriesbarshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesbarshadow_);
                tschchartseriesbarshadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x80000000;
              break;
            }
            case 818: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000001) == 0x00000001)) {
                subBuilder = tschchartseriesareashadow_.toBuilder();
              }
              tschchartseriesareashadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesareashadow_);
                tschchartseriesareashadow_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000001;
              break;
            }
            case 826: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000002) == 0x00000002)) {
                subBuilder = tschchartseriesscattershadow_.toBuilder();
              }
              tschchartseriesscattershadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesscattershadow_);
                tschchartseriesscattershadow_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000002;
              break;
            }
            case 834: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000004) == 0x00000004)) {
                subBuilder = tschchartseriesmixedlineshadow_.toBuilder();
              }
              tschchartseriesmixedlineshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesmixedlineshadow_);
                tschchartseriesmixedlineshadow_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000004;
              break;
            }
            case 842: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000008) == 0x00000008)) {
                subBuilder = tschchartseriesmixedareashadow_.toBuilder();
              }
              tschchartseriesmixedareashadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesmixedareashadow_);
                tschchartseriesmixedareashadow_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000008;
              break;
            }
            case 850: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000010) == 0x00000010)) {
                subBuilder = tschchartseriesmixedcolumnshadow_.toBuilder();
              }
              tschchartseriesmixedcolumnshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesmixedcolumnshadow_);
                tschchartseriesmixedcolumnshadow_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000010;
              break;
            }
            case 858: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000020) == 0x00000020)) {
                subBuilder = tschchartserieslineshadow_.toBuilder();
              }
              tschchartserieslineshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartserieslineshadow_);
                tschchartserieslineshadow_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000020;
              break;
            }
            case 866: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000040) == 0x00000040)) {
                subBuilder = tschchartseriesdefaultshadow_.toBuilder();
              }
              tschchartseriesdefaultshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaultshadow_);
                tschchartseriesdefaultshadow_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000040;
              break;
            }
            case 880: {
              bitField1_ |= 0x00040000;
              tschchartseriesdefaultlabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 888: {
              bitField1_ |= 0x00080000;
              tschchartseriesbarlabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 896: {
              bitField1_ |= 0x00100000;
              tschchartserieslinelabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 904: {
              bitField1_ |= 0x00200000;
              tschchartseriesarealabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 912: {
              bitField1_ |= 0x00400000;
              tschchartseriespielabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 920: {
              bitField1_ |= 0x00800000;
              tschchartseriesmixedlabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 933: {
              bitField1_ |= 0x01000000;
              tschchartseriesdefaultopacity_ = input.readFloat();
              break;
            }
            case 936: {
              bitField1_ |= 0x02000000;
              tschchartserieslinesymbolfilluseseriesstroke_ = input.readBool();
              break;
            }
            case 944: {
              bitField1_ |= 0x04000000;
              tschchartseriesareasymbolfilluseseriesstroke_ = input.readBool();
              break;
            }
            case 952: {
              bitField1_ |= 0x08000000;
              tschchartseriesscattersymbolfilluseseriesstroke_ = input.readBool();
              break;
            }
            case 960: {
              bitField1_ |= 0x10000000;
              tschchartseriesmixedlinesymbolfilluseseriesstroke_ = input.readBool();
              break;
            }
            case 968: {
              bitField1_ |= 0x20000000;
              tschchartseriesmixedareasymbolfilluseseriesstroke_ = input.readBool();
              break;
            }
            case 976: {
              bitField1_ |= 0x40000000;
              tschchartserieslinesymbolfilluseseriesfill_ = input.readBool();
              break;
            }
            case 984: {
              bitField1_ |= 0x80000000;
              tschchartseriesareasymbolfilluseseriesfill_ = input.readBool();
              break;
            }
            case 992: {
              bitField2_ |= 0x00000001;
              tschchartseriesmixedlinesymbolfilluseseriesfill_ = input.readBool();
              break;
            }
            case 1000: {
              bitField2_ |= 0x00000002;
              tschchartseriesmixedareasymbolfilluseseriesfill_ = input.readBool();
              break;
            }
            case 1042: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x00000004) == 0x00000004)) {
                subBuilder = tschchartseriesmixedcolumnfill_.toBuilder();
              }
              tschchartseriesmixedcolumnfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesmixedcolumnfill_);
                tschchartseriesmixedcolumnfill_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00000004;
              break;
            }
            case 1050: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x00000008) == 0x00000008)) {
                subBuilder = tschchartseriesmixedareafill_.toBuilder();
              }
              tschchartseriesmixedareafill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesmixedareafill_);
                tschchartseriesmixedareafill_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00000008;
              break;
            }
            case 1058: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x00000010) == 0x00000010)) {
                subBuilder = tschchartseriesmixedcolumnstroke_.toBuilder();
              }
              tschchartseriesmixedcolumnstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesmixedcolumnstroke_);
                tschchartseriesmixedcolumnstroke_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00000010;
              break;
            }
            case 1066: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x00000020) == 0x00000020)) {
                subBuilder = tschchartseriesmixedlinestroke_.toBuilder();
              }
              tschchartseriesmixedlinestroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesmixedlinestroke_);
                tschchartseriesmixedlinestroke_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00000020;
              break;
            }
            case 1074: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x00000040) == 0x00000040)) {
                subBuilder = tschchartseriesmixedareastroke_.toBuilder();
              }
              tschchartseriesmixedareastroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesmixedareastroke_);
                tschchartseriesmixedareastroke_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00000040;
              break;
            }
            case 1085: {
              bitField2_ |= 0x00000080;
              tschchartseriesmixedlinesymbolsize_ = input.readFloat();
              break;
            }
            case 1093: {
              bitField2_ |= 0x00000100;
              tschchartseriesmixedareasymbolsize_ = input.readFloat();
              break;
            }
            case 1098: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x00000200) == 0x00000200)) {
                subBuilder = tschchartseriesmixedlinesymbolfill_.toBuilder();
              }
              tschchartseriesmixedlinesymbolfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesmixedlinesymbolfill_);
                tschchartseriesmixedlinesymbolfill_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00000200;
              break;
            }
            case 1106: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x00000400) == 0x00000400)) {
                subBuilder = tschchartseriesmixedareasymbolfill_.toBuilder();
              }
              tschchartseriesmixedareasymbolfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesmixedareasymbolfill_);
                tschchartseriesmixedareasymbolfill_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00000400;
              break;
            }
            case 1114: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x00000800) == 0x00000800)) {
                subBuilder = tschchartseriesmixedlinesymbolstroke_.toBuilder();
              }
              tschchartseriesmixedlinesymbolstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesmixedlinesymbolstroke_);
                tschchartseriesmixedlinesymbolstroke_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00000800;
              break;
            }
            case 1122: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x00001000) == 0x00001000)) {
                subBuilder = tschchartseriesmixedareasymbolstroke_.toBuilder();
              }
              tschchartseriesmixedareasymbolstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesmixedareasymbolstroke_);
                tschchartseriesmixedareasymbolstroke_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00001000;
              break;
            }
            case 1128: {
              bitField2_ |= 0x00002000;
              tschchartseriesmixedcolumnvaluelabelposition_ = input.readInt32();
              break;
            }
            case 1136: {
              bitField2_ |= 0x00004000;
              tschchartseriesmixedlinevaluelabelposition_ = input.readInt32();
              break;
            }
            case 1144: {
              bitField2_ |= 0x00008000;
              tschchartseriesmixedareavaluelabelposition_ = input.readInt32();
              break;
            }
            case 1200: {
              bitField2_ |= 0x00010000;
              tschchartseriesdefaultoutsidelabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 1208: {
              bitField2_ |= 0x00020000;
              tschchartseriesbaroutsidelabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 1224: {
              bitField2_ |= 0x00040000;
              tschchartseriesareaoutsidelabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 1232: {
              bitField2_ |= 0x00080000;
              tschchartseriespieoutsidelabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 1240: {
              bitField2_ |= 0x00100000;
              tschchartseriesmixedoutsidelabelparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 1248: {
              bitField2_ |= 0x00200000;
              tschchartseriesstackedbarvaluelabelposition_ = input.readInt32();
              break;
            }
            case 1256: {
              bitField2_ |= 0x00400000;
              tschchartseriesstackedareavaluelabelposition_ = input.readInt32();
              break;
            }
            case 1338: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x00800000) == 0x00800000)) {
                subBuilder = tschchartseriesdefaulttrendlinestroke_.toBuilder();
              }
              tschchartseriesdefaulttrendlinestroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaulttrendlinestroke_);
                tschchartseriesdefaulttrendlinestroke_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00800000;
              break;
            }
            case 1346: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x01000000) == 0x01000000)) {
                subBuilder = tschchartseriesdefaulttrendlineshadow_.toBuilder();
              }
              tschchartseriesdefaulttrendlineshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaulttrendlineshadow_);
                tschchartseriesdefaulttrendlineshadow_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x01000000;
              break;
            }
            case 1442: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x02000000) == 0x02000000)) {
                subBuilder = tschchartseriesdefaulterrorbarshadow_.toBuilder();
              }
              tschchartseriesdefaulterrorbarshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaulterrorbarshadow_);
                tschchartseriesdefaulterrorbarshadow_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x02000000;
              break;
            }
            case 1450: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x04000000) == 0x04000000)) {
                subBuilder = tschchartseriesdefaulterrorbarstroke_.toBuilder();
              }
              tschchartseriesdefaulterrorbarstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaulterrorbarstroke_);
                tschchartseriesdefaulterrorbarstroke_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x04000000;
              break;
            }
            case 1458: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x08000000) == 0x08000000)) {
                subBuilder = tschchartseriesdefaulterrorbarstrokescatterx_.toBuilder();
              }
              tschchartseriesdefaulterrorbarstrokescatterx_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaulterrorbarstrokescatterx_);
                tschchartseriesdefaulterrorbarstrokescatterx_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x08000000;
              break;
            }
            case 1466: {
              org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x10000000) == 0x10000000)) {
                subBuilder = tschchartseriesdefaulterrorbarlineend_.toBuilder();
              }
              tschchartseriesdefaulterrorbarlineend_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaulterrorbarlineend_);
                tschchartseriesdefaulterrorbarlineend_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x10000000;
              break;
            }
            case 1474: {
              org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x20000000) == 0x20000000)) {
                subBuilder = tschchartseriesdefaulterrorbarlineendscatterx_.toBuilder();
              }
              tschchartseriesdefaulterrorbarlineendscatterx_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaulterrorbarlineendscatterx_);
                tschchartseriesdefaulterrorbarlineendscatterx_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x20000000;
              break;
            }
            case 1608: {
              bitField0_ |= 0x00000002;
              tschchartseriesdefaulttrendlineequationparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 1616: {
              bitField0_ |= 0x00000004;
              tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_ = input.readInt32();
              break;
            }
            case 1645: {
              bitField0_ |= 0x00000008;
              tschchartseriesdefaulttrendlineequationopacity_ = input.readFloat();
              break;
            }
            case 1653: {
              bitField0_ |= 0x00000010;
              tschchartseriesdefaulttrendlinersquaredopacity_ = input.readFloat();
              break;
            }
            case 1658: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000080) == 0x00000080)) {
                subBuilder = tschchartseriesbubblesymbolfill_.toBuilder();
              }
              tschchartseriesbubblesymbolfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesbubblesymbolfill_);
                tschchartseriesbubblesymbolfill_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000080;
              break;
            }
            case 1690: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000100) == 0x00000100)) {
                subBuilder = tschchartseriesbubblestroke_.toBuilder();
              }
              tschchartseriesbubblestroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesbubblestroke_);
                tschchartseriesbubblestroke_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000100;
              break;
            }
            case 1698: {
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000200) == 0x00000200)) {
                subBuilder = tschchartseriesbubblesymbolstroke_.toBuilder();
              }
              tschchartseriesbubblesymbolstroke_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesbubblesymbolstroke_);
                tschchartseriesbubblesymbolstroke_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000200;
              break;
            }
            case 1704: {
              bitField1_ |= 0x00000400;
              tschchartseriesbubblevaluelabelposition_ = input.readInt32();
              break;
            }
            case 1714: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00000800) == 0x00000800)) {
                subBuilder = tschchartseriesbubbleshadow_.toBuilder();
              }
              tschchartseriesbubbleshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesbubbleshadow_);
                tschchartseriesbubbleshadow_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000800;
              break;
            }
            case 1720: {
              bitField1_ |= 0x00001000;
              tschchartseriesbubblesymbolfilluseseriesstroke_ = input.readBool();
              break;
            }
            case 2402: {
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x40000000) == 0x40000000)) {
                subBuilder = tschchartseriesdefaultdeprecated3Dfill_.toBuilder();
              }
              tschchartseriesdefaultdeprecated3Dfill_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaultdeprecated3Dfill_);
                tschchartseriesdefaultdeprecated3Dfill_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x40000000;
              break;
            }
            case 2410: {
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder subBuilder = null;
              if (((bitField2_ & 0x80000000) == 0x80000000)) {
                subBuilder = tschchartseriesbardeprecated3Dfill_.toBuilder();
              }
              tschchartseriesbardeprecated3Dfill_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesbardeprecated3Dfill_);
                tschchartseriesbardeprecated3Dfill_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x80000000;
              break;
            }
            case 2418: {
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder subBuilder = null;
              if (((bitField3_ & 0x00000001) == 0x00000001)) {
                subBuilder = tschchartseriescolumndeprecated3Dfill_.toBuilder();
              }
              tschchartseriescolumndeprecated3Dfill_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriescolumndeprecated3Dfill_);
                tschchartseriescolumndeprecated3Dfill_ = subBuilder.buildPartial();
              }
              bitField3_ |= 0x00000001;
              break;
            }
            case 2426: {
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder subBuilder = null;
              if (((bitField3_ & 0x00000002) == 0x00000002)) {
                subBuilder = tschchartserieslinedeprecated3Dfill_.toBuilder();
              }
              tschchartserieslinedeprecated3Dfill_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartserieslinedeprecated3Dfill_);
                tschchartserieslinedeprecated3Dfill_ = subBuilder.buildPartial();
              }
              bitField3_ |= 0x00000002;
              break;
            }
            case 2434: {
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder subBuilder = null;
              if (((bitField3_ & 0x00000004) == 0x00000004)) {
                subBuilder = tschchartseriesareadeprecated3Dfill_.toBuilder();
              }
              tschchartseriesareadeprecated3Dfill_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesareadeprecated3Dfill_);
                tschchartseriesareadeprecated3Dfill_ = subBuilder.buildPartial();
              }
              bitField3_ |= 0x00000004;
              break;
            }
            case 2442: {
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder subBuilder = null;
              if (((bitField3_ & 0x00000008) == 0x00000008)) {
                subBuilder = tschchartseriespiedeprecated3Dfill_.toBuilder();
              }
              tschchartseriespiedeprecated3Dfill_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriespiedeprecated3Dfill_);
                tschchartseriespiedeprecated3Dfill_ = subBuilder.buildPartial();
              }
              bitField3_ |= 0x00000008;
              break;
            }
            case 2450: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00002000) == 0x00002000)) {
                subBuilder = tschchartseries3Dbarshadow_.toBuilder();
              }
              tschchartseries3Dbarshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseries3Dbarshadow_);
                tschchartseries3Dbarshadow_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00002000;
              break;
            }
            case 2458: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00004000) == 0x00004000)) {
                subBuilder = tschchartseries3Dcolumnshadow_.toBuilder();
              }
              tschchartseries3Dcolumnshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseries3Dcolumnshadow_);
                tschchartseries3Dcolumnshadow_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00004000;
              break;
            }
            case 2466: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00008000) == 0x00008000)) {
                subBuilder = tschchartseries3Dlineshadow_.toBuilder();
              }
              tschchartseries3Dlineshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseries3Dlineshadow_);
                tschchartseries3Dlineshadow_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00008000;
              break;
            }
            case 2474: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00010000) == 0x00010000)) {
                subBuilder = tschchartseries3Dareashadow_.toBuilder();
              }
              tschchartseries3Dareashadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseries3Dareashadow_);
                tschchartseries3Dareashadow_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00010000;
              break;
            }
            case 2482: {
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00020000) == 0x00020000)) {
                subBuilder = tschchartseries3Dpieshadow_.toBuilder();
              }
              tschchartseries3Dpieshadow_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseries3Dpieshadow_);
                tschchartseries3Dpieshadow_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00020000;
              break;
            }
            case 2562: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField3_ & 0x00000010) == 0x00000010)) {
                subBuilder = tschchartseries3Dbarfill_.toBuilder();
              }
              tschchartseries3Dbarfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseries3Dbarfill_);
                tschchartseries3Dbarfill_ = subBuilder.buildPartial();
              }
              bitField3_ |= 0x00000010;
              break;
            }
            case 2570: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField3_ & 0x00000020) == 0x00000020)) {
                subBuilder = tschchartseries3Dcolumnfill_.toBuilder();
              }
              tschchartseries3Dcolumnfill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseries3Dcolumnfill_);
                tschchartseries3Dcolumnfill_ = subBuilder.buildPartial();
              }
              bitField3_ |= 0x00000020;
              break;
            }
            case 2578: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField3_ & 0x00000040) == 0x00000040)) {
                subBuilder = tschchartseries3Dlinefill_.toBuilder();
              }
              tschchartseries3Dlinefill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseries3Dlinefill_);
                tschchartseries3Dlinefill_ = subBuilder.buildPartial();
              }
              bitField3_ |= 0x00000040;
              break;
            }
            case 2586: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField3_ & 0x00000080) == 0x00000080)) {
                subBuilder = tschchartseries3Dareafill_.toBuilder();
              }
              tschchartseries3Dareafill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseries3Dareafill_);
                tschchartseries3Dareafill_ = subBuilder.buildPartial();
              }
              bitField3_ |= 0x00000080;
              break;
            }
            case 2594: {
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder subBuilder = null;
              if (((bitField3_ & 0x00000100) == 0x00000100)) {
                subBuilder = tschchartseries3Dpiefill_.toBuilder();
              }
              tschchartseries3Dpiefill_ = input.readMessage(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseries3Dpiefill_);
                tschchartseries3Dpiefill_ = subBuilder.buildPartial();
              }
              bitField3_ |= 0x00000100;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartSeriesStyleArchive_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartSeriesStyleArchive_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive.Builder.class);
    }

    private int bitField0_;
    private int bitField1_;
    private int bitField2_;
    private int bitField3_;
    public static final int SUPER_FIELD_NUMBER = 1;
    private org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive super_;
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    public boolean hasSuper() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive getSuper() {
      return super_ == null ? org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
    }
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder getSuperOrBuilder() {
      return super_ == null ? org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINEEQUATIONPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 201;
    private int tschchartseriesdefaulttrendlineequationparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlineequationparagraphstyleindex = 201;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlineequationparagraphstyleindex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlineequationparagraphstyleindex = 201;</code>
     */
    public int getTschchartseriesdefaulttrendlineequationparagraphstyleindex() {
      return tschchartseriesdefaulttrendlineequationparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINERSQUAREDPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 202;
    private int tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlinersquaredparagraphstyleindex = 202;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlinersquaredparagraphstyleindex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlinersquaredparagraphstyleindex = 202;</code>
     */
    public int getTschchartseriesdefaulttrendlinersquaredparagraphstyleindex() {
      return tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINEEQUATIONOPACITY_FIELD_NUMBER = 205;
    private float tschchartseriesdefaulttrendlineequationopacity_;
    /**
     * <code>optional float tschchartseriesdefaulttrendlineequationopacity = 205;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlineequationopacity() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float tschchartseriesdefaulttrendlineequationopacity = 205;</code>
     */
    public float getTschchartseriesdefaulttrendlineequationopacity() {
      return tschchartseriesdefaulttrendlineequationopacity_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINERSQUAREDOPACITY_FIELD_NUMBER = 206;
    private float tschchartseriesdefaulttrendlinersquaredopacity_;
    /**
     * <code>optional float tschchartseriesdefaulttrendlinersquaredopacity = 206;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlinersquaredopacity() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float tschchartseriesdefaulttrendlinersquaredopacity = 206;</code>
     */
    public float getTschchartseriesdefaulttrendlinersquaredopacity() {
      return tschchartseriesdefaulttrendlinersquaredopacity_;
    }

    public static final int TSCHCHARTSERIESBARFILL_FIELD_NUMBER = 10;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesbarfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseriesbarfill = 10;</code>
     */
    public boolean hasTschchartseriesbarfill() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesbarfill = 10;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesbarfill() {
      return tschchartseriesbarfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesbarfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesbarfill = 10;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesbarfillOrBuilder() {
      return tschchartseriesbarfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesbarfill_;
    }

    public static final int TSCHCHARTSERIESBARSTROKE_FIELD_NUMBER = 11;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesbarstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 11;</code>
     */
    public boolean hasTschchartseriesbarstroke() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 11;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesbarstroke() {
      return tschchartseriesbarstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesbarstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 11;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesbarstrokeOrBuilder() {
      return tschchartseriesbarstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesbarstroke_;
    }

    public static final int TSCHCHARTSERIESBARVALUELABELPOSITION_FIELD_NUMBER = 13;
    private int tschchartseriesbarvaluelabelposition_;
    /**
     * <code>optional int32 tschchartseriesbarvaluelabelposition = 13;</code>
     */
    public boolean hasTschchartseriesbarvaluelabelposition() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 tschchartseriesbarvaluelabelposition = 13;</code>
     */
    public int getTschchartseriesbarvaluelabelposition() {
      return tschchartseriesbarvaluelabelposition_;
    }

    public static final int TSCHCHARTSERIESLINESTROKE_FIELD_NUMBER = 16;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartserieslinestroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 16;</code>
     */
    public boolean hasTschchartserieslinestroke() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 16;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartserieslinestroke() {
      return tschchartserieslinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartserieslinestroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 16;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartserieslinestrokeOrBuilder() {
      return tschchartserieslinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartserieslinestroke_;
    }

    public static final int TSCHCHARTSERIESLINESYMBOLFILL_FIELD_NUMBER = 17;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartserieslinesymbolfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 17;</code>
     */
    public boolean hasTschchartserieslinesymbolfill() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 17;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartserieslinesymbolfill() {
      return tschchartserieslinesymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartserieslinesymbolfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 17;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartserieslinesymbolfillOrBuilder() {
      return tschchartserieslinesymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartserieslinesymbolfill_;
    }

    public static final int TSCHCHARTSERIESLINESYMBOLSTROKE_FIELD_NUMBER = 18;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartserieslinesymbolstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 18;</code>
     */
    public boolean hasTschchartserieslinesymbolstroke() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 18;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartserieslinesymbolstroke() {
      return tschchartserieslinesymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartserieslinesymbolstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 18;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartserieslinesymbolstrokeOrBuilder() {
      return tschchartserieslinesymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartserieslinesymbolstroke_;
    }

    public static final int TSCHCHARTSERIESLINESYMBOLSIZE_FIELD_NUMBER = 20;
    private float tschchartserieslinesymbolsize_;
    /**
     * <code>optional float tschchartserieslinesymbolsize = 20;</code>
     */
    public boolean hasTschchartserieslinesymbolsize() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional float tschchartserieslinesymbolsize = 20;</code>
     */
    public float getTschchartserieslinesymbolsize() {
      return tschchartserieslinesymbolsize_;
    }

    public static final int TSCHCHARTSERIESLINEVALUELABELPOSITION_FIELD_NUMBER = 22;
    private int tschchartserieslinevaluelabelposition_;
    /**
     * <code>optional int32 tschchartserieslinevaluelabelposition = 22;</code>
     */
    public boolean hasTschchartserieslinevaluelabelposition() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 tschchartserieslinevaluelabelposition = 22;</code>
     */
    public int getTschchartserieslinevaluelabelposition() {
      return tschchartserieslinevaluelabelposition_;
    }

    public static final int TSCHCHARTSERIESAREAFILL_FIELD_NUMBER = 25;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesareafill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseriesareafill = 25;</code>
     */
    public boolean hasTschchartseriesareafill() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesareafill = 25;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesareafill() {
      return tschchartseriesareafill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesareafill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesareafill = 25;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesareafillOrBuilder() {
      return tschchartseriesareafill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesareafill_;
    }

    public static final int TSCHCHARTSERIESAREASTROKE_FIELD_NUMBER = 26;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesareastroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 26;</code>
     */
    public boolean hasTschchartseriesareastroke() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 26;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesareastroke() {
      return tschchartseriesareastroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesareastroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 26;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesareastrokeOrBuilder() {
      return tschchartseriesareastroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesareastroke_;
    }

    public static final int TSCHCHARTSERIESAREAVALUELABELPOSITION_FIELD_NUMBER = 28;
    private int tschchartseriesareavaluelabelposition_;
    /**
     * <code>optional int32 tschchartseriesareavaluelabelposition = 28;</code>
     */
    public boolean hasTschchartseriesareavaluelabelposition() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 tschchartseriesareavaluelabelposition = 28;</code>
     */
    public int getTschchartseriesareavaluelabelposition() {
      return tschchartseriesareavaluelabelposition_;
    }

    public static final int TSCHCHARTSERIESAREASYMBOLFILL_FIELD_NUMBER = 29;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesareasymbolfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 29;</code>
     */
    public boolean hasTschchartseriesareasymbolfill() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 29;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesareasymbolfill() {
      return tschchartseriesareasymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesareasymbolfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 29;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesareasymbolfillOrBuilder() {
      return tschchartseriesareasymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesareasymbolfill_;
    }

    public static final int TSCHCHARTSERIESAREASYMBOLSTROKE_FIELD_NUMBER = 30;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesareasymbolstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 30;</code>
     */
    public boolean hasTschchartseriesareasymbolstroke() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 30;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesareasymbolstroke() {
      return tschchartseriesareasymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesareasymbolstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 30;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesareasymbolstrokeOrBuilder() {
      return tschchartseriesareasymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesareasymbolstroke_;
    }

    public static final int TSCHCHARTSERIESAREASYMBOLSIZE_FIELD_NUMBER = 32;
    private float tschchartseriesareasymbolsize_;
    /**
     * <code>optional float tschchartseriesareasymbolsize = 32;</code>
     */
    public boolean hasTschchartseriesareasymbolsize() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional float tschchartseriesareasymbolsize = 32;</code>
     */
    public float getTschchartseriesareasymbolsize() {
      return tschchartseriesareasymbolsize_;
    }

    public static final int TSCHCHARTSERIESPIEFILL_FIELD_NUMBER = 35;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriespiefill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseriespiefill = 35;</code>
     */
    public boolean hasTschchartseriespiefill() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriespiefill = 35;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriespiefill() {
      return tschchartseriespiefill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriespiefill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriespiefill = 35;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriespiefillOrBuilder() {
      return tschchartseriespiefill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriespiefill_;
    }

    public static final int TSCHCHARTSERIESPIESTROKE_FIELD_NUMBER = 36;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriespiestroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 36;</code>
     */
    public boolean hasTschchartseriespiestroke() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 36;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriespiestroke() {
      return tschchartseriespiestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriespiestroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 36;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriespiestrokeOrBuilder() {
      return tschchartseriespiestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriespiestroke_;
    }

    public static final int TSCHCHARTSERIESSCATTERSTROKE_FIELD_NUMBER = 40;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesscatterstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 40;</code>
     */
    public boolean hasTschchartseriesscatterstroke() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 40;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesscatterstroke() {
      return tschchartseriesscatterstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesscatterstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 40;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesscatterstrokeOrBuilder() {
      return tschchartseriesscatterstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesscatterstroke_;
    }

    public static final int TSCHCHARTSERIESSCATTERSYMBOLFILL_FIELD_NUMBER = 41;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesscattersymbolfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 41;</code>
     */
    public boolean hasTschchartseriesscattersymbolfill() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 41;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesscattersymbolfill() {
      return tschchartseriesscattersymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesscattersymbolfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 41;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesscattersymbolfillOrBuilder() {
      return tschchartseriesscattersymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesscattersymbolfill_;
    }

    public static final int TSCHCHARTSERIESSCATTERSYMBOLSTROKE_FIELD_NUMBER = 42;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesscattersymbolstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 42;</code>
     */
    public boolean hasTschchartseriesscattersymbolstroke() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 42;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesscattersymbolstroke() {
      return tschchartseriesscattersymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesscattersymbolstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 42;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesscattersymbolstrokeOrBuilder() {
      return tschchartseriesscattersymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesscattersymbolstroke_;
    }

    public static final int TSCHCHARTSERIESSCATTERSYMBOLSIZE_FIELD_NUMBER = 44;
    private float tschchartseriesscattersymbolsize_;
    /**
     * <code>optional float tschchartseriesscattersymbolsize = 44;</code>
     */
    public boolean hasTschchartseriesscattersymbolsize() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional float tschchartseriesscattersymbolsize = 44;</code>
     */
    public float getTschchartseriesscattersymbolsize() {
      return tschchartseriesscattersymbolsize_;
    }

    public static final int TSCHCHARTSERIESSCATTERVALUELABELPOSITION_FIELD_NUMBER = 46;
    private int tschchartseriesscattervaluelabelposition_;
    /**
     * <code>optional int32 tschchartseriesscattervaluelabelposition = 46;</code>
     */
    public boolean hasTschchartseriesscattervaluelabelposition() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int32 tschchartseriesscattervaluelabelposition = 46;</code>
     */
    public int getTschchartseriesscattervaluelabelposition() {
      return tschchartseriesscattervaluelabelposition_;
    }

    public static final int TSCHCHARTSERIESDEFAULTFILL_FIELD_NUMBER = 50;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesdefaultfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 50;</code>
     */
    public boolean hasTschchartseriesdefaultfill() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 50;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesdefaultfill() {
      return tschchartseriesdefaultfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesdefaultfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 50;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesdefaultfillOrBuilder() {
      return tschchartseriesdefaultfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesdefaultfill_;
    }

    public static final int TSCHCHARTSERIESDEFAULTVALUELABELPOSITION_FIELD_NUMBER = 52;
    private int tschchartseriesdefaultvaluelabelposition_;
    /**
     * <code>optional int32 tschchartseriesdefaultvaluelabelposition = 52;</code>
     */
    public boolean hasTschchartseriesdefaultvaluelabelposition() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int32 tschchartseriesdefaultvaluelabelposition = 52;</code>
     */
    public int getTschchartseriesdefaultvaluelabelposition() {
      return tschchartseriesdefaultvaluelabelposition_;
    }

    public static final int TSCHCHARTSERIESPIEDEPRECATEDSERIESLABELSON_FIELD_NUMBER = 60;
    private boolean tschchartseriespiedeprecatedserieslabelson_;
    /**
     * <code>optional bool tschchartseriespiedeprecatedserieslabelson = 60;</code>
     */
    public boolean hasTschchartseriespiedeprecatedserieslabelson() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional bool tschchartseriespiedeprecatedserieslabelson = 60;</code>
     */
    public boolean getTschchartseriespiedeprecatedserieslabelson() {
      return tschchartseriespiedeprecatedserieslabelson_;
    }

    public static final int TSCHCHARTSERIESCOLUMNFILL_FIELD_NUMBER = 62;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriescolumnfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 62;</code>
     */
    public boolean hasTschchartseriescolumnfill() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 62;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriescolumnfill() {
      return tschchartseriescolumnfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriescolumnfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 62;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriescolumnfillOrBuilder() {
      return tschchartseriescolumnfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriescolumnfill_;
    }

    public static final int TSCHCHARTSERIESPIESHADOW_FIELD_NUMBER = 100;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriespieshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 100;</code>
     */
    public boolean hasTschchartseriespieshadow() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 100;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriespieshadow() {
      return tschchartseriespieshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriespieshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 100;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriespieshadowOrBuilder() {
      return tschchartseriespieshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriespieshadow_;
    }

    public static final int TSCHCHARTSERIESBARSHADOW_FIELD_NUMBER = 101;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesbarshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 101;</code>
     */
    public boolean hasTschchartseriesbarshadow() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 101;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesbarshadow() {
      return tschchartseriesbarshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesbarshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 101;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesbarshadowOrBuilder() {
      return tschchartseriesbarshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesbarshadow_;
    }

    public static final int TSCHCHARTSERIESAREASHADOW_FIELD_NUMBER = 102;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesareashadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 102;</code>
     */
    public boolean hasTschchartseriesareashadow() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 102;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesareashadow() {
      return tschchartseriesareashadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesareashadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 102;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesareashadowOrBuilder() {
      return tschchartseriesareashadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesareashadow_;
    }

    public static final int TSCHCHARTSERIESSCATTERSHADOW_FIELD_NUMBER = 103;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesscattershadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 103;</code>
     */
    public boolean hasTschchartseriesscattershadow() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 103;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesscattershadow() {
      return tschchartseriesscattershadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesscattershadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 103;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesscattershadowOrBuilder() {
      return tschchartseriesscattershadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesscattershadow_;
    }

    public static final int TSCHCHARTSERIESMIXEDLINESHADOW_FIELD_NUMBER = 104;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesmixedlineshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 104;</code>
     */
    public boolean hasTschchartseriesmixedlineshadow() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 104;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesmixedlineshadow() {
      return tschchartseriesmixedlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesmixedlineshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 104;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesmixedlineshadowOrBuilder() {
      return tschchartseriesmixedlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesmixedlineshadow_;
    }

    public static final int TSCHCHARTSERIESMIXEDAREASHADOW_FIELD_NUMBER = 105;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesmixedareashadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 105;</code>
     */
    public boolean hasTschchartseriesmixedareashadow() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 105;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesmixedareashadow() {
      return tschchartseriesmixedareashadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesmixedareashadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 105;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesmixedareashadowOrBuilder() {
      return tschchartseriesmixedareashadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesmixedareashadow_;
    }

    public static final int TSCHCHARTSERIESMIXEDCOLUMNSHADOW_FIELD_NUMBER = 106;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesmixedcolumnshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 106;</code>
     */
    public boolean hasTschchartseriesmixedcolumnshadow() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 106;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesmixedcolumnshadow() {
      return tschchartseriesmixedcolumnshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesmixedcolumnshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 106;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesmixedcolumnshadowOrBuilder() {
      return tschchartseriesmixedcolumnshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesmixedcolumnshadow_;
    }

    public static final int TSCHCHARTSERIESLINESHADOW_FIELD_NUMBER = 107;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartserieslineshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 107;</code>
     */
    public boolean hasTschchartserieslineshadow() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 107;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartserieslineshadow() {
      return tschchartserieslineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartserieslineshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 107;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartserieslineshadowOrBuilder() {
      return tschchartserieslineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartserieslineshadow_;
    }

    public static final int TSCHCHARTSERIESDEFAULTSHADOW_FIELD_NUMBER = 108;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesdefaultshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 108;</code>
     */
    public boolean hasTschchartseriesdefaultshadow() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 108;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesdefaultshadow() {
      return tschchartseriesdefaultshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesdefaultshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 108;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesdefaultshadowOrBuilder() {
      return tschchartseriesdefaultshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesdefaultshadow_;
    }

    public static final int TSCHCHARTSERIESBUBBLESYMBOLFILL_FIELD_NUMBER = 207;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesbubblesymbolfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 207;</code>
     */
    public boolean hasTschchartseriesbubblesymbolfill() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 207;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesbubblesymbolfill() {
      return tschchartseriesbubblesymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesbubblesymbolfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 207;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesbubblesymbolfillOrBuilder() {
      return tschchartseriesbubblesymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesbubblesymbolfill_;
    }

    public static final int TSCHCHARTSERIESBUBBLESTROKE_FIELD_NUMBER = 211;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesbubblestroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 211;</code>
     */
    public boolean hasTschchartseriesbubblestroke() {
      return ((bitField1_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 211;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesbubblestroke() {
      return tschchartseriesbubblestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesbubblestroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 211;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesbubblestrokeOrBuilder() {
      return tschchartseriesbubblestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesbubblestroke_;
    }

    public static final int TSCHCHARTSERIESBUBBLESYMBOLSTROKE_FIELD_NUMBER = 212;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesbubblesymbolstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 212;</code>
     */
    public boolean hasTschchartseriesbubblesymbolstroke() {
      return ((bitField1_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 212;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesbubblesymbolstroke() {
      return tschchartseriesbubblesymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesbubblesymbolstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 212;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesbubblesymbolstrokeOrBuilder() {
      return tschchartseriesbubblesymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesbubblesymbolstroke_;
    }

    public static final int TSCHCHARTSERIESBUBBLEVALUELABELPOSITION_FIELD_NUMBER = 213;
    private int tschchartseriesbubblevaluelabelposition_;
    /**
     * <code>optional int32 tschchartseriesbubblevaluelabelposition = 213;</code>
     */
    public boolean hasTschchartseriesbubblevaluelabelposition() {
      return ((bitField1_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 tschchartseriesbubblevaluelabelposition = 213;</code>
     */
    public int getTschchartseriesbubblevaluelabelposition() {
      return tschchartseriesbubblevaluelabelposition_;
    }

    public static final int TSCHCHARTSERIESBUBBLESHADOW_FIELD_NUMBER = 214;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesbubbleshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 214;</code>
     */
    public boolean hasTschchartseriesbubbleshadow() {
      return ((bitField1_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 214;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesbubbleshadow() {
      return tschchartseriesbubbleshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesbubbleshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 214;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesbubbleshadowOrBuilder() {
      return tschchartseriesbubbleshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesbubbleshadow_;
    }

    public static final int TSCHCHARTSERIESBUBBLESYMBOLFILLUSESERIESSTROKE_FIELD_NUMBER = 215;
    private boolean tschchartseriesbubblesymbolfilluseseriesstroke_;
    /**
     * <code>optional bool tschchartseriesbubblesymbolfilluseseriesstroke = 215;</code>
     */
    public boolean hasTschchartseriesbubblesymbolfilluseseriesstroke() {
      return ((bitField1_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional bool tschchartseriesbubblesymbolfilluseseriesstroke = 215;</code>
     */
    public boolean getTschchartseriesbubblesymbolfilluseseriesstroke() {
      return tschchartseriesbubblesymbolfilluseseriesstroke_;
    }

    public static final int TSCHCHARTSERIES3DBARSHADOW_FIELD_NUMBER = 306;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseries3Dbarshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 306;</code>
     */
    public boolean hasTschchartseries3Dbarshadow() {
      return ((bitField1_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 306;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dbarshadow() {
      return tschchartseries3Dbarshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dbarshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 306;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DbarshadowOrBuilder() {
      return tschchartseries3Dbarshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dbarshadow_;
    }

    public static final int TSCHCHARTSERIES3DCOLUMNSHADOW_FIELD_NUMBER = 307;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseries3Dcolumnshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 307;</code>
     */
    public boolean hasTschchartseries3Dcolumnshadow() {
      return ((bitField1_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 307;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dcolumnshadow() {
      return tschchartseries3Dcolumnshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dcolumnshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 307;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DcolumnshadowOrBuilder() {
      return tschchartseries3Dcolumnshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dcolumnshadow_;
    }

    public static final int TSCHCHARTSERIES3DLINESHADOW_FIELD_NUMBER = 308;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseries3Dlineshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 308;</code>
     */
    public boolean hasTschchartseries3Dlineshadow() {
      return ((bitField1_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 308;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dlineshadow() {
      return tschchartseries3Dlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dlineshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 308;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DlineshadowOrBuilder() {
      return tschchartseries3Dlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dlineshadow_;
    }

    public static final int TSCHCHARTSERIES3DAREASHADOW_FIELD_NUMBER = 309;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseries3Dareashadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 309;</code>
     */
    public boolean hasTschchartseries3Dareashadow() {
      return ((bitField1_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 309;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dareashadow() {
      return tschchartseries3Dareashadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dareashadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 309;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DareashadowOrBuilder() {
      return tschchartseries3Dareashadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dareashadow_;
    }

    public static final int TSCHCHARTSERIES3DPIESHADOW_FIELD_NUMBER = 310;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseries3Dpieshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 310;</code>
     */
    public boolean hasTschchartseries3Dpieshadow() {
      return ((bitField1_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 310;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dpieshadow() {
      return tschchartseries3Dpieshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dpieshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 310;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DpieshadowOrBuilder() {
      return tschchartseries3Dpieshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dpieshadow_;
    }

    public static final int TSCHCHARTSERIESDEFAULTLABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 110;
    private int tschchartseriesdefaultlabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartseriesdefaultlabelparagraphstyleindex = 110;</code>
     */
    public boolean hasTschchartseriesdefaultlabelparagraphstyleindex() {
      return ((bitField1_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 tschchartseriesdefaultlabelparagraphstyleindex = 110;</code>
     */
    public int getTschchartseriesdefaultlabelparagraphstyleindex() {
      return tschchartseriesdefaultlabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIESBARLABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 111;
    private int tschchartseriesbarlabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartseriesbarlabelparagraphstyleindex = 111;</code>
     */
    public boolean hasTschchartseriesbarlabelparagraphstyleindex() {
      return ((bitField1_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 tschchartseriesbarlabelparagraphstyleindex = 111;</code>
     */
    public int getTschchartseriesbarlabelparagraphstyleindex() {
      return tschchartseriesbarlabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIESLINELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 112;
    private int tschchartserieslinelabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartserieslinelabelparagraphstyleindex = 112;</code>
     */
    public boolean hasTschchartserieslinelabelparagraphstyleindex() {
      return ((bitField1_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 tschchartserieslinelabelparagraphstyleindex = 112;</code>
     */
    public int getTschchartserieslinelabelparagraphstyleindex() {
      return tschchartserieslinelabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIESAREALABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 113;
    private int tschchartseriesarealabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartseriesarealabelparagraphstyleindex = 113;</code>
     */
    public boolean hasTschchartseriesarealabelparagraphstyleindex() {
      return ((bitField1_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int32 tschchartseriesarealabelparagraphstyleindex = 113;</code>
     */
    public int getTschchartseriesarealabelparagraphstyleindex() {
      return tschchartseriesarealabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIESPIELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 114;
    private int tschchartseriespielabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartseriespielabelparagraphstyleindex = 114;</code>
     */
    public boolean hasTschchartseriespielabelparagraphstyleindex() {
      return ((bitField1_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int32 tschchartseriespielabelparagraphstyleindex = 114;</code>
     */
    public int getTschchartseriespielabelparagraphstyleindex() {
      return tschchartseriespielabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIESMIXEDLABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 115;
    private int tschchartseriesmixedlabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartseriesmixedlabelparagraphstyleindex = 115;</code>
     */
    public boolean hasTschchartseriesmixedlabelparagraphstyleindex() {
      return ((bitField1_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int32 tschchartseriesmixedlabelparagraphstyleindex = 115;</code>
     */
    public int getTschchartseriesmixedlabelparagraphstyleindex() {
      return tschchartseriesmixedlabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIESDEFAULTOPACITY_FIELD_NUMBER = 116;
    private float tschchartseriesdefaultopacity_;
    /**
     * <code>optional float tschchartseriesdefaultopacity = 116;</code>
     */
    public boolean hasTschchartseriesdefaultopacity() {
      return ((bitField1_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional float tschchartseriesdefaultopacity = 116;</code>
     */
    public float getTschchartseriesdefaultopacity() {
      return tschchartseriesdefaultopacity_;
    }

    public static final int TSCHCHARTSERIESLINESYMBOLFILLUSESERIESSTROKE_FIELD_NUMBER = 117;
    private boolean tschchartserieslinesymbolfilluseseriesstroke_;
    /**
     * <code>optional bool tschchartserieslinesymbolfilluseseriesstroke = 117;</code>
     */
    public boolean hasTschchartserieslinesymbolfilluseseriesstroke() {
      return ((bitField1_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional bool tschchartserieslinesymbolfilluseseriesstroke = 117;</code>
     */
    public boolean getTschchartserieslinesymbolfilluseseriesstroke() {
      return tschchartserieslinesymbolfilluseseriesstroke_;
    }

    public static final int TSCHCHARTSERIESAREASYMBOLFILLUSESERIESSTROKE_FIELD_NUMBER = 118;
    private boolean tschchartseriesareasymbolfilluseseriesstroke_;
    /**
     * <code>optional bool tschchartseriesareasymbolfilluseseriesstroke = 118;</code>
     */
    public boolean hasTschchartseriesareasymbolfilluseseriesstroke() {
      return ((bitField1_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional bool tschchartseriesareasymbolfilluseseriesstroke = 118;</code>
     */
    public boolean getTschchartseriesareasymbolfilluseseriesstroke() {
      return tschchartseriesareasymbolfilluseseriesstroke_;
    }

    public static final int TSCHCHARTSERIESSCATTERSYMBOLFILLUSESERIESSTROKE_FIELD_NUMBER = 119;
    private boolean tschchartseriesscattersymbolfilluseseriesstroke_;
    /**
     * <code>optional bool tschchartseriesscattersymbolfilluseseriesstroke = 119;</code>
     */
    public boolean hasTschchartseriesscattersymbolfilluseseriesstroke() {
      return ((bitField1_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional bool tschchartseriesscattersymbolfilluseseriesstroke = 119;</code>
     */
    public boolean getTschchartseriesscattersymbolfilluseseriesstroke() {
      return tschchartseriesscattersymbolfilluseseriesstroke_;
    }

    public static final int TSCHCHARTSERIESMIXEDLINESYMBOLFILLUSESERIESSTROKE_FIELD_NUMBER = 120;
    private boolean tschchartseriesmixedlinesymbolfilluseseriesstroke_;
    /**
     * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesstroke = 120;</code>
     */
    public boolean hasTschchartseriesmixedlinesymbolfilluseseriesstroke() {
      return ((bitField1_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesstroke = 120;</code>
     */
    public boolean getTschchartseriesmixedlinesymbolfilluseseriesstroke() {
      return tschchartseriesmixedlinesymbolfilluseseriesstroke_;
    }

    public static final int TSCHCHARTSERIESMIXEDAREASYMBOLFILLUSESERIESSTROKE_FIELD_NUMBER = 121;
    private boolean tschchartseriesmixedareasymbolfilluseseriesstroke_;
    /**
     * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesstroke = 121;</code>
     */
    public boolean hasTschchartseriesmixedareasymbolfilluseseriesstroke() {
      return ((bitField1_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesstroke = 121;</code>
     */
    public boolean getTschchartseriesmixedareasymbolfilluseseriesstroke() {
      return tschchartseriesmixedareasymbolfilluseseriesstroke_;
    }

    public static final int TSCHCHARTSERIESLINESYMBOLFILLUSESERIESFILL_FIELD_NUMBER = 122;
    private boolean tschchartserieslinesymbolfilluseseriesfill_;
    /**
     * <code>optional bool tschchartserieslinesymbolfilluseseriesfill = 122;</code>
     */
    public boolean hasTschchartserieslinesymbolfilluseseriesfill() {
      return ((bitField1_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional bool tschchartserieslinesymbolfilluseseriesfill = 122;</code>
     */
    public boolean getTschchartserieslinesymbolfilluseseriesfill() {
      return tschchartserieslinesymbolfilluseseriesfill_;
    }

    public static final int TSCHCHARTSERIESAREASYMBOLFILLUSESERIESFILL_FIELD_NUMBER = 123;
    private boolean tschchartseriesareasymbolfilluseseriesfill_;
    /**
     * <code>optional bool tschchartseriesareasymbolfilluseseriesfill = 123;</code>
     */
    public boolean hasTschchartseriesareasymbolfilluseseriesfill() {
      return ((bitField1_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional bool tschchartseriesareasymbolfilluseseriesfill = 123;</code>
     */
    public boolean getTschchartseriesareasymbolfilluseseriesfill() {
      return tschchartseriesareasymbolfilluseseriesfill_;
    }

    public static final int TSCHCHARTSERIESMIXEDLINESYMBOLFILLUSESERIESFILL_FIELD_NUMBER = 124;
    private boolean tschchartseriesmixedlinesymbolfilluseseriesfill_;
    /**
     * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesfill = 124;</code>
     */
    public boolean hasTschchartseriesmixedlinesymbolfilluseseriesfill() {
      return ((bitField2_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesfill = 124;</code>
     */
    public boolean getTschchartseriesmixedlinesymbolfilluseseriesfill() {
      return tschchartseriesmixedlinesymbolfilluseseriesfill_;
    }

    public static final int TSCHCHARTSERIESMIXEDAREASYMBOLFILLUSESERIESFILL_FIELD_NUMBER = 125;
    private boolean tschchartseriesmixedareasymbolfilluseseriesfill_;
    /**
     * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesfill = 125;</code>
     */
    public boolean hasTschchartseriesmixedareasymbolfilluseseriesfill() {
      return ((bitField2_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesfill = 125;</code>
     */
    public boolean getTschchartseriesmixedareasymbolfilluseseriesfill() {
      return tschchartseriesmixedareasymbolfilluseseriesfill_;
    }

    public static final int TSCHCHARTSERIESMIXEDCOLUMNFILL_FIELD_NUMBER = 130;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesmixedcolumnfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 130;</code>
     */
    public boolean hasTschchartseriesmixedcolumnfill() {
      return ((bitField2_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 130;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesmixedcolumnfill() {
      return tschchartseriesmixedcolumnfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedcolumnfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 130;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesmixedcolumnfillOrBuilder() {
      return tschchartseriesmixedcolumnfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedcolumnfill_;
    }

    public static final int TSCHCHARTSERIESMIXEDAREAFILL_FIELD_NUMBER = 131;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesmixedareafill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 131;</code>
     */
    public boolean hasTschchartseriesmixedareafill() {
      return ((bitField2_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 131;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesmixedareafill() {
      return tschchartseriesmixedareafill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedareafill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 131;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesmixedareafillOrBuilder() {
      return tschchartseriesmixedareafill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedareafill_;
    }

    public static final int TSCHCHARTSERIESMIXEDCOLUMNSTROKE_FIELD_NUMBER = 132;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesmixedcolumnstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 132;</code>
     */
    public boolean hasTschchartseriesmixedcolumnstroke() {
      return ((bitField2_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 132;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedcolumnstroke() {
      return tschchartseriesmixedcolumnstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedcolumnstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 132;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedcolumnstrokeOrBuilder() {
      return tschchartseriesmixedcolumnstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedcolumnstroke_;
    }

    public static final int TSCHCHARTSERIESMIXEDLINESTROKE_FIELD_NUMBER = 133;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesmixedlinestroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 133;</code>
     */
    public boolean hasTschchartseriesmixedlinestroke() {
      return ((bitField2_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 133;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedlinestroke() {
      return tschchartseriesmixedlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedlinestroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 133;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedlinestrokeOrBuilder() {
      return tschchartseriesmixedlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedlinestroke_;
    }

    public static final int TSCHCHARTSERIESMIXEDAREASTROKE_FIELD_NUMBER = 134;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesmixedareastroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 134;</code>
     */
    public boolean hasTschchartseriesmixedareastroke() {
      return ((bitField2_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 134;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedareastroke() {
      return tschchartseriesmixedareastroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedareastroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 134;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedareastrokeOrBuilder() {
      return tschchartseriesmixedareastroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedareastroke_;
    }

    public static final int TSCHCHARTSERIESMIXEDLINESYMBOLSIZE_FIELD_NUMBER = 135;
    private float tschchartseriesmixedlinesymbolsize_;
    /**
     * <code>optional float tschchartseriesmixedlinesymbolsize = 135;</code>
     */
    public boolean hasTschchartseriesmixedlinesymbolsize() {
      return ((bitField2_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float tschchartseriesmixedlinesymbolsize = 135;</code>
     */
    public float getTschchartseriesmixedlinesymbolsize() {
      return tschchartseriesmixedlinesymbolsize_;
    }

    public static final int TSCHCHARTSERIESMIXEDAREASYMBOLSIZE_FIELD_NUMBER = 136;
    private float tschchartseriesmixedareasymbolsize_;
    /**
     * <code>optional float tschchartseriesmixedareasymbolsize = 136;</code>
     */
    public boolean hasTschchartseriesmixedareasymbolsize() {
      return ((bitField2_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float tschchartseriesmixedareasymbolsize = 136;</code>
     */
    public float getTschchartseriesmixedareasymbolsize() {
      return tschchartseriesmixedareasymbolsize_;
    }

    public static final int TSCHCHARTSERIESMIXEDLINESYMBOLFILL_FIELD_NUMBER = 137;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesmixedlinesymbolfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 137;</code>
     */
    public boolean hasTschchartseriesmixedlinesymbolfill() {
      return ((bitField2_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 137;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesmixedlinesymbolfill() {
      return tschchartseriesmixedlinesymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedlinesymbolfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 137;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesmixedlinesymbolfillOrBuilder() {
      return tschchartseriesmixedlinesymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedlinesymbolfill_;
    }

    public static final int TSCHCHARTSERIESMIXEDAREASYMBOLFILL_FIELD_NUMBER = 138;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesmixedareasymbolfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 138;</code>
     */
    public boolean hasTschchartseriesmixedareasymbolfill() {
      return ((bitField2_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 138;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesmixedareasymbolfill() {
      return tschchartseriesmixedareasymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedareasymbolfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 138;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesmixedareasymbolfillOrBuilder() {
      return tschchartseriesmixedareasymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedareasymbolfill_;
    }

    public static final int TSCHCHARTSERIESMIXEDLINESYMBOLSTROKE_FIELD_NUMBER = 139;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesmixedlinesymbolstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 139;</code>
     */
    public boolean hasTschchartseriesmixedlinesymbolstroke() {
      return ((bitField2_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 139;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedlinesymbolstroke() {
      return tschchartseriesmixedlinesymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedlinesymbolstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 139;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedlinesymbolstrokeOrBuilder() {
      return tschchartseriesmixedlinesymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedlinesymbolstroke_;
    }

    public static final int TSCHCHARTSERIESMIXEDAREASYMBOLSTROKE_FIELD_NUMBER = 140;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesmixedareasymbolstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 140;</code>
     */
    public boolean hasTschchartseriesmixedareasymbolstroke() {
      return ((bitField2_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 140;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedareasymbolstroke() {
      return tschchartseriesmixedareasymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedareasymbolstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 140;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedareasymbolstrokeOrBuilder() {
      return tschchartseriesmixedareasymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedareasymbolstroke_;
    }

    public static final int TSCHCHARTSERIESMIXEDCOLUMNVALUELABELPOSITION_FIELD_NUMBER = 141;
    private int tschchartseriesmixedcolumnvaluelabelposition_;
    /**
     * <code>optional int32 tschchartseriesmixedcolumnvaluelabelposition = 141;</code>
     */
    public boolean hasTschchartseriesmixedcolumnvaluelabelposition() {
      return ((bitField2_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 tschchartseriesmixedcolumnvaluelabelposition = 141;</code>
     */
    public int getTschchartseriesmixedcolumnvaluelabelposition() {
      return tschchartseriesmixedcolumnvaluelabelposition_;
    }

    public static final int TSCHCHARTSERIESMIXEDLINEVALUELABELPOSITION_FIELD_NUMBER = 142;
    private int tschchartseriesmixedlinevaluelabelposition_;
    /**
     * <code>optional int32 tschchartseriesmixedlinevaluelabelposition = 142;</code>
     */
    public boolean hasTschchartseriesmixedlinevaluelabelposition() {
      return ((bitField2_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 tschchartseriesmixedlinevaluelabelposition = 142;</code>
     */
    public int getTschchartseriesmixedlinevaluelabelposition() {
      return tschchartseriesmixedlinevaluelabelposition_;
    }

    public static final int TSCHCHARTSERIESMIXEDAREAVALUELABELPOSITION_FIELD_NUMBER = 143;
    private int tschchartseriesmixedareavaluelabelposition_;
    /**
     * <code>optional int32 tschchartseriesmixedareavaluelabelposition = 143;</code>
     */
    public boolean hasTschchartseriesmixedareavaluelabelposition() {
      return ((bitField2_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 tschchartseriesmixedareavaluelabelposition = 143;</code>
     */
    public int getTschchartseriesmixedareavaluelabelposition() {
      return tschchartseriesmixedareavaluelabelposition_;
    }

    public static final int TSCHCHARTSERIESDEFAULTOUTSIDELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 150;
    private int tschchartseriesdefaultoutsidelabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartseriesdefaultoutsidelabelparagraphstyleindex = 150;</code>
     */
    public boolean hasTschchartseriesdefaultoutsidelabelparagraphstyleindex() {
      return ((bitField2_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 tschchartseriesdefaultoutsidelabelparagraphstyleindex = 150;</code>
     */
    public int getTschchartseriesdefaultoutsidelabelparagraphstyleindex() {
      return tschchartseriesdefaultoutsidelabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIESBAROUTSIDELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 151;
    private int tschchartseriesbaroutsidelabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartseriesbaroutsidelabelparagraphstyleindex = 151;</code>
     */
    public boolean hasTschchartseriesbaroutsidelabelparagraphstyleindex() {
      return ((bitField2_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 tschchartseriesbaroutsidelabelparagraphstyleindex = 151;</code>
     */
    public int getTschchartseriesbaroutsidelabelparagraphstyleindex() {
      return tschchartseriesbaroutsidelabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIESAREAOUTSIDELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 153;
    private int tschchartseriesareaoutsidelabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartseriesareaoutsidelabelparagraphstyleindex = 153;</code>
     */
    public boolean hasTschchartseriesareaoutsidelabelparagraphstyleindex() {
      return ((bitField2_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 tschchartseriesareaoutsidelabelparagraphstyleindex = 153;</code>
     */
    public int getTschchartseriesareaoutsidelabelparagraphstyleindex() {
      return tschchartseriesareaoutsidelabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIESPIEOUTSIDELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 154;
    private int tschchartseriespieoutsidelabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartseriespieoutsidelabelparagraphstyleindex = 154;</code>
     */
    public boolean hasTschchartseriespieoutsidelabelparagraphstyleindex() {
      return ((bitField2_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 tschchartseriespieoutsidelabelparagraphstyleindex = 154;</code>
     */
    public int getTschchartseriespieoutsidelabelparagraphstyleindex() {
      return tschchartseriespieoutsidelabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIESMIXEDOUTSIDELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER = 155;
    private int tschchartseriesmixedoutsidelabelparagraphstyleindex_;
    /**
     * <code>optional int32 tschchartseriesmixedoutsidelabelparagraphstyleindex = 155;</code>
     */
    public boolean hasTschchartseriesmixedoutsidelabelparagraphstyleindex() {
      return ((bitField2_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 tschchartseriesmixedoutsidelabelparagraphstyleindex = 155;</code>
     */
    public int getTschchartseriesmixedoutsidelabelparagraphstyleindex() {
      return tschchartseriesmixedoutsidelabelparagraphstyleindex_;
    }

    public static final int TSCHCHARTSERIESSTACKEDBARVALUELABELPOSITION_FIELD_NUMBER = 156;
    private int tschchartseriesstackedbarvaluelabelposition_;
    /**
     * <code>optional int32 tschchartseriesstackedbarvaluelabelposition = 156;</code>
     */
    public boolean hasTschchartseriesstackedbarvaluelabelposition() {
      return ((bitField2_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int32 tschchartseriesstackedbarvaluelabelposition = 156;</code>
     */
    public int getTschchartseriesstackedbarvaluelabelposition() {
      return tschchartseriesstackedbarvaluelabelposition_;
    }

    public static final int TSCHCHARTSERIESSTACKEDAREAVALUELABELPOSITION_FIELD_NUMBER = 157;
    private int tschchartseriesstackedareavaluelabelposition_;
    /**
     * <code>optional int32 tschchartseriesstackedareavaluelabelposition = 157;</code>
     */
    public boolean hasTschchartseriesstackedareavaluelabelposition() {
      return ((bitField2_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int32 tschchartseriesstackedareavaluelabelposition = 157;</code>
     */
    public int getTschchartseriesstackedareavaluelabelposition() {
      return tschchartseriesstackedareavaluelabelposition_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINESTROKE_FIELD_NUMBER = 167;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesdefaulttrendlinestroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 167;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlinestroke() {
      return ((bitField2_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 167;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesdefaulttrendlinestroke() {
      return tschchartseriesdefaulttrendlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesdefaulttrendlinestroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 167;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesdefaulttrendlinestrokeOrBuilder() {
      return tschchartseriesdefaulttrendlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesdefaulttrendlinestroke_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINESHADOW_FIELD_NUMBER = 168;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesdefaulttrendlineshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 168;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlineshadow() {
      return ((bitField2_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 168;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesdefaulttrendlineshadow() {
      return tschchartseriesdefaulttrendlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesdefaulttrendlineshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 168;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesdefaulttrendlineshadowOrBuilder() {
      return tschchartseriesdefaulttrendlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesdefaulttrendlineshadow_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARSHADOW_FIELD_NUMBER = 180;
    private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesdefaulterrorbarshadow_;
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 180;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarshadow() {
      return ((bitField2_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 180;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesdefaulterrorbarshadow() {
      return tschchartseriesdefaulterrorbarshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarshadow_;
    }
    /**
     * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 180;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesdefaulterrorbarshadowOrBuilder() {
      return tschchartseriesdefaulterrorbarshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarshadow_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARSTROKE_FIELD_NUMBER = 181;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesdefaulterrorbarstroke_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 181;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarstroke() {
      return ((bitField2_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 181;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesdefaulterrorbarstroke() {
      return tschchartseriesdefaulterrorbarstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarstroke_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 181;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesdefaulterrorbarstrokeOrBuilder() {
      return tschchartseriesdefaulterrorbarstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarstroke_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARSTROKESCATTERX_FIELD_NUMBER = 182;
    private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx_;
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 182;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarstrokescatterx() {
      return ((bitField2_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 182;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesdefaulterrorbarstrokescatterx() {
      return tschchartseriesdefaulterrorbarstrokescatterx_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarstrokescatterx_;
    }
    /**
     * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 182;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesdefaulterrorbarstrokescatterxOrBuilder() {
      return tschchartseriesdefaulterrorbarstrokescatterx_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarstrokescatterx_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARLINEEND_FIELD_NUMBER = 183;
    private org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive tschchartseriesdefaulterrorbarlineend_;
    /**
     * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 183;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarlineend() {
      return ((bitField2_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 183;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive getTschchartseriesdefaulterrorbarlineend() {
      return tschchartseriesdefaulterrorbarlineend_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarlineend_;
    }
    /**
     * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 183;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchiveOrBuilder getTschchartseriesdefaulterrorbarlineendOrBuilder() {
      return tschchartseriesdefaulterrorbarlineend_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarlineend_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARLINEENDSCATTERX_FIELD_NUMBER = 184;
    private org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx_;
    /**
     * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 184;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarlineendscatterx() {
      return ((bitField2_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 184;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive getTschchartseriesdefaulterrorbarlineendscatterx() {
      return tschchartseriesdefaulterrorbarlineendscatterx_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarlineendscatterx_;
    }
    /**
     * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 184;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchiveOrBuilder getTschchartseriesdefaulterrorbarlineendscatterxOrBuilder() {
      return tschchartseriesdefaulterrorbarlineendscatterx_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarlineendscatterx_;
    }

    public static final int TSCHCHARTSERIESDEFAULTDEPRECATED3DFILL_FIELD_NUMBER = 300;
    private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive tschchartseriesdefaultdeprecated3Dfill_;
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesdefaultdeprecated3dfill = 300;</code>
     */
    public boolean hasTschchartseriesdefaultdeprecated3Dfill() {
      return ((bitField2_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesdefaultdeprecated3dfill = 300;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive getTschchartseriesdefaultdeprecated3Dfill() {
      return tschchartseriesdefaultdeprecated3Dfill_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance() : tschchartseriesdefaultdeprecated3Dfill_;
    }
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesdefaultdeprecated3dfill = 300;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder getTschchartseriesdefaultdeprecated3DfillOrBuilder() {
      return tschchartseriesdefaultdeprecated3Dfill_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance() : tschchartseriesdefaultdeprecated3Dfill_;
    }

    public static final int TSCHCHARTSERIESBARDEPRECATED3DFILL_FIELD_NUMBER = 301;
    private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive tschchartseriesbardeprecated3Dfill_;
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesbardeprecated3dfill = 301;</code>
     */
    public boolean hasTschchartseriesbardeprecated3Dfill() {
      return ((bitField2_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesbardeprecated3dfill = 301;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive getTschchartseriesbardeprecated3Dfill() {
      return tschchartseriesbardeprecated3Dfill_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance() : tschchartseriesbardeprecated3Dfill_;
    }
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesbardeprecated3dfill = 301;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder getTschchartseriesbardeprecated3DfillOrBuilder() {
      return tschchartseriesbardeprecated3Dfill_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance() : tschchartseriesbardeprecated3Dfill_;
    }

    public static final int TSCHCHARTSERIESCOLUMNDEPRECATED3DFILL_FIELD_NUMBER = 302;
    private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive tschchartseriescolumndeprecated3Dfill_;
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriescolumndeprecated3dfill = 302;</code>
     */
    public boolean hasTschchartseriescolumndeprecated3Dfill() {
      return ((bitField3_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriescolumndeprecated3dfill = 302;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive getTschchartseriescolumndeprecated3Dfill() {
      return tschchartseriescolumndeprecated3Dfill_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance() : tschchartseriescolumndeprecated3Dfill_;
    }
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriescolumndeprecated3dfill = 302;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder getTschchartseriescolumndeprecated3DfillOrBuilder() {
      return tschchartseriescolumndeprecated3Dfill_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance() : tschchartseriescolumndeprecated3Dfill_;
    }

    public static final int TSCHCHARTSERIESLINEDEPRECATED3DFILL_FIELD_NUMBER = 303;
    private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive tschchartserieslinedeprecated3Dfill_;
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartserieslinedeprecated3dfill = 303;</code>
     */
    public boolean hasTschchartserieslinedeprecated3Dfill() {
      return ((bitField3_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartserieslinedeprecated3dfill = 303;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive getTschchartserieslinedeprecated3Dfill() {
      return tschchartserieslinedeprecated3Dfill_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance() : tschchartserieslinedeprecated3Dfill_;
    }
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartserieslinedeprecated3dfill = 303;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder getTschchartserieslinedeprecated3DfillOrBuilder() {
      return tschchartserieslinedeprecated3Dfill_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance() : tschchartserieslinedeprecated3Dfill_;
    }

    public static final int TSCHCHARTSERIESAREADEPRECATED3DFILL_FIELD_NUMBER = 304;
    private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive tschchartseriesareadeprecated3Dfill_;
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesareadeprecated3dfill = 304;</code>
     */
    public boolean hasTschchartseriesareadeprecated3Dfill() {
      return ((bitField3_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesareadeprecated3dfill = 304;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive getTschchartseriesareadeprecated3Dfill() {
      return tschchartseriesareadeprecated3Dfill_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance() : tschchartseriesareadeprecated3Dfill_;
    }
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesareadeprecated3dfill = 304;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder getTschchartseriesareadeprecated3DfillOrBuilder() {
      return tschchartseriesareadeprecated3Dfill_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance() : tschchartseriesareadeprecated3Dfill_;
    }

    public static final int TSCHCHARTSERIESPIEDEPRECATED3DFILL_FIELD_NUMBER = 305;
    private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive tschchartseriespiedeprecated3Dfill_;
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriespiedeprecated3dfill = 305;</code>
     */
    public boolean hasTschchartseriespiedeprecated3Dfill() {
      return ((bitField3_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriespiedeprecated3dfill = 305;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive getTschchartseriespiedeprecated3Dfill() {
      return tschchartseriespiedeprecated3Dfill_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance() : tschchartseriespiedeprecated3Dfill_;
    }
    /**
     * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriespiedeprecated3dfill = 305;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder getTschchartseriespiedeprecated3DfillOrBuilder() {
      return tschchartseriespiedeprecated3Dfill_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance() : tschchartseriespiedeprecated3Dfill_;
    }

    public static final int TSCHCHARTSERIES3DBARFILL_FIELD_NUMBER = 320;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseries3Dbarfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 320;</code>
     */
    public boolean hasTschchartseries3Dbarfill() {
      return ((bitField3_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 320;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dbarfill() {
      return tschchartseries3Dbarfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dbarfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 320;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DbarfillOrBuilder() {
      return tschchartseries3Dbarfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dbarfill_;
    }

    public static final int TSCHCHARTSERIES3DCOLUMNFILL_FIELD_NUMBER = 321;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseries3Dcolumnfill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 321;</code>
     */
    public boolean hasTschchartseries3Dcolumnfill() {
      return ((bitField3_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 321;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dcolumnfill() {
      return tschchartseries3Dcolumnfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dcolumnfill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 321;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DcolumnfillOrBuilder() {
      return tschchartseries3Dcolumnfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dcolumnfill_;
    }

    public static final int TSCHCHARTSERIES3DLINEFILL_FIELD_NUMBER = 322;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseries3Dlinefill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 322;</code>
     */
    public boolean hasTschchartseries3Dlinefill() {
      return ((bitField3_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 322;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dlinefill() {
      return tschchartseries3Dlinefill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dlinefill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 322;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DlinefillOrBuilder() {
      return tschchartseries3Dlinefill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dlinefill_;
    }

    public static final int TSCHCHARTSERIES3DAREAFILL_FIELD_NUMBER = 323;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseries3Dareafill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dareafill = 323;</code>
     */
    public boolean hasTschchartseries3Dareafill() {
      return ((bitField3_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dareafill = 323;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dareafill() {
      return tschchartseries3Dareafill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dareafill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dareafill = 323;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DareafillOrBuilder() {
      return tschchartseries3Dareafill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dareafill_;
    }

    public static final int TSCHCHARTSERIES3DPIEFILL_FIELD_NUMBER = 324;
    private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseries3Dpiefill_;
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 324;</code>
     */
    public boolean hasTschchartseries3Dpiefill() {
      return ((bitField3_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 324;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dpiefill() {
      return tschchartseries3Dpiefill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dpiefill_;
    }
    /**
     * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 324;</code>
     */
    public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DpiefillOrBuilder() {
      return tschchartseries3Dpiefill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dpiefill_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSuper()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSuper().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasTschchartseriesbarfill()) {
        if (!getTschchartseriesbarfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesbarstroke()) {
        if (!getTschchartseriesbarstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartserieslinestroke()) {
        if (!getTschchartserieslinestroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartserieslinesymbolfill()) {
        if (!getTschchartserieslinesymbolfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartserieslinesymbolstroke()) {
        if (!getTschchartserieslinesymbolstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesareafill()) {
        if (!getTschchartseriesareafill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesareastroke()) {
        if (!getTschchartseriesareastroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesareasymbolfill()) {
        if (!getTschchartseriesareasymbolfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesareasymbolstroke()) {
        if (!getTschchartseriesareasymbolstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriespiefill()) {
        if (!getTschchartseriespiefill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriespiestroke()) {
        if (!getTschchartseriespiestroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesscatterstroke()) {
        if (!getTschchartseriesscatterstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesscattersymbolfill()) {
        if (!getTschchartseriesscattersymbolfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesscattersymbolstroke()) {
        if (!getTschchartseriesscattersymbolstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesdefaultfill()) {
        if (!getTschchartseriesdefaultfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriescolumnfill()) {
        if (!getTschchartseriescolumnfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriespieshadow()) {
        if (!getTschchartseriespieshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesbarshadow()) {
        if (!getTschchartseriesbarshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesareashadow()) {
        if (!getTschchartseriesareashadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesscattershadow()) {
        if (!getTschchartseriesscattershadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesmixedlineshadow()) {
        if (!getTschchartseriesmixedlineshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesmixedareashadow()) {
        if (!getTschchartseriesmixedareashadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesmixedcolumnshadow()) {
        if (!getTschchartseriesmixedcolumnshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartserieslineshadow()) {
        if (!getTschchartserieslineshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesdefaultshadow()) {
        if (!getTschchartseriesdefaultshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesbubblesymbolfill()) {
        if (!getTschchartseriesbubblesymbolfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesbubblestroke()) {
        if (!getTschchartseriesbubblestroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesbubblesymbolstroke()) {
        if (!getTschchartseriesbubblesymbolstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesbubbleshadow()) {
        if (!getTschchartseriesbubbleshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseries3Dbarshadow()) {
        if (!getTschchartseries3Dbarshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseries3Dcolumnshadow()) {
        if (!getTschchartseries3Dcolumnshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseries3Dlineshadow()) {
        if (!getTschchartseries3Dlineshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseries3Dareashadow()) {
        if (!getTschchartseries3Dareashadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseries3Dpieshadow()) {
        if (!getTschchartseries3Dpieshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesmixedcolumnfill()) {
        if (!getTschchartseriesmixedcolumnfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesmixedareafill()) {
        if (!getTschchartseriesmixedareafill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesmixedcolumnstroke()) {
        if (!getTschchartseriesmixedcolumnstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesmixedlinestroke()) {
        if (!getTschchartseriesmixedlinestroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesmixedareastroke()) {
        if (!getTschchartseriesmixedareastroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesmixedlinesymbolfill()) {
        if (!getTschchartseriesmixedlinesymbolfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesmixedareasymbolfill()) {
        if (!getTschchartseriesmixedareasymbolfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesmixedlinesymbolstroke()) {
        if (!getTschchartseriesmixedlinesymbolstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesmixedareasymbolstroke()) {
        if (!getTschchartseriesmixedareasymbolstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesdefaulttrendlinestroke()) {
        if (!getTschchartseriesdefaulttrendlinestroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesdefaulttrendlineshadow()) {
        if (!getTschchartseriesdefaulttrendlineshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesdefaulterrorbarshadow()) {
        if (!getTschchartseriesdefaulterrorbarshadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesdefaulterrorbarstroke()) {
        if (!getTschchartseriesdefaulterrorbarstroke().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesdefaulterrorbarstrokescatterx()) {
        if (!getTschchartseriesdefaulterrorbarstrokescatterx().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesdefaulterrorbarlineend()) {
        if (!getTschchartseriesdefaulterrorbarlineend().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesdefaulterrorbarlineendscatterx()) {
        if (!getTschchartseriesdefaulterrorbarlineendscatterx().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesdefaultdeprecated3Dfill()) {
        if (!getTschchartseriesdefaultdeprecated3Dfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesbardeprecated3Dfill()) {
        if (!getTschchartseriesbardeprecated3Dfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriescolumndeprecated3Dfill()) {
        if (!getTschchartseriescolumndeprecated3Dfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartserieslinedeprecated3Dfill()) {
        if (!getTschchartserieslinedeprecated3Dfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesareadeprecated3Dfill()) {
        if (!getTschchartseriesareadeprecated3Dfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriespiedeprecated3Dfill()) {
        if (!getTschchartseriespiedeprecated3Dfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseries3Dbarfill()) {
        if (!getTschchartseries3Dbarfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseries3Dcolumnfill()) {
        if (!getTschchartseries3Dcolumnfill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseries3Dlinefill()) {
        if (!getTschchartseries3Dlinefill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseries3Dareafill()) {
        if (!getTschchartseries3Dareafill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseries3Dpiefill()) {
        if (!getTschchartseries3Dpiefill().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getSuper());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(10, getTschchartseriesbarfill());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(11, getTschchartseriesbarstroke());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(13, tschchartseriesbarvaluelabelposition_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(16, getTschchartserieslinestroke());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(17, getTschchartserieslinesymbolfill());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(18, getTschchartserieslinesymbolstroke());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(20, tschchartserieslinesymbolsize_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(22, tschchartserieslinevaluelabelposition_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(25, getTschchartseriesareafill());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(26, getTschchartseriesareastroke());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(28, tschchartseriesareavaluelabelposition_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(29, getTschchartseriesareasymbolfill());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(30, getTschchartseriesareasymbolstroke());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeFloat(32, tschchartseriesareasymbolsize_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeMessage(35, getTschchartseriespiefill());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeMessage(36, getTschchartseriespiestroke());
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeMessage(40, getTschchartseriesscatterstroke());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeMessage(41, getTschchartseriesscattersymbolfill());
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeMessage(42, getTschchartseriesscattersymbolstroke());
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeFloat(44, tschchartseriesscattersymbolsize_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(46, tschchartseriesscattervaluelabelposition_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeMessage(50, getTschchartseriesdefaultfill());
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(52, tschchartseriesdefaultvaluelabelposition_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeBool(60, tschchartseriespiedeprecatedserieslabelson_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeMessage(62, getTschchartseriescolumnfill());
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeMessage(100, getTschchartseriespieshadow());
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeMessage(101, getTschchartseriesbarshadow());
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(102, getTschchartseriesareashadow());
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(103, getTschchartseriesscattershadow());
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(104, getTschchartseriesmixedlineshadow());
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(105, getTschchartseriesmixedareashadow());
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(106, getTschchartseriesmixedcolumnshadow());
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(107, getTschchartserieslineshadow());
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(108, getTschchartseriesdefaultshadow());
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(110, tschchartseriesdefaultlabelparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(111, tschchartseriesbarlabelparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(112, tschchartserieslinelabelparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(113, tschchartseriesarealabelparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(114, tschchartseriespielabelparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(115, tschchartseriesmixedlabelparagraphstyleindex_);
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        output.writeFloat(116, tschchartseriesdefaultopacity_);
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        output.writeBool(117, tschchartserieslinesymbolfilluseseriesstroke_);
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        output.writeBool(118, tschchartseriesareasymbolfilluseseriesstroke_);
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        output.writeBool(119, tschchartseriesscattersymbolfilluseseriesstroke_);
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        output.writeBool(120, tschchartseriesmixedlinesymbolfilluseseriesstroke_);
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        output.writeBool(121, tschchartseriesmixedareasymbolfilluseseriesstroke_);
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        output.writeBool(122, tschchartserieslinesymbolfilluseseriesfill_);
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        output.writeBool(123, tschchartseriesareasymbolfilluseseriesfill_);
      }
      if (((bitField2_ & 0x00000001) == 0x00000001)) {
        output.writeBool(124, tschchartseriesmixedlinesymbolfilluseseriesfill_);
      }
      if (((bitField2_ & 0x00000002) == 0x00000002)) {
        output.writeBool(125, tschchartseriesmixedareasymbolfilluseseriesfill_);
      }
      if (((bitField2_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(130, getTschchartseriesmixedcolumnfill());
      }
      if (((bitField2_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(131, getTschchartseriesmixedareafill());
      }
      if (((bitField2_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(132, getTschchartseriesmixedcolumnstroke());
      }
      if (((bitField2_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(133, getTschchartseriesmixedlinestroke());
      }
      if (((bitField2_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(134, getTschchartseriesmixedareastroke());
      }
      if (((bitField2_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(135, tschchartseriesmixedlinesymbolsize_);
      }
      if (((bitField2_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(136, tschchartseriesmixedareasymbolsize_);
      }
      if (((bitField2_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(137, getTschchartseriesmixedlinesymbolfill());
      }
      if (((bitField2_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(138, getTschchartseriesmixedareasymbolfill());
      }
      if (((bitField2_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(139, getTschchartseriesmixedlinesymbolstroke());
      }
      if (((bitField2_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(140, getTschchartseriesmixedareasymbolstroke());
      }
      if (((bitField2_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(141, tschchartseriesmixedcolumnvaluelabelposition_);
      }
      if (((bitField2_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(142, tschchartseriesmixedlinevaluelabelposition_);
      }
      if (((bitField2_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(143, tschchartseriesmixedareavaluelabelposition_);
      }
      if (((bitField2_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(150, tschchartseriesdefaultoutsidelabelparagraphstyleindex_);
      }
      if (((bitField2_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(151, tschchartseriesbaroutsidelabelparagraphstyleindex_);
      }
      if (((bitField2_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(153, tschchartseriesareaoutsidelabelparagraphstyleindex_);
      }
      if (((bitField2_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(154, tschchartseriespieoutsidelabelparagraphstyleindex_);
      }
      if (((bitField2_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(155, tschchartseriesmixedoutsidelabelparagraphstyleindex_);
      }
      if (((bitField2_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(156, tschchartseriesstackedbarvaluelabelposition_);
      }
      if (((bitField2_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(157, tschchartseriesstackedareavaluelabelposition_);
      }
      if (((bitField2_ & 0x00800000) == 0x00800000)) {
        output.writeMessage(167, getTschchartseriesdefaulttrendlinestroke());
      }
      if (((bitField2_ & 0x01000000) == 0x01000000)) {
        output.writeMessage(168, getTschchartseriesdefaulttrendlineshadow());
      }
      if (((bitField2_ & 0x02000000) == 0x02000000)) {
        output.writeMessage(180, getTschchartseriesdefaulterrorbarshadow());
      }
      if (((bitField2_ & 0x04000000) == 0x04000000)) {
        output.writeMessage(181, getTschchartseriesdefaulterrorbarstroke());
      }
      if (((bitField2_ & 0x08000000) == 0x08000000)) {
        output.writeMessage(182, getTschchartseriesdefaulterrorbarstrokescatterx());
      }
      if (((bitField2_ & 0x10000000) == 0x10000000)) {
        output.writeMessage(183, getTschchartseriesdefaulterrorbarlineend());
      }
      if (((bitField2_ & 0x20000000) == 0x20000000)) {
        output.writeMessage(184, getTschchartseriesdefaulterrorbarlineendscatterx());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(201, tschchartseriesdefaulttrendlineequationparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(202, tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(205, tschchartseriesdefaulttrendlineequationopacity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(206, tschchartseriesdefaulttrendlinersquaredopacity_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(207, getTschchartseriesbubblesymbolfill());
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(211, getTschchartseriesbubblestroke());
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(212, getTschchartseriesbubblesymbolstroke());
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(213, tschchartseriesbubblevaluelabelposition_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(214, getTschchartseriesbubbleshadow());
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        output.writeBool(215, tschchartseriesbubblesymbolfilluseseriesstroke_);
      }
      if (((bitField2_ & 0x40000000) == 0x40000000)) {
        output.writeMessage(300, getTschchartseriesdefaultdeprecated3Dfill());
      }
      if (((bitField2_ & 0x80000000) == 0x80000000)) {
        output.writeMessage(301, getTschchartseriesbardeprecated3Dfill());
      }
      if (((bitField3_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(302, getTschchartseriescolumndeprecated3Dfill());
      }
      if (((bitField3_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(303, getTschchartserieslinedeprecated3Dfill());
      }
      if (((bitField3_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(304, getTschchartseriesareadeprecated3Dfill());
      }
      if (((bitField3_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(305, getTschchartseriespiedeprecated3Dfill());
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(306, getTschchartseries3Dbarshadow());
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(307, getTschchartseries3Dcolumnshadow());
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(308, getTschchartseries3Dlineshadow());
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(309, getTschchartseries3Dareashadow());
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(310, getTschchartseries3Dpieshadow());
      }
      if (((bitField3_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(320, getTschchartseries3Dbarfill());
      }
      if (((bitField3_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(321, getTschchartseries3Dcolumnfill());
      }
      if (((bitField3_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(322, getTschchartseries3Dlinefill());
      }
      if (((bitField3_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(323, getTschchartseries3Dareafill());
      }
      if (((bitField3_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(324, getTschchartseries3Dpiefill());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSuper());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getTschchartseriesbarfill());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getTschchartseriesbarstroke());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, tschchartseriesbarvaluelabelposition_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getTschchartserieslinestroke());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, getTschchartserieslinesymbolfill());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, getTschchartserieslinesymbolstroke());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(20, tschchartserieslinesymbolsize_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, tschchartserieslinevaluelabelposition_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, getTschchartseriesareafill());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(26, getTschchartseriesareastroke());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(28, tschchartseriesareavaluelabelposition_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(29, getTschchartseriesareasymbolfill());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(30, getTschchartseriesareasymbolstroke());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(32, tschchartseriesareasymbolsize_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(35, getTschchartseriespiefill());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(36, getTschchartseriespiestroke());
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(40, getTschchartseriesscatterstroke());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(41, getTschchartseriesscattersymbolfill());
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(42, getTschchartseriesscattersymbolstroke());
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(44, tschchartseriesscattersymbolsize_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(46, tschchartseriesscattervaluelabelposition_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(50, getTschchartseriesdefaultfill());
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(52, tschchartseriesdefaultvaluelabelposition_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(60, tschchartseriespiedeprecatedserieslabelson_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(62, getTschchartseriescolumnfill());
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(100, getTschchartseriespieshadow());
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(101, getTschchartseriesbarshadow());
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(102, getTschchartseriesareashadow());
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(103, getTschchartseriesscattershadow());
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(104, getTschchartseriesmixedlineshadow());
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(105, getTschchartseriesmixedareashadow());
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(106, getTschchartseriesmixedcolumnshadow());
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(107, getTschchartserieslineshadow());
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(108, getTschchartseriesdefaultshadow());
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(110, tschchartseriesdefaultlabelparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(111, tschchartseriesbarlabelparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(112, tschchartserieslinelabelparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(113, tschchartseriesarealabelparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(114, tschchartseriespielabelparagraphstyleindex_);
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(115, tschchartseriesmixedlabelparagraphstyleindex_);
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(116, tschchartseriesdefaultopacity_);
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(117, tschchartserieslinesymbolfilluseseriesstroke_);
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(118, tschchartseriesareasymbolfilluseseriesstroke_);
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(119, tschchartseriesscattersymbolfilluseseriesstroke_);
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(120, tschchartseriesmixedlinesymbolfilluseseriesstroke_);
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(121, tschchartseriesmixedareasymbolfilluseseriesstroke_);
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(122, tschchartserieslinesymbolfilluseseriesfill_);
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(123, tschchartseriesareasymbolfilluseseriesfill_);
      }
      if (((bitField2_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(124, tschchartseriesmixedlinesymbolfilluseseriesfill_);
      }
      if (((bitField2_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(125, tschchartseriesmixedareasymbolfilluseseriesfill_);
      }
      if (((bitField2_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(130, getTschchartseriesmixedcolumnfill());
      }
      if (((bitField2_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(131, getTschchartseriesmixedareafill());
      }
      if (((bitField2_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(132, getTschchartseriesmixedcolumnstroke());
      }
      if (((bitField2_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(133, getTschchartseriesmixedlinestroke());
      }
      if (((bitField2_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(134, getTschchartseriesmixedareastroke());
      }
      if (((bitField2_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(135, tschchartseriesmixedlinesymbolsize_);
      }
      if (((bitField2_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(136, tschchartseriesmixedareasymbolsize_);
      }
      if (((bitField2_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(137, getTschchartseriesmixedlinesymbolfill());
      }
      if (((bitField2_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(138, getTschchartseriesmixedareasymbolfill());
      }
      if (((bitField2_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(139, getTschchartseriesmixedlinesymbolstroke());
      }
      if (((bitField2_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(140, getTschchartseriesmixedareasymbolstroke());
      }
      if (((bitField2_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(141, tschchartseriesmixedcolumnvaluelabelposition_);
      }
      if (((bitField2_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(142, tschchartseriesmixedlinevaluelabelposition_);
      }
      if (((bitField2_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(143, tschchartseriesmixedareavaluelabelposition_);
      }
      if (((bitField2_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(150, tschchartseriesdefaultoutsidelabelparagraphstyleindex_);
      }
      if (((bitField2_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(151, tschchartseriesbaroutsidelabelparagraphstyleindex_);
      }
      if (((bitField2_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(153, tschchartseriesareaoutsidelabelparagraphstyleindex_);
      }
      if (((bitField2_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(154, tschchartseriespieoutsidelabelparagraphstyleindex_);
      }
      if (((bitField2_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(155, tschchartseriesmixedoutsidelabelparagraphstyleindex_);
      }
      if (((bitField2_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(156, tschchartseriesstackedbarvaluelabelposition_);
      }
      if (((bitField2_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(157, tschchartseriesstackedareavaluelabelposition_);
      }
      if (((bitField2_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(167, getTschchartseriesdefaulttrendlinestroke());
      }
      if (((bitField2_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(168, getTschchartseriesdefaulttrendlineshadow());
      }
      if (((bitField2_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(180, getTschchartseriesdefaulterrorbarshadow());
      }
      if (((bitField2_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(181, getTschchartseriesdefaulterrorbarstroke());
      }
      if (((bitField2_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(182, getTschchartseriesdefaulterrorbarstrokescatterx());
      }
      if (((bitField2_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(183, getTschchartseriesdefaulterrorbarlineend());
      }
      if (((bitField2_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(184, getTschchartseriesdefaulterrorbarlineendscatterx());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(201, tschchartseriesdefaulttrendlineequationparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(202, tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(205, tschchartseriesdefaulttrendlineequationopacity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(206, tschchartseriesdefaulttrendlinersquaredopacity_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(207, getTschchartseriesbubblesymbolfill());
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(211, getTschchartseriesbubblestroke());
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(212, getTschchartseriesbubblesymbolstroke());
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(213, tschchartseriesbubblevaluelabelposition_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(214, getTschchartseriesbubbleshadow());
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(215, tschchartseriesbubblesymbolfilluseseriesstroke_);
      }
      if (((bitField2_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(300, getTschchartseriesdefaultdeprecated3Dfill());
      }
      if (((bitField2_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(301, getTschchartseriesbardeprecated3Dfill());
      }
      if (((bitField3_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(302, getTschchartseriescolumndeprecated3Dfill());
      }
      if (((bitField3_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(303, getTschchartserieslinedeprecated3Dfill());
      }
      if (((bitField3_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(304, getTschchartseriesareadeprecated3Dfill());
      }
      if (((bitField3_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(305, getTschchartseriespiedeprecated3Dfill());
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(306, getTschchartseries3Dbarshadow());
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(307, getTschchartseries3Dcolumnshadow());
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(308, getTschchartseries3Dlineshadow());
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(309, getTschchartseries3Dareashadow());
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(310, getTschchartseries3Dpieshadow());
      }
      if (((bitField3_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(320, getTschchartseries3Dbarfill());
      }
      if (((bitField3_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(321, getTschchartseries3Dcolumnfill());
      }
      if (((bitField3_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(322, getTschchartseries3Dlinefill());
      }
      if (((bitField3_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(323, getTschchartseries3Dareafill());
      }
      if (((bitField3_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(324, getTschchartseries3Dpiefill());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive)) {
        return super.equals(obj);
      }
      org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive other = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive) obj;

      boolean result = true;
      result = result && (hasSuper() == other.hasSuper());
      if (hasSuper()) {
        result = result && getSuper()
            .equals(other.getSuper());
      }
      result = result && (hasTschchartseriesdefaulttrendlineequationparagraphstyleindex() == other.hasTschchartseriesdefaulttrendlineequationparagraphstyleindex());
      if (hasTschchartseriesdefaulttrendlineequationparagraphstyleindex()) {
        result = result && (getTschchartseriesdefaulttrendlineequationparagraphstyleindex()
            == other.getTschchartseriesdefaulttrendlineequationparagraphstyleindex());
      }
      result = result && (hasTschchartseriesdefaulttrendlinersquaredparagraphstyleindex() == other.hasTschchartseriesdefaulttrendlinersquaredparagraphstyleindex());
      if (hasTschchartseriesdefaulttrendlinersquaredparagraphstyleindex()) {
        result = result && (getTschchartseriesdefaulttrendlinersquaredparagraphstyleindex()
            == other.getTschchartseriesdefaulttrendlinersquaredparagraphstyleindex());
      }
      result = result && (hasTschchartseriesdefaulttrendlineequationopacity() == other.hasTschchartseriesdefaulttrendlineequationopacity());
      if (hasTschchartseriesdefaulttrendlineequationopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaulttrendlineequationopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaulttrendlineequationopacity()));
      }
      result = result && (hasTschchartseriesdefaulttrendlinersquaredopacity() == other.hasTschchartseriesdefaulttrendlinersquaredopacity());
      if (hasTschchartseriesdefaulttrendlinersquaredopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaulttrendlinersquaredopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaulttrendlinersquaredopacity()));
      }
      result = result && (hasTschchartseriesbarfill() == other.hasTschchartseriesbarfill());
      if (hasTschchartseriesbarfill()) {
        result = result && getTschchartseriesbarfill()
            .equals(other.getTschchartseriesbarfill());
      }
      result = result && (hasTschchartseriesbarstroke() == other.hasTschchartseriesbarstroke());
      if (hasTschchartseriesbarstroke()) {
        result = result && getTschchartseriesbarstroke()
            .equals(other.getTschchartseriesbarstroke());
      }
      result = result && (hasTschchartseriesbarvaluelabelposition() == other.hasTschchartseriesbarvaluelabelposition());
      if (hasTschchartseriesbarvaluelabelposition()) {
        result = result && (getTschchartseriesbarvaluelabelposition()
            == other.getTschchartseriesbarvaluelabelposition());
      }
      result = result && (hasTschchartserieslinestroke() == other.hasTschchartserieslinestroke());
      if (hasTschchartserieslinestroke()) {
        result = result && getTschchartserieslinestroke()
            .equals(other.getTschchartserieslinestroke());
      }
      result = result && (hasTschchartserieslinesymbolfill() == other.hasTschchartserieslinesymbolfill());
      if (hasTschchartserieslinesymbolfill()) {
        result = result && getTschchartserieslinesymbolfill()
            .equals(other.getTschchartserieslinesymbolfill());
      }
      result = result && (hasTschchartserieslinesymbolstroke() == other.hasTschchartserieslinesymbolstroke());
      if (hasTschchartserieslinesymbolstroke()) {
        result = result && getTschchartserieslinesymbolstroke()
            .equals(other.getTschchartserieslinesymbolstroke());
      }
      result = result && (hasTschchartserieslinesymbolsize() == other.hasTschchartserieslinesymbolsize());
      if (hasTschchartserieslinesymbolsize()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartserieslinesymbolsize())
            == java.lang.Float.floatToIntBits(
                other.getTschchartserieslinesymbolsize()));
      }
      result = result && (hasTschchartserieslinevaluelabelposition() == other.hasTschchartserieslinevaluelabelposition());
      if (hasTschchartserieslinevaluelabelposition()) {
        result = result && (getTschchartserieslinevaluelabelposition()
            == other.getTschchartserieslinevaluelabelposition());
      }
      result = result && (hasTschchartseriesareafill() == other.hasTschchartseriesareafill());
      if (hasTschchartseriesareafill()) {
        result = result && getTschchartseriesareafill()
            .equals(other.getTschchartseriesareafill());
      }
      result = result && (hasTschchartseriesareastroke() == other.hasTschchartseriesareastroke());
      if (hasTschchartseriesareastroke()) {
        result = result && getTschchartseriesareastroke()
            .equals(other.getTschchartseriesareastroke());
      }
      result = result && (hasTschchartseriesareavaluelabelposition() == other.hasTschchartseriesareavaluelabelposition());
      if (hasTschchartseriesareavaluelabelposition()) {
        result = result && (getTschchartseriesareavaluelabelposition()
            == other.getTschchartseriesareavaluelabelposition());
      }
      result = result && (hasTschchartseriesareasymbolfill() == other.hasTschchartseriesareasymbolfill());
      if (hasTschchartseriesareasymbolfill()) {
        result = result && getTschchartseriesareasymbolfill()
            .equals(other.getTschchartseriesareasymbolfill());
      }
      result = result && (hasTschchartseriesareasymbolstroke() == other.hasTschchartseriesareasymbolstroke());
      if (hasTschchartseriesareasymbolstroke()) {
        result = result && getTschchartseriesareasymbolstroke()
            .equals(other.getTschchartseriesareasymbolstroke());
      }
      result = result && (hasTschchartseriesareasymbolsize() == other.hasTschchartseriesareasymbolsize());
      if (hasTschchartseriesareasymbolsize()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesareasymbolsize())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesareasymbolsize()));
      }
      result = result && (hasTschchartseriespiefill() == other.hasTschchartseriespiefill());
      if (hasTschchartseriespiefill()) {
        result = result && getTschchartseriespiefill()
            .equals(other.getTschchartseriespiefill());
      }
      result = result && (hasTschchartseriespiestroke() == other.hasTschchartseriespiestroke());
      if (hasTschchartseriespiestroke()) {
        result = result && getTschchartseriespiestroke()
            .equals(other.getTschchartseriespiestroke());
      }
      result = result && (hasTschchartseriesscatterstroke() == other.hasTschchartseriesscatterstroke());
      if (hasTschchartseriesscatterstroke()) {
        result = result && getTschchartseriesscatterstroke()
            .equals(other.getTschchartseriesscatterstroke());
      }
      result = result && (hasTschchartseriesscattersymbolfill() == other.hasTschchartseriesscattersymbolfill());
      if (hasTschchartseriesscattersymbolfill()) {
        result = result && getTschchartseriesscattersymbolfill()
            .equals(other.getTschchartseriesscattersymbolfill());
      }
      result = result && (hasTschchartseriesscattersymbolstroke() == other.hasTschchartseriesscattersymbolstroke());
      if (hasTschchartseriesscattersymbolstroke()) {
        result = result && getTschchartseriesscattersymbolstroke()
            .equals(other.getTschchartseriesscattersymbolstroke());
      }
      result = result && (hasTschchartseriesscattersymbolsize() == other.hasTschchartseriesscattersymbolsize());
      if (hasTschchartseriesscattersymbolsize()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesscattersymbolsize())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesscattersymbolsize()));
      }
      result = result && (hasTschchartseriesscattervaluelabelposition() == other.hasTschchartseriesscattervaluelabelposition());
      if (hasTschchartseriesscattervaluelabelposition()) {
        result = result && (getTschchartseriesscattervaluelabelposition()
            == other.getTschchartseriesscattervaluelabelposition());
      }
      result = result && (hasTschchartseriesdefaultfill() == other.hasTschchartseriesdefaultfill());
      if (hasTschchartseriesdefaultfill()) {
        result = result && getTschchartseriesdefaultfill()
            .equals(other.getTschchartseriesdefaultfill());
      }
      result = result && (hasTschchartseriesdefaultvaluelabelposition() == other.hasTschchartseriesdefaultvaluelabelposition());
      if (hasTschchartseriesdefaultvaluelabelposition()) {
        result = result && (getTschchartseriesdefaultvaluelabelposition()
            == other.getTschchartseriesdefaultvaluelabelposition());
      }
      result = result && (hasTschchartseriespiedeprecatedserieslabelson() == other.hasTschchartseriespiedeprecatedserieslabelson());
      if (hasTschchartseriespiedeprecatedserieslabelson()) {
        result = result && (getTschchartseriespiedeprecatedserieslabelson()
            == other.getTschchartseriespiedeprecatedserieslabelson());
      }
      result = result && (hasTschchartseriescolumnfill() == other.hasTschchartseriescolumnfill());
      if (hasTschchartseriescolumnfill()) {
        result = result && getTschchartseriescolumnfill()
            .equals(other.getTschchartseriescolumnfill());
      }
      result = result && (hasTschchartseriespieshadow() == other.hasTschchartseriespieshadow());
      if (hasTschchartseriespieshadow()) {
        result = result && getTschchartseriespieshadow()
            .equals(other.getTschchartseriespieshadow());
      }
      result = result && (hasTschchartseriesbarshadow() == other.hasTschchartseriesbarshadow());
      if (hasTschchartseriesbarshadow()) {
        result = result && getTschchartseriesbarshadow()
            .equals(other.getTschchartseriesbarshadow());
      }
      result = result && (hasTschchartseriesareashadow() == other.hasTschchartseriesareashadow());
      if (hasTschchartseriesareashadow()) {
        result = result && getTschchartseriesareashadow()
            .equals(other.getTschchartseriesareashadow());
      }
      result = result && (hasTschchartseriesscattershadow() == other.hasTschchartseriesscattershadow());
      if (hasTschchartseriesscattershadow()) {
        result = result && getTschchartseriesscattershadow()
            .equals(other.getTschchartseriesscattershadow());
      }
      result = result && (hasTschchartseriesmixedlineshadow() == other.hasTschchartseriesmixedlineshadow());
      if (hasTschchartseriesmixedlineshadow()) {
        result = result && getTschchartseriesmixedlineshadow()
            .equals(other.getTschchartseriesmixedlineshadow());
      }
      result = result && (hasTschchartseriesmixedareashadow() == other.hasTschchartseriesmixedareashadow());
      if (hasTschchartseriesmixedareashadow()) {
        result = result && getTschchartseriesmixedareashadow()
            .equals(other.getTschchartseriesmixedareashadow());
      }
      result = result && (hasTschchartseriesmixedcolumnshadow() == other.hasTschchartseriesmixedcolumnshadow());
      if (hasTschchartseriesmixedcolumnshadow()) {
        result = result && getTschchartseriesmixedcolumnshadow()
            .equals(other.getTschchartseriesmixedcolumnshadow());
      }
      result = result && (hasTschchartserieslineshadow() == other.hasTschchartserieslineshadow());
      if (hasTschchartserieslineshadow()) {
        result = result && getTschchartserieslineshadow()
            .equals(other.getTschchartserieslineshadow());
      }
      result = result && (hasTschchartseriesdefaultshadow() == other.hasTschchartseriesdefaultshadow());
      if (hasTschchartseriesdefaultshadow()) {
        result = result && getTschchartseriesdefaultshadow()
            .equals(other.getTschchartseriesdefaultshadow());
      }
      result = result && (hasTschchartseriesbubblesymbolfill() == other.hasTschchartseriesbubblesymbolfill());
      if (hasTschchartseriesbubblesymbolfill()) {
        result = result && getTschchartseriesbubblesymbolfill()
            .equals(other.getTschchartseriesbubblesymbolfill());
      }
      result = result && (hasTschchartseriesbubblestroke() == other.hasTschchartseriesbubblestroke());
      if (hasTschchartseriesbubblestroke()) {
        result = result && getTschchartseriesbubblestroke()
            .equals(other.getTschchartseriesbubblestroke());
      }
      result = result && (hasTschchartseriesbubblesymbolstroke() == other.hasTschchartseriesbubblesymbolstroke());
      if (hasTschchartseriesbubblesymbolstroke()) {
        result = result && getTschchartseriesbubblesymbolstroke()
            .equals(other.getTschchartseriesbubblesymbolstroke());
      }
      result = result && (hasTschchartseriesbubblevaluelabelposition() == other.hasTschchartseriesbubblevaluelabelposition());
      if (hasTschchartseriesbubblevaluelabelposition()) {
        result = result && (getTschchartseriesbubblevaluelabelposition()
            == other.getTschchartseriesbubblevaluelabelposition());
      }
      result = result && (hasTschchartseriesbubbleshadow() == other.hasTschchartseriesbubbleshadow());
      if (hasTschchartseriesbubbleshadow()) {
        result = result && getTschchartseriesbubbleshadow()
            .equals(other.getTschchartseriesbubbleshadow());
      }
      result = result && (hasTschchartseriesbubblesymbolfilluseseriesstroke() == other.hasTschchartseriesbubblesymbolfilluseseriesstroke());
      if (hasTschchartseriesbubblesymbolfilluseseriesstroke()) {
        result = result && (getTschchartseriesbubblesymbolfilluseseriesstroke()
            == other.getTschchartseriesbubblesymbolfilluseseriesstroke());
      }
      result = result && (hasTschchartseries3Dbarshadow() == other.hasTschchartseries3Dbarshadow());
      if (hasTschchartseries3Dbarshadow()) {
        result = result && getTschchartseries3Dbarshadow()
            .equals(other.getTschchartseries3Dbarshadow());
      }
      result = result && (hasTschchartseries3Dcolumnshadow() == other.hasTschchartseries3Dcolumnshadow());
      if (hasTschchartseries3Dcolumnshadow()) {
        result = result && getTschchartseries3Dcolumnshadow()
            .equals(other.getTschchartseries3Dcolumnshadow());
      }
      result = result && (hasTschchartseries3Dlineshadow() == other.hasTschchartseries3Dlineshadow());
      if (hasTschchartseries3Dlineshadow()) {
        result = result && getTschchartseries3Dlineshadow()
            .equals(other.getTschchartseries3Dlineshadow());
      }
      result = result && (hasTschchartseries3Dareashadow() == other.hasTschchartseries3Dareashadow());
      if (hasTschchartseries3Dareashadow()) {
        result = result && getTschchartseries3Dareashadow()
            .equals(other.getTschchartseries3Dareashadow());
      }
      result = result && (hasTschchartseries3Dpieshadow() == other.hasTschchartseries3Dpieshadow());
      if (hasTschchartseries3Dpieshadow()) {
        result = result && getTschchartseries3Dpieshadow()
            .equals(other.getTschchartseries3Dpieshadow());
      }
      result = result && (hasTschchartseriesdefaultlabelparagraphstyleindex() == other.hasTschchartseriesdefaultlabelparagraphstyleindex());
      if (hasTschchartseriesdefaultlabelparagraphstyleindex()) {
        result = result && (getTschchartseriesdefaultlabelparagraphstyleindex()
            == other.getTschchartseriesdefaultlabelparagraphstyleindex());
      }
      result = result && (hasTschchartseriesbarlabelparagraphstyleindex() == other.hasTschchartseriesbarlabelparagraphstyleindex());
      if (hasTschchartseriesbarlabelparagraphstyleindex()) {
        result = result && (getTschchartseriesbarlabelparagraphstyleindex()
            == other.getTschchartseriesbarlabelparagraphstyleindex());
      }
      result = result && (hasTschchartserieslinelabelparagraphstyleindex() == other.hasTschchartserieslinelabelparagraphstyleindex());
      if (hasTschchartserieslinelabelparagraphstyleindex()) {
        result = result && (getTschchartserieslinelabelparagraphstyleindex()
            == other.getTschchartserieslinelabelparagraphstyleindex());
      }
      result = result && (hasTschchartseriesarealabelparagraphstyleindex() == other.hasTschchartseriesarealabelparagraphstyleindex());
      if (hasTschchartseriesarealabelparagraphstyleindex()) {
        result = result && (getTschchartseriesarealabelparagraphstyleindex()
            == other.getTschchartseriesarealabelparagraphstyleindex());
      }
      result = result && (hasTschchartseriespielabelparagraphstyleindex() == other.hasTschchartseriespielabelparagraphstyleindex());
      if (hasTschchartseriespielabelparagraphstyleindex()) {
        result = result && (getTschchartseriespielabelparagraphstyleindex()
            == other.getTschchartseriespielabelparagraphstyleindex());
      }
      result = result && (hasTschchartseriesmixedlabelparagraphstyleindex() == other.hasTschchartseriesmixedlabelparagraphstyleindex());
      if (hasTschchartseriesmixedlabelparagraphstyleindex()) {
        result = result && (getTschchartseriesmixedlabelparagraphstyleindex()
            == other.getTschchartseriesmixedlabelparagraphstyleindex());
      }
      result = result && (hasTschchartseriesdefaultopacity() == other.hasTschchartseriesdefaultopacity());
      if (hasTschchartseriesdefaultopacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaultopacity())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaultopacity()));
      }
      result = result && (hasTschchartserieslinesymbolfilluseseriesstroke() == other.hasTschchartserieslinesymbolfilluseseriesstroke());
      if (hasTschchartserieslinesymbolfilluseseriesstroke()) {
        result = result && (getTschchartserieslinesymbolfilluseseriesstroke()
            == other.getTschchartserieslinesymbolfilluseseriesstroke());
      }
      result = result && (hasTschchartseriesareasymbolfilluseseriesstroke() == other.hasTschchartseriesareasymbolfilluseseriesstroke());
      if (hasTschchartseriesareasymbolfilluseseriesstroke()) {
        result = result && (getTschchartseriesareasymbolfilluseseriesstroke()
            == other.getTschchartseriesareasymbolfilluseseriesstroke());
      }
      result = result && (hasTschchartseriesscattersymbolfilluseseriesstroke() == other.hasTschchartseriesscattersymbolfilluseseriesstroke());
      if (hasTschchartseriesscattersymbolfilluseseriesstroke()) {
        result = result && (getTschchartseriesscattersymbolfilluseseriesstroke()
            == other.getTschchartseriesscattersymbolfilluseseriesstroke());
      }
      result = result && (hasTschchartseriesmixedlinesymbolfilluseseriesstroke() == other.hasTschchartseriesmixedlinesymbolfilluseseriesstroke());
      if (hasTschchartseriesmixedlinesymbolfilluseseriesstroke()) {
        result = result && (getTschchartseriesmixedlinesymbolfilluseseriesstroke()
            == other.getTschchartseriesmixedlinesymbolfilluseseriesstroke());
      }
      result = result && (hasTschchartseriesmixedareasymbolfilluseseriesstroke() == other.hasTschchartseriesmixedareasymbolfilluseseriesstroke());
      if (hasTschchartseriesmixedareasymbolfilluseseriesstroke()) {
        result = result && (getTschchartseriesmixedareasymbolfilluseseriesstroke()
            == other.getTschchartseriesmixedareasymbolfilluseseriesstroke());
      }
      result = result && (hasTschchartserieslinesymbolfilluseseriesfill() == other.hasTschchartserieslinesymbolfilluseseriesfill());
      if (hasTschchartserieslinesymbolfilluseseriesfill()) {
        result = result && (getTschchartserieslinesymbolfilluseseriesfill()
            == other.getTschchartserieslinesymbolfilluseseriesfill());
      }
      result = result && (hasTschchartseriesareasymbolfilluseseriesfill() == other.hasTschchartseriesareasymbolfilluseseriesfill());
      if (hasTschchartseriesareasymbolfilluseseriesfill()) {
        result = result && (getTschchartseriesareasymbolfilluseseriesfill()
            == other.getTschchartseriesareasymbolfilluseseriesfill());
      }
      result = result && (hasTschchartseriesmixedlinesymbolfilluseseriesfill() == other.hasTschchartseriesmixedlinesymbolfilluseseriesfill());
      if (hasTschchartseriesmixedlinesymbolfilluseseriesfill()) {
        result = result && (getTschchartseriesmixedlinesymbolfilluseseriesfill()
            == other.getTschchartseriesmixedlinesymbolfilluseseriesfill());
      }
      result = result && (hasTschchartseriesmixedareasymbolfilluseseriesfill() == other.hasTschchartseriesmixedareasymbolfilluseseriesfill());
      if (hasTschchartseriesmixedareasymbolfilluseseriesfill()) {
        result = result && (getTschchartseriesmixedareasymbolfilluseseriesfill()
            == other.getTschchartseriesmixedareasymbolfilluseseriesfill());
      }
      result = result && (hasTschchartseriesmixedcolumnfill() == other.hasTschchartseriesmixedcolumnfill());
      if (hasTschchartseriesmixedcolumnfill()) {
        result = result && getTschchartseriesmixedcolumnfill()
            .equals(other.getTschchartseriesmixedcolumnfill());
      }
      result = result && (hasTschchartseriesmixedareafill() == other.hasTschchartseriesmixedareafill());
      if (hasTschchartseriesmixedareafill()) {
        result = result && getTschchartseriesmixedareafill()
            .equals(other.getTschchartseriesmixedareafill());
      }
      result = result && (hasTschchartseriesmixedcolumnstroke() == other.hasTschchartseriesmixedcolumnstroke());
      if (hasTschchartseriesmixedcolumnstroke()) {
        result = result && getTschchartseriesmixedcolumnstroke()
            .equals(other.getTschchartseriesmixedcolumnstroke());
      }
      result = result && (hasTschchartseriesmixedlinestroke() == other.hasTschchartseriesmixedlinestroke());
      if (hasTschchartseriesmixedlinestroke()) {
        result = result && getTschchartseriesmixedlinestroke()
            .equals(other.getTschchartseriesmixedlinestroke());
      }
      result = result && (hasTschchartseriesmixedareastroke() == other.hasTschchartseriesmixedareastroke());
      if (hasTschchartseriesmixedareastroke()) {
        result = result && getTschchartseriesmixedareastroke()
            .equals(other.getTschchartseriesmixedareastroke());
      }
      result = result && (hasTschchartseriesmixedlinesymbolsize() == other.hasTschchartseriesmixedlinesymbolsize());
      if (hasTschchartseriesmixedlinesymbolsize()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesmixedlinesymbolsize())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesmixedlinesymbolsize()));
      }
      result = result && (hasTschchartseriesmixedareasymbolsize() == other.hasTschchartseriesmixedareasymbolsize());
      if (hasTschchartseriesmixedareasymbolsize()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesmixedareasymbolsize())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesmixedareasymbolsize()));
      }
      result = result && (hasTschchartseriesmixedlinesymbolfill() == other.hasTschchartseriesmixedlinesymbolfill());
      if (hasTschchartseriesmixedlinesymbolfill()) {
        result = result && getTschchartseriesmixedlinesymbolfill()
            .equals(other.getTschchartseriesmixedlinesymbolfill());
      }
      result = result && (hasTschchartseriesmixedareasymbolfill() == other.hasTschchartseriesmixedareasymbolfill());
      if (hasTschchartseriesmixedareasymbolfill()) {
        result = result && getTschchartseriesmixedareasymbolfill()
            .equals(other.getTschchartseriesmixedareasymbolfill());
      }
      result = result && (hasTschchartseriesmixedlinesymbolstroke() == other.hasTschchartseriesmixedlinesymbolstroke());
      if (hasTschchartseriesmixedlinesymbolstroke()) {
        result = result && getTschchartseriesmixedlinesymbolstroke()
            .equals(other.getTschchartseriesmixedlinesymbolstroke());
      }
      result = result && (hasTschchartseriesmixedareasymbolstroke() == other.hasTschchartseriesmixedareasymbolstroke());
      if (hasTschchartseriesmixedareasymbolstroke()) {
        result = result && getTschchartseriesmixedareasymbolstroke()
            .equals(other.getTschchartseriesmixedareasymbolstroke());
      }
      result = result && (hasTschchartseriesmixedcolumnvaluelabelposition() == other.hasTschchartseriesmixedcolumnvaluelabelposition());
      if (hasTschchartseriesmixedcolumnvaluelabelposition()) {
        result = result && (getTschchartseriesmixedcolumnvaluelabelposition()
            == other.getTschchartseriesmixedcolumnvaluelabelposition());
      }
      result = result && (hasTschchartseriesmixedlinevaluelabelposition() == other.hasTschchartseriesmixedlinevaluelabelposition());
      if (hasTschchartseriesmixedlinevaluelabelposition()) {
        result = result && (getTschchartseriesmixedlinevaluelabelposition()
            == other.getTschchartseriesmixedlinevaluelabelposition());
      }
      result = result && (hasTschchartseriesmixedareavaluelabelposition() == other.hasTschchartseriesmixedareavaluelabelposition());
      if (hasTschchartseriesmixedareavaluelabelposition()) {
        result = result && (getTschchartseriesmixedareavaluelabelposition()
            == other.getTschchartseriesmixedareavaluelabelposition());
      }
      result = result && (hasTschchartseriesdefaultoutsidelabelparagraphstyleindex() == other.hasTschchartseriesdefaultoutsidelabelparagraphstyleindex());
      if (hasTschchartseriesdefaultoutsidelabelparagraphstyleindex()) {
        result = result && (getTschchartseriesdefaultoutsidelabelparagraphstyleindex()
            == other.getTschchartseriesdefaultoutsidelabelparagraphstyleindex());
      }
      result = result && (hasTschchartseriesbaroutsidelabelparagraphstyleindex() == other.hasTschchartseriesbaroutsidelabelparagraphstyleindex());
      if (hasTschchartseriesbaroutsidelabelparagraphstyleindex()) {
        result = result && (getTschchartseriesbaroutsidelabelparagraphstyleindex()
            == other.getTschchartseriesbaroutsidelabelparagraphstyleindex());
      }
      result = result && (hasTschchartseriesareaoutsidelabelparagraphstyleindex() == other.hasTschchartseriesareaoutsidelabelparagraphstyleindex());
      if (hasTschchartseriesareaoutsidelabelparagraphstyleindex()) {
        result = result && (getTschchartseriesareaoutsidelabelparagraphstyleindex()
            == other.getTschchartseriesareaoutsidelabelparagraphstyleindex());
      }
      result = result && (hasTschchartseriespieoutsidelabelparagraphstyleindex() == other.hasTschchartseriespieoutsidelabelparagraphstyleindex());
      if (hasTschchartseriespieoutsidelabelparagraphstyleindex()) {
        result = result && (getTschchartseriespieoutsidelabelparagraphstyleindex()
            == other.getTschchartseriespieoutsidelabelparagraphstyleindex());
      }
      result = result && (hasTschchartseriesmixedoutsidelabelparagraphstyleindex() == other.hasTschchartseriesmixedoutsidelabelparagraphstyleindex());
      if (hasTschchartseriesmixedoutsidelabelparagraphstyleindex()) {
        result = result && (getTschchartseriesmixedoutsidelabelparagraphstyleindex()
            == other.getTschchartseriesmixedoutsidelabelparagraphstyleindex());
      }
      result = result && (hasTschchartseriesstackedbarvaluelabelposition() == other.hasTschchartseriesstackedbarvaluelabelposition());
      if (hasTschchartseriesstackedbarvaluelabelposition()) {
        result = result && (getTschchartseriesstackedbarvaluelabelposition()
            == other.getTschchartseriesstackedbarvaluelabelposition());
      }
      result = result && (hasTschchartseriesstackedareavaluelabelposition() == other.hasTschchartseriesstackedareavaluelabelposition());
      if (hasTschchartseriesstackedareavaluelabelposition()) {
        result = result && (getTschchartseriesstackedareavaluelabelposition()
            == other.getTschchartseriesstackedareavaluelabelposition());
      }
      result = result && (hasTschchartseriesdefaulttrendlinestroke() == other.hasTschchartseriesdefaulttrendlinestroke());
      if (hasTschchartseriesdefaulttrendlinestroke()) {
        result = result && getTschchartseriesdefaulttrendlinestroke()
            .equals(other.getTschchartseriesdefaulttrendlinestroke());
      }
      result = result && (hasTschchartseriesdefaulttrendlineshadow() == other.hasTschchartseriesdefaulttrendlineshadow());
      if (hasTschchartseriesdefaulttrendlineshadow()) {
        result = result && getTschchartseriesdefaulttrendlineshadow()
            .equals(other.getTschchartseriesdefaulttrendlineshadow());
      }
      result = result && (hasTschchartseriesdefaulterrorbarshadow() == other.hasTschchartseriesdefaulterrorbarshadow());
      if (hasTschchartseriesdefaulterrorbarshadow()) {
        result = result && getTschchartseriesdefaulterrorbarshadow()
            .equals(other.getTschchartseriesdefaulterrorbarshadow());
      }
      result = result && (hasTschchartseriesdefaulterrorbarstroke() == other.hasTschchartseriesdefaulterrorbarstroke());
      if (hasTschchartseriesdefaulterrorbarstroke()) {
        result = result && getTschchartseriesdefaulterrorbarstroke()
            .equals(other.getTschchartseriesdefaulterrorbarstroke());
      }
      result = result && (hasTschchartseriesdefaulterrorbarstrokescatterx() == other.hasTschchartseriesdefaulterrorbarstrokescatterx());
      if (hasTschchartseriesdefaulterrorbarstrokescatterx()) {
        result = result && getTschchartseriesdefaulterrorbarstrokescatterx()
            .equals(other.getTschchartseriesdefaulterrorbarstrokescatterx());
      }
      result = result && (hasTschchartseriesdefaulterrorbarlineend() == other.hasTschchartseriesdefaulterrorbarlineend());
      if (hasTschchartseriesdefaulterrorbarlineend()) {
        result = result && getTschchartseriesdefaulterrorbarlineend()
            .equals(other.getTschchartseriesdefaulterrorbarlineend());
      }
      result = result && (hasTschchartseriesdefaulterrorbarlineendscatterx() == other.hasTschchartseriesdefaulterrorbarlineendscatterx());
      if (hasTschchartseriesdefaulterrorbarlineendscatterx()) {
        result = result && getTschchartseriesdefaulterrorbarlineendscatterx()
            .equals(other.getTschchartseriesdefaulterrorbarlineendscatterx());
      }
      result = result && (hasTschchartseriesdefaultdeprecated3Dfill() == other.hasTschchartseriesdefaultdeprecated3Dfill());
      if (hasTschchartseriesdefaultdeprecated3Dfill()) {
        result = result && getTschchartseriesdefaultdeprecated3Dfill()
            .equals(other.getTschchartseriesdefaultdeprecated3Dfill());
      }
      result = result && (hasTschchartseriesbardeprecated3Dfill() == other.hasTschchartseriesbardeprecated3Dfill());
      if (hasTschchartseriesbardeprecated3Dfill()) {
        result = result && getTschchartseriesbardeprecated3Dfill()
            .equals(other.getTschchartseriesbardeprecated3Dfill());
      }
      result = result && (hasTschchartseriescolumndeprecated3Dfill() == other.hasTschchartseriescolumndeprecated3Dfill());
      if (hasTschchartseriescolumndeprecated3Dfill()) {
        result = result && getTschchartseriescolumndeprecated3Dfill()
            .equals(other.getTschchartseriescolumndeprecated3Dfill());
      }
      result = result && (hasTschchartserieslinedeprecated3Dfill() == other.hasTschchartserieslinedeprecated3Dfill());
      if (hasTschchartserieslinedeprecated3Dfill()) {
        result = result && getTschchartserieslinedeprecated3Dfill()
            .equals(other.getTschchartserieslinedeprecated3Dfill());
      }
      result = result && (hasTschchartseriesareadeprecated3Dfill() == other.hasTschchartseriesareadeprecated3Dfill());
      if (hasTschchartseriesareadeprecated3Dfill()) {
        result = result && getTschchartseriesareadeprecated3Dfill()
            .equals(other.getTschchartseriesareadeprecated3Dfill());
      }
      result = result && (hasTschchartseriespiedeprecated3Dfill() == other.hasTschchartseriespiedeprecated3Dfill());
      if (hasTschchartseriespiedeprecated3Dfill()) {
        result = result && getTschchartseriespiedeprecated3Dfill()
            .equals(other.getTschchartseriespiedeprecated3Dfill());
      }
      result = result && (hasTschchartseries3Dbarfill() == other.hasTschchartseries3Dbarfill());
      if (hasTschchartseries3Dbarfill()) {
        result = result && getTschchartseries3Dbarfill()
            .equals(other.getTschchartseries3Dbarfill());
      }
      result = result && (hasTschchartseries3Dcolumnfill() == other.hasTschchartseries3Dcolumnfill());
      if (hasTschchartseries3Dcolumnfill()) {
        result = result && getTschchartseries3Dcolumnfill()
            .equals(other.getTschchartseries3Dcolumnfill());
      }
      result = result && (hasTschchartseries3Dlinefill() == other.hasTschchartseries3Dlinefill());
      if (hasTschchartseries3Dlinefill()) {
        result = result && getTschchartseries3Dlinefill()
            .equals(other.getTschchartseries3Dlinefill());
      }
      result = result && (hasTschchartseries3Dareafill() == other.hasTschchartseries3Dareafill());
      if (hasTschchartseries3Dareafill()) {
        result = result && getTschchartseries3Dareafill()
            .equals(other.getTschchartseries3Dareafill());
      }
      result = result && (hasTschchartseries3Dpiefill() == other.hasTschchartseries3Dpiefill());
      if (hasTschchartseries3Dpiefill()) {
        result = result && getTschchartseries3Dpiefill()
            .equals(other.getTschchartseries3Dpiefill());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSuper()) {
        hash = (37 * hash) + SUPER_FIELD_NUMBER;
        hash = (53 * hash) + getSuper().hashCode();
      }
      if (hasTschchartseriesdefaulttrendlineequationparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINEEQUATIONPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulttrendlineequationparagraphstyleindex();
      }
      if (hasTschchartseriesdefaulttrendlinersquaredparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINERSQUAREDPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulttrendlinersquaredparagraphstyleindex();
      }
      if (hasTschchartseriesdefaulttrendlineequationopacity()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINEEQUATIONOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaulttrendlineequationopacity());
      }
      if (hasTschchartseriesdefaulttrendlinersquaredopacity()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINERSQUAREDOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaulttrendlinersquaredopacity());
      }
      if (hasTschchartseriesbarfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESBARFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbarfill().hashCode();
      }
      if (hasTschchartseriesbarstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESBARSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbarstroke().hashCode();
      }
      if (hasTschchartseriesbarvaluelabelposition()) {
        hash = (37 * hash) + TSCHCHARTSERIESBARVALUELABELPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbarvaluelabelposition();
      }
      if (hasTschchartserieslinestroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINESTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartserieslinestroke().hashCode();
      }
      if (hasTschchartserieslinesymbolfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINESYMBOLFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartserieslinesymbolfill().hashCode();
      }
      if (hasTschchartserieslinesymbolstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINESYMBOLSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartserieslinesymbolstroke().hashCode();
      }
      if (hasTschchartserieslinesymbolsize()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINESYMBOLSIZE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartserieslinesymbolsize());
      }
      if (hasTschchartserieslinevaluelabelposition()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINEVALUELABELPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartserieslinevaluelabelposition();
      }
      if (hasTschchartseriesareafill()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREAFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesareafill().hashCode();
      }
      if (hasTschchartseriesareastroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREASTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesareastroke().hashCode();
      }
      if (hasTschchartseriesareavaluelabelposition()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREAVALUELABELPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesareavaluelabelposition();
      }
      if (hasTschchartseriesareasymbolfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREASYMBOLFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesareasymbolfill().hashCode();
      }
      if (hasTschchartseriesareasymbolstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREASYMBOLSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesareasymbolstroke().hashCode();
      }
      if (hasTschchartseriesareasymbolsize()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREASYMBOLSIZE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesareasymbolsize());
      }
      if (hasTschchartseriespiefill()) {
        hash = (37 * hash) + TSCHCHARTSERIESPIEFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriespiefill().hashCode();
      }
      if (hasTschchartseriespiestroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESPIESTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriespiestroke().hashCode();
      }
      if (hasTschchartseriesscatterstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesscatterstroke().hashCode();
      }
      if (hasTschchartseriesscattersymbolfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERSYMBOLFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesscattersymbolfill().hashCode();
      }
      if (hasTschchartseriesscattersymbolstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERSYMBOLSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesscattersymbolstroke().hashCode();
      }
      if (hasTschchartseriesscattersymbolsize()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERSYMBOLSIZE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesscattersymbolsize());
      }
      if (hasTschchartseriesscattervaluelabelposition()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERVALUELABELPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesscattervaluelabelposition();
      }
      if (hasTschchartseriesdefaultfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaultfill().hashCode();
      }
      if (hasTschchartseriesdefaultvaluelabelposition()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTVALUELABELPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaultvaluelabelposition();
      }
      if (hasTschchartseriespiedeprecatedserieslabelson()) {
        hash = (37 * hash) + TSCHCHARTSERIESPIEDEPRECATEDSERIESLABELSON_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriespiedeprecatedserieslabelson());
      }
      if (hasTschchartseriescolumnfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESCOLUMNFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriescolumnfill().hashCode();
      }
      if (hasTschchartseriespieshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIESPIESHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriespieshadow().hashCode();
      }
      if (hasTschchartseriesbarshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIESBARSHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbarshadow().hashCode();
      }
      if (hasTschchartseriesareashadow()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREASHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesareashadow().hashCode();
      }
      if (hasTschchartseriesscattershadow()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERSHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesscattershadow().hashCode();
      }
      if (hasTschchartseriesmixedlineshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDLINESHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedlineshadow().hashCode();
      }
      if (hasTschchartseriesmixedareashadow()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDAREASHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedareashadow().hashCode();
      }
      if (hasTschchartseriesmixedcolumnshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDCOLUMNSHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedcolumnshadow().hashCode();
      }
      if (hasTschchartserieslineshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINESHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartserieslineshadow().hashCode();
      }
      if (hasTschchartseriesdefaultshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTSHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaultshadow().hashCode();
      }
      if (hasTschchartseriesbubblesymbolfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESBUBBLESYMBOLFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbubblesymbolfill().hashCode();
      }
      if (hasTschchartseriesbubblestroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESBUBBLESTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbubblestroke().hashCode();
      }
      if (hasTschchartseriesbubblesymbolstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESBUBBLESYMBOLSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbubblesymbolstroke().hashCode();
      }
      if (hasTschchartseriesbubblevaluelabelposition()) {
        hash = (37 * hash) + TSCHCHARTSERIESBUBBLEVALUELABELPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbubblevaluelabelposition();
      }
      if (hasTschchartseriesbubbleshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIESBUBBLESHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbubbleshadow().hashCode();
      }
      if (hasTschchartseriesbubblesymbolfilluseseriesstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESBUBBLESYMBOLFILLUSESERIESSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesbubblesymbolfilluseseriesstroke());
      }
      if (hasTschchartseries3Dbarshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIES3DBARSHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseries3Dbarshadow().hashCode();
      }
      if (hasTschchartseries3Dcolumnshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIES3DCOLUMNSHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseries3Dcolumnshadow().hashCode();
      }
      if (hasTschchartseries3Dlineshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIES3DLINESHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseries3Dlineshadow().hashCode();
      }
      if (hasTschchartseries3Dareashadow()) {
        hash = (37 * hash) + TSCHCHARTSERIES3DAREASHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseries3Dareashadow().hashCode();
      }
      if (hasTschchartseries3Dpieshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIES3DPIESHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseries3Dpieshadow().hashCode();
      }
      if (hasTschchartseriesdefaultlabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTLABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaultlabelparagraphstyleindex();
      }
      if (hasTschchartseriesbarlabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESBARLABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbarlabelparagraphstyleindex();
      }
      if (hasTschchartserieslinelabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartserieslinelabelparagraphstyleindex();
      }
      if (hasTschchartseriesarealabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREALABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesarealabelparagraphstyleindex();
      }
      if (hasTschchartseriespielabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESPIELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriespielabelparagraphstyleindex();
      }
      if (hasTschchartseriesmixedlabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDLABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedlabelparagraphstyleindex();
      }
      if (hasTschchartseriesdefaultopacity()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaultopacity());
      }
      if (hasTschchartserieslinesymbolfilluseseriesstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINESYMBOLFILLUSESERIESSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartserieslinesymbolfilluseseriesstroke());
      }
      if (hasTschchartseriesareasymbolfilluseseriesstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREASYMBOLFILLUSESERIESSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesareasymbolfilluseseriesstroke());
      }
      if (hasTschchartseriesscattersymbolfilluseseriesstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERSYMBOLFILLUSESERIESSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesscattersymbolfilluseseriesstroke());
      }
      if (hasTschchartseriesmixedlinesymbolfilluseseriesstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDLINESYMBOLFILLUSESERIESSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesmixedlinesymbolfilluseseriesstroke());
      }
      if (hasTschchartseriesmixedareasymbolfilluseseriesstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDAREASYMBOLFILLUSESERIESSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesmixedareasymbolfilluseseriesstroke());
      }
      if (hasTschchartserieslinesymbolfilluseseriesfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINESYMBOLFILLUSESERIESFILL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartserieslinesymbolfilluseseriesfill());
      }
      if (hasTschchartseriesareasymbolfilluseseriesfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREASYMBOLFILLUSESERIESFILL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesareasymbolfilluseseriesfill());
      }
      if (hasTschchartseriesmixedlinesymbolfilluseseriesfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDLINESYMBOLFILLUSESERIESFILL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesmixedlinesymbolfilluseseriesfill());
      }
      if (hasTschchartseriesmixedareasymbolfilluseseriesfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDAREASYMBOLFILLUSESERIESFILL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesmixedareasymbolfilluseseriesfill());
      }
      if (hasTschchartseriesmixedcolumnfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDCOLUMNFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedcolumnfill().hashCode();
      }
      if (hasTschchartseriesmixedareafill()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDAREAFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedareafill().hashCode();
      }
      if (hasTschchartseriesmixedcolumnstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDCOLUMNSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedcolumnstroke().hashCode();
      }
      if (hasTschchartseriesmixedlinestroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDLINESTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedlinestroke().hashCode();
      }
      if (hasTschchartseriesmixedareastroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDAREASTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedareastroke().hashCode();
      }
      if (hasTschchartseriesmixedlinesymbolsize()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDLINESYMBOLSIZE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesmixedlinesymbolsize());
      }
      if (hasTschchartseriesmixedareasymbolsize()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDAREASYMBOLSIZE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesmixedareasymbolsize());
      }
      if (hasTschchartseriesmixedlinesymbolfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDLINESYMBOLFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedlinesymbolfill().hashCode();
      }
      if (hasTschchartseriesmixedareasymbolfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDAREASYMBOLFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedareasymbolfill().hashCode();
      }
      if (hasTschchartseriesmixedlinesymbolstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDLINESYMBOLSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedlinesymbolstroke().hashCode();
      }
      if (hasTschchartseriesmixedareasymbolstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDAREASYMBOLSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedareasymbolstroke().hashCode();
      }
      if (hasTschchartseriesmixedcolumnvaluelabelposition()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDCOLUMNVALUELABELPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedcolumnvaluelabelposition();
      }
      if (hasTschchartseriesmixedlinevaluelabelposition()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDLINEVALUELABELPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedlinevaluelabelposition();
      }
      if (hasTschchartseriesmixedareavaluelabelposition()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDAREAVALUELABELPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedareavaluelabelposition();
      }
      if (hasTschchartseriesdefaultoutsidelabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTOUTSIDELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaultoutsidelabelparagraphstyleindex();
      }
      if (hasTschchartseriesbaroutsidelabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESBAROUTSIDELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbaroutsidelabelparagraphstyleindex();
      }
      if (hasTschchartseriesareaoutsidelabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREAOUTSIDELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesareaoutsidelabelparagraphstyleindex();
      }
      if (hasTschchartseriespieoutsidelabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESPIEOUTSIDELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriespieoutsidelabelparagraphstyleindex();
      }
      if (hasTschchartseriesmixedoutsidelabelparagraphstyleindex()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDOUTSIDELABELPARAGRAPHSTYLEINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedoutsidelabelparagraphstyleindex();
      }
      if (hasTschchartseriesstackedbarvaluelabelposition()) {
        hash = (37 * hash) + TSCHCHARTSERIESSTACKEDBARVALUELABELPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesstackedbarvaluelabelposition();
      }
      if (hasTschchartseriesstackedareavaluelabelposition()) {
        hash = (37 * hash) + TSCHCHARTSERIESSTACKEDAREAVALUELABELPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesstackedareavaluelabelposition();
      }
      if (hasTschchartseriesdefaulttrendlinestroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINESTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulttrendlinestroke().hashCode();
      }
      if (hasTschchartseriesdefaulttrendlineshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINESHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulttrendlineshadow().hashCode();
      }
      if (hasTschchartseriesdefaulterrorbarshadow()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARSHADOW_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbarshadow().hashCode();
      }
      if (hasTschchartseriesdefaulterrorbarstroke()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARSTROKE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbarstroke().hashCode();
      }
      if (hasTschchartseriesdefaulterrorbarstrokescatterx()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARSTROKESCATTERX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbarstrokescatterx().hashCode();
      }
      if (hasTschchartseriesdefaulterrorbarlineend()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARLINEEND_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbarlineend().hashCode();
      }
      if (hasTschchartseriesdefaulterrorbarlineendscatterx()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARLINEENDSCATTERX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbarlineendscatterx().hashCode();
      }
      if (hasTschchartseriesdefaultdeprecated3Dfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTDEPRECATED3DFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaultdeprecated3Dfill().hashCode();
      }
      if (hasTschchartseriesbardeprecated3Dfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESBARDEPRECATED3DFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbardeprecated3Dfill().hashCode();
      }
      if (hasTschchartseriescolumndeprecated3Dfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESCOLUMNDEPRECATED3DFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriescolumndeprecated3Dfill().hashCode();
      }
      if (hasTschchartserieslinedeprecated3Dfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINEDEPRECATED3DFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartserieslinedeprecated3Dfill().hashCode();
      }
      if (hasTschchartseriesareadeprecated3Dfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREADEPRECATED3DFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesareadeprecated3Dfill().hashCode();
      }
      if (hasTschchartseriespiedeprecated3Dfill()) {
        hash = (37 * hash) + TSCHCHARTSERIESPIEDEPRECATED3DFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriespiedeprecated3Dfill().hashCode();
      }
      if (hasTschchartseries3Dbarfill()) {
        hash = (37 * hash) + TSCHCHARTSERIES3DBARFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseries3Dbarfill().hashCode();
      }
      if (hasTschchartseries3Dcolumnfill()) {
        hash = (37 * hash) + TSCHCHARTSERIES3DCOLUMNFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseries3Dcolumnfill().hashCode();
      }
      if (hasTschchartseries3Dlinefill()) {
        hash = (37 * hash) + TSCHCHARTSERIES3DLINEFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseries3Dlinefill().hashCode();
      }
      if (hasTschchartseries3Dareafill()) {
        hash = (37 * hash) + TSCHCHARTSERIES3DAREAFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseries3Dareafill().hashCode();
      }
      if (hasTschchartseries3Dpiefill()) {
        hash = (37 * hash) + TSCHCHARTSERIES3DPIEFILL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseries3Dpiefill().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TSCH.PreUFF.ChartSeriesStyleArchive}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TSCH.PreUFF.ChartSeriesStyleArchive)
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchiveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartSeriesStyleArchive_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartSeriesStyleArchive_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive.Builder.class);
      }

      // Construct using TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSuperFieldBuilder();
          getTschchartseriesbarfillFieldBuilder();
          getTschchartseriesbarstrokeFieldBuilder();
          getTschchartserieslinestrokeFieldBuilder();
          getTschchartserieslinesymbolfillFieldBuilder();
          getTschchartserieslinesymbolstrokeFieldBuilder();
          getTschchartseriesareafillFieldBuilder();
          getTschchartseriesareastrokeFieldBuilder();
          getTschchartseriesareasymbolfillFieldBuilder();
          getTschchartseriesareasymbolstrokeFieldBuilder();
          getTschchartseriespiefillFieldBuilder();
          getTschchartseriespiestrokeFieldBuilder();
          getTschchartseriesscatterstrokeFieldBuilder();
          getTschchartseriesscattersymbolfillFieldBuilder();
          getTschchartseriesscattersymbolstrokeFieldBuilder();
          getTschchartseriesdefaultfillFieldBuilder();
          getTschchartseriescolumnfillFieldBuilder();
          getTschchartseriespieshadowFieldBuilder();
          getTschchartseriesbarshadowFieldBuilder();
          getTschchartseriesareashadowFieldBuilder();
          getTschchartseriesscattershadowFieldBuilder();
          getTschchartseriesmixedlineshadowFieldBuilder();
          getTschchartseriesmixedareashadowFieldBuilder();
          getTschchartseriesmixedcolumnshadowFieldBuilder();
          getTschchartserieslineshadowFieldBuilder();
          getTschchartseriesdefaultshadowFieldBuilder();
          getTschchartseriesbubblesymbolfillFieldBuilder();
          getTschchartseriesbubblestrokeFieldBuilder();
          getTschchartseriesbubblesymbolstrokeFieldBuilder();
          getTschchartseriesbubbleshadowFieldBuilder();
          getTschchartseries3DbarshadowFieldBuilder();
          getTschchartseries3DcolumnshadowFieldBuilder();
          getTschchartseries3DlineshadowFieldBuilder();
          getTschchartseries3DareashadowFieldBuilder();
          getTschchartseries3DpieshadowFieldBuilder();
          getTschchartseriesmixedcolumnfillFieldBuilder();
          getTschchartseriesmixedareafillFieldBuilder();
          getTschchartseriesmixedcolumnstrokeFieldBuilder();
          getTschchartseriesmixedlinestrokeFieldBuilder();
          getTschchartseriesmixedareastrokeFieldBuilder();
          getTschchartseriesmixedlinesymbolfillFieldBuilder();
          getTschchartseriesmixedareasymbolfillFieldBuilder();
          getTschchartseriesmixedlinesymbolstrokeFieldBuilder();
          getTschchartseriesmixedareasymbolstrokeFieldBuilder();
          getTschchartseriesdefaulttrendlinestrokeFieldBuilder();
          getTschchartseriesdefaulttrendlineshadowFieldBuilder();
          getTschchartseriesdefaulterrorbarshadowFieldBuilder();
          getTschchartseriesdefaulterrorbarstrokeFieldBuilder();
          getTschchartseriesdefaulterrorbarstrokescatterxFieldBuilder();
          getTschchartseriesdefaulterrorbarlineendFieldBuilder();
          getTschchartseriesdefaulterrorbarlineendscatterxFieldBuilder();
          getTschchartseriesdefaultdeprecated3DfillFieldBuilder();
          getTschchartseriesbardeprecated3DfillFieldBuilder();
          getTschchartseriescolumndeprecated3DfillFieldBuilder();
          getTschchartserieslinedeprecated3DfillFieldBuilder();
          getTschchartseriesareadeprecated3DfillFieldBuilder();
          getTschchartseriespiedeprecated3DfillFieldBuilder();
          getTschchartseries3DbarfillFieldBuilder();
          getTschchartseries3DcolumnfillFieldBuilder();
          getTschchartseries3DlinefillFieldBuilder();
          getTschchartseries3DareafillFieldBuilder();
          getTschchartseries3DpiefillFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (superBuilder_ == null) {
          super_ = null;
        } else {
          superBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        tschchartseriesdefaulttrendlineequationparagraphstyleindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        tschchartseriesdefaulttrendlineequationopacity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        tschchartseriesdefaulttrendlinersquaredopacity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (tschchartseriesbarfillBuilder_ == null) {
          tschchartseriesbarfill_ = null;
        } else {
          tschchartseriesbarfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (tschchartseriesbarstrokeBuilder_ == null) {
          tschchartseriesbarstroke_ = null;
        } else {
          tschchartseriesbarstrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        tschchartseriesbarvaluelabelposition_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (tschchartserieslinestrokeBuilder_ == null) {
          tschchartserieslinestroke_ = null;
        } else {
          tschchartserieslinestrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (tschchartserieslinesymbolfillBuilder_ == null) {
          tschchartserieslinesymbolfill_ = null;
        } else {
          tschchartserieslinesymbolfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (tschchartserieslinesymbolstrokeBuilder_ == null) {
          tschchartserieslinesymbolstroke_ = null;
        } else {
          tschchartserieslinesymbolstrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        tschchartserieslinesymbolsize_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000800);
        tschchartserieslinevaluelabelposition_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        if (tschchartseriesareafillBuilder_ == null) {
          tschchartseriesareafill_ = null;
        } else {
          tschchartseriesareafillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        if (tschchartseriesareastrokeBuilder_ == null) {
          tschchartseriesareastroke_ = null;
        } else {
          tschchartseriesareastrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        tschchartseriesareavaluelabelposition_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        if (tschchartseriesareasymbolfillBuilder_ == null) {
          tschchartseriesareasymbolfill_ = null;
        } else {
          tschchartseriesareasymbolfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        if (tschchartseriesareasymbolstrokeBuilder_ == null) {
          tschchartseriesareasymbolstroke_ = null;
        } else {
          tschchartseriesareasymbolstrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        tschchartseriesareasymbolsize_ = 0F;
        bitField0_ = (bitField0_ & ~0x00040000);
        if (tschchartseriespiefillBuilder_ == null) {
          tschchartseriespiefill_ = null;
        } else {
          tschchartseriespiefillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        if (tschchartseriespiestrokeBuilder_ == null) {
          tschchartseriespiestroke_ = null;
        } else {
          tschchartseriespiestrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00100000);
        if (tschchartseriesscatterstrokeBuilder_ == null) {
          tschchartseriesscatterstroke_ = null;
        } else {
          tschchartseriesscatterstrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00200000);
        if (tschchartseriesscattersymbolfillBuilder_ == null) {
          tschchartseriesscattersymbolfill_ = null;
        } else {
          tschchartseriesscattersymbolfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00400000);
        if (tschchartseriesscattersymbolstrokeBuilder_ == null) {
          tschchartseriesscattersymbolstroke_ = null;
        } else {
          tschchartseriesscattersymbolstrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00800000);
        tschchartseriesscattersymbolsize_ = 0F;
        bitField0_ = (bitField0_ & ~0x01000000);
        tschchartseriesscattervaluelabelposition_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        if (tschchartseriesdefaultfillBuilder_ == null) {
          tschchartseriesdefaultfill_ = null;
        } else {
          tschchartseriesdefaultfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x04000000);
        tschchartseriesdefaultvaluelabelposition_ = 0;
        bitField0_ = (bitField0_ & ~0x08000000);
        tschchartseriespiedeprecatedserieslabelson_ = false;
        bitField0_ = (bitField0_ & ~0x10000000);
        if (tschchartseriescolumnfillBuilder_ == null) {
          tschchartseriescolumnfill_ = null;
        } else {
          tschchartseriescolumnfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x20000000);
        if (tschchartseriespieshadowBuilder_ == null) {
          tschchartseriespieshadow_ = null;
        } else {
          tschchartseriespieshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x40000000);
        if (tschchartseriesbarshadowBuilder_ == null) {
          tschchartseriesbarshadow_ = null;
        } else {
          tschchartseriesbarshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x80000000);
        if (tschchartseriesareashadowBuilder_ == null) {
          tschchartseriesareashadow_ = null;
        } else {
          tschchartseriesareashadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000001);
        if (tschchartseriesscattershadowBuilder_ == null) {
          tschchartseriesscattershadow_ = null;
        } else {
          tschchartseriesscattershadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000002);
        if (tschchartseriesmixedlineshadowBuilder_ == null) {
          tschchartseriesmixedlineshadow_ = null;
        } else {
          tschchartseriesmixedlineshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000004);
        if (tschchartseriesmixedareashadowBuilder_ == null) {
          tschchartseriesmixedareashadow_ = null;
        } else {
          tschchartseriesmixedareashadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000008);
        if (tschchartseriesmixedcolumnshadowBuilder_ == null) {
          tschchartseriesmixedcolumnshadow_ = null;
        } else {
          tschchartseriesmixedcolumnshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000010);
        if (tschchartserieslineshadowBuilder_ == null) {
          tschchartserieslineshadow_ = null;
        } else {
          tschchartserieslineshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000020);
        if (tschchartseriesdefaultshadowBuilder_ == null) {
          tschchartseriesdefaultshadow_ = null;
        } else {
          tschchartseriesdefaultshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000040);
        if (tschchartseriesbubblesymbolfillBuilder_ == null) {
          tschchartseriesbubblesymbolfill_ = null;
        } else {
          tschchartseriesbubblesymbolfillBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000080);
        if (tschchartseriesbubblestrokeBuilder_ == null) {
          tschchartseriesbubblestroke_ = null;
        } else {
          tschchartseriesbubblestrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000100);
        if (tschchartseriesbubblesymbolstrokeBuilder_ == null) {
          tschchartseriesbubblesymbolstroke_ = null;
        } else {
          tschchartseriesbubblesymbolstrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000200);
        tschchartseriesbubblevaluelabelposition_ = 0;
        bitField1_ = (bitField1_ & ~0x00000400);
        if (tschchartseriesbubbleshadowBuilder_ == null) {
          tschchartseriesbubbleshadow_ = null;
        } else {
          tschchartseriesbubbleshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000800);
        tschchartseriesbubblesymbolfilluseseriesstroke_ = false;
        bitField1_ = (bitField1_ & ~0x00001000);
        if (tschchartseries3DbarshadowBuilder_ == null) {
          tschchartseries3Dbarshadow_ = null;
        } else {
          tschchartseries3DbarshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00002000);
        if (tschchartseries3DcolumnshadowBuilder_ == null) {
          tschchartseries3Dcolumnshadow_ = null;
        } else {
          tschchartseries3DcolumnshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00004000);
        if (tschchartseries3DlineshadowBuilder_ == null) {
          tschchartseries3Dlineshadow_ = null;
        } else {
          tschchartseries3DlineshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00008000);
        if (tschchartseries3DareashadowBuilder_ == null) {
          tschchartseries3Dareashadow_ = null;
        } else {
          tschchartseries3DareashadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00010000);
        if (tschchartseries3DpieshadowBuilder_ == null) {
          tschchartseries3Dpieshadow_ = null;
        } else {
          tschchartseries3DpieshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00020000);
        tschchartseriesdefaultlabelparagraphstyleindex_ = 0;
        bitField1_ = (bitField1_ & ~0x00040000);
        tschchartseriesbarlabelparagraphstyleindex_ = 0;
        bitField1_ = (bitField1_ & ~0x00080000);
        tschchartserieslinelabelparagraphstyleindex_ = 0;
        bitField1_ = (bitField1_ & ~0x00100000);
        tschchartseriesarealabelparagraphstyleindex_ = 0;
        bitField1_ = (bitField1_ & ~0x00200000);
        tschchartseriespielabelparagraphstyleindex_ = 0;
        bitField1_ = (bitField1_ & ~0x00400000);
        tschchartseriesmixedlabelparagraphstyleindex_ = 0;
        bitField1_ = (bitField1_ & ~0x00800000);
        tschchartseriesdefaultopacity_ = 0F;
        bitField1_ = (bitField1_ & ~0x01000000);
        tschchartserieslinesymbolfilluseseriesstroke_ = false;
        bitField1_ = (bitField1_ & ~0x02000000);
        tschchartseriesareasymbolfilluseseriesstroke_ = false;
        bitField1_ = (bitField1_ & ~0x04000000);
        tschchartseriesscattersymbolfilluseseriesstroke_ = false;
        bitField1_ = (bitField1_ & ~0x08000000);
        tschchartseriesmixedlinesymbolfilluseseriesstroke_ = false;
        bitField1_ = (bitField1_ & ~0x10000000);
        tschchartseriesmixedareasymbolfilluseseriesstroke_ = false;
        bitField1_ = (bitField1_ & ~0x20000000);
        tschchartserieslinesymbolfilluseseriesfill_ = false;
        bitField1_ = (bitField1_ & ~0x40000000);
        tschchartseriesareasymbolfilluseseriesfill_ = false;
        bitField1_ = (bitField1_ & ~0x80000000);
        tschchartseriesmixedlinesymbolfilluseseriesfill_ = false;
        bitField2_ = (bitField2_ & ~0x00000001);
        tschchartseriesmixedareasymbolfilluseseriesfill_ = false;
        bitField2_ = (bitField2_ & ~0x00000002);
        if (tschchartseriesmixedcolumnfillBuilder_ == null) {
          tschchartseriesmixedcolumnfill_ = null;
        } else {
          tschchartseriesmixedcolumnfillBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000004);
        if (tschchartseriesmixedareafillBuilder_ == null) {
          tschchartseriesmixedareafill_ = null;
        } else {
          tschchartseriesmixedareafillBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000008);
        if (tschchartseriesmixedcolumnstrokeBuilder_ == null) {
          tschchartseriesmixedcolumnstroke_ = null;
        } else {
          tschchartseriesmixedcolumnstrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000010);
        if (tschchartseriesmixedlinestrokeBuilder_ == null) {
          tschchartseriesmixedlinestroke_ = null;
        } else {
          tschchartseriesmixedlinestrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000020);
        if (tschchartseriesmixedareastrokeBuilder_ == null) {
          tschchartseriesmixedareastroke_ = null;
        } else {
          tschchartseriesmixedareastrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000040);
        tschchartseriesmixedlinesymbolsize_ = 0F;
        bitField2_ = (bitField2_ & ~0x00000080);
        tschchartseriesmixedareasymbolsize_ = 0F;
        bitField2_ = (bitField2_ & ~0x00000100);
        if (tschchartseriesmixedlinesymbolfillBuilder_ == null) {
          tschchartseriesmixedlinesymbolfill_ = null;
        } else {
          tschchartseriesmixedlinesymbolfillBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000200);
        if (tschchartseriesmixedareasymbolfillBuilder_ == null) {
          tschchartseriesmixedareasymbolfill_ = null;
        } else {
          tschchartseriesmixedareasymbolfillBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000400);
        if (tschchartseriesmixedlinesymbolstrokeBuilder_ == null) {
          tschchartseriesmixedlinesymbolstroke_ = null;
        } else {
          tschchartseriesmixedlinesymbolstrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000800);
        if (tschchartseriesmixedareasymbolstrokeBuilder_ == null) {
          tschchartseriesmixedareasymbolstroke_ = null;
        } else {
          tschchartseriesmixedareasymbolstrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00001000);
        tschchartseriesmixedcolumnvaluelabelposition_ = 0;
        bitField2_ = (bitField2_ & ~0x00002000);
        tschchartseriesmixedlinevaluelabelposition_ = 0;
        bitField2_ = (bitField2_ & ~0x00004000);
        tschchartseriesmixedareavaluelabelposition_ = 0;
        bitField2_ = (bitField2_ & ~0x00008000);
        tschchartseriesdefaultoutsidelabelparagraphstyleindex_ = 0;
        bitField2_ = (bitField2_ & ~0x00010000);
        tschchartseriesbaroutsidelabelparagraphstyleindex_ = 0;
        bitField2_ = (bitField2_ & ~0x00020000);
        tschchartseriesareaoutsidelabelparagraphstyleindex_ = 0;
        bitField2_ = (bitField2_ & ~0x00040000);
        tschchartseriespieoutsidelabelparagraphstyleindex_ = 0;
        bitField2_ = (bitField2_ & ~0x00080000);
        tschchartseriesmixedoutsidelabelparagraphstyleindex_ = 0;
        bitField2_ = (bitField2_ & ~0x00100000);
        tschchartseriesstackedbarvaluelabelposition_ = 0;
        bitField2_ = (bitField2_ & ~0x00200000);
        tschchartseriesstackedareavaluelabelposition_ = 0;
        bitField2_ = (bitField2_ & ~0x00400000);
        if (tschchartseriesdefaulttrendlinestrokeBuilder_ == null) {
          tschchartseriesdefaulttrendlinestroke_ = null;
        } else {
          tschchartseriesdefaulttrendlinestrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00800000);
        if (tschchartseriesdefaulttrendlineshadowBuilder_ == null) {
          tschchartseriesdefaulttrendlineshadow_ = null;
        } else {
          tschchartseriesdefaulttrendlineshadowBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x01000000);
        if (tschchartseriesdefaulterrorbarshadowBuilder_ == null) {
          tschchartseriesdefaulterrorbarshadow_ = null;
        } else {
          tschchartseriesdefaulterrorbarshadowBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x02000000);
        if (tschchartseriesdefaulterrorbarstrokeBuilder_ == null) {
          tschchartseriesdefaulterrorbarstroke_ = null;
        } else {
          tschchartseriesdefaulterrorbarstrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x04000000);
        if (tschchartseriesdefaulterrorbarstrokescatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarstrokescatterx_ = null;
        } else {
          tschchartseriesdefaulterrorbarstrokescatterxBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x08000000);
        if (tschchartseriesdefaulterrorbarlineendBuilder_ == null) {
          tschchartseriesdefaulterrorbarlineend_ = null;
        } else {
          tschchartseriesdefaulterrorbarlineendBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x10000000);
        if (tschchartseriesdefaulterrorbarlineendscatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarlineendscatterx_ = null;
        } else {
          tschchartseriesdefaulterrorbarlineendscatterxBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x20000000);
        if (tschchartseriesdefaultdeprecated3DfillBuilder_ == null) {
          tschchartseriesdefaultdeprecated3Dfill_ = null;
        } else {
          tschchartseriesdefaultdeprecated3DfillBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x40000000);
        if (tschchartseriesbardeprecated3DfillBuilder_ == null) {
          tschchartseriesbardeprecated3Dfill_ = null;
        } else {
          tschchartseriesbardeprecated3DfillBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x80000000);
        if (tschchartseriescolumndeprecated3DfillBuilder_ == null) {
          tschchartseriescolumndeprecated3Dfill_ = null;
        } else {
          tschchartseriescolumndeprecated3DfillBuilder_.clear();
        }
        bitField3_ = (bitField3_ & ~0x00000001);
        if (tschchartserieslinedeprecated3DfillBuilder_ == null) {
          tschchartserieslinedeprecated3Dfill_ = null;
        } else {
          tschchartserieslinedeprecated3DfillBuilder_.clear();
        }
        bitField3_ = (bitField3_ & ~0x00000002);
        if (tschchartseriesareadeprecated3DfillBuilder_ == null) {
          tschchartseriesareadeprecated3Dfill_ = null;
        } else {
          tschchartseriesareadeprecated3DfillBuilder_.clear();
        }
        bitField3_ = (bitField3_ & ~0x00000004);
        if (tschchartseriespiedeprecated3DfillBuilder_ == null) {
          tschchartseriespiedeprecated3Dfill_ = null;
        } else {
          tschchartseriespiedeprecated3DfillBuilder_.clear();
        }
        bitField3_ = (bitField3_ & ~0x00000008);
        if (tschchartseries3DbarfillBuilder_ == null) {
          tschchartseries3Dbarfill_ = null;
        } else {
          tschchartseries3DbarfillBuilder_.clear();
        }
        bitField3_ = (bitField3_ & ~0x00000010);
        if (tschchartseries3DcolumnfillBuilder_ == null) {
          tschchartseries3Dcolumnfill_ = null;
        } else {
          tschchartseries3DcolumnfillBuilder_.clear();
        }
        bitField3_ = (bitField3_ & ~0x00000020);
        if (tschchartseries3DlinefillBuilder_ == null) {
          tschchartseries3Dlinefill_ = null;
        } else {
          tschchartseries3DlinefillBuilder_.clear();
        }
        bitField3_ = (bitField3_ & ~0x00000040);
        if (tschchartseries3DareafillBuilder_ == null) {
          tschchartseries3Dareafill_ = null;
        } else {
          tschchartseries3DareafillBuilder_.clear();
        }
        bitField3_ = (bitField3_ & ~0x00000080);
        if (tschchartseries3DpiefillBuilder_ == null) {
          tschchartseries3Dpiefill_ = null;
        } else {
          tschchartseries3DpiefillBuilder_.clear();
        }
        bitField3_ = (bitField3_ & ~0x00000100);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartSeriesStyleArchive_descriptor;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive getDefaultInstanceForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive.getDefaultInstance();
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive build() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive buildPartial() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive result = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int from_bitField2_ = bitField2_;
        int from_bitField3_ = bitField3_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        int to_bitField2_ = 0;
        int to_bitField3_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (superBuilder_ == null) {
          result.super_ = super_;
        } else {
          result.super_ = superBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tschchartseriesdefaulttrendlineequationparagraphstyleindex_ = tschchartseriesdefaulttrendlineequationparagraphstyleindex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_ = tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.tschchartseriesdefaulttrendlineequationopacity_ = tschchartseriesdefaulttrendlineequationopacity_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.tschchartseriesdefaulttrendlinersquaredopacity_ = tschchartseriesdefaulttrendlinersquaredopacity_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (tschchartseriesbarfillBuilder_ == null) {
          result.tschchartseriesbarfill_ = tschchartseriesbarfill_;
        } else {
          result.tschchartseriesbarfill_ = tschchartseriesbarfillBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (tschchartseriesbarstrokeBuilder_ == null) {
          result.tschchartseriesbarstroke_ = tschchartseriesbarstroke_;
        } else {
          result.tschchartseriesbarstroke_ = tschchartseriesbarstrokeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.tschchartseriesbarvaluelabelposition_ = tschchartseriesbarvaluelabelposition_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (tschchartserieslinestrokeBuilder_ == null) {
          result.tschchartserieslinestroke_ = tschchartserieslinestroke_;
        } else {
          result.tschchartserieslinestroke_ = tschchartserieslinestrokeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (tschchartserieslinesymbolfillBuilder_ == null) {
          result.tschchartserieslinesymbolfill_ = tschchartserieslinesymbolfill_;
        } else {
          result.tschchartserieslinesymbolfill_ = tschchartserieslinesymbolfillBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (tschchartserieslinesymbolstrokeBuilder_ == null) {
          result.tschchartserieslinesymbolstroke_ = tschchartserieslinesymbolstroke_;
        } else {
          result.tschchartserieslinesymbolstroke_ = tschchartserieslinesymbolstrokeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.tschchartserieslinesymbolsize_ = tschchartserieslinesymbolsize_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.tschchartserieslinevaluelabelposition_ = tschchartserieslinevaluelabelposition_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        if (tschchartseriesareafillBuilder_ == null) {
          result.tschchartseriesareafill_ = tschchartseriesareafill_;
        } else {
          result.tschchartseriesareafill_ = tschchartseriesareafillBuilder_.build();
        }
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        if (tschchartseriesareastrokeBuilder_ == null) {
          result.tschchartseriesareastroke_ = tschchartseriesareastroke_;
        } else {
          result.tschchartseriesareastroke_ = tschchartseriesareastrokeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.tschchartseriesareavaluelabelposition_ = tschchartseriesareavaluelabelposition_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        if (tschchartseriesareasymbolfillBuilder_ == null) {
          result.tschchartseriesareasymbolfill_ = tschchartseriesareasymbolfill_;
        } else {
          result.tschchartseriesareasymbolfill_ = tschchartseriesareasymbolfillBuilder_.build();
        }
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        if (tschchartseriesareasymbolstrokeBuilder_ == null) {
          result.tschchartseriesareasymbolstroke_ = tschchartseriesareasymbolstroke_;
        } else {
          result.tschchartseriesareasymbolstroke_ = tschchartseriesareasymbolstrokeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.tschchartseriesareasymbolsize_ = tschchartseriesareasymbolsize_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        if (tschchartseriespiefillBuilder_ == null) {
          result.tschchartseriespiefill_ = tschchartseriespiefill_;
        } else {
          result.tschchartseriespiefill_ = tschchartseriespiefillBuilder_.build();
        }
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        if (tschchartseriespiestrokeBuilder_ == null) {
          result.tschchartseriespiestroke_ = tschchartseriespiestroke_;
        } else {
          result.tschchartseriespiestroke_ = tschchartseriespiestrokeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        if (tschchartseriesscatterstrokeBuilder_ == null) {
          result.tschchartseriesscatterstroke_ = tschchartseriesscatterstroke_;
        } else {
          result.tschchartseriesscatterstroke_ = tschchartseriesscatterstrokeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        if (tschchartseriesscattersymbolfillBuilder_ == null) {
          result.tschchartseriesscattersymbolfill_ = tschchartseriesscattersymbolfill_;
        } else {
          result.tschchartseriesscattersymbolfill_ = tschchartseriesscattersymbolfillBuilder_.build();
        }
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        if (tschchartseriesscattersymbolstrokeBuilder_ == null) {
          result.tschchartseriesscattersymbolstroke_ = tschchartseriesscattersymbolstroke_;
        } else {
          result.tschchartseriesscattersymbolstroke_ = tschchartseriesscattersymbolstrokeBuilder_.build();
        }
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.tschchartseriesscattersymbolsize_ = tschchartseriesscattersymbolsize_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.tschchartseriesscattervaluelabelposition_ = tschchartseriesscattervaluelabelposition_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        if (tschchartseriesdefaultfillBuilder_ == null) {
          result.tschchartseriesdefaultfill_ = tschchartseriesdefaultfill_;
        } else {
          result.tschchartseriesdefaultfill_ = tschchartseriesdefaultfillBuilder_.build();
        }
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.tschchartseriesdefaultvaluelabelposition_ = tschchartseriesdefaultvaluelabelposition_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.tschchartseriespiedeprecatedserieslabelson_ = tschchartseriespiedeprecatedserieslabelson_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        if (tschchartseriescolumnfillBuilder_ == null) {
          result.tschchartseriescolumnfill_ = tschchartseriescolumnfill_;
        } else {
          result.tschchartseriescolumnfill_ = tschchartseriescolumnfillBuilder_.build();
        }
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        if (tschchartseriespieshadowBuilder_ == null) {
          result.tschchartseriespieshadow_ = tschchartseriespieshadow_;
        } else {
          result.tschchartseriespieshadow_ = tschchartseriespieshadowBuilder_.build();
        }
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        if (tschchartseriesbarshadowBuilder_ == null) {
          result.tschchartseriesbarshadow_ = tschchartseriesbarshadow_;
        } else {
          result.tschchartseriesbarshadow_ = tschchartseriesbarshadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        if (tschchartseriesareashadowBuilder_ == null) {
          result.tschchartseriesareashadow_ = tschchartseriesareashadow_;
        } else {
          result.tschchartseriesareashadow_ = tschchartseriesareashadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000002;
        }
        if (tschchartseriesscattershadowBuilder_ == null) {
          result.tschchartseriesscattershadow_ = tschchartseriesscattershadow_;
        } else {
          result.tschchartseriesscattershadow_ = tschchartseriesscattershadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000004;
        }
        if (tschchartseriesmixedlineshadowBuilder_ == null) {
          result.tschchartseriesmixedlineshadow_ = tschchartseriesmixedlineshadow_;
        } else {
          result.tschchartseriesmixedlineshadow_ = tschchartseriesmixedlineshadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000008;
        }
        if (tschchartseriesmixedareashadowBuilder_ == null) {
          result.tschchartseriesmixedareashadow_ = tschchartseriesmixedareashadow_;
        } else {
          result.tschchartseriesmixedareashadow_ = tschchartseriesmixedareashadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000010;
        }
        if (tschchartseriesmixedcolumnshadowBuilder_ == null) {
          result.tschchartseriesmixedcolumnshadow_ = tschchartseriesmixedcolumnshadow_;
        } else {
          result.tschchartseriesmixedcolumnshadow_ = tschchartseriesmixedcolumnshadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000020;
        }
        if (tschchartserieslineshadowBuilder_ == null) {
          result.tschchartserieslineshadow_ = tschchartserieslineshadow_;
        } else {
          result.tschchartserieslineshadow_ = tschchartserieslineshadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000040) == 0x00000040)) {
          to_bitField1_ |= 0x00000040;
        }
        if (tschchartseriesdefaultshadowBuilder_ == null) {
          result.tschchartseriesdefaultshadow_ = tschchartseriesdefaultshadow_;
        } else {
          result.tschchartseriesdefaultshadow_ = tschchartseriesdefaultshadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000080) == 0x00000080)) {
          to_bitField1_ |= 0x00000080;
        }
        if (tschchartseriesbubblesymbolfillBuilder_ == null) {
          result.tschchartseriesbubblesymbolfill_ = tschchartseriesbubblesymbolfill_;
        } else {
          result.tschchartseriesbubblesymbolfill_ = tschchartseriesbubblesymbolfillBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000100) == 0x00000100)) {
          to_bitField1_ |= 0x00000100;
        }
        if (tschchartseriesbubblestrokeBuilder_ == null) {
          result.tschchartseriesbubblestroke_ = tschchartseriesbubblestroke_;
        } else {
          result.tschchartseriesbubblestroke_ = tschchartseriesbubblestrokeBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000200) == 0x00000200)) {
          to_bitField1_ |= 0x00000200;
        }
        if (tschchartseriesbubblesymbolstrokeBuilder_ == null) {
          result.tschchartseriesbubblesymbolstroke_ = tschchartseriesbubblesymbolstroke_;
        } else {
          result.tschchartseriesbubblesymbolstroke_ = tschchartseriesbubblesymbolstrokeBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000400) == 0x00000400)) {
          to_bitField1_ |= 0x00000400;
        }
        result.tschchartseriesbubblevaluelabelposition_ = tschchartseriesbubblevaluelabelposition_;
        if (((from_bitField1_ & 0x00000800) == 0x00000800)) {
          to_bitField1_ |= 0x00000800;
        }
        if (tschchartseriesbubbleshadowBuilder_ == null) {
          result.tschchartseriesbubbleshadow_ = tschchartseriesbubbleshadow_;
        } else {
          result.tschchartseriesbubbleshadow_ = tschchartseriesbubbleshadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00001000) == 0x00001000)) {
          to_bitField1_ |= 0x00001000;
        }
        result.tschchartseriesbubblesymbolfilluseseriesstroke_ = tschchartseriesbubblesymbolfilluseseriesstroke_;
        if (((from_bitField1_ & 0x00002000) == 0x00002000)) {
          to_bitField1_ |= 0x00002000;
        }
        if (tschchartseries3DbarshadowBuilder_ == null) {
          result.tschchartseries3Dbarshadow_ = tschchartseries3Dbarshadow_;
        } else {
          result.tschchartseries3Dbarshadow_ = tschchartseries3DbarshadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00004000) == 0x00004000)) {
          to_bitField1_ |= 0x00004000;
        }
        if (tschchartseries3DcolumnshadowBuilder_ == null) {
          result.tschchartseries3Dcolumnshadow_ = tschchartseries3Dcolumnshadow_;
        } else {
          result.tschchartseries3Dcolumnshadow_ = tschchartseries3DcolumnshadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00008000) == 0x00008000)) {
          to_bitField1_ |= 0x00008000;
        }
        if (tschchartseries3DlineshadowBuilder_ == null) {
          result.tschchartseries3Dlineshadow_ = tschchartseries3Dlineshadow_;
        } else {
          result.tschchartseries3Dlineshadow_ = tschchartseries3DlineshadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00010000) == 0x00010000)) {
          to_bitField1_ |= 0x00010000;
        }
        if (tschchartseries3DareashadowBuilder_ == null) {
          result.tschchartseries3Dareashadow_ = tschchartseries3Dareashadow_;
        } else {
          result.tschchartseries3Dareashadow_ = tschchartseries3DareashadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00020000) == 0x00020000)) {
          to_bitField1_ |= 0x00020000;
        }
        if (tschchartseries3DpieshadowBuilder_ == null) {
          result.tschchartseries3Dpieshadow_ = tschchartseries3Dpieshadow_;
        } else {
          result.tschchartseries3Dpieshadow_ = tschchartseries3DpieshadowBuilder_.build();
        }
        if (((from_bitField1_ & 0x00040000) == 0x00040000)) {
          to_bitField1_ |= 0x00040000;
        }
        result.tschchartseriesdefaultlabelparagraphstyleindex_ = tschchartseriesdefaultlabelparagraphstyleindex_;
        if (((from_bitField1_ & 0x00080000) == 0x00080000)) {
          to_bitField1_ |= 0x00080000;
        }
        result.tschchartseriesbarlabelparagraphstyleindex_ = tschchartseriesbarlabelparagraphstyleindex_;
        if (((from_bitField1_ & 0x00100000) == 0x00100000)) {
          to_bitField1_ |= 0x00100000;
        }
        result.tschchartserieslinelabelparagraphstyleindex_ = tschchartserieslinelabelparagraphstyleindex_;
        if (((from_bitField1_ & 0x00200000) == 0x00200000)) {
          to_bitField1_ |= 0x00200000;
        }
        result.tschchartseriesarealabelparagraphstyleindex_ = tschchartseriesarealabelparagraphstyleindex_;
        if (((from_bitField1_ & 0x00400000) == 0x00400000)) {
          to_bitField1_ |= 0x00400000;
        }
        result.tschchartseriespielabelparagraphstyleindex_ = tschchartseriespielabelparagraphstyleindex_;
        if (((from_bitField1_ & 0x00800000) == 0x00800000)) {
          to_bitField1_ |= 0x00800000;
        }
        result.tschchartseriesmixedlabelparagraphstyleindex_ = tschchartseriesmixedlabelparagraphstyleindex_;
        if (((from_bitField1_ & 0x01000000) == 0x01000000)) {
          to_bitField1_ |= 0x01000000;
        }
        result.tschchartseriesdefaultopacity_ = tschchartseriesdefaultopacity_;
        if (((from_bitField1_ & 0x02000000) == 0x02000000)) {
          to_bitField1_ |= 0x02000000;
        }
        result.tschchartserieslinesymbolfilluseseriesstroke_ = tschchartserieslinesymbolfilluseseriesstroke_;
        if (((from_bitField1_ & 0x04000000) == 0x04000000)) {
          to_bitField1_ |= 0x04000000;
        }
        result.tschchartseriesareasymbolfilluseseriesstroke_ = tschchartseriesareasymbolfilluseseriesstroke_;
        if (((from_bitField1_ & 0x08000000) == 0x08000000)) {
          to_bitField1_ |= 0x08000000;
        }
        result.tschchartseriesscattersymbolfilluseseriesstroke_ = tschchartseriesscattersymbolfilluseseriesstroke_;
        if (((from_bitField1_ & 0x10000000) == 0x10000000)) {
          to_bitField1_ |= 0x10000000;
        }
        result.tschchartseriesmixedlinesymbolfilluseseriesstroke_ = tschchartseriesmixedlinesymbolfilluseseriesstroke_;
        if (((from_bitField1_ & 0x20000000) == 0x20000000)) {
          to_bitField1_ |= 0x20000000;
        }
        result.tschchartseriesmixedareasymbolfilluseseriesstroke_ = tschchartseriesmixedareasymbolfilluseseriesstroke_;
        if (((from_bitField1_ & 0x40000000) == 0x40000000)) {
          to_bitField1_ |= 0x40000000;
        }
        result.tschchartserieslinesymbolfilluseseriesfill_ = tschchartserieslinesymbolfilluseseriesfill_;
        if (((from_bitField1_ & 0x80000000) == 0x80000000)) {
          to_bitField1_ |= 0x80000000;
        }
        result.tschchartseriesareasymbolfilluseseriesfill_ = tschchartseriesareasymbolfilluseseriesfill_;
        if (((from_bitField2_ & 0x00000001) == 0x00000001)) {
          to_bitField2_ |= 0x00000001;
        }
        result.tschchartseriesmixedlinesymbolfilluseseriesfill_ = tschchartseriesmixedlinesymbolfilluseseriesfill_;
        if (((from_bitField2_ & 0x00000002) == 0x00000002)) {
          to_bitField2_ |= 0x00000002;
        }
        result.tschchartseriesmixedareasymbolfilluseseriesfill_ = tschchartseriesmixedareasymbolfilluseseriesfill_;
        if (((from_bitField2_ & 0x00000004) == 0x00000004)) {
          to_bitField2_ |= 0x00000004;
        }
        if (tschchartseriesmixedcolumnfillBuilder_ == null) {
          result.tschchartseriesmixedcolumnfill_ = tschchartseriesmixedcolumnfill_;
        } else {
          result.tschchartseriesmixedcolumnfill_ = tschchartseriesmixedcolumnfillBuilder_.build();
        }
        if (((from_bitField2_ & 0x00000008) == 0x00000008)) {
          to_bitField2_ |= 0x00000008;
        }
        if (tschchartseriesmixedareafillBuilder_ == null) {
          result.tschchartseriesmixedareafill_ = tschchartseriesmixedareafill_;
        } else {
          result.tschchartseriesmixedareafill_ = tschchartseriesmixedareafillBuilder_.build();
        }
        if (((from_bitField2_ & 0x00000010) == 0x00000010)) {
          to_bitField2_ |= 0x00000010;
        }
        if (tschchartseriesmixedcolumnstrokeBuilder_ == null) {
          result.tschchartseriesmixedcolumnstroke_ = tschchartseriesmixedcolumnstroke_;
        } else {
          result.tschchartseriesmixedcolumnstroke_ = tschchartseriesmixedcolumnstrokeBuilder_.build();
        }
        if (((from_bitField2_ & 0x00000020) == 0x00000020)) {
          to_bitField2_ |= 0x00000020;
        }
        if (tschchartseriesmixedlinestrokeBuilder_ == null) {
          result.tschchartseriesmixedlinestroke_ = tschchartseriesmixedlinestroke_;
        } else {
          result.tschchartseriesmixedlinestroke_ = tschchartseriesmixedlinestrokeBuilder_.build();
        }
        if (((from_bitField2_ & 0x00000040) == 0x00000040)) {
          to_bitField2_ |= 0x00000040;
        }
        if (tschchartseriesmixedareastrokeBuilder_ == null) {
          result.tschchartseriesmixedareastroke_ = tschchartseriesmixedareastroke_;
        } else {
          result.tschchartseriesmixedareastroke_ = tschchartseriesmixedareastrokeBuilder_.build();
        }
        if (((from_bitField2_ & 0x00000080) == 0x00000080)) {
          to_bitField2_ |= 0x00000080;
        }
        result.tschchartseriesmixedlinesymbolsize_ = tschchartseriesmixedlinesymbolsize_;
        if (((from_bitField2_ & 0x00000100) == 0x00000100)) {
          to_bitField2_ |= 0x00000100;
        }
        result.tschchartseriesmixedareasymbolsize_ = tschchartseriesmixedareasymbolsize_;
        if (((from_bitField2_ & 0x00000200) == 0x00000200)) {
          to_bitField2_ |= 0x00000200;
        }
        if (tschchartseriesmixedlinesymbolfillBuilder_ == null) {
          result.tschchartseriesmixedlinesymbolfill_ = tschchartseriesmixedlinesymbolfill_;
        } else {
          result.tschchartseriesmixedlinesymbolfill_ = tschchartseriesmixedlinesymbolfillBuilder_.build();
        }
        if (((from_bitField2_ & 0x00000400) == 0x00000400)) {
          to_bitField2_ |= 0x00000400;
        }
        if (tschchartseriesmixedareasymbolfillBuilder_ == null) {
          result.tschchartseriesmixedareasymbolfill_ = tschchartseriesmixedareasymbolfill_;
        } else {
          result.tschchartseriesmixedareasymbolfill_ = tschchartseriesmixedareasymbolfillBuilder_.build();
        }
        if (((from_bitField2_ & 0x00000800) == 0x00000800)) {
          to_bitField2_ |= 0x00000800;
        }
        if (tschchartseriesmixedlinesymbolstrokeBuilder_ == null) {
          result.tschchartseriesmixedlinesymbolstroke_ = tschchartseriesmixedlinesymbolstroke_;
        } else {
          result.tschchartseriesmixedlinesymbolstroke_ = tschchartseriesmixedlinesymbolstrokeBuilder_.build();
        }
        if (((from_bitField2_ & 0x00001000) == 0x00001000)) {
          to_bitField2_ |= 0x00001000;
        }
        if (tschchartseriesmixedareasymbolstrokeBuilder_ == null) {
          result.tschchartseriesmixedareasymbolstroke_ = tschchartseriesmixedareasymbolstroke_;
        } else {
          result.tschchartseriesmixedareasymbolstroke_ = tschchartseriesmixedareasymbolstrokeBuilder_.build();
        }
        if (((from_bitField2_ & 0x00002000) == 0x00002000)) {
          to_bitField2_ |= 0x00002000;
        }
        result.tschchartseriesmixedcolumnvaluelabelposition_ = tschchartseriesmixedcolumnvaluelabelposition_;
        if (((from_bitField2_ & 0x00004000) == 0x00004000)) {
          to_bitField2_ |= 0x00004000;
        }
        result.tschchartseriesmixedlinevaluelabelposition_ = tschchartseriesmixedlinevaluelabelposition_;
        if (((from_bitField2_ & 0x00008000) == 0x00008000)) {
          to_bitField2_ |= 0x00008000;
        }
        result.tschchartseriesmixedareavaluelabelposition_ = tschchartseriesmixedareavaluelabelposition_;
        if (((from_bitField2_ & 0x00010000) == 0x00010000)) {
          to_bitField2_ |= 0x00010000;
        }
        result.tschchartseriesdefaultoutsidelabelparagraphstyleindex_ = tschchartseriesdefaultoutsidelabelparagraphstyleindex_;
        if (((from_bitField2_ & 0x00020000) == 0x00020000)) {
          to_bitField2_ |= 0x00020000;
        }
        result.tschchartseriesbaroutsidelabelparagraphstyleindex_ = tschchartseriesbaroutsidelabelparagraphstyleindex_;
        if (((from_bitField2_ & 0x00040000) == 0x00040000)) {
          to_bitField2_ |= 0x00040000;
        }
        result.tschchartseriesareaoutsidelabelparagraphstyleindex_ = tschchartseriesareaoutsidelabelparagraphstyleindex_;
        if (((from_bitField2_ & 0x00080000) == 0x00080000)) {
          to_bitField2_ |= 0x00080000;
        }
        result.tschchartseriespieoutsidelabelparagraphstyleindex_ = tschchartseriespieoutsidelabelparagraphstyleindex_;
        if (((from_bitField2_ & 0x00100000) == 0x00100000)) {
          to_bitField2_ |= 0x00100000;
        }
        result.tschchartseriesmixedoutsidelabelparagraphstyleindex_ = tschchartseriesmixedoutsidelabelparagraphstyleindex_;
        if (((from_bitField2_ & 0x00200000) == 0x00200000)) {
          to_bitField2_ |= 0x00200000;
        }
        result.tschchartseriesstackedbarvaluelabelposition_ = tschchartseriesstackedbarvaluelabelposition_;
        if (((from_bitField2_ & 0x00400000) == 0x00400000)) {
          to_bitField2_ |= 0x00400000;
        }
        result.tschchartseriesstackedareavaluelabelposition_ = tschchartseriesstackedareavaluelabelposition_;
        if (((from_bitField2_ & 0x00800000) == 0x00800000)) {
          to_bitField2_ |= 0x00800000;
        }
        if (tschchartseriesdefaulttrendlinestrokeBuilder_ == null) {
          result.tschchartseriesdefaulttrendlinestroke_ = tschchartseriesdefaulttrendlinestroke_;
        } else {
          result.tschchartseriesdefaulttrendlinestroke_ = tschchartseriesdefaulttrendlinestrokeBuilder_.build();
        }
        if (((from_bitField2_ & 0x01000000) == 0x01000000)) {
          to_bitField2_ |= 0x01000000;
        }
        if (tschchartseriesdefaulttrendlineshadowBuilder_ == null) {
          result.tschchartseriesdefaulttrendlineshadow_ = tschchartseriesdefaulttrendlineshadow_;
        } else {
          result.tschchartseriesdefaulttrendlineshadow_ = tschchartseriesdefaulttrendlineshadowBuilder_.build();
        }
        if (((from_bitField2_ & 0x02000000) == 0x02000000)) {
          to_bitField2_ |= 0x02000000;
        }
        if (tschchartseriesdefaulterrorbarshadowBuilder_ == null) {
          result.tschchartseriesdefaulterrorbarshadow_ = tschchartseriesdefaulterrorbarshadow_;
        } else {
          result.tschchartseriesdefaulterrorbarshadow_ = tschchartseriesdefaulterrorbarshadowBuilder_.build();
        }
        if (((from_bitField2_ & 0x04000000) == 0x04000000)) {
          to_bitField2_ |= 0x04000000;
        }
        if (tschchartseriesdefaulterrorbarstrokeBuilder_ == null) {
          result.tschchartseriesdefaulterrorbarstroke_ = tschchartseriesdefaulterrorbarstroke_;
        } else {
          result.tschchartseriesdefaulterrorbarstroke_ = tschchartseriesdefaulterrorbarstrokeBuilder_.build();
        }
        if (((from_bitField2_ & 0x08000000) == 0x08000000)) {
          to_bitField2_ |= 0x08000000;
        }
        if (tschchartseriesdefaulterrorbarstrokescatterxBuilder_ == null) {
          result.tschchartseriesdefaulterrorbarstrokescatterx_ = tschchartseriesdefaulterrorbarstrokescatterx_;
        } else {
          result.tschchartseriesdefaulterrorbarstrokescatterx_ = tschchartseriesdefaulterrorbarstrokescatterxBuilder_.build();
        }
        if (((from_bitField2_ & 0x10000000) == 0x10000000)) {
          to_bitField2_ |= 0x10000000;
        }
        if (tschchartseriesdefaulterrorbarlineendBuilder_ == null) {
          result.tschchartseriesdefaulterrorbarlineend_ = tschchartseriesdefaulterrorbarlineend_;
        } else {
          result.tschchartseriesdefaulterrorbarlineend_ = tschchartseriesdefaulterrorbarlineendBuilder_.build();
        }
        if (((from_bitField2_ & 0x20000000) == 0x20000000)) {
          to_bitField2_ |= 0x20000000;
        }
        if (tschchartseriesdefaulterrorbarlineendscatterxBuilder_ == null) {
          result.tschchartseriesdefaulterrorbarlineendscatterx_ = tschchartseriesdefaulterrorbarlineendscatterx_;
        } else {
          result.tschchartseriesdefaulterrorbarlineendscatterx_ = tschchartseriesdefaulterrorbarlineendscatterxBuilder_.build();
        }
        if (((from_bitField2_ & 0x40000000) == 0x40000000)) {
          to_bitField2_ |= 0x40000000;
        }
        if (tschchartseriesdefaultdeprecated3DfillBuilder_ == null) {
          result.tschchartseriesdefaultdeprecated3Dfill_ = tschchartseriesdefaultdeprecated3Dfill_;
        } else {
          result.tschchartseriesdefaultdeprecated3Dfill_ = tschchartseriesdefaultdeprecated3DfillBuilder_.build();
        }
        if (((from_bitField2_ & 0x80000000) == 0x80000000)) {
          to_bitField2_ |= 0x80000000;
        }
        if (tschchartseriesbardeprecated3DfillBuilder_ == null) {
          result.tschchartseriesbardeprecated3Dfill_ = tschchartseriesbardeprecated3Dfill_;
        } else {
          result.tschchartseriesbardeprecated3Dfill_ = tschchartseriesbardeprecated3DfillBuilder_.build();
        }
        if (((from_bitField3_ & 0x00000001) == 0x00000001)) {
          to_bitField3_ |= 0x00000001;
        }
        if (tschchartseriescolumndeprecated3DfillBuilder_ == null) {
          result.tschchartseriescolumndeprecated3Dfill_ = tschchartseriescolumndeprecated3Dfill_;
        } else {
          result.tschchartseriescolumndeprecated3Dfill_ = tschchartseriescolumndeprecated3DfillBuilder_.build();
        }
        if (((from_bitField3_ & 0x00000002) == 0x00000002)) {
          to_bitField3_ |= 0x00000002;
        }
        if (tschchartserieslinedeprecated3DfillBuilder_ == null) {
          result.tschchartserieslinedeprecated3Dfill_ = tschchartserieslinedeprecated3Dfill_;
        } else {
          result.tschchartserieslinedeprecated3Dfill_ = tschchartserieslinedeprecated3DfillBuilder_.build();
        }
        if (((from_bitField3_ & 0x00000004) == 0x00000004)) {
          to_bitField3_ |= 0x00000004;
        }
        if (tschchartseriesareadeprecated3DfillBuilder_ == null) {
          result.tschchartseriesareadeprecated3Dfill_ = tschchartseriesareadeprecated3Dfill_;
        } else {
          result.tschchartseriesareadeprecated3Dfill_ = tschchartseriesareadeprecated3DfillBuilder_.build();
        }
        if (((from_bitField3_ & 0x00000008) == 0x00000008)) {
          to_bitField3_ |= 0x00000008;
        }
        if (tschchartseriespiedeprecated3DfillBuilder_ == null) {
          result.tschchartseriespiedeprecated3Dfill_ = tschchartseriespiedeprecated3Dfill_;
        } else {
          result.tschchartseriespiedeprecated3Dfill_ = tschchartseriespiedeprecated3DfillBuilder_.build();
        }
        if (((from_bitField3_ & 0x00000010) == 0x00000010)) {
          to_bitField3_ |= 0x00000010;
        }
        if (tschchartseries3DbarfillBuilder_ == null) {
          result.tschchartseries3Dbarfill_ = tschchartseries3Dbarfill_;
        } else {
          result.tschchartseries3Dbarfill_ = tschchartseries3DbarfillBuilder_.build();
        }
        if (((from_bitField3_ & 0x00000020) == 0x00000020)) {
          to_bitField3_ |= 0x00000020;
        }
        if (tschchartseries3DcolumnfillBuilder_ == null) {
          result.tschchartseries3Dcolumnfill_ = tschchartseries3Dcolumnfill_;
        } else {
          result.tschchartseries3Dcolumnfill_ = tschchartseries3DcolumnfillBuilder_.build();
        }
        if (((from_bitField3_ & 0x00000040) == 0x00000040)) {
          to_bitField3_ |= 0x00000040;
        }
        if (tschchartseries3DlinefillBuilder_ == null) {
          result.tschchartseries3Dlinefill_ = tschchartseries3Dlinefill_;
        } else {
          result.tschchartseries3Dlinefill_ = tschchartseries3DlinefillBuilder_.build();
        }
        if (((from_bitField3_ & 0x00000080) == 0x00000080)) {
          to_bitField3_ |= 0x00000080;
        }
        if (tschchartseries3DareafillBuilder_ == null) {
          result.tschchartseries3Dareafill_ = tschchartseries3Dareafill_;
        } else {
          result.tschchartseries3Dareafill_ = tschchartseries3DareafillBuilder_.build();
        }
        if (((from_bitField3_ & 0x00000100) == 0x00000100)) {
          to_bitField3_ |= 0x00000100;
        }
        if (tschchartseries3DpiefillBuilder_ == null) {
          result.tschchartseries3Dpiefill_ = tschchartseries3Dpiefill_;
        } else {
          result.tschchartseries3Dpiefill_ = tschchartseries3DpiefillBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        result.bitField2_ = to_bitField2_;
        result.bitField3_ = to_bitField3_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive) {
          return mergeFrom((org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive other) {
        if (other == org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive.getDefaultInstance()) return this;
        if (other.hasSuper()) {
          mergeSuper(other.getSuper());
        }
        if (other.hasTschchartseriesdefaulttrendlineequationparagraphstyleindex()) {
          setTschchartseriesdefaulttrendlineequationparagraphstyleindex(other.getTschchartseriesdefaulttrendlineequationparagraphstyleindex());
        }
        if (other.hasTschchartseriesdefaulttrendlinersquaredparagraphstyleindex()) {
          setTschchartseriesdefaulttrendlinersquaredparagraphstyleindex(other.getTschchartseriesdefaulttrendlinersquaredparagraphstyleindex());
        }
        if (other.hasTschchartseriesdefaulttrendlineequationopacity()) {
          setTschchartseriesdefaulttrendlineequationopacity(other.getTschchartseriesdefaulttrendlineequationopacity());
        }
        if (other.hasTschchartseriesdefaulttrendlinersquaredopacity()) {
          setTschchartseriesdefaulttrendlinersquaredopacity(other.getTschchartseriesdefaulttrendlinersquaredopacity());
        }
        if (other.hasTschchartseriesbarfill()) {
          mergeTschchartseriesbarfill(other.getTschchartseriesbarfill());
        }
        if (other.hasTschchartseriesbarstroke()) {
          mergeTschchartseriesbarstroke(other.getTschchartseriesbarstroke());
        }
        if (other.hasTschchartseriesbarvaluelabelposition()) {
          setTschchartseriesbarvaluelabelposition(other.getTschchartseriesbarvaluelabelposition());
        }
        if (other.hasTschchartserieslinestroke()) {
          mergeTschchartserieslinestroke(other.getTschchartserieslinestroke());
        }
        if (other.hasTschchartserieslinesymbolfill()) {
          mergeTschchartserieslinesymbolfill(other.getTschchartserieslinesymbolfill());
        }
        if (other.hasTschchartserieslinesymbolstroke()) {
          mergeTschchartserieslinesymbolstroke(other.getTschchartserieslinesymbolstroke());
        }
        if (other.hasTschchartserieslinesymbolsize()) {
          setTschchartserieslinesymbolsize(other.getTschchartserieslinesymbolsize());
        }
        if (other.hasTschchartserieslinevaluelabelposition()) {
          setTschchartserieslinevaluelabelposition(other.getTschchartserieslinevaluelabelposition());
        }
        if (other.hasTschchartseriesareafill()) {
          mergeTschchartseriesareafill(other.getTschchartseriesareafill());
        }
        if (other.hasTschchartseriesareastroke()) {
          mergeTschchartseriesareastroke(other.getTschchartseriesareastroke());
        }
        if (other.hasTschchartseriesareavaluelabelposition()) {
          setTschchartseriesareavaluelabelposition(other.getTschchartseriesareavaluelabelposition());
        }
        if (other.hasTschchartseriesareasymbolfill()) {
          mergeTschchartseriesareasymbolfill(other.getTschchartseriesareasymbolfill());
        }
        if (other.hasTschchartseriesareasymbolstroke()) {
          mergeTschchartseriesareasymbolstroke(other.getTschchartseriesareasymbolstroke());
        }
        if (other.hasTschchartseriesareasymbolsize()) {
          setTschchartseriesareasymbolsize(other.getTschchartseriesareasymbolsize());
        }
        if (other.hasTschchartseriespiefill()) {
          mergeTschchartseriespiefill(other.getTschchartseriespiefill());
        }
        if (other.hasTschchartseriespiestroke()) {
          mergeTschchartseriespiestroke(other.getTschchartseriespiestroke());
        }
        if (other.hasTschchartseriesscatterstroke()) {
          mergeTschchartseriesscatterstroke(other.getTschchartseriesscatterstroke());
        }
        if (other.hasTschchartseriesscattersymbolfill()) {
          mergeTschchartseriesscattersymbolfill(other.getTschchartseriesscattersymbolfill());
        }
        if (other.hasTschchartseriesscattersymbolstroke()) {
          mergeTschchartseriesscattersymbolstroke(other.getTschchartseriesscattersymbolstroke());
        }
        if (other.hasTschchartseriesscattersymbolsize()) {
          setTschchartseriesscattersymbolsize(other.getTschchartseriesscattersymbolsize());
        }
        if (other.hasTschchartseriesscattervaluelabelposition()) {
          setTschchartseriesscattervaluelabelposition(other.getTschchartseriesscattervaluelabelposition());
        }
        if (other.hasTschchartseriesdefaultfill()) {
          mergeTschchartseriesdefaultfill(other.getTschchartseriesdefaultfill());
        }
        if (other.hasTschchartseriesdefaultvaluelabelposition()) {
          setTschchartseriesdefaultvaluelabelposition(other.getTschchartseriesdefaultvaluelabelposition());
        }
        if (other.hasTschchartseriespiedeprecatedserieslabelson()) {
          setTschchartseriespiedeprecatedserieslabelson(other.getTschchartseriespiedeprecatedserieslabelson());
        }
        if (other.hasTschchartseriescolumnfill()) {
          mergeTschchartseriescolumnfill(other.getTschchartseriescolumnfill());
        }
        if (other.hasTschchartseriespieshadow()) {
          mergeTschchartseriespieshadow(other.getTschchartseriespieshadow());
        }
        if (other.hasTschchartseriesbarshadow()) {
          mergeTschchartseriesbarshadow(other.getTschchartseriesbarshadow());
        }
        if (other.hasTschchartseriesareashadow()) {
          mergeTschchartseriesareashadow(other.getTschchartseriesareashadow());
        }
        if (other.hasTschchartseriesscattershadow()) {
          mergeTschchartseriesscattershadow(other.getTschchartseriesscattershadow());
        }
        if (other.hasTschchartseriesmixedlineshadow()) {
          mergeTschchartseriesmixedlineshadow(other.getTschchartseriesmixedlineshadow());
        }
        if (other.hasTschchartseriesmixedareashadow()) {
          mergeTschchartseriesmixedareashadow(other.getTschchartseriesmixedareashadow());
        }
        if (other.hasTschchartseriesmixedcolumnshadow()) {
          mergeTschchartseriesmixedcolumnshadow(other.getTschchartseriesmixedcolumnshadow());
        }
        if (other.hasTschchartserieslineshadow()) {
          mergeTschchartserieslineshadow(other.getTschchartserieslineshadow());
        }
        if (other.hasTschchartseriesdefaultshadow()) {
          mergeTschchartseriesdefaultshadow(other.getTschchartseriesdefaultshadow());
        }
        if (other.hasTschchartseriesbubblesymbolfill()) {
          mergeTschchartseriesbubblesymbolfill(other.getTschchartseriesbubblesymbolfill());
        }
        if (other.hasTschchartseriesbubblestroke()) {
          mergeTschchartseriesbubblestroke(other.getTschchartseriesbubblestroke());
        }
        if (other.hasTschchartseriesbubblesymbolstroke()) {
          mergeTschchartseriesbubblesymbolstroke(other.getTschchartseriesbubblesymbolstroke());
        }
        if (other.hasTschchartseriesbubblevaluelabelposition()) {
          setTschchartseriesbubblevaluelabelposition(other.getTschchartseriesbubblevaluelabelposition());
        }
        if (other.hasTschchartseriesbubbleshadow()) {
          mergeTschchartseriesbubbleshadow(other.getTschchartseriesbubbleshadow());
        }
        if (other.hasTschchartseriesbubblesymbolfilluseseriesstroke()) {
          setTschchartseriesbubblesymbolfilluseseriesstroke(other.getTschchartseriesbubblesymbolfilluseseriesstroke());
        }
        if (other.hasTschchartseries3Dbarshadow()) {
          mergeTschchartseries3Dbarshadow(other.getTschchartseries3Dbarshadow());
        }
        if (other.hasTschchartseries3Dcolumnshadow()) {
          mergeTschchartseries3Dcolumnshadow(other.getTschchartseries3Dcolumnshadow());
        }
        if (other.hasTschchartseries3Dlineshadow()) {
          mergeTschchartseries3Dlineshadow(other.getTschchartseries3Dlineshadow());
        }
        if (other.hasTschchartseries3Dareashadow()) {
          mergeTschchartseries3Dareashadow(other.getTschchartseries3Dareashadow());
        }
        if (other.hasTschchartseries3Dpieshadow()) {
          mergeTschchartseries3Dpieshadow(other.getTschchartseries3Dpieshadow());
        }
        if (other.hasTschchartseriesdefaultlabelparagraphstyleindex()) {
          setTschchartseriesdefaultlabelparagraphstyleindex(other.getTschchartseriesdefaultlabelparagraphstyleindex());
        }
        if (other.hasTschchartseriesbarlabelparagraphstyleindex()) {
          setTschchartseriesbarlabelparagraphstyleindex(other.getTschchartseriesbarlabelparagraphstyleindex());
        }
        if (other.hasTschchartserieslinelabelparagraphstyleindex()) {
          setTschchartserieslinelabelparagraphstyleindex(other.getTschchartserieslinelabelparagraphstyleindex());
        }
        if (other.hasTschchartseriesarealabelparagraphstyleindex()) {
          setTschchartseriesarealabelparagraphstyleindex(other.getTschchartseriesarealabelparagraphstyleindex());
        }
        if (other.hasTschchartseriespielabelparagraphstyleindex()) {
          setTschchartseriespielabelparagraphstyleindex(other.getTschchartseriespielabelparagraphstyleindex());
        }
        if (other.hasTschchartseriesmixedlabelparagraphstyleindex()) {
          setTschchartseriesmixedlabelparagraphstyleindex(other.getTschchartseriesmixedlabelparagraphstyleindex());
        }
        if (other.hasTschchartseriesdefaultopacity()) {
          setTschchartseriesdefaultopacity(other.getTschchartseriesdefaultopacity());
        }
        if (other.hasTschchartserieslinesymbolfilluseseriesstroke()) {
          setTschchartserieslinesymbolfilluseseriesstroke(other.getTschchartserieslinesymbolfilluseseriesstroke());
        }
        if (other.hasTschchartseriesareasymbolfilluseseriesstroke()) {
          setTschchartseriesareasymbolfilluseseriesstroke(other.getTschchartseriesareasymbolfilluseseriesstroke());
        }
        if (other.hasTschchartseriesscattersymbolfilluseseriesstroke()) {
          setTschchartseriesscattersymbolfilluseseriesstroke(other.getTschchartseriesscattersymbolfilluseseriesstroke());
        }
        if (other.hasTschchartseriesmixedlinesymbolfilluseseriesstroke()) {
          setTschchartseriesmixedlinesymbolfilluseseriesstroke(other.getTschchartseriesmixedlinesymbolfilluseseriesstroke());
        }
        if (other.hasTschchartseriesmixedareasymbolfilluseseriesstroke()) {
          setTschchartseriesmixedareasymbolfilluseseriesstroke(other.getTschchartseriesmixedareasymbolfilluseseriesstroke());
        }
        if (other.hasTschchartserieslinesymbolfilluseseriesfill()) {
          setTschchartserieslinesymbolfilluseseriesfill(other.getTschchartserieslinesymbolfilluseseriesfill());
        }
        if (other.hasTschchartseriesareasymbolfilluseseriesfill()) {
          setTschchartseriesareasymbolfilluseseriesfill(other.getTschchartseriesareasymbolfilluseseriesfill());
        }
        if (other.hasTschchartseriesmixedlinesymbolfilluseseriesfill()) {
          setTschchartseriesmixedlinesymbolfilluseseriesfill(other.getTschchartseriesmixedlinesymbolfilluseseriesfill());
        }
        if (other.hasTschchartseriesmixedareasymbolfilluseseriesfill()) {
          setTschchartseriesmixedareasymbolfilluseseriesfill(other.getTschchartseriesmixedareasymbolfilluseseriesfill());
        }
        if (other.hasTschchartseriesmixedcolumnfill()) {
          mergeTschchartseriesmixedcolumnfill(other.getTschchartseriesmixedcolumnfill());
        }
        if (other.hasTschchartseriesmixedareafill()) {
          mergeTschchartseriesmixedareafill(other.getTschchartseriesmixedareafill());
        }
        if (other.hasTschchartseriesmixedcolumnstroke()) {
          mergeTschchartseriesmixedcolumnstroke(other.getTschchartseriesmixedcolumnstroke());
        }
        if (other.hasTschchartseriesmixedlinestroke()) {
          mergeTschchartseriesmixedlinestroke(other.getTschchartseriesmixedlinestroke());
        }
        if (other.hasTschchartseriesmixedareastroke()) {
          mergeTschchartseriesmixedareastroke(other.getTschchartseriesmixedareastroke());
        }
        if (other.hasTschchartseriesmixedlinesymbolsize()) {
          setTschchartseriesmixedlinesymbolsize(other.getTschchartseriesmixedlinesymbolsize());
        }
        if (other.hasTschchartseriesmixedareasymbolsize()) {
          setTschchartseriesmixedareasymbolsize(other.getTschchartseriesmixedareasymbolsize());
        }
        if (other.hasTschchartseriesmixedlinesymbolfill()) {
          mergeTschchartseriesmixedlinesymbolfill(other.getTschchartseriesmixedlinesymbolfill());
        }
        if (other.hasTschchartseriesmixedareasymbolfill()) {
          mergeTschchartseriesmixedareasymbolfill(other.getTschchartseriesmixedareasymbolfill());
        }
        if (other.hasTschchartseriesmixedlinesymbolstroke()) {
          mergeTschchartseriesmixedlinesymbolstroke(other.getTschchartseriesmixedlinesymbolstroke());
        }
        if (other.hasTschchartseriesmixedareasymbolstroke()) {
          mergeTschchartseriesmixedareasymbolstroke(other.getTschchartseriesmixedareasymbolstroke());
        }
        if (other.hasTschchartseriesmixedcolumnvaluelabelposition()) {
          setTschchartseriesmixedcolumnvaluelabelposition(other.getTschchartseriesmixedcolumnvaluelabelposition());
        }
        if (other.hasTschchartseriesmixedlinevaluelabelposition()) {
          setTschchartseriesmixedlinevaluelabelposition(other.getTschchartseriesmixedlinevaluelabelposition());
        }
        if (other.hasTschchartseriesmixedareavaluelabelposition()) {
          setTschchartseriesmixedareavaluelabelposition(other.getTschchartseriesmixedareavaluelabelposition());
        }
        if (other.hasTschchartseriesdefaultoutsidelabelparagraphstyleindex()) {
          setTschchartseriesdefaultoutsidelabelparagraphstyleindex(other.getTschchartseriesdefaultoutsidelabelparagraphstyleindex());
        }
        if (other.hasTschchartseriesbaroutsidelabelparagraphstyleindex()) {
          setTschchartseriesbaroutsidelabelparagraphstyleindex(other.getTschchartseriesbaroutsidelabelparagraphstyleindex());
        }
        if (other.hasTschchartseriesareaoutsidelabelparagraphstyleindex()) {
          setTschchartseriesareaoutsidelabelparagraphstyleindex(other.getTschchartseriesareaoutsidelabelparagraphstyleindex());
        }
        if (other.hasTschchartseriespieoutsidelabelparagraphstyleindex()) {
          setTschchartseriespieoutsidelabelparagraphstyleindex(other.getTschchartseriespieoutsidelabelparagraphstyleindex());
        }
        if (other.hasTschchartseriesmixedoutsidelabelparagraphstyleindex()) {
          setTschchartseriesmixedoutsidelabelparagraphstyleindex(other.getTschchartseriesmixedoutsidelabelparagraphstyleindex());
        }
        if (other.hasTschchartseriesstackedbarvaluelabelposition()) {
          setTschchartseriesstackedbarvaluelabelposition(other.getTschchartseriesstackedbarvaluelabelposition());
        }
        if (other.hasTschchartseriesstackedareavaluelabelposition()) {
          setTschchartseriesstackedareavaluelabelposition(other.getTschchartseriesstackedareavaluelabelposition());
        }
        if (other.hasTschchartseriesdefaulttrendlinestroke()) {
          mergeTschchartseriesdefaulttrendlinestroke(other.getTschchartseriesdefaulttrendlinestroke());
        }
        if (other.hasTschchartseriesdefaulttrendlineshadow()) {
          mergeTschchartseriesdefaulttrendlineshadow(other.getTschchartseriesdefaulttrendlineshadow());
        }
        if (other.hasTschchartseriesdefaulterrorbarshadow()) {
          mergeTschchartseriesdefaulterrorbarshadow(other.getTschchartseriesdefaulterrorbarshadow());
        }
        if (other.hasTschchartseriesdefaulterrorbarstroke()) {
          mergeTschchartseriesdefaulterrorbarstroke(other.getTschchartseriesdefaulterrorbarstroke());
        }
        if (other.hasTschchartseriesdefaulterrorbarstrokescatterx()) {
          mergeTschchartseriesdefaulterrorbarstrokescatterx(other.getTschchartseriesdefaulterrorbarstrokescatterx());
        }
        if (other.hasTschchartseriesdefaulterrorbarlineend()) {
          mergeTschchartseriesdefaulterrorbarlineend(other.getTschchartseriesdefaulterrorbarlineend());
        }
        if (other.hasTschchartseriesdefaulterrorbarlineendscatterx()) {
          mergeTschchartseriesdefaulterrorbarlineendscatterx(other.getTschchartseriesdefaulterrorbarlineendscatterx());
        }
        if (other.hasTschchartseriesdefaultdeprecated3Dfill()) {
          mergeTschchartseriesdefaultdeprecated3Dfill(other.getTschchartseriesdefaultdeprecated3Dfill());
        }
        if (other.hasTschchartseriesbardeprecated3Dfill()) {
          mergeTschchartseriesbardeprecated3Dfill(other.getTschchartseriesbardeprecated3Dfill());
        }
        if (other.hasTschchartseriescolumndeprecated3Dfill()) {
          mergeTschchartseriescolumndeprecated3Dfill(other.getTschchartseriescolumndeprecated3Dfill());
        }
        if (other.hasTschchartserieslinedeprecated3Dfill()) {
          mergeTschchartserieslinedeprecated3Dfill(other.getTschchartserieslinedeprecated3Dfill());
        }
        if (other.hasTschchartseriesareadeprecated3Dfill()) {
          mergeTschchartseriesareadeprecated3Dfill(other.getTschchartseriesareadeprecated3Dfill());
        }
        if (other.hasTschchartseriespiedeprecated3Dfill()) {
          mergeTschchartseriespiedeprecated3Dfill(other.getTschchartseriespiedeprecated3Dfill());
        }
        if (other.hasTschchartseries3Dbarfill()) {
          mergeTschchartseries3Dbarfill(other.getTschchartseries3Dbarfill());
        }
        if (other.hasTschchartseries3Dcolumnfill()) {
          mergeTschchartseries3Dcolumnfill(other.getTschchartseries3Dcolumnfill());
        }
        if (other.hasTschchartseries3Dlinefill()) {
          mergeTschchartseries3Dlinefill(other.getTschchartseries3Dlinefill());
        }
        if (other.hasTschchartseries3Dareafill()) {
          mergeTschchartseries3Dareafill(other.getTschchartseries3Dareafill());
        }
        if (other.hasTschchartseries3Dpiefill()) {
          mergeTschchartseries3Dpiefill(other.getTschchartseries3Dpiefill());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSuper()) {
          return false;
        }
        if (!getSuper().isInitialized()) {
          return false;
        }
        if (hasTschchartseriesbarfill()) {
          if (!getTschchartseriesbarfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesbarstroke()) {
          if (!getTschchartseriesbarstroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartserieslinestroke()) {
          if (!getTschchartserieslinestroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartserieslinesymbolfill()) {
          if (!getTschchartserieslinesymbolfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartserieslinesymbolstroke()) {
          if (!getTschchartserieslinesymbolstroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesareafill()) {
          if (!getTschchartseriesareafill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesareastroke()) {
          if (!getTschchartseriesareastroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesareasymbolfill()) {
          if (!getTschchartseriesareasymbolfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesareasymbolstroke()) {
          if (!getTschchartseriesareasymbolstroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriespiefill()) {
          if (!getTschchartseriespiefill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriespiestroke()) {
          if (!getTschchartseriespiestroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesscatterstroke()) {
          if (!getTschchartseriesscatterstroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesscattersymbolfill()) {
          if (!getTschchartseriesscattersymbolfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesscattersymbolstroke()) {
          if (!getTschchartseriesscattersymbolstroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesdefaultfill()) {
          if (!getTschchartseriesdefaultfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriescolumnfill()) {
          if (!getTschchartseriescolumnfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriespieshadow()) {
          if (!getTschchartseriespieshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesbarshadow()) {
          if (!getTschchartseriesbarshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesareashadow()) {
          if (!getTschchartseriesareashadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesscattershadow()) {
          if (!getTschchartseriesscattershadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesmixedlineshadow()) {
          if (!getTschchartseriesmixedlineshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesmixedareashadow()) {
          if (!getTschchartseriesmixedareashadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesmixedcolumnshadow()) {
          if (!getTschchartseriesmixedcolumnshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartserieslineshadow()) {
          if (!getTschchartserieslineshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesdefaultshadow()) {
          if (!getTschchartseriesdefaultshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesbubblesymbolfill()) {
          if (!getTschchartseriesbubblesymbolfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesbubblestroke()) {
          if (!getTschchartseriesbubblestroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesbubblesymbolstroke()) {
          if (!getTschchartseriesbubblesymbolstroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesbubbleshadow()) {
          if (!getTschchartseriesbubbleshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseries3Dbarshadow()) {
          if (!getTschchartseries3Dbarshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseries3Dcolumnshadow()) {
          if (!getTschchartseries3Dcolumnshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseries3Dlineshadow()) {
          if (!getTschchartseries3Dlineshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseries3Dareashadow()) {
          if (!getTschchartseries3Dareashadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseries3Dpieshadow()) {
          if (!getTschchartseries3Dpieshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesmixedcolumnfill()) {
          if (!getTschchartseriesmixedcolumnfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesmixedareafill()) {
          if (!getTschchartseriesmixedareafill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesmixedcolumnstroke()) {
          if (!getTschchartseriesmixedcolumnstroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesmixedlinestroke()) {
          if (!getTschchartseriesmixedlinestroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesmixedareastroke()) {
          if (!getTschchartseriesmixedareastroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesmixedlinesymbolfill()) {
          if (!getTschchartseriesmixedlinesymbolfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesmixedareasymbolfill()) {
          if (!getTschchartseriesmixedareasymbolfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesmixedlinesymbolstroke()) {
          if (!getTschchartseriesmixedlinesymbolstroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesmixedareasymbolstroke()) {
          if (!getTschchartseriesmixedareasymbolstroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesdefaulttrendlinestroke()) {
          if (!getTschchartseriesdefaulttrendlinestroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesdefaulttrendlineshadow()) {
          if (!getTschchartseriesdefaulttrendlineshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesdefaulterrorbarshadow()) {
          if (!getTschchartseriesdefaulterrorbarshadow().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesdefaulterrorbarstroke()) {
          if (!getTschchartseriesdefaulterrorbarstroke().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesdefaulterrorbarstrokescatterx()) {
          if (!getTschchartseriesdefaulterrorbarstrokescatterx().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesdefaulterrorbarlineend()) {
          if (!getTschchartseriesdefaulterrorbarlineend().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesdefaulterrorbarlineendscatterx()) {
          if (!getTschchartseriesdefaulterrorbarlineendscatterx().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesdefaultdeprecated3Dfill()) {
          if (!getTschchartseriesdefaultdeprecated3Dfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesbardeprecated3Dfill()) {
          if (!getTschchartseriesbardeprecated3Dfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriescolumndeprecated3Dfill()) {
          if (!getTschchartseriescolumndeprecated3Dfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartserieslinedeprecated3Dfill()) {
          if (!getTschchartserieslinedeprecated3Dfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesareadeprecated3Dfill()) {
          if (!getTschchartseriesareadeprecated3Dfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriespiedeprecated3Dfill()) {
          if (!getTschchartseriespiedeprecated3Dfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseries3Dbarfill()) {
          if (!getTschchartseries3Dbarfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseries3Dcolumnfill()) {
          if (!getTschchartseries3Dcolumnfill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseries3Dlinefill()) {
          if (!getTschchartseries3Dlinefill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseries3Dareafill()) {
          if (!getTschchartseries3Dareafill().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseries3Dpiefill()) {
          if (!getTschchartseries3Dpiefill().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;
      private int bitField2_;
      private int bitField3_;

      private org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive super_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder> superBuilder_;
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public boolean hasSuper() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive getSuper() {
        if (superBuilder_ == null) {
          return super_ == null ? org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
        } else {
          return superBuilder_.getMessage();
        }
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder setSuper(org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive value) {
        if (superBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          super_ = value;
          onChanged();
        } else {
          superBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder setSuper(
          org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder builderForValue) {
        if (superBuilder_ == null) {
          super_ = builderForValue.build();
          onChanged();
        } else {
          superBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder mergeSuper(org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive value) {
        if (superBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              super_ != null &&
              super_ != org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance()) {
            super_ =
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.newBuilder(super_).mergeFrom(value).buildPartial();
          } else {
            super_ = value;
          }
          onChanged();
        } else {
          superBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder clearSuper() {
        if (superBuilder_ == null) {
          super_ = null;
          onChanged();
        } else {
          superBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder getSuperBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSuperFieldBuilder().getBuilder();
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder getSuperOrBuilder() {
        if (superBuilder_ != null) {
          return superBuilder_.getMessageOrBuilder();
        } else {
          return super_ == null ?
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
        }
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder> 
          getSuperFieldBuilder() {
        if (superBuilder_ == null) {
          superBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder>(
                  getSuper(),
                  getParentForChildren(),
                  isClean());
          super_ = null;
        }
        return superBuilder_;
      }

      private int tschchartseriesdefaulttrendlineequationparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlineequationparagraphstyleindex = 201;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlineequationparagraphstyleindex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlineequationparagraphstyleindex = 201;</code>
       */
      public int getTschchartseriesdefaulttrendlineequationparagraphstyleindex() {
        return tschchartseriesdefaulttrendlineequationparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlineequationparagraphstyleindex = 201;</code>
       */
      public Builder setTschchartseriesdefaulttrendlineequationparagraphstyleindex(int value) {
        bitField0_ |= 0x00000002;
        tschchartseriesdefaulttrendlineequationparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlineequationparagraphstyleindex = 201;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlineequationparagraphstyleindex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tschchartseriesdefaulttrendlineequationparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlinersquaredparagraphstyleindex = 202;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlinersquaredparagraphstyleindex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlinersquaredparagraphstyleindex = 202;</code>
       */
      public int getTschchartseriesdefaulttrendlinersquaredparagraphstyleindex() {
        return tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlinersquaredparagraphstyleindex = 202;</code>
       */
      public Builder setTschchartseriesdefaulttrendlinersquaredparagraphstyleindex(int value) {
        bitField0_ |= 0x00000004;
        tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlinersquaredparagraphstyleindex = 202;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlinersquaredparagraphstyleindex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tschchartseriesdefaulttrendlinersquaredparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private float tschchartseriesdefaulttrendlineequationopacity_ ;
      /**
       * <code>optional float tschchartseriesdefaulttrendlineequationopacity = 205;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlineequationopacity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlineequationopacity = 205;</code>
       */
      public float getTschchartseriesdefaulttrendlineequationopacity() {
        return tschchartseriesdefaulttrendlineequationopacity_;
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlineequationopacity = 205;</code>
       */
      public Builder setTschchartseriesdefaulttrendlineequationopacity(float value) {
        bitField0_ |= 0x00000008;
        tschchartseriesdefaulttrendlineequationopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlineequationopacity = 205;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlineequationopacity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        tschchartseriesdefaulttrendlineequationopacity_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartseriesdefaulttrendlinersquaredopacity_ ;
      /**
       * <code>optional float tschchartseriesdefaulttrendlinersquaredopacity = 206;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlinersquaredopacity() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlinersquaredopacity = 206;</code>
       */
      public float getTschchartseriesdefaulttrendlinersquaredopacity() {
        return tschchartseriesdefaulttrendlinersquaredopacity_;
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlinersquaredopacity = 206;</code>
       */
      public Builder setTschchartseriesdefaulttrendlinersquaredopacity(float value) {
        bitField0_ |= 0x00000010;
        tschchartseriesdefaulttrendlinersquaredopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlinersquaredopacity = 206;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlinersquaredopacity() {
        bitField0_ = (bitField0_ & ~0x00000010);
        tschchartseriesdefaulttrendlinersquaredopacity_ = 0F;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesbarfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseriesbarfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbarfill = 10;</code>
       */
      public boolean hasTschchartseriesbarfill() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbarfill = 10;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesbarfill() {
        if (tschchartseriesbarfillBuilder_ == null) {
          return tschchartseriesbarfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesbarfill_;
        } else {
          return tschchartseriesbarfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbarfill = 10;</code>
       */
      public Builder setTschchartseriesbarfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesbarfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesbarfill_ = value;
          onChanged();
        } else {
          tschchartseriesbarfillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbarfill = 10;</code>
       */
      public Builder setTschchartseriesbarfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseriesbarfillBuilder_ == null) {
          tschchartseriesbarfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesbarfillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbarfill = 10;</code>
       */
      public Builder mergeTschchartseriesbarfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesbarfillBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              tschchartseriesbarfill_ != null &&
              tschchartseriesbarfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseriesbarfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseriesbarfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesbarfill_ = value;
          }
          onChanged();
        } else {
          tschchartseriesbarfillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbarfill = 10;</code>
       */
      public Builder clearTschchartseriesbarfill() {
        if (tschchartseriesbarfillBuilder_ == null) {
          tschchartseriesbarfill_ = null;
          onChanged();
        } else {
          tschchartseriesbarfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbarfill = 10;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseriesbarfillBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getTschchartseriesbarfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbarfill = 10;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesbarfillOrBuilder() {
        if (tschchartseriesbarfillBuilder_ != null) {
          return tschchartseriesbarfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesbarfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesbarfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbarfill = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseriesbarfillFieldBuilder() {
        if (tschchartseriesbarfillBuilder_ == null) {
          tschchartseriesbarfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseriesbarfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesbarfill_ = null;
        }
        return tschchartseriesbarfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesbarstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesbarstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 11;</code>
       */
      public boolean hasTschchartseriesbarstroke() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 11;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesbarstroke() {
        if (tschchartseriesbarstrokeBuilder_ == null) {
          return tschchartseriesbarstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesbarstroke_;
        } else {
          return tschchartseriesbarstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 11;</code>
       */
      public Builder setTschchartseriesbarstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesbarstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesbarstroke_ = value;
          onChanged();
        } else {
          tschchartseriesbarstrokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 11;</code>
       */
      public Builder setTschchartseriesbarstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesbarstrokeBuilder_ == null) {
          tschchartseriesbarstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesbarstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 11;</code>
       */
      public Builder mergeTschchartseriesbarstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesbarstrokeBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              tschchartseriesbarstroke_ != null &&
              tschchartseriesbarstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesbarstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesbarstroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesbarstroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesbarstrokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 11;</code>
       */
      public Builder clearTschchartseriesbarstroke() {
        if (tschchartseriesbarstrokeBuilder_ == null) {
          tschchartseriesbarstroke_ = null;
          onChanged();
        } else {
          tschchartseriesbarstrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 11;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesbarstrokeBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getTschchartseriesbarstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 11;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesbarstrokeOrBuilder() {
        if (tschchartseriesbarstrokeBuilder_ != null) {
          return tschchartseriesbarstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesbarstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesbarstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbarstroke = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesbarstrokeFieldBuilder() {
        if (tschchartseriesbarstrokeBuilder_ == null) {
          tschchartseriesbarstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesbarstroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesbarstroke_ = null;
        }
        return tschchartseriesbarstrokeBuilder_;
      }

      private int tschchartseriesbarvaluelabelposition_ ;
      /**
       * <code>optional int32 tschchartseriesbarvaluelabelposition = 13;</code>
       */
      public boolean hasTschchartseriesbarvaluelabelposition() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 tschchartseriesbarvaluelabelposition = 13;</code>
       */
      public int getTschchartseriesbarvaluelabelposition() {
        return tschchartseriesbarvaluelabelposition_;
      }
      /**
       * <code>optional int32 tschchartseriesbarvaluelabelposition = 13;</code>
       */
      public Builder setTschchartseriesbarvaluelabelposition(int value) {
        bitField0_ |= 0x00000080;
        tschchartseriesbarvaluelabelposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesbarvaluelabelposition = 13;</code>
       */
      public Builder clearTschchartseriesbarvaluelabelposition() {
        bitField0_ = (bitField0_ & ~0x00000080);
        tschchartseriesbarvaluelabelposition_ = 0;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartserieslinestroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartserieslinestrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 16;</code>
       */
      public boolean hasTschchartserieslinestroke() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 16;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartserieslinestroke() {
        if (tschchartserieslinestrokeBuilder_ == null) {
          return tschchartserieslinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartserieslinestroke_;
        } else {
          return tschchartserieslinestrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 16;</code>
       */
      public Builder setTschchartserieslinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartserieslinestrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartserieslinestroke_ = value;
          onChanged();
        } else {
          tschchartserieslinestrokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 16;</code>
       */
      public Builder setTschchartserieslinestroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartserieslinestrokeBuilder_ == null) {
          tschchartserieslinestroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartserieslinestrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 16;</code>
       */
      public Builder mergeTschchartserieslinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartserieslinestrokeBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              tschchartserieslinestroke_ != null &&
              tschchartserieslinestroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartserieslinestroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartserieslinestroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartserieslinestroke_ = value;
          }
          onChanged();
        } else {
          tschchartserieslinestrokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 16;</code>
       */
      public Builder clearTschchartserieslinestroke() {
        if (tschchartserieslinestrokeBuilder_ == null) {
          tschchartserieslinestroke_ = null;
          onChanged();
        } else {
          tschchartserieslinestrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 16;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartserieslinestrokeBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getTschchartserieslinestrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 16;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartserieslinestrokeOrBuilder() {
        if (tschchartserieslinestrokeBuilder_ != null) {
          return tschchartserieslinestrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartserieslinestroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartserieslinestroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinestroke = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartserieslinestrokeFieldBuilder() {
        if (tschchartserieslinestrokeBuilder_ == null) {
          tschchartserieslinestrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartserieslinestroke(),
                  getParentForChildren(),
                  isClean());
          tschchartserieslinestroke_ = null;
        }
        return tschchartserieslinestrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartserieslinesymbolfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartserieslinesymbolfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 17;</code>
       */
      public boolean hasTschchartserieslinesymbolfill() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 17;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartserieslinesymbolfill() {
        if (tschchartserieslinesymbolfillBuilder_ == null) {
          return tschchartserieslinesymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartserieslinesymbolfill_;
        } else {
          return tschchartserieslinesymbolfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 17;</code>
       */
      public Builder setTschchartserieslinesymbolfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartserieslinesymbolfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartserieslinesymbolfill_ = value;
          onChanged();
        } else {
          tschchartserieslinesymbolfillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 17;</code>
       */
      public Builder setTschchartserieslinesymbolfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartserieslinesymbolfillBuilder_ == null) {
          tschchartserieslinesymbolfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartserieslinesymbolfillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 17;</code>
       */
      public Builder mergeTschchartserieslinesymbolfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartserieslinesymbolfillBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              tschchartserieslinesymbolfill_ != null &&
              tschchartserieslinesymbolfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartserieslinesymbolfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartserieslinesymbolfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartserieslinesymbolfill_ = value;
          }
          onChanged();
        } else {
          tschchartserieslinesymbolfillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 17;</code>
       */
      public Builder clearTschchartserieslinesymbolfill() {
        if (tschchartserieslinesymbolfillBuilder_ == null) {
          tschchartserieslinesymbolfill_ = null;
          onChanged();
        } else {
          tschchartserieslinesymbolfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 17;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartserieslinesymbolfillBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getTschchartserieslinesymbolfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 17;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartserieslinesymbolfillOrBuilder() {
        if (tschchartserieslinesymbolfillBuilder_ != null) {
          return tschchartserieslinesymbolfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartserieslinesymbolfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartserieslinesymbolfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartserieslinesymbolfill = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartserieslinesymbolfillFieldBuilder() {
        if (tschchartserieslinesymbolfillBuilder_ == null) {
          tschchartserieslinesymbolfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartserieslinesymbolfill(),
                  getParentForChildren(),
                  isClean());
          tschchartserieslinesymbolfill_ = null;
        }
        return tschchartserieslinesymbolfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartserieslinesymbolstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartserieslinesymbolstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 18;</code>
       */
      public boolean hasTschchartserieslinesymbolstroke() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 18;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartserieslinesymbolstroke() {
        if (tschchartserieslinesymbolstrokeBuilder_ == null) {
          return tschchartserieslinesymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartserieslinesymbolstroke_;
        } else {
          return tschchartserieslinesymbolstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 18;</code>
       */
      public Builder setTschchartserieslinesymbolstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartserieslinesymbolstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartserieslinesymbolstroke_ = value;
          onChanged();
        } else {
          tschchartserieslinesymbolstrokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 18;</code>
       */
      public Builder setTschchartserieslinesymbolstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartserieslinesymbolstrokeBuilder_ == null) {
          tschchartserieslinesymbolstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartserieslinesymbolstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 18;</code>
       */
      public Builder mergeTschchartserieslinesymbolstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartserieslinesymbolstrokeBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              tschchartserieslinesymbolstroke_ != null &&
              tschchartserieslinesymbolstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartserieslinesymbolstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartserieslinesymbolstroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartserieslinesymbolstroke_ = value;
          }
          onChanged();
        } else {
          tschchartserieslinesymbolstrokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 18;</code>
       */
      public Builder clearTschchartserieslinesymbolstroke() {
        if (tschchartserieslinesymbolstrokeBuilder_ == null) {
          tschchartserieslinesymbolstroke_ = null;
          onChanged();
        } else {
          tschchartserieslinesymbolstrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 18;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartserieslinesymbolstrokeBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getTschchartserieslinesymbolstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 18;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartserieslinesymbolstrokeOrBuilder() {
        if (tschchartserieslinesymbolstrokeBuilder_ != null) {
          return tschchartserieslinesymbolstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartserieslinesymbolstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartserieslinesymbolstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartserieslinesymbolstroke = 18;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartserieslinesymbolstrokeFieldBuilder() {
        if (tschchartserieslinesymbolstrokeBuilder_ == null) {
          tschchartserieslinesymbolstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartserieslinesymbolstroke(),
                  getParentForChildren(),
                  isClean());
          tschchartserieslinesymbolstroke_ = null;
        }
        return tschchartserieslinesymbolstrokeBuilder_;
      }

      private float tschchartserieslinesymbolsize_ ;
      /**
       * <code>optional float tschchartserieslinesymbolsize = 20;</code>
       */
      public boolean hasTschchartserieslinesymbolsize() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional float tschchartserieslinesymbolsize = 20;</code>
       */
      public float getTschchartserieslinesymbolsize() {
        return tschchartserieslinesymbolsize_;
      }
      /**
       * <code>optional float tschchartserieslinesymbolsize = 20;</code>
       */
      public Builder setTschchartserieslinesymbolsize(float value) {
        bitField0_ |= 0x00000800;
        tschchartserieslinesymbolsize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartserieslinesymbolsize = 20;</code>
       */
      public Builder clearTschchartserieslinesymbolsize() {
        bitField0_ = (bitField0_ & ~0x00000800);
        tschchartserieslinesymbolsize_ = 0F;
        onChanged();
        return this;
      }

      private int tschchartserieslinevaluelabelposition_ ;
      /**
       * <code>optional int32 tschchartserieslinevaluelabelposition = 22;</code>
       */
      public boolean hasTschchartserieslinevaluelabelposition() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 tschchartserieslinevaluelabelposition = 22;</code>
       */
      public int getTschchartserieslinevaluelabelposition() {
        return tschchartserieslinevaluelabelposition_;
      }
      /**
       * <code>optional int32 tschchartserieslinevaluelabelposition = 22;</code>
       */
      public Builder setTschchartserieslinevaluelabelposition(int value) {
        bitField0_ |= 0x00001000;
        tschchartserieslinevaluelabelposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartserieslinevaluelabelposition = 22;</code>
       */
      public Builder clearTschchartserieslinevaluelabelposition() {
        bitField0_ = (bitField0_ & ~0x00001000);
        tschchartserieslinevaluelabelposition_ = 0;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesareafill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseriesareafillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareafill = 25;</code>
       */
      public boolean hasTschchartseriesareafill() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareafill = 25;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesareafill() {
        if (tschchartseriesareafillBuilder_ == null) {
          return tschchartseriesareafill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesareafill_;
        } else {
          return tschchartseriesareafillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareafill = 25;</code>
       */
      public Builder setTschchartseriesareafill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesareafillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesareafill_ = value;
          onChanged();
        } else {
          tschchartseriesareafillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareafill = 25;</code>
       */
      public Builder setTschchartseriesareafill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseriesareafillBuilder_ == null) {
          tschchartseriesareafill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesareafillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareafill = 25;</code>
       */
      public Builder mergeTschchartseriesareafill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesareafillBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
              tschchartseriesareafill_ != null &&
              tschchartseriesareafill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseriesareafill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseriesareafill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesareafill_ = value;
          }
          onChanged();
        } else {
          tschchartseriesareafillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareafill = 25;</code>
       */
      public Builder clearTschchartseriesareafill() {
        if (tschchartseriesareafillBuilder_ == null) {
          tschchartseriesareafill_ = null;
          onChanged();
        } else {
          tschchartseriesareafillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareafill = 25;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseriesareafillBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getTschchartseriesareafillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareafill = 25;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesareafillOrBuilder() {
        if (tschchartseriesareafillBuilder_ != null) {
          return tschchartseriesareafillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesareafill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesareafill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareafill = 25;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseriesareafillFieldBuilder() {
        if (tschchartseriesareafillBuilder_ == null) {
          tschchartseriesareafillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseriesareafill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesareafill_ = null;
        }
        return tschchartseriesareafillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesareastroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesareastrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 26;</code>
       */
      public boolean hasTschchartseriesareastroke() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 26;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesareastroke() {
        if (tschchartseriesareastrokeBuilder_ == null) {
          return tschchartseriesareastroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesareastroke_;
        } else {
          return tschchartseriesareastrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 26;</code>
       */
      public Builder setTschchartseriesareastroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesareastrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesareastroke_ = value;
          onChanged();
        } else {
          tschchartseriesareastrokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 26;</code>
       */
      public Builder setTschchartseriesareastroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesareastrokeBuilder_ == null) {
          tschchartseriesareastroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesareastrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 26;</code>
       */
      public Builder mergeTschchartseriesareastroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesareastrokeBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000) &&
              tschchartseriesareastroke_ != null &&
              tschchartseriesareastroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesareastroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesareastroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesareastroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesareastrokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 26;</code>
       */
      public Builder clearTschchartseriesareastroke() {
        if (tschchartseriesareastrokeBuilder_ == null) {
          tschchartseriesareastroke_ = null;
          onChanged();
        } else {
          tschchartseriesareastrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 26;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesareastrokeBuilder() {
        bitField0_ |= 0x00004000;
        onChanged();
        return getTschchartseriesareastrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 26;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesareastrokeOrBuilder() {
        if (tschchartseriesareastrokeBuilder_ != null) {
          return tschchartseriesareastrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesareastroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesareastroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareastroke = 26;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesareastrokeFieldBuilder() {
        if (tschchartseriesareastrokeBuilder_ == null) {
          tschchartseriesareastrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesareastroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesareastroke_ = null;
        }
        return tschchartseriesareastrokeBuilder_;
      }

      private int tschchartseriesareavaluelabelposition_ ;
      /**
       * <code>optional int32 tschchartseriesareavaluelabelposition = 28;</code>
       */
      public boolean hasTschchartseriesareavaluelabelposition() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 tschchartseriesareavaluelabelposition = 28;</code>
       */
      public int getTschchartseriesareavaluelabelposition() {
        return tschchartseriesareavaluelabelposition_;
      }
      /**
       * <code>optional int32 tschchartseriesareavaluelabelposition = 28;</code>
       */
      public Builder setTschchartseriesareavaluelabelposition(int value) {
        bitField0_ |= 0x00008000;
        tschchartseriesareavaluelabelposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesareavaluelabelposition = 28;</code>
       */
      public Builder clearTschchartseriesareavaluelabelposition() {
        bitField0_ = (bitField0_ & ~0x00008000);
        tschchartseriesareavaluelabelposition_ = 0;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesareasymbolfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseriesareasymbolfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 29;</code>
       */
      public boolean hasTschchartseriesareasymbolfill() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 29;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesareasymbolfill() {
        if (tschchartseriesareasymbolfillBuilder_ == null) {
          return tschchartseriesareasymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesareasymbolfill_;
        } else {
          return tschchartseriesareasymbolfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 29;</code>
       */
      public Builder setTschchartseriesareasymbolfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesareasymbolfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesareasymbolfill_ = value;
          onChanged();
        } else {
          tschchartseriesareasymbolfillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 29;</code>
       */
      public Builder setTschchartseriesareasymbolfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseriesareasymbolfillBuilder_ == null) {
          tschchartseriesareasymbolfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesareasymbolfillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 29;</code>
       */
      public Builder mergeTschchartseriesareasymbolfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesareasymbolfillBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000) &&
              tschchartseriesareasymbolfill_ != null &&
              tschchartseriesareasymbolfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseriesareasymbolfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseriesareasymbolfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesareasymbolfill_ = value;
          }
          onChanged();
        } else {
          tschchartseriesareasymbolfillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 29;</code>
       */
      public Builder clearTschchartseriesareasymbolfill() {
        if (tschchartseriesareasymbolfillBuilder_ == null) {
          tschchartseriesareasymbolfill_ = null;
          onChanged();
        } else {
          tschchartseriesareasymbolfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 29;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseriesareasymbolfillBuilder() {
        bitField0_ |= 0x00010000;
        onChanged();
        return getTschchartseriesareasymbolfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 29;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesareasymbolfillOrBuilder() {
        if (tschchartseriesareasymbolfillBuilder_ != null) {
          return tschchartseriesareasymbolfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesareasymbolfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesareasymbolfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesareasymbolfill = 29;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseriesareasymbolfillFieldBuilder() {
        if (tschchartseriesareasymbolfillBuilder_ == null) {
          tschchartseriesareasymbolfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseriesareasymbolfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesareasymbolfill_ = null;
        }
        return tschchartseriesareasymbolfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesareasymbolstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesareasymbolstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 30;</code>
       */
      public boolean hasTschchartseriesareasymbolstroke() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 30;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesareasymbolstroke() {
        if (tschchartseriesareasymbolstrokeBuilder_ == null) {
          return tschchartseriesareasymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesareasymbolstroke_;
        } else {
          return tschchartseriesareasymbolstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 30;</code>
       */
      public Builder setTschchartseriesareasymbolstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesareasymbolstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesareasymbolstroke_ = value;
          onChanged();
        } else {
          tschchartseriesareasymbolstrokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 30;</code>
       */
      public Builder setTschchartseriesareasymbolstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesareasymbolstrokeBuilder_ == null) {
          tschchartseriesareasymbolstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesareasymbolstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 30;</code>
       */
      public Builder mergeTschchartseriesareasymbolstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesareasymbolstrokeBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000) &&
              tschchartseriesareasymbolstroke_ != null &&
              tschchartseriesareasymbolstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesareasymbolstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesareasymbolstroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesareasymbolstroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesareasymbolstrokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 30;</code>
       */
      public Builder clearTschchartseriesareasymbolstroke() {
        if (tschchartseriesareasymbolstrokeBuilder_ == null) {
          tschchartseriesareasymbolstroke_ = null;
          onChanged();
        } else {
          tschchartseriesareasymbolstrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 30;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesareasymbolstrokeBuilder() {
        bitField0_ |= 0x00020000;
        onChanged();
        return getTschchartseriesareasymbolstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 30;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesareasymbolstrokeOrBuilder() {
        if (tschchartseriesareasymbolstrokeBuilder_ != null) {
          return tschchartseriesareasymbolstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesareasymbolstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesareasymbolstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesareasymbolstroke = 30;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesareasymbolstrokeFieldBuilder() {
        if (tschchartseriesareasymbolstrokeBuilder_ == null) {
          tschchartseriesareasymbolstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesareasymbolstroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesareasymbolstroke_ = null;
        }
        return tschchartseriesareasymbolstrokeBuilder_;
      }

      private float tschchartseriesareasymbolsize_ ;
      /**
       * <code>optional float tschchartseriesareasymbolsize = 32;</code>
       */
      public boolean hasTschchartseriesareasymbolsize() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional float tschchartseriesareasymbolsize = 32;</code>
       */
      public float getTschchartseriesareasymbolsize() {
        return tschchartseriesareasymbolsize_;
      }
      /**
       * <code>optional float tschchartseriesareasymbolsize = 32;</code>
       */
      public Builder setTschchartseriesareasymbolsize(float value) {
        bitField0_ |= 0x00040000;
        tschchartseriesareasymbolsize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesareasymbolsize = 32;</code>
       */
      public Builder clearTschchartseriesareasymbolsize() {
        bitField0_ = (bitField0_ & ~0x00040000);
        tschchartseriesareasymbolsize_ = 0F;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriespiefill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseriespiefillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseriespiefill = 35;</code>
       */
      public boolean hasTschchartseriespiefill() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriespiefill = 35;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriespiefill() {
        if (tschchartseriespiefillBuilder_ == null) {
          return tschchartseriespiefill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriespiefill_;
        } else {
          return tschchartseriespiefillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriespiefill = 35;</code>
       */
      public Builder setTschchartseriespiefill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriespiefillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriespiefill_ = value;
          onChanged();
        } else {
          tschchartseriespiefillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriespiefill = 35;</code>
       */
      public Builder setTschchartseriespiefill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseriespiefillBuilder_ == null) {
          tschchartseriespiefill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriespiefillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriespiefill = 35;</code>
       */
      public Builder mergeTschchartseriespiefill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriespiefillBuilder_ == null) {
          if (((bitField0_ & 0x00080000) == 0x00080000) &&
              tschchartseriespiefill_ != null &&
              tschchartseriespiefill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseriespiefill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseriespiefill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriespiefill_ = value;
          }
          onChanged();
        } else {
          tschchartseriespiefillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriespiefill = 35;</code>
       */
      public Builder clearTschchartseriespiefill() {
        if (tschchartseriespiefillBuilder_ == null) {
          tschchartseriespiefill_ = null;
          onChanged();
        } else {
          tschchartseriespiefillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriespiefill = 35;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseriespiefillBuilder() {
        bitField0_ |= 0x00080000;
        onChanged();
        return getTschchartseriespiefillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriespiefill = 35;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriespiefillOrBuilder() {
        if (tschchartseriespiefillBuilder_ != null) {
          return tschchartseriespiefillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriespiefill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriespiefill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriespiefill = 35;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseriespiefillFieldBuilder() {
        if (tschchartseriespiefillBuilder_ == null) {
          tschchartseriespiefillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseriespiefill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriespiefill_ = null;
        }
        return tschchartseriespiefillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriespiestroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriespiestrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 36;</code>
       */
      public boolean hasTschchartseriespiestroke() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 36;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriespiestroke() {
        if (tschchartseriespiestrokeBuilder_ == null) {
          return tschchartseriespiestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriespiestroke_;
        } else {
          return tschchartseriespiestrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 36;</code>
       */
      public Builder setTschchartseriespiestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriespiestrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriespiestroke_ = value;
          onChanged();
        } else {
          tschchartseriespiestrokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 36;</code>
       */
      public Builder setTschchartseriespiestroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriespiestrokeBuilder_ == null) {
          tschchartseriespiestroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriespiestrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 36;</code>
       */
      public Builder mergeTschchartseriespiestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriespiestrokeBuilder_ == null) {
          if (((bitField0_ & 0x00100000) == 0x00100000) &&
              tschchartseriespiestroke_ != null &&
              tschchartseriespiestroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriespiestroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriespiestroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriespiestroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriespiestrokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 36;</code>
       */
      public Builder clearTschchartseriespiestroke() {
        if (tschchartseriespiestrokeBuilder_ == null) {
          tschchartseriespiestroke_ = null;
          onChanged();
        } else {
          tschchartseriespiestrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00100000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 36;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriespiestrokeBuilder() {
        bitField0_ |= 0x00100000;
        onChanged();
        return getTschchartseriespiestrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 36;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriespiestrokeOrBuilder() {
        if (tschchartseriespiestrokeBuilder_ != null) {
          return tschchartseriespiestrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriespiestroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriespiestroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriespiestroke = 36;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriespiestrokeFieldBuilder() {
        if (tschchartseriespiestrokeBuilder_ == null) {
          tschchartseriespiestrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriespiestroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriespiestroke_ = null;
        }
        return tschchartseriespiestrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesscatterstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesscatterstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 40;</code>
       */
      public boolean hasTschchartseriesscatterstroke() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 40;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesscatterstroke() {
        if (tschchartseriesscatterstrokeBuilder_ == null) {
          return tschchartseriesscatterstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesscatterstroke_;
        } else {
          return tschchartseriesscatterstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 40;</code>
       */
      public Builder setTschchartseriesscatterstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesscatterstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesscatterstroke_ = value;
          onChanged();
        } else {
          tschchartseriesscatterstrokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 40;</code>
       */
      public Builder setTschchartseriesscatterstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesscatterstrokeBuilder_ == null) {
          tschchartseriesscatterstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesscatterstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 40;</code>
       */
      public Builder mergeTschchartseriesscatterstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesscatterstrokeBuilder_ == null) {
          if (((bitField0_ & 0x00200000) == 0x00200000) &&
              tschchartseriesscatterstroke_ != null &&
              tschchartseriesscatterstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesscatterstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesscatterstroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesscatterstroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesscatterstrokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 40;</code>
       */
      public Builder clearTschchartseriesscatterstroke() {
        if (tschchartseriesscatterstrokeBuilder_ == null) {
          tschchartseriesscatterstroke_ = null;
          onChanged();
        } else {
          tschchartseriesscatterstrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 40;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesscatterstrokeBuilder() {
        bitField0_ |= 0x00200000;
        onChanged();
        return getTschchartseriesscatterstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 40;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesscatterstrokeOrBuilder() {
        if (tschchartseriesscatterstrokeBuilder_ != null) {
          return tschchartseriesscatterstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesscatterstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesscatterstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscatterstroke = 40;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesscatterstrokeFieldBuilder() {
        if (tschchartseriesscatterstrokeBuilder_ == null) {
          tschchartseriesscatterstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesscatterstroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesscatterstroke_ = null;
        }
        return tschchartseriesscatterstrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesscattersymbolfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseriesscattersymbolfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 41;</code>
       */
      public boolean hasTschchartseriesscattersymbolfill() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 41;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesscattersymbolfill() {
        if (tschchartseriesscattersymbolfillBuilder_ == null) {
          return tschchartseriesscattersymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesscattersymbolfill_;
        } else {
          return tschchartseriesscattersymbolfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 41;</code>
       */
      public Builder setTschchartseriesscattersymbolfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesscattersymbolfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesscattersymbolfill_ = value;
          onChanged();
        } else {
          tschchartseriesscattersymbolfillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 41;</code>
       */
      public Builder setTschchartseriesscattersymbolfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseriesscattersymbolfillBuilder_ == null) {
          tschchartseriesscattersymbolfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesscattersymbolfillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 41;</code>
       */
      public Builder mergeTschchartseriesscattersymbolfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesscattersymbolfillBuilder_ == null) {
          if (((bitField0_ & 0x00400000) == 0x00400000) &&
              tschchartseriesscattersymbolfill_ != null &&
              tschchartseriesscattersymbolfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseriesscattersymbolfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseriesscattersymbolfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesscattersymbolfill_ = value;
          }
          onChanged();
        } else {
          tschchartseriesscattersymbolfillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 41;</code>
       */
      public Builder clearTschchartseriesscattersymbolfill() {
        if (tschchartseriesscattersymbolfillBuilder_ == null) {
          tschchartseriesscattersymbolfill_ = null;
          onChanged();
        } else {
          tschchartseriesscattersymbolfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00400000);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 41;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseriesscattersymbolfillBuilder() {
        bitField0_ |= 0x00400000;
        onChanged();
        return getTschchartseriesscattersymbolfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 41;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesscattersymbolfillOrBuilder() {
        if (tschchartseriesscattersymbolfillBuilder_ != null) {
          return tschchartseriesscattersymbolfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesscattersymbolfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesscattersymbolfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesscattersymbolfill = 41;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseriesscattersymbolfillFieldBuilder() {
        if (tschchartseriesscattersymbolfillBuilder_ == null) {
          tschchartseriesscattersymbolfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseriesscattersymbolfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesscattersymbolfill_ = null;
        }
        return tschchartseriesscattersymbolfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesscattersymbolstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesscattersymbolstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 42;</code>
       */
      public boolean hasTschchartseriesscattersymbolstroke() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 42;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesscattersymbolstroke() {
        if (tschchartseriesscattersymbolstrokeBuilder_ == null) {
          return tschchartseriesscattersymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesscattersymbolstroke_;
        } else {
          return tschchartseriesscattersymbolstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 42;</code>
       */
      public Builder setTschchartseriesscattersymbolstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesscattersymbolstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesscattersymbolstroke_ = value;
          onChanged();
        } else {
          tschchartseriesscattersymbolstrokeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 42;</code>
       */
      public Builder setTschchartseriesscattersymbolstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesscattersymbolstrokeBuilder_ == null) {
          tschchartseriesscattersymbolstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesscattersymbolstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 42;</code>
       */
      public Builder mergeTschchartseriesscattersymbolstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesscattersymbolstrokeBuilder_ == null) {
          if (((bitField0_ & 0x00800000) == 0x00800000) &&
              tschchartseriesscattersymbolstroke_ != null &&
              tschchartseriesscattersymbolstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesscattersymbolstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesscattersymbolstroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesscattersymbolstroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesscattersymbolstrokeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 42;</code>
       */
      public Builder clearTschchartseriesscattersymbolstroke() {
        if (tschchartseriesscattersymbolstrokeBuilder_ == null) {
          tschchartseriesscattersymbolstroke_ = null;
          onChanged();
        } else {
          tschchartseriesscattersymbolstrokeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00800000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 42;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesscattersymbolstrokeBuilder() {
        bitField0_ |= 0x00800000;
        onChanged();
        return getTschchartseriesscattersymbolstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 42;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesscattersymbolstrokeOrBuilder() {
        if (tschchartseriesscattersymbolstrokeBuilder_ != null) {
          return tschchartseriesscattersymbolstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesscattersymbolstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesscattersymbolstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesscattersymbolstroke = 42;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesscattersymbolstrokeFieldBuilder() {
        if (tschchartseriesscattersymbolstrokeBuilder_ == null) {
          tschchartseriesscattersymbolstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesscattersymbolstroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesscattersymbolstroke_ = null;
        }
        return tschchartseriesscattersymbolstrokeBuilder_;
      }

      private float tschchartseriesscattersymbolsize_ ;
      /**
       * <code>optional float tschchartseriesscattersymbolsize = 44;</code>
       */
      public boolean hasTschchartseriesscattersymbolsize() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional float tschchartseriesscattersymbolsize = 44;</code>
       */
      public float getTschchartseriesscattersymbolsize() {
        return tschchartseriesscattersymbolsize_;
      }
      /**
       * <code>optional float tschchartseriesscattersymbolsize = 44;</code>
       */
      public Builder setTschchartseriesscattersymbolsize(float value) {
        bitField0_ |= 0x01000000;
        tschchartseriesscattersymbolsize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesscattersymbolsize = 44;</code>
       */
      public Builder clearTschchartseriesscattersymbolsize() {
        bitField0_ = (bitField0_ & ~0x01000000);
        tschchartseriesscattersymbolsize_ = 0F;
        onChanged();
        return this;
      }

      private int tschchartseriesscattervaluelabelposition_ ;
      /**
       * <code>optional int32 tschchartseriesscattervaluelabelposition = 46;</code>
       */
      public boolean hasTschchartseriesscattervaluelabelposition() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int32 tschchartseriesscattervaluelabelposition = 46;</code>
       */
      public int getTschchartseriesscattervaluelabelposition() {
        return tschchartseriesscattervaluelabelposition_;
      }
      /**
       * <code>optional int32 tschchartseriesscattervaluelabelposition = 46;</code>
       */
      public Builder setTschchartseriesscattervaluelabelposition(int value) {
        bitField0_ |= 0x02000000;
        tschchartseriesscattervaluelabelposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesscattervaluelabelposition = 46;</code>
       */
      public Builder clearTschchartseriesscattervaluelabelposition() {
        bitField0_ = (bitField0_ & ~0x02000000);
        tschchartseriesscattervaluelabelposition_ = 0;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesdefaultfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseriesdefaultfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 50;</code>
       */
      public boolean hasTschchartseriesdefaultfill() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 50;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesdefaultfill() {
        if (tschchartseriesdefaultfillBuilder_ == null) {
          return tschchartseriesdefaultfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesdefaultfill_;
        } else {
          return tschchartseriesdefaultfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 50;</code>
       */
      public Builder setTschchartseriesdefaultfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesdefaultfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaultfill_ = value;
          onChanged();
        } else {
          tschchartseriesdefaultfillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 50;</code>
       */
      public Builder setTschchartseriesdefaultfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseriesdefaultfillBuilder_ == null) {
          tschchartseriesdefaultfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaultfillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 50;</code>
       */
      public Builder mergeTschchartseriesdefaultfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesdefaultfillBuilder_ == null) {
          if (((bitField0_ & 0x04000000) == 0x04000000) &&
              tschchartseriesdefaultfill_ != null &&
              tschchartseriesdefaultfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseriesdefaultfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseriesdefaultfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaultfill_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaultfillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 50;</code>
       */
      public Builder clearTschchartseriesdefaultfill() {
        if (tschchartseriesdefaultfillBuilder_ == null) {
          tschchartseriesdefaultfill_ = null;
          onChanged();
        } else {
          tschchartseriesdefaultfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x04000000);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 50;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseriesdefaultfillBuilder() {
        bitField0_ |= 0x04000000;
        onChanged();
        return getTschchartseriesdefaultfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 50;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesdefaultfillOrBuilder() {
        if (tschchartseriesdefaultfillBuilder_ != null) {
          return tschchartseriesdefaultfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaultfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesdefaultfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesdefaultfill = 50;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseriesdefaultfillFieldBuilder() {
        if (tschchartseriesdefaultfillBuilder_ == null) {
          tschchartseriesdefaultfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseriesdefaultfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaultfill_ = null;
        }
        return tschchartseriesdefaultfillBuilder_;
      }

      private int tschchartseriesdefaultvaluelabelposition_ ;
      /**
       * <code>optional int32 tschchartseriesdefaultvaluelabelposition = 52;</code>
       */
      public boolean hasTschchartseriesdefaultvaluelabelposition() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int32 tschchartseriesdefaultvaluelabelposition = 52;</code>
       */
      public int getTschchartseriesdefaultvaluelabelposition() {
        return tschchartseriesdefaultvaluelabelposition_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaultvaluelabelposition = 52;</code>
       */
      public Builder setTschchartseriesdefaultvaluelabelposition(int value) {
        bitField0_ |= 0x08000000;
        tschchartseriesdefaultvaluelabelposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaultvaluelabelposition = 52;</code>
       */
      public Builder clearTschchartseriesdefaultvaluelabelposition() {
        bitField0_ = (bitField0_ & ~0x08000000);
        tschchartseriesdefaultvaluelabelposition_ = 0;
        onChanged();
        return this;
      }

      private boolean tschchartseriespiedeprecatedserieslabelson_ ;
      /**
       * <code>optional bool tschchartseriespiedeprecatedserieslabelson = 60;</code>
       */
      public boolean hasTschchartseriespiedeprecatedserieslabelson() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional bool tschchartseriespiedeprecatedserieslabelson = 60;</code>
       */
      public boolean getTschchartseriespiedeprecatedserieslabelson() {
        return tschchartseriespiedeprecatedserieslabelson_;
      }
      /**
       * <code>optional bool tschchartseriespiedeprecatedserieslabelson = 60;</code>
       */
      public Builder setTschchartseriespiedeprecatedserieslabelson(boolean value) {
        bitField0_ |= 0x10000000;
        tschchartseriespiedeprecatedserieslabelson_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriespiedeprecatedserieslabelson = 60;</code>
       */
      public Builder clearTschchartseriespiedeprecatedserieslabelson() {
        bitField0_ = (bitField0_ & ~0x10000000);
        tschchartseriespiedeprecatedserieslabelson_ = false;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriescolumnfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseriescolumnfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 62;</code>
       */
      public boolean hasTschchartseriescolumnfill() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 62;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriescolumnfill() {
        if (tschchartseriescolumnfillBuilder_ == null) {
          return tschchartseriescolumnfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriescolumnfill_;
        } else {
          return tschchartseriescolumnfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 62;</code>
       */
      public Builder setTschchartseriescolumnfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriescolumnfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriescolumnfill_ = value;
          onChanged();
        } else {
          tschchartseriescolumnfillBuilder_.setMessage(value);
        }
        bitField0_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 62;</code>
       */
      public Builder setTschchartseriescolumnfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseriescolumnfillBuilder_ == null) {
          tschchartseriescolumnfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriescolumnfillBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 62;</code>
       */
      public Builder mergeTschchartseriescolumnfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriescolumnfillBuilder_ == null) {
          if (((bitField0_ & 0x20000000) == 0x20000000) &&
              tschchartseriescolumnfill_ != null &&
              tschchartseriescolumnfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseriescolumnfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseriescolumnfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriescolumnfill_ = value;
          }
          onChanged();
        } else {
          tschchartseriescolumnfillBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 62;</code>
       */
      public Builder clearTschchartseriescolumnfill() {
        if (tschchartseriescolumnfillBuilder_ == null) {
          tschchartseriescolumnfill_ = null;
          onChanged();
        } else {
          tschchartseriescolumnfillBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x20000000);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 62;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseriescolumnfillBuilder() {
        bitField0_ |= 0x20000000;
        onChanged();
        return getTschchartseriescolumnfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 62;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriescolumnfillOrBuilder() {
        if (tschchartseriescolumnfillBuilder_ != null) {
          return tschchartseriescolumnfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriescolumnfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriescolumnfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriescolumnfill = 62;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseriescolumnfillFieldBuilder() {
        if (tschchartseriescolumnfillBuilder_ == null) {
          tschchartseriescolumnfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseriescolumnfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriescolumnfill_ = null;
        }
        return tschchartseriescolumnfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriespieshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseriespieshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 100;</code>
       */
      public boolean hasTschchartseriespieshadow() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 100;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriespieshadow() {
        if (tschchartseriespieshadowBuilder_ == null) {
          return tschchartseriespieshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriespieshadow_;
        } else {
          return tschchartseriespieshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 100;</code>
       */
      public Builder setTschchartseriespieshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriespieshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriespieshadow_ = value;
          onChanged();
        } else {
          tschchartseriespieshadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 100;</code>
       */
      public Builder setTschchartseriespieshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseriespieshadowBuilder_ == null) {
          tschchartseriespieshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriespieshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 100;</code>
       */
      public Builder mergeTschchartseriespieshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriespieshadowBuilder_ == null) {
          if (((bitField0_ & 0x40000000) == 0x40000000) &&
              tschchartseriespieshadow_ != null &&
              tschchartseriespieshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseriespieshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseriespieshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriespieshadow_ = value;
          }
          onChanged();
        } else {
          tschchartseriespieshadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 100;</code>
       */
      public Builder clearTschchartseriespieshadow() {
        if (tschchartseriespieshadowBuilder_ == null) {
          tschchartseriespieshadow_ = null;
          onChanged();
        } else {
          tschchartseriespieshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x40000000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 100;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseriespieshadowBuilder() {
        bitField0_ |= 0x40000000;
        onChanged();
        return getTschchartseriespieshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 100;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriespieshadowOrBuilder() {
        if (tschchartseriespieshadowBuilder_ != null) {
          return tschchartseriespieshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriespieshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriespieshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriespieshadow = 100;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseriespieshadowFieldBuilder() {
        if (tschchartseriespieshadowBuilder_ == null) {
          tschchartseriespieshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseriespieshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseriespieshadow_ = null;
        }
        return tschchartseriespieshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesbarshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseriesbarshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 101;</code>
       */
      public boolean hasTschchartseriesbarshadow() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 101;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesbarshadow() {
        if (tschchartseriesbarshadowBuilder_ == null) {
          return tschchartseriesbarshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesbarshadow_;
        } else {
          return tschchartseriesbarshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 101;</code>
       */
      public Builder setTschchartseriesbarshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesbarshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesbarshadow_ = value;
          onChanged();
        } else {
          tschchartseriesbarshadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 101;</code>
       */
      public Builder setTschchartseriesbarshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseriesbarshadowBuilder_ == null) {
          tschchartseriesbarshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesbarshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 101;</code>
       */
      public Builder mergeTschchartseriesbarshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesbarshadowBuilder_ == null) {
          if (((bitField0_ & 0x80000000) == 0x80000000) &&
              tschchartseriesbarshadow_ != null &&
              tschchartseriesbarshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseriesbarshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseriesbarshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesbarshadow_ = value;
          }
          onChanged();
        } else {
          tschchartseriesbarshadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 101;</code>
       */
      public Builder clearTschchartseriesbarshadow() {
        if (tschchartseriesbarshadowBuilder_ == null) {
          tschchartseriesbarshadow_ = null;
          onChanged();
        } else {
          tschchartseriesbarshadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x80000000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 101;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseriesbarshadowBuilder() {
        bitField0_ |= 0x80000000;
        onChanged();
        return getTschchartseriesbarshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 101;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesbarshadowOrBuilder() {
        if (tschchartseriesbarshadowBuilder_ != null) {
          return tschchartseriesbarshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesbarshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesbarshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbarshadow = 101;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseriesbarshadowFieldBuilder() {
        if (tschchartseriesbarshadowBuilder_ == null) {
          tschchartseriesbarshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseriesbarshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesbarshadow_ = null;
        }
        return tschchartseriesbarshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesareashadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseriesareashadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 102;</code>
       */
      public boolean hasTschchartseriesareashadow() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 102;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesareashadow() {
        if (tschchartseriesareashadowBuilder_ == null) {
          return tschchartseriesareashadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesareashadow_;
        } else {
          return tschchartseriesareashadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 102;</code>
       */
      public Builder setTschchartseriesareashadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesareashadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesareashadow_ = value;
          onChanged();
        } else {
          tschchartseriesareashadowBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 102;</code>
       */
      public Builder setTschchartseriesareashadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseriesareashadowBuilder_ == null) {
          tschchartseriesareashadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesareashadowBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 102;</code>
       */
      public Builder mergeTschchartseriesareashadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesareashadowBuilder_ == null) {
          if (((bitField1_ & 0x00000001) == 0x00000001) &&
              tschchartseriesareashadow_ != null &&
              tschchartseriesareashadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseriesareashadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseriesareashadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesareashadow_ = value;
          }
          onChanged();
        } else {
          tschchartseriesareashadowBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 102;</code>
       */
      public Builder clearTschchartseriesareashadow() {
        if (tschchartseriesareashadowBuilder_ == null) {
          tschchartseriesareashadow_ = null;
          onChanged();
        } else {
          tschchartseriesareashadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 102;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseriesareashadowBuilder() {
        bitField1_ |= 0x00000001;
        onChanged();
        return getTschchartseriesareashadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 102;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesareashadowOrBuilder() {
        if (tschchartseriesareashadowBuilder_ != null) {
          return tschchartseriesareashadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesareashadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesareashadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesareashadow = 102;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseriesareashadowFieldBuilder() {
        if (tschchartseriesareashadowBuilder_ == null) {
          tschchartseriesareashadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseriesareashadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesareashadow_ = null;
        }
        return tschchartseriesareashadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesscattershadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseriesscattershadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 103;</code>
       */
      public boolean hasTschchartseriesscattershadow() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 103;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesscattershadow() {
        if (tschchartseriesscattershadowBuilder_ == null) {
          return tschchartseriesscattershadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesscattershadow_;
        } else {
          return tschchartseriesscattershadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 103;</code>
       */
      public Builder setTschchartseriesscattershadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesscattershadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesscattershadow_ = value;
          onChanged();
        } else {
          tschchartseriesscattershadowBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 103;</code>
       */
      public Builder setTschchartseriesscattershadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseriesscattershadowBuilder_ == null) {
          tschchartseriesscattershadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesscattershadowBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 103;</code>
       */
      public Builder mergeTschchartseriesscattershadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesscattershadowBuilder_ == null) {
          if (((bitField1_ & 0x00000002) == 0x00000002) &&
              tschchartseriesscattershadow_ != null &&
              tschchartseriesscattershadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseriesscattershadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseriesscattershadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesscattershadow_ = value;
          }
          onChanged();
        } else {
          tschchartseriesscattershadowBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 103;</code>
       */
      public Builder clearTschchartseriesscattershadow() {
        if (tschchartseriesscattershadowBuilder_ == null) {
          tschchartseriesscattershadow_ = null;
          onChanged();
        } else {
          tschchartseriesscattershadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 103;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseriesscattershadowBuilder() {
        bitField1_ |= 0x00000002;
        onChanged();
        return getTschchartseriesscattershadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 103;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesscattershadowOrBuilder() {
        if (tschchartseriesscattershadowBuilder_ != null) {
          return tschchartseriesscattershadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesscattershadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesscattershadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesscattershadow = 103;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseriesscattershadowFieldBuilder() {
        if (tschchartseriesscattershadowBuilder_ == null) {
          tschchartseriesscattershadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseriesscattershadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesscattershadow_ = null;
        }
        return tschchartseriesscattershadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesmixedlineshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseriesmixedlineshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 104;</code>
       */
      public boolean hasTschchartseriesmixedlineshadow() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 104;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesmixedlineshadow() {
        if (tschchartseriesmixedlineshadowBuilder_ == null) {
          return tschchartseriesmixedlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesmixedlineshadow_;
        } else {
          return tschchartseriesmixedlineshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 104;</code>
       */
      public Builder setTschchartseriesmixedlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesmixedlineshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesmixedlineshadow_ = value;
          onChanged();
        } else {
          tschchartseriesmixedlineshadowBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 104;</code>
       */
      public Builder setTschchartseriesmixedlineshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseriesmixedlineshadowBuilder_ == null) {
          tschchartseriesmixedlineshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesmixedlineshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 104;</code>
       */
      public Builder mergeTschchartseriesmixedlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesmixedlineshadowBuilder_ == null) {
          if (((bitField1_ & 0x00000004) == 0x00000004) &&
              tschchartseriesmixedlineshadow_ != null &&
              tschchartseriesmixedlineshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseriesmixedlineshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseriesmixedlineshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesmixedlineshadow_ = value;
          }
          onChanged();
        } else {
          tschchartseriesmixedlineshadowBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 104;</code>
       */
      public Builder clearTschchartseriesmixedlineshadow() {
        if (tschchartseriesmixedlineshadowBuilder_ == null) {
          tschchartseriesmixedlineshadow_ = null;
          onChanged();
        } else {
          tschchartseriesmixedlineshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 104;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseriesmixedlineshadowBuilder() {
        bitField1_ |= 0x00000004;
        onChanged();
        return getTschchartseriesmixedlineshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 104;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesmixedlineshadowOrBuilder() {
        if (tschchartseriesmixedlineshadowBuilder_ != null) {
          return tschchartseriesmixedlineshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesmixedlineshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesmixedlineshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedlineshadow = 104;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseriesmixedlineshadowFieldBuilder() {
        if (tschchartseriesmixedlineshadowBuilder_ == null) {
          tschchartseriesmixedlineshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseriesmixedlineshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesmixedlineshadow_ = null;
        }
        return tschchartseriesmixedlineshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesmixedareashadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseriesmixedareashadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 105;</code>
       */
      public boolean hasTschchartseriesmixedareashadow() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 105;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesmixedareashadow() {
        if (tschchartseriesmixedareashadowBuilder_ == null) {
          return tschchartseriesmixedareashadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesmixedareashadow_;
        } else {
          return tschchartseriesmixedareashadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 105;</code>
       */
      public Builder setTschchartseriesmixedareashadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesmixedareashadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesmixedareashadow_ = value;
          onChanged();
        } else {
          tschchartseriesmixedareashadowBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 105;</code>
       */
      public Builder setTschchartseriesmixedareashadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseriesmixedareashadowBuilder_ == null) {
          tschchartseriesmixedareashadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesmixedareashadowBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 105;</code>
       */
      public Builder mergeTschchartseriesmixedareashadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesmixedareashadowBuilder_ == null) {
          if (((bitField1_ & 0x00000008) == 0x00000008) &&
              tschchartseriesmixedareashadow_ != null &&
              tschchartseriesmixedareashadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseriesmixedareashadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseriesmixedareashadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesmixedareashadow_ = value;
          }
          onChanged();
        } else {
          tschchartseriesmixedareashadowBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 105;</code>
       */
      public Builder clearTschchartseriesmixedareashadow() {
        if (tschchartseriesmixedareashadowBuilder_ == null) {
          tschchartseriesmixedareashadow_ = null;
          onChanged();
        } else {
          tschchartseriesmixedareashadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 105;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseriesmixedareashadowBuilder() {
        bitField1_ |= 0x00000008;
        onChanged();
        return getTschchartseriesmixedareashadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 105;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesmixedareashadowOrBuilder() {
        if (tschchartseriesmixedareashadowBuilder_ != null) {
          return tschchartseriesmixedareashadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesmixedareashadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesmixedareashadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedareashadow = 105;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseriesmixedareashadowFieldBuilder() {
        if (tschchartseriesmixedareashadowBuilder_ == null) {
          tschchartseriesmixedareashadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseriesmixedareashadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesmixedareashadow_ = null;
        }
        return tschchartseriesmixedareashadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesmixedcolumnshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseriesmixedcolumnshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 106;</code>
       */
      public boolean hasTschchartseriesmixedcolumnshadow() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 106;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesmixedcolumnshadow() {
        if (tschchartseriesmixedcolumnshadowBuilder_ == null) {
          return tschchartseriesmixedcolumnshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesmixedcolumnshadow_;
        } else {
          return tschchartseriesmixedcolumnshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 106;</code>
       */
      public Builder setTschchartseriesmixedcolumnshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesmixedcolumnshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesmixedcolumnshadow_ = value;
          onChanged();
        } else {
          tschchartseriesmixedcolumnshadowBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 106;</code>
       */
      public Builder setTschchartseriesmixedcolumnshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseriesmixedcolumnshadowBuilder_ == null) {
          tschchartseriesmixedcolumnshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesmixedcolumnshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 106;</code>
       */
      public Builder mergeTschchartseriesmixedcolumnshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesmixedcolumnshadowBuilder_ == null) {
          if (((bitField1_ & 0x00000010) == 0x00000010) &&
              tschchartseriesmixedcolumnshadow_ != null &&
              tschchartseriesmixedcolumnshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseriesmixedcolumnshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseriesmixedcolumnshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesmixedcolumnshadow_ = value;
          }
          onChanged();
        } else {
          tschchartseriesmixedcolumnshadowBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 106;</code>
       */
      public Builder clearTschchartseriesmixedcolumnshadow() {
        if (tschchartseriesmixedcolumnshadowBuilder_ == null) {
          tschchartseriesmixedcolumnshadow_ = null;
          onChanged();
        } else {
          tschchartseriesmixedcolumnshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 106;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseriesmixedcolumnshadowBuilder() {
        bitField1_ |= 0x00000010;
        onChanged();
        return getTschchartseriesmixedcolumnshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 106;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesmixedcolumnshadowOrBuilder() {
        if (tschchartseriesmixedcolumnshadowBuilder_ != null) {
          return tschchartseriesmixedcolumnshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesmixedcolumnshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesmixedcolumnshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesmixedcolumnshadow = 106;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseriesmixedcolumnshadowFieldBuilder() {
        if (tschchartseriesmixedcolumnshadowBuilder_ == null) {
          tschchartseriesmixedcolumnshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseriesmixedcolumnshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesmixedcolumnshadow_ = null;
        }
        return tschchartseriesmixedcolumnshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartserieslineshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartserieslineshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 107;</code>
       */
      public boolean hasTschchartserieslineshadow() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 107;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartserieslineshadow() {
        if (tschchartserieslineshadowBuilder_ == null) {
          return tschchartserieslineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartserieslineshadow_;
        } else {
          return tschchartserieslineshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 107;</code>
       */
      public Builder setTschchartserieslineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartserieslineshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartserieslineshadow_ = value;
          onChanged();
        } else {
          tschchartserieslineshadowBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 107;</code>
       */
      public Builder setTschchartserieslineshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartserieslineshadowBuilder_ == null) {
          tschchartserieslineshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartserieslineshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 107;</code>
       */
      public Builder mergeTschchartserieslineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartserieslineshadowBuilder_ == null) {
          if (((bitField1_ & 0x00000020) == 0x00000020) &&
              tschchartserieslineshadow_ != null &&
              tschchartserieslineshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartserieslineshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartserieslineshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartserieslineshadow_ = value;
          }
          onChanged();
        } else {
          tschchartserieslineshadowBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 107;</code>
       */
      public Builder clearTschchartserieslineshadow() {
        if (tschchartserieslineshadowBuilder_ == null) {
          tschchartserieslineshadow_ = null;
          onChanged();
        } else {
          tschchartserieslineshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 107;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartserieslineshadowBuilder() {
        bitField1_ |= 0x00000020;
        onChanged();
        return getTschchartserieslineshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 107;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartserieslineshadowOrBuilder() {
        if (tschchartserieslineshadowBuilder_ != null) {
          return tschchartserieslineshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartserieslineshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartserieslineshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartserieslineshadow = 107;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartserieslineshadowFieldBuilder() {
        if (tschchartserieslineshadowBuilder_ == null) {
          tschchartserieslineshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartserieslineshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartserieslineshadow_ = null;
        }
        return tschchartserieslineshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesdefaultshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseriesdefaultshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 108;</code>
       */
      public boolean hasTschchartseriesdefaultshadow() {
        return ((bitField1_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 108;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesdefaultshadow() {
        if (tschchartseriesdefaultshadowBuilder_ == null) {
          return tschchartseriesdefaultshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesdefaultshadow_;
        } else {
          return tschchartseriesdefaultshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 108;</code>
       */
      public Builder setTschchartseriesdefaultshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesdefaultshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaultshadow_ = value;
          onChanged();
        } else {
          tschchartseriesdefaultshadowBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 108;</code>
       */
      public Builder setTschchartseriesdefaultshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseriesdefaultshadowBuilder_ == null) {
          tschchartseriesdefaultshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaultshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 108;</code>
       */
      public Builder mergeTschchartseriesdefaultshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesdefaultshadowBuilder_ == null) {
          if (((bitField1_ & 0x00000040) == 0x00000040) &&
              tschchartseriesdefaultshadow_ != null &&
              tschchartseriesdefaultshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseriesdefaultshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseriesdefaultshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaultshadow_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaultshadowBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 108;</code>
       */
      public Builder clearTschchartseriesdefaultshadow() {
        if (tschchartseriesdefaultshadowBuilder_ == null) {
          tschchartseriesdefaultshadow_ = null;
          onChanged();
        } else {
          tschchartseriesdefaultshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 108;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseriesdefaultshadowBuilder() {
        bitField1_ |= 0x00000040;
        onChanged();
        return getTschchartseriesdefaultshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 108;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesdefaultshadowOrBuilder() {
        if (tschchartseriesdefaultshadowBuilder_ != null) {
          return tschchartseriesdefaultshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaultshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesdefaultshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaultshadow = 108;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseriesdefaultshadowFieldBuilder() {
        if (tschchartseriesdefaultshadowBuilder_ == null) {
          tschchartseriesdefaultshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseriesdefaultshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaultshadow_ = null;
        }
        return tschchartseriesdefaultshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesbubblesymbolfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseriesbubblesymbolfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 207;</code>
       */
      public boolean hasTschchartseriesbubblesymbolfill() {
        return ((bitField1_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 207;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesbubblesymbolfill() {
        if (tschchartseriesbubblesymbolfillBuilder_ == null) {
          return tschchartseriesbubblesymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesbubblesymbolfill_;
        } else {
          return tschchartseriesbubblesymbolfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 207;</code>
       */
      public Builder setTschchartseriesbubblesymbolfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesbubblesymbolfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesbubblesymbolfill_ = value;
          onChanged();
        } else {
          tschchartseriesbubblesymbolfillBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 207;</code>
       */
      public Builder setTschchartseriesbubblesymbolfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseriesbubblesymbolfillBuilder_ == null) {
          tschchartseriesbubblesymbolfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesbubblesymbolfillBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 207;</code>
       */
      public Builder mergeTschchartseriesbubblesymbolfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesbubblesymbolfillBuilder_ == null) {
          if (((bitField1_ & 0x00000080) == 0x00000080) &&
              tschchartseriesbubblesymbolfill_ != null &&
              tschchartseriesbubblesymbolfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseriesbubblesymbolfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseriesbubblesymbolfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesbubblesymbolfill_ = value;
          }
          onChanged();
        } else {
          tschchartseriesbubblesymbolfillBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 207;</code>
       */
      public Builder clearTschchartseriesbubblesymbolfill() {
        if (tschchartseriesbubblesymbolfillBuilder_ == null) {
          tschchartseriesbubblesymbolfill_ = null;
          onChanged();
        } else {
          tschchartseriesbubblesymbolfillBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 207;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseriesbubblesymbolfillBuilder() {
        bitField1_ |= 0x00000080;
        onChanged();
        return getTschchartseriesbubblesymbolfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 207;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesbubblesymbolfillOrBuilder() {
        if (tschchartseriesbubblesymbolfillBuilder_ != null) {
          return tschchartseriesbubblesymbolfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesbubblesymbolfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesbubblesymbolfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesbubblesymbolfill = 207;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseriesbubblesymbolfillFieldBuilder() {
        if (tschchartseriesbubblesymbolfillBuilder_ == null) {
          tschchartseriesbubblesymbolfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseriesbubblesymbolfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesbubblesymbolfill_ = null;
        }
        return tschchartseriesbubblesymbolfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesbubblestroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesbubblestrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 211;</code>
       */
      public boolean hasTschchartseriesbubblestroke() {
        return ((bitField1_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 211;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesbubblestroke() {
        if (tschchartseriesbubblestrokeBuilder_ == null) {
          return tschchartseriesbubblestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesbubblestroke_;
        } else {
          return tschchartseriesbubblestrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 211;</code>
       */
      public Builder setTschchartseriesbubblestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesbubblestrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesbubblestroke_ = value;
          onChanged();
        } else {
          tschchartseriesbubblestrokeBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 211;</code>
       */
      public Builder setTschchartseriesbubblestroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesbubblestrokeBuilder_ == null) {
          tschchartseriesbubblestroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesbubblestrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 211;</code>
       */
      public Builder mergeTschchartseriesbubblestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesbubblestrokeBuilder_ == null) {
          if (((bitField1_ & 0x00000100) == 0x00000100) &&
              tschchartseriesbubblestroke_ != null &&
              tschchartseriesbubblestroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesbubblestroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesbubblestroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesbubblestroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesbubblestrokeBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 211;</code>
       */
      public Builder clearTschchartseriesbubblestroke() {
        if (tschchartseriesbubblestrokeBuilder_ == null) {
          tschchartseriesbubblestroke_ = null;
          onChanged();
        } else {
          tschchartseriesbubblestrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 211;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesbubblestrokeBuilder() {
        bitField1_ |= 0x00000100;
        onChanged();
        return getTschchartseriesbubblestrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 211;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesbubblestrokeOrBuilder() {
        if (tschchartseriesbubblestrokeBuilder_ != null) {
          return tschchartseriesbubblestrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesbubblestroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesbubblestroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblestroke = 211;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesbubblestrokeFieldBuilder() {
        if (tschchartseriesbubblestrokeBuilder_ == null) {
          tschchartseriesbubblestrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesbubblestroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesbubblestroke_ = null;
        }
        return tschchartseriesbubblestrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesbubblesymbolstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesbubblesymbolstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 212;</code>
       */
      public boolean hasTschchartseriesbubblesymbolstroke() {
        return ((bitField1_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 212;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesbubblesymbolstroke() {
        if (tschchartseriesbubblesymbolstrokeBuilder_ == null) {
          return tschchartseriesbubblesymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesbubblesymbolstroke_;
        } else {
          return tschchartseriesbubblesymbolstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 212;</code>
       */
      public Builder setTschchartseriesbubblesymbolstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesbubblesymbolstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesbubblesymbolstroke_ = value;
          onChanged();
        } else {
          tschchartseriesbubblesymbolstrokeBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 212;</code>
       */
      public Builder setTschchartseriesbubblesymbolstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesbubblesymbolstrokeBuilder_ == null) {
          tschchartseriesbubblesymbolstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesbubblesymbolstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 212;</code>
       */
      public Builder mergeTschchartseriesbubblesymbolstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesbubblesymbolstrokeBuilder_ == null) {
          if (((bitField1_ & 0x00000200) == 0x00000200) &&
              tschchartseriesbubblesymbolstroke_ != null &&
              tschchartseriesbubblesymbolstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesbubblesymbolstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesbubblesymbolstroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesbubblesymbolstroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesbubblesymbolstrokeBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 212;</code>
       */
      public Builder clearTschchartseriesbubblesymbolstroke() {
        if (tschchartseriesbubblesymbolstrokeBuilder_ == null) {
          tschchartseriesbubblesymbolstroke_ = null;
          onChanged();
        } else {
          tschchartseriesbubblesymbolstrokeBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 212;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesbubblesymbolstrokeBuilder() {
        bitField1_ |= 0x00000200;
        onChanged();
        return getTschchartseriesbubblesymbolstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 212;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesbubblesymbolstrokeOrBuilder() {
        if (tschchartseriesbubblesymbolstrokeBuilder_ != null) {
          return tschchartseriesbubblesymbolstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesbubblesymbolstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesbubblesymbolstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesbubblesymbolstroke = 212;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesbubblesymbolstrokeFieldBuilder() {
        if (tschchartseriesbubblesymbolstrokeBuilder_ == null) {
          tschchartseriesbubblesymbolstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesbubblesymbolstroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesbubblesymbolstroke_ = null;
        }
        return tschchartseriesbubblesymbolstrokeBuilder_;
      }

      private int tschchartseriesbubblevaluelabelposition_ ;
      /**
       * <code>optional int32 tschchartseriesbubblevaluelabelposition = 213;</code>
       */
      public boolean hasTschchartseriesbubblevaluelabelposition() {
        return ((bitField1_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 tschchartseriesbubblevaluelabelposition = 213;</code>
       */
      public int getTschchartseriesbubblevaluelabelposition() {
        return tschchartseriesbubblevaluelabelposition_;
      }
      /**
       * <code>optional int32 tschchartseriesbubblevaluelabelposition = 213;</code>
       */
      public Builder setTschchartseriesbubblevaluelabelposition(int value) {
        bitField1_ |= 0x00000400;
        tschchartseriesbubblevaluelabelposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesbubblevaluelabelposition = 213;</code>
       */
      public Builder clearTschchartseriesbubblevaluelabelposition() {
        bitField1_ = (bitField1_ & ~0x00000400);
        tschchartseriesbubblevaluelabelposition_ = 0;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesbubbleshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseriesbubbleshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 214;</code>
       */
      public boolean hasTschchartseriesbubbleshadow() {
        return ((bitField1_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 214;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesbubbleshadow() {
        if (tschchartseriesbubbleshadowBuilder_ == null) {
          return tschchartseriesbubbleshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesbubbleshadow_;
        } else {
          return tschchartseriesbubbleshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 214;</code>
       */
      public Builder setTschchartseriesbubbleshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesbubbleshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesbubbleshadow_ = value;
          onChanged();
        } else {
          tschchartseriesbubbleshadowBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 214;</code>
       */
      public Builder setTschchartseriesbubbleshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseriesbubbleshadowBuilder_ == null) {
          tschchartseriesbubbleshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesbubbleshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 214;</code>
       */
      public Builder mergeTschchartseriesbubbleshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesbubbleshadowBuilder_ == null) {
          if (((bitField1_ & 0x00000800) == 0x00000800) &&
              tschchartseriesbubbleshadow_ != null &&
              tschchartseriesbubbleshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseriesbubbleshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseriesbubbleshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesbubbleshadow_ = value;
          }
          onChanged();
        } else {
          tschchartseriesbubbleshadowBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 214;</code>
       */
      public Builder clearTschchartseriesbubbleshadow() {
        if (tschchartseriesbubbleshadowBuilder_ == null) {
          tschchartseriesbubbleshadow_ = null;
          onChanged();
        } else {
          tschchartseriesbubbleshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 214;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseriesbubbleshadowBuilder() {
        bitField1_ |= 0x00000800;
        onChanged();
        return getTschchartseriesbubbleshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 214;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesbubbleshadowOrBuilder() {
        if (tschchartseriesbubbleshadowBuilder_ != null) {
          return tschchartseriesbubbleshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesbubbleshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesbubbleshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesbubbleshadow = 214;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseriesbubbleshadowFieldBuilder() {
        if (tschchartseriesbubbleshadowBuilder_ == null) {
          tschchartseriesbubbleshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseriesbubbleshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesbubbleshadow_ = null;
        }
        return tschchartseriesbubbleshadowBuilder_;
      }

      private boolean tschchartseriesbubblesymbolfilluseseriesstroke_ ;
      /**
       * <code>optional bool tschchartseriesbubblesymbolfilluseseriesstroke = 215;</code>
       */
      public boolean hasTschchartseriesbubblesymbolfilluseseriesstroke() {
        return ((bitField1_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bool tschchartseriesbubblesymbolfilluseseriesstroke = 215;</code>
       */
      public boolean getTschchartseriesbubblesymbolfilluseseriesstroke() {
        return tschchartseriesbubblesymbolfilluseseriesstroke_;
      }
      /**
       * <code>optional bool tschchartseriesbubblesymbolfilluseseriesstroke = 215;</code>
       */
      public Builder setTschchartseriesbubblesymbolfilluseseriesstroke(boolean value) {
        bitField1_ |= 0x00001000;
        tschchartseriesbubblesymbolfilluseseriesstroke_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesbubblesymbolfilluseseriesstroke = 215;</code>
       */
      public Builder clearTschchartseriesbubblesymbolfilluseseriesstroke() {
        bitField1_ = (bitField1_ & ~0x00001000);
        tschchartseriesbubblesymbolfilluseseriesstroke_ = false;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseries3Dbarshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseries3DbarshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 306;</code>
       */
      public boolean hasTschchartseries3Dbarshadow() {
        return ((bitField1_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 306;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dbarshadow() {
        if (tschchartseries3DbarshadowBuilder_ == null) {
          return tschchartseries3Dbarshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dbarshadow_;
        } else {
          return tschchartseries3DbarshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 306;</code>
       */
      public Builder setTschchartseries3Dbarshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseries3DbarshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseries3Dbarshadow_ = value;
          onChanged();
        } else {
          tschchartseries3DbarshadowBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 306;</code>
       */
      public Builder setTschchartseries3Dbarshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseries3DbarshadowBuilder_ == null) {
          tschchartseries3Dbarshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseries3DbarshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 306;</code>
       */
      public Builder mergeTschchartseries3Dbarshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseries3DbarshadowBuilder_ == null) {
          if (((bitField1_ & 0x00002000) == 0x00002000) &&
              tschchartseries3Dbarshadow_ != null &&
              tschchartseries3Dbarshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseries3Dbarshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseries3Dbarshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseries3Dbarshadow_ = value;
          }
          onChanged();
        } else {
          tschchartseries3DbarshadowBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 306;</code>
       */
      public Builder clearTschchartseries3Dbarshadow() {
        if (tschchartseries3DbarshadowBuilder_ == null) {
          tschchartseries3Dbarshadow_ = null;
          onChanged();
        } else {
          tschchartseries3DbarshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 306;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseries3DbarshadowBuilder() {
        bitField1_ |= 0x00002000;
        onChanged();
        return getTschchartseries3DbarshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 306;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DbarshadowOrBuilder() {
        if (tschchartseries3DbarshadowBuilder_ != null) {
          return tschchartseries3DbarshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseries3Dbarshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dbarshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dbarshadow = 306;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseries3DbarshadowFieldBuilder() {
        if (tschchartseries3DbarshadowBuilder_ == null) {
          tschchartseries3DbarshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseries3Dbarshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseries3Dbarshadow_ = null;
        }
        return tschchartseries3DbarshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseries3Dcolumnshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseries3DcolumnshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 307;</code>
       */
      public boolean hasTschchartseries3Dcolumnshadow() {
        return ((bitField1_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 307;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dcolumnshadow() {
        if (tschchartseries3DcolumnshadowBuilder_ == null) {
          return tschchartseries3Dcolumnshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dcolumnshadow_;
        } else {
          return tschchartseries3DcolumnshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 307;</code>
       */
      public Builder setTschchartseries3Dcolumnshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseries3DcolumnshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseries3Dcolumnshadow_ = value;
          onChanged();
        } else {
          tschchartseries3DcolumnshadowBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 307;</code>
       */
      public Builder setTschchartseries3Dcolumnshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseries3DcolumnshadowBuilder_ == null) {
          tschchartseries3Dcolumnshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseries3DcolumnshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 307;</code>
       */
      public Builder mergeTschchartseries3Dcolumnshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseries3DcolumnshadowBuilder_ == null) {
          if (((bitField1_ & 0x00004000) == 0x00004000) &&
              tschchartseries3Dcolumnshadow_ != null &&
              tschchartseries3Dcolumnshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseries3Dcolumnshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseries3Dcolumnshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseries3Dcolumnshadow_ = value;
          }
          onChanged();
        } else {
          tschchartseries3DcolumnshadowBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 307;</code>
       */
      public Builder clearTschchartseries3Dcolumnshadow() {
        if (tschchartseries3DcolumnshadowBuilder_ == null) {
          tschchartseries3Dcolumnshadow_ = null;
          onChanged();
        } else {
          tschchartseries3DcolumnshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00004000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 307;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseries3DcolumnshadowBuilder() {
        bitField1_ |= 0x00004000;
        onChanged();
        return getTschchartseries3DcolumnshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 307;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DcolumnshadowOrBuilder() {
        if (tschchartseries3DcolumnshadowBuilder_ != null) {
          return tschchartseries3DcolumnshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseries3Dcolumnshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dcolumnshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dcolumnshadow = 307;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseries3DcolumnshadowFieldBuilder() {
        if (tschchartseries3DcolumnshadowBuilder_ == null) {
          tschchartseries3DcolumnshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseries3Dcolumnshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseries3Dcolumnshadow_ = null;
        }
        return tschchartseries3DcolumnshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseries3Dlineshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseries3DlineshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 308;</code>
       */
      public boolean hasTschchartseries3Dlineshadow() {
        return ((bitField1_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 308;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dlineshadow() {
        if (tschchartseries3DlineshadowBuilder_ == null) {
          return tschchartseries3Dlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dlineshadow_;
        } else {
          return tschchartseries3DlineshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 308;</code>
       */
      public Builder setTschchartseries3Dlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseries3DlineshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseries3Dlineshadow_ = value;
          onChanged();
        } else {
          tschchartseries3DlineshadowBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 308;</code>
       */
      public Builder setTschchartseries3Dlineshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseries3DlineshadowBuilder_ == null) {
          tschchartseries3Dlineshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseries3DlineshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 308;</code>
       */
      public Builder mergeTschchartseries3Dlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseries3DlineshadowBuilder_ == null) {
          if (((bitField1_ & 0x00008000) == 0x00008000) &&
              tschchartseries3Dlineshadow_ != null &&
              tschchartseries3Dlineshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseries3Dlineshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseries3Dlineshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseries3Dlineshadow_ = value;
          }
          onChanged();
        } else {
          tschchartseries3DlineshadowBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 308;</code>
       */
      public Builder clearTschchartseries3Dlineshadow() {
        if (tschchartseries3DlineshadowBuilder_ == null) {
          tschchartseries3Dlineshadow_ = null;
          onChanged();
        } else {
          tschchartseries3DlineshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00008000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 308;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseries3DlineshadowBuilder() {
        bitField1_ |= 0x00008000;
        onChanged();
        return getTschchartseries3DlineshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 308;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DlineshadowOrBuilder() {
        if (tschchartseries3DlineshadowBuilder_ != null) {
          return tschchartseries3DlineshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseries3Dlineshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dlineshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dlineshadow = 308;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseries3DlineshadowFieldBuilder() {
        if (tschchartseries3DlineshadowBuilder_ == null) {
          tschchartseries3DlineshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseries3Dlineshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseries3Dlineshadow_ = null;
        }
        return tschchartseries3DlineshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseries3Dareashadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseries3DareashadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 309;</code>
       */
      public boolean hasTschchartseries3Dareashadow() {
        return ((bitField1_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 309;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dareashadow() {
        if (tschchartseries3DareashadowBuilder_ == null) {
          return tschchartseries3Dareashadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dareashadow_;
        } else {
          return tschchartseries3DareashadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 309;</code>
       */
      public Builder setTschchartseries3Dareashadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseries3DareashadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseries3Dareashadow_ = value;
          onChanged();
        } else {
          tschchartseries3DareashadowBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 309;</code>
       */
      public Builder setTschchartseries3Dareashadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseries3DareashadowBuilder_ == null) {
          tschchartseries3Dareashadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseries3DareashadowBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 309;</code>
       */
      public Builder mergeTschchartseries3Dareashadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseries3DareashadowBuilder_ == null) {
          if (((bitField1_ & 0x00010000) == 0x00010000) &&
              tschchartseries3Dareashadow_ != null &&
              tschchartseries3Dareashadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseries3Dareashadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseries3Dareashadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseries3Dareashadow_ = value;
          }
          onChanged();
        } else {
          tschchartseries3DareashadowBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 309;</code>
       */
      public Builder clearTschchartseries3Dareashadow() {
        if (tschchartseries3DareashadowBuilder_ == null) {
          tschchartseries3Dareashadow_ = null;
          onChanged();
        } else {
          tschchartseries3DareashadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 309;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseries3DareashadowBuilder() {
        bitField1_ |= 0x00010000;
        onChanged();
        return getTschchartseries3DareashadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 309;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DareashadowOrBuilder() {
        if (tschchartseries3DareashadowBuilder_ != null) {
          return tschchartseries3DareashadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseries3Dareashadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dareashadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dareashadow = 309;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseries3DareashadowFieldBuilder() {
        if (tschchartseries3DareashadowBuilder_ == null) {
          tschchartseries3DareashadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseries3Dareashadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseries3Dareashadow_ = null;
        }
        return tschchartseries3DareashadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseries3Dpieshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseries3DpieshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 310;</code>
       */
      public boolean hasTschchartseries3Dpieshadow() {
        return ((bitField1_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 310;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseries3Dpieshadow() {
        if (tschchartseries3DpieshadowBuilder_ == null) {
          return tschchartseries3Dpieshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dpieshadow_;
        } else {
          return tschchartseries3DpieshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 310;</code>
       */
      public Builder setTschchartseries3Dpieshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseries3DpieshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseries3Dpieshadow_ = value;
          onChanged();
        } else {
          tschchartseries3DpieshadowBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 310;</code>
       */
      public Builder setTschchartseries3Dpieshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseries3DpieshadowBuilder_ == null) {
          tschchartseries3Dpieshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseries3DpieshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 310;</code>
       */
      public Builder mergeTschchartseries3Dpieshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseries3DpieshadowBuilder_ == null) {
          if (((bitField1_ & 0x00020000) == 0x00020000) &&
              tschchartseries3Dpieshadow_ != null &&
              tschchartseries3Dpieshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseries3Dpieshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseries3Dpieshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseries3Dpieshadow_ = value;
          }
          onChanged();
        } else {
          tschchartseries3DpieshadowBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 310;</code>
       */
      public Builder clearTschchartseries3Dpieshadow() {
        if (tschchartseries3DpieshadowBuilder_ == null) {
          tschchartseries3Dpieshadow_ = null;
          onChanged();
        } else {
          tschchartseries3DpieshadowBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00020000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 310;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseries3DpieshadowBuilder() {
        bitField1_ |= 0x00020000;
        onChanged();
        return getTschchartseries3DpieshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 310;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseries3DpieshadowOrBuilder() {
        if (tschchartseries3DpieshadowBuilder_ != null) {
          return tschchartseries3DpieshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseries3Dpieshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseries3Dpieshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseries3dpieshadow = 310;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseries3DpieshadowFieldBuilder() {
        if (tschchartseries3DpieshadowBuilder_ == null) {
          tschchartseries3DpieshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseries3Dpieshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseries3Dpieshadow_ = null;
        }
        return tschchartseries3DpieshadowBuilder_;
      }

      private int tschchartseriesdefaultlabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartseriesdefaultlabelparagraphstyleindex = 110;</code>
       */
      public boolean hasTschchartseriesdefaultlabelparagraphstyleindex() {
        return ((bitField1_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 tschchartseriesdefaultlabelparagraphstyleindex = 110;</code>
       */
      public int getTschchartseriesdefaultlabelparagraphstyleindex() {
        return tschchartseriesdefaultlabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaultlabelparagraphstyleindex = 110;</code>
       */
      public Builder setTschchartseriesdefaultlabelparagraphstyleindex(int value) {
        bitField1_ |= 0x00040000;
        tschchartseriesdefaultlabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaultlabelparagraphstyleindex = 110;</code>
       */
      public Builder clearTschchartseriesdefaultlabelparagraphstyleindex() {
        bitField1_ = (bitField1_ & ~0x00040000);
        tschchartseriesdefaultlabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesbarlabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartseriesbarlabelparagraphstyleindex = 111;</code>
       */
      public boolean hasTschchartseriesbarlabelparagraphstyleindex() {
        return ((bitField1_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 tschchartseriesbarlabelparagraphstyleindex = 111;</code>
       */
      public int getTschchartseriesbarlabelparagraphstyleindex() {
        return tschchartseriesbarlabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartseriesbarlabelparagraphstyleindex = 111;</code>
       */
      public Builder setTschchartseriesbarlabelparagraphstyleindex(int value) {
        bitField1_ |= 0x00080000;
        tschchartseriesbarlabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesbarlabelparagraphstyleindex = 111;</code>
       */
      public Builder clearTschchartseriesbarlabelparagraphstyleindex() {
        bitField1_ = (bitField1_ & ~0x00080000);
        tschchartseriesbarlabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartserieslinelabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartserieslinelabelparagraphstyleindex = 112;</code>
       */
      public boolean hasTschchartserieslinelabelparagraphstyleindex() {
        return ((bitField1_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 tschchartserieslinelabelparagraphstyleindex = 112;</code>
       */
      public int getTschchartserieslinelabelparagraphstyleindex() {
        return tschchartserieslinelabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartserieslinelabelparagraphstyleindex = 112;</code>
       */
      public Builder setTschchartserieslinelabelparagraphstyleindex(int value) {
        bitField1_ |= 0x00100000;
        tschchartserieslinelabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartserieslinelabelparagraphstyleindex = 112;</code>
       */
      public Builder clearTschchartserieslinelabelparagraphstyleindex() {
        bitField1_ = (bitField1_ & ~0x00100000);
        tschchartserieslinelabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesarealabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartseriesarealabelparagraphstyleindex = 113;</code>
       */
      public boolean hasTschchartseriesarealabelparagraphstyleindex() {
        return ((bitField1_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 tschchartseriesarealabelparagraphstyleindex = 113;</code>
       */
      public int getTschchartseriesarealabelparagraphstyleindex() {
        return tschchartseriesarealabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartseriesarealabelparagraphstyleindex = 113;</code>
       */
      public Builder setTschchartseriesarealabelparagraphstyleindex(int value) {
        bitField1_ |= 0x00200000;
        tschchartseriesarealabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesarealabelparagraphstyleindex = 113;</code>
       */
      public Builder clearTschchartseriesarealabelparagraphstyleindex() {
        bitField1_ = (bitField1_ & ~0x00200000);
        tschchartseriesarealabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriespielabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartseriespielabelparagraphstyleindex = 114;</code>
       */
      public boolean hasTschchartseriespielabelparagraphstyleindex() {
        return ((bitField1_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 tschchartseriespielabelparagraphstyleindex = 114;</code>
       */
      public int getTschchartseriespielabelparagraphstyleindex() {
        return tschchartseriespielabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartseriespielabelparagraphstyleindex = 114;</code>
       */
      public Builder setTschchartseriespielabelparagraphstyleindex(int value) {
        bitField1_ |= 0x00400000;
        tschchartseriespielabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriespielabelparagraphstyleindex = 114;</code>
       */
      public Builder clearTschchartseriespielabelparagraphstyleindex() {
        bitField1_ = (bitField1_ & ~0x00400000);
        tschchartseriespielabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesmixedlabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartseriesmixedlabelparagraphstyleindex = 115;</code>
       */
      public boolean hasTschchartseriesmixedlabelparagraphstyleindex() {
        return ((bitField1_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int32 tschchartseriesmixedlabelparagraphstyleindex = 115;</code>
       */
      public int getTschchartseriesmixedlabelparagraphstyleindex() {
        return tschchartseriesmixedlabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartseriesmixedlabelparagraphstyleindex = 115;</code>
       */
      public Builder setTschchartseriesmixedlabelparagraphstyleindex(int value) {
        bitField1_ |= 0x00800000;
        tschchartseriesmixedlabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesmixedlabelparagraphstyleindex = 115;</code>
       */
      public Builder clearTschchartseriesmixedlabelparagraphstyleindex() {
        bitField1_ = (bitField1_ & ~0x00800000);
        tschchartseriesmixedlabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private float tschchartseriesdefaultopacity_ ;
      /**
       * <code>optional float tschchartseriesdefaultopacity = 116;</code>
       */
      public boolean hasTschchartseriesdefaultopacity() {
        return ((bitField1_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional float tschchartseriesdefaultopacity = 116;</code>
       */
      public float getTschchartseriesdefaultopacity() {
        return tschchartseriesdefaultopacity_;
      }
      /**
       * <code>optional float tschchartseriesdefaultopacity = 116;</code>
       */
      public Builder setTschchartseriesdefaultopacity(float value) {
        bitField1_ |= 0x01000000;
        tschchartseriesdefaultopacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaultopacity = 116;</code>
       */
      public Builder clearTschchartseriesdefaultopacity() {
        bitField1_ = (bitField1_ & ~0x01000000);
        tschchartseriesdefaultopacity_ = 0F;
        onChanged();
        return this;
      }

      private boolean tschchartserieslinesymbolfilluseseriesstroke_ ;
      /**
       * <code>optional bool tschchartserieslinesymbolfilluseseriesstroke = 117;</code>
       */
      public boolean hasTschchartserieslinesymbolfilluseseriesstroke() {
        return ((bitField1_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional bool tschchartserieslinesymbolfilluseseriesstroke = 117;</code>
       */
      public boolean getTschchartserieslinesymbolfilluseseriesstroke() {
        return tschchartserieslinesymbolfilluseseriesstroke_;
      }
      /**
       * <code>optional bool tschchartserieslinesymbolfilluseseriesstroke = 117;</code>
       */
      public Builder setTschchartserieslinesymbolfilluseseriesstroke(boolean value) {
        bitField1_ |= 0x02000000;
        tschchartserieslinesymbolfilluseseriesstroke_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartserieslinesymbolfilluseseriesstroke = 117;</code>
       */
      public Builder clearTschchartserieslinesymbolfilluseseriesstroke() {
        bitField1_ = (bitField1_ & ~0x02000000);
        tschchartserieslinesymbolfilluseseriesstroke_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesareasymbolfilluseseriesstroke_ ;
      /**
       * <code>optional bool tschchartseriesareasymbolfilluseseriesstroke = 118;</code>
       */
      public boolean hasTschchartseriesareasymbolfilluseseriesstroke() {
        return ((bitField1_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional bool tschchartseriesareasymbolfilluseseriesstroke = 118;</code>
       */
      public boolean getTschchartseriesareasymbolfilluseseriesstroke() {
        return tschchartseriesareasymbolfilluseseriesstroke_;
      }
      /**
       * <code>optional bool tschchartseriesareasymbolfilluseseriesstroke = 118;</code>
       */
      public Builder setTschchartseriesareasymbolfilluseseriesstroke(boolean value) {
        bitField1_ |= 0x04000000;
        tschchartseriesareasymbolfilluseseriesstroke_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesareasymbolfilluseseriesstroke = 118;</code>
       */
      public Builder clearTschchartseriesareasymbolfilluseseriesstroke() {
        bitField1_ = (bitField1_ & ~0x04000000);
        tschchartseriesareasymbolfilluseseriesstroke_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesscattersymbolfilluseseriesstroke_ ;
      /**
       * <code>optional bool tschchartseriesscattersymbolfilluseseriesstroke = 119;</code>
       */
      public boolean hasTschchartseriesscattersymbolfilluseseriesstroke() {
        return ((bitField1_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional bool tschchartseriesscattersymbolfilluseseriesstroke = 119;</code>
       */
      public boolean getTschchartseriesscattersymbolfilluseseriesstroke() {
        return tschchartseriesscattersymbolfilluseseriesstroke_;
      }
      /**
       * <code>optional bool tschchartseriesscattersymbolfilluseseriesstroke = 119;</code>
       */
      public Builder setTschchartseriesscattersymbolfilluseseriesstroke(boolean value) {
        bitField1_ |= 0x08000000;
        tschchartseriesscattersymbolfilluseseriesstroke_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesscattersymbolfilluseseriesstroke = 119;</code>
       */
      public Builder clearTschchartseriesscattersymbolfilluseseriesstroke() {
        bitField1_ = (bitField1_ & ~0x08000000);
        tschchartseriesscattersymbolfilluseseriesstroke_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesmixedlinesymbolfilluseseriesstroke_ ;
      /**
       * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesstroke = 120;</code>
       */
      public boolean hasTschchartseriesmixedlinesymbolfilluseseriesstroke() {
        return ((bitField1_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesstroke = 120;</code>
       */
      public boolean getTschchartseriesmixedlinesymbolfilluseseriesstroke() {
        return tschchartseriesmixedlinesymbolfilluseseriesstroke_;
      }
      /**
       * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesstroke = 120;</code>
       */
      public Builder setTschchartseriesmixedlinesymbolfilluseseriesstroke(boolean value) {
        bitField1_ |= 0x10000000;
        tschchartseriesmixedlinesymbolfilluseseriesstroke_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesstroke = 120;</code>
       */
      public Builder clearTschchartseriesmixedlinesymbolfilluseseriesstroke() {
        bitField1_ = (bitField1_ & ~0x10000000);
        tschchartseriesmixedlinesymbolfilluseseriesstroke_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesmixedareasymbolfilluseseriesstroke_ ;
      /**
       * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesstroke = 121;</code>
       */
      public boolean hasTschchartseriesmixedareasymbolfilluseseriesstroke() {
        return ((bitField1_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesstroke = 121;</code>
       */
      public boolean getTschchartseriesmixedareasymbolfilluseseriesstroke() {
        return tschchartseriesmixedareasymbolfilluseseriesstroke_;
      }
      /**
       * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesstroke = 121;</code>
       */
      public Builder setTschchartseriesmixedareasymbolfilluseseriesstroke(boolean value) {
        bitField1_ |= 0x20000000;
        tschchartseriesmixedareasymbolfilluseseriesstroke_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesstroke = 121;</code>
       */
      public Builder clearTschchartseriesmixedareasymbolfilluseseriesstroke() {
        bitField1_ = (bitField1_ & ~0x20000000);
        tschchartseriesmixedareasymbolfilluseseriesstroke_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartserieslinesymbolfilluseseriesfill_ ;
      /**
       * <code>optional bool tschchartserieslinesymbolfilluseseriesfill = 122;</code>
       */
      public boolean hasTschchartserieslinesymbolfilluseseriesfill() {
        return ((bitField1_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional bool tschchartserieslinesymbolfilluseseriesfill = 122;</code>
       */
      public boolean getTschchartserieslinesymbolfilluseseriesfill() {
        return tschchartserieslinesymbolfilluseseriesfill_;
      }
      /**
       * <code>optional bool tschchartserieslinesymbolfilluseseriesfill = 122;</code>
       */
      public Builder setTschchartserieslinesymbolfilluseseriesfill(boolean value) {
        bitField1_ |= 0x40000000;
        tschchartserieslinesymbolfilluseseriesfill_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartserieslinesymbolfilluseseriesfill = 122;</code>
       */
      public Builder clearTschchartserieslinesymbolfilluseseriesfill() {
        bitField1_ = (bitField1_ & ~0x40000000);
        tschchartserieslinesymbolfilluseseriesfill_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesareasymbolfilluseseriesfill_ ;
      /**
       * <code>optional bool tschchartseriesareasymbolfilluseseriesfill = 123;</code>
       */
      public boolean hasTschchartseriesareasymbolfilluseseriesfill() {
        return ((bitField1_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional bool tschchartseriesareasymbolfilluseseriesfill = 123;</code>
       */
      public boolean getTschchartseriesareasymbolfilluseseriesfill() {
        return tschchartseriesareasymbolfilluseseriesfill_;
      }
      /**
       * <code>optional bool tschchartseriesareasymbolfilluseseriesfill = 123;</code>
       */
      public Builder setTschchartseriesareasymbolfilluseseriesfill(boolean value) {
        bitField1_ |= 0x80000000;
        tschchartseriesareasymbolfilluseseriesfill_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesareasymbolfilluseseriesfill = 123;</code>
       */
      public Builder clearTschchartseriesareasymbolfilluseseriesfill() {
        bitField1_ = (bitField1_ & ~0x80000000);
        tschchartseriesareasymbolfilluseseriesfill_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesmixedlinesymbolfilluseseriesfill_ ;
      /**
       * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesfill = 124;</code>
       */
      public boolean hasTschchartseriesmixedlinesymbolfilluseseriesfill() {
        return ((bitField2_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesfill = 124;</code>
       */
      public boolean getTschchartseriesmixedlinesymbolfilluseseriesfill() {
        return tschchartseriesmixedlinesymbolfilluseseriesfill_;
      }
      /**
       * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesfill = 124;</code>
       */
      public Builder setTschchartseriesmixedlinesymbolfilluseseriesfill(boolean value) {
        bitField2_ |= 0x00000001;
        tschchartseriesmixedlinesymbolfilluseseriesfill_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesmixedlinesymbolfilluseseriesfill = 124;</code>
       */
      public Builder clearTschchartseriesmixedlinesymbolfilluseseriesfill() {
        bitField2_ = (bitField2_ & ~0x00000001);
        tschchartseriesmixedlinesymbolfilluseseriesfill_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesmixedareasymbolfilluseseriesfill_ ;
      /**
       * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesfill = 125;</code>
       */
      public boolean hasTschchartseriesmixedareasymbolfilluseseriesfill() {
        return ((bitField2_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesfill = 125;</code>
       */
      public boolean getTschchartseriesmixedareasymbolfilluseseriesfill() {
        return tschchartseriesmixedareasymbolfilluseseriesfill_;
      }
      /**
       * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesfill = 125;</code>
       */
      public Builder setTschchartseriesmixedareasymbolfilluseseriesfill(boolean value) {
        bitField2_ |= 0x00000002;
        tschchartseriesmixedareasymbolfilluseseriesfill_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesmixedareasymbolfilluseseriesfill = 125;</code>
       */
      public Builder clearTschchartseriesmixedareasymbolfilluseseriesfill() {
        bitField2_ = (bitField2_ & ~0x00000002);
        tschchartseriesmixedareasymbolfilluseseriesfill_ = false;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesmixedcolumnfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseriesmixedcolumnfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 130;</code>
       */
      public boolean hasTschchartseriesmixedcolumnfill() {
        return ((bitField2_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 130;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesmixedcolumnfill() {
        if (tschchartseriesmixedcolumnfillBuilder_ == null) {
          return tschchartseriesmixedcolumnfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedcolumnfill_;
        } else {
          return tschchartseriesmixedcolumnfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 130;</code>
       */
      public Builder setTschchartseriesmixedcolumnfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesmixedcolumnfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesmixedcolumnfill_ = value;
          onChanged();
        } else {
          tschchartseriesmixedcolumnfillBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 130;</code>
       */
      public Builder setTschchartseriesmixedcolumnfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseriesmixedcolumnfillBuilder_ == null) {
          tschchartseriesmixedcolumnfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesmixedcolumnfillBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 130;</code>
       */
      public Builder mergeTschchartseriesmixedcolumnfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesmixedcolumnfillBuilder_ == null) {
          if (((bitField2_ & 0x00000004) == 0x00000004) &&
              tschchartseriesmixedcolumnfill_ != null &&
              tschchartseriesmixedcolumnfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseriesmixedcolumnfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseriesmixedcolumnfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesmixedcolumnfill_ = value;
          }
          onChanged();
        } else {
          tschchartseriesmixedcolumnfillBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 130;</code>
       */
      public Builder clearTschchartseriesmixedcolumnfill() {
        if (tschchartseriesmixedcolumnfillBuilder_ == null) {
          tschchartseriesmixedcolumnfill_ = null;
          onChanged();
        } else {
          tschchartseriesmixedcolumnfillBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 130;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseriesmixedcolumnfillBuilder() {
        bitField2_ |= 0x00000004;
        onChanged();
        return getTschchartseriesmixedcolumnfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 130;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesmixedcolumnfillOrBuilder() {
        if (tschchartseriesmixedcolumnfillBuilder_ != null) {
          return tschchartseriesmixedcolumnfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesmixedcolumnfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedcolumnfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedcolumnfill = 130;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseriesmixedcolumnfillFieldBuilder() {
        if (tschchartseriesmixedcolumnfillBuilder_ == null) {
          tschchartseriesmixedcolumnfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseriesmixedcolumnfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesmixedcolumnfill_ = null;
        }
        return tschchartseriesmixedcolumnfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesmixedareafill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseriesmixedareafillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 131;</code>
       */
      public boolean hasTschchartseriesmixedareafill() {
        return ((bitField2_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 131;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesmixedareafill() {
        if (tschchartseriesmixedareafillBuilder_ == null) {
          return tschchartseriesmixedareafill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedareafill_;
        } else {
          return tschchartseriesmixedareafillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 131;</code>
       */
      public Builder setTschchartseriesmixedareafill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesmixedareafillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesmixedareafill_ = value;
          onChanged();
        } else {
          tschchartseriesmixedareafillBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 131;</code>
       */
      public Builder setTschchartseriesmixedareafill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseriesmixedareafillBuilder_ == null) {
          tschchartseriesmixedareafill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesmixedareafillBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 131;</code>
       */
      public Builder mergeTschchartseriesmixedareafill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesmixedareafillBuilder_ == null) {
          if (((bitField2_ & 0x00000008) == 0x00000008) &&
              tschchartseriesmixedareafill_ != null &&
              tschchartseriesmixedareafill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseriesmixedareafill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseriesmixedareafill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesmixedareafill_ = value;
          }
          onChanged();
        } else {
          tschchartseriesmixedareafillBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 131;</code>
       */
      public Builder clearTschchartseriesmixedareafill() {
        if (tschchartseriesmixedareafillBuilder_ == null) {
          tschchartseriesmixedareafill_ = null;
          onChanged();
        } else {
          tschchartseriesmixedareafillBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 131;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseriesmixedareafillBuilder() {
        bitField2_ |= 0x00000008;
        onChanged();
        return getTschchartseriesmixedareafillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 131;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesmixedareafillOrBuilder() {
        if (tschchartseriesmixedareafillBuilder_ != null) {
          return tschchartseriesmixedareafillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesmixedareafill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedareafill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareafill = 131;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseriesmixedareafillFieldBuilder() {
        if (tschchartseriesmixedareafillBuilder_ == null) {
          tschchartseriesmixedareafillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseriesmixedareafill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesmixedareafill_ = null;
        }
        return tschchartseriesmixedareafillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesmixedcolumnstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesmixedcolumnstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 132;</code>
       */
      public boolean hasTschchartseriesmixedcolumnstroke() {
        return ((bitField2_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 132;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedcolumnstroke() {
        if (tschchartseriesmixedcolumnstrokeBuilder_ == null) {
          return tschchartseriesmixedcolumnstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedcolumnstroke_;
        } else {
          return tschchartseriesmixedcolumnstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 132;</code>
       */
      public Builder setTschchartseriesmixedcolumnstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesmixedcolumnstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesmixedcolumnstroke_ = value;
          onChanged();
        } else {
          tschchartseriesmixedcolumnstrokeBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 132;</code>
       */
      public Builder setTschchartseriesmixedcolumnstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesmixedcolumnstrokeBuilder_ == null) {
          tschchartseriesmixedcolumnstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesmixedcolumnstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 132;</code>
       */
      public Builder mergeTschchartseriesmixedcolumnstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesmixedcolumnstrokeBuilder_ == null) {
          if (((bitField2_ & 0x00000010) == 0x00000010) &&
              tschchartseriesmixedcolumnstroke_ != null &&
              tschchartseriesmixedcolumnstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesmixedcolumnstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesmixedcolumnstroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesmixedcolumnstroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesmixedcolumnstrokeBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 132;</code>
       */
      public Builder clearTschchartseriesmixedcolumnstroke() {
        if (tschchartseriesmixedcolumnstrokeBuilder_ == null) {
          tschchartseriesmixedcolumnstroke_ = null;
          onChanged();
        } else {
          tschchartseriesmixedcolumnstrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 132;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesmixedcolumnstrokeBuilder() {
        bitField2_ |= 0x00000010;
        onChanged();
        return getTschchartseriesmixedcolumnstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 132;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedcolumnstrokeOrBuilder() {
        if (tschchartseriesmixedcolumnstrokeBuilder_ != null) {
          return tschchartseriesmixedcolumnstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesmixedcolumnstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedcolumnstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedcolumnstroke = 132;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesmixedcolumnstrokeFieldBuilder() {
        if (tschchartseriesmixedcolumnstrokeBuilder_ == null) {
          tschchartseriesmixedcolumnstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesmixedcolumnstroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesmixedcolumnstroke_ = null;
        }
        return tschchartseriesmixedcolumnstrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesmixedlinestroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesmixedlinestrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 133;</code>
       */
      public boolean hasTschchartseriesmixedlinestroke() {
        return ((bitField2_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 133;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedlinestroke() {
        if (tschchartseriesmixedlinestrokeBuilder_ == null) {
          return tschchartseriesmixedlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedlinestroke_;
        } else {
          return tschchartseriesmixedlinestrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 133;</code>
       */
      public Builder setTschchartseriesmixedlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesmixedlinestrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesmixedlinestroke_ = value;
          onChanged();
        } else {
          tschchartseriesmixedlinestrokeBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 133;</code>
       */
      public Builder setTschchartseriesmixedlinestroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesmixedlinestrokeBuilder_ == null) {
          tschchartseriesmixedlinestroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesmixedlinestrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 133;</code>
       */
      public Builder mergeTschchartseriesmixedlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesmixedlinestrokeBuilder_ == null) {
          if (((bitField2_ & 0x00000020) == 0x00000020) &&
              tschchartseriesmixedlinestroke_ != null &&
              tschchartseriesmixedlinestroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesmixedlinestroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesmixedlinestroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesmixedlinestroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesmixedlinestrokeBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 133;</code>
       */
      public Builder clearTschchartseriesmixedlinestroke() {
        if (tschchartseriesmixedlinestrokeBuilder_ == null) {
          tschchartseriesmixedlinestroke_ = null;
          onChanged();
        } else {
          tschchartseriesmixedlinestrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 133;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesmixedlinestrokeBuilder() {
        bitField2_ |= 0x00000020;
        onChanged();
        return getTschchartseriesmixedlinestrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 133;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedlinestrokeOrBuilder() {
        if (tschchartseriesmixedlinestrokeBuilder_ != null) {
          return tschchartseriesmixedlinestrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesmixedlinestroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedlinestroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinestroke = 133;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesmixedlinestrokeFieldBuilder() {
        if (tschchartseriesmixedlinestrokeBuilder_ == null) {
          tschchartseriesmixedlinestrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesmixedlinestroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesmixedlinestroke_ = null;
        }
        return tschchartseriesmixedlinestrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesmixedareastroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesmixedareastrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 134;</code>
       */
      public boolean hasTschchartseriesmixedareastroke() {
        return ((bitField2_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 134;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedareastroke() {
        if (tschchartseriesmixedareastrokeBuilder_ == null) {
          return tschchartseriesmixedareastroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedareastroke_;
        } else {
          return tschchartseriesmixedareastrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 134;</code>
       */
      public Builder setTschchartseriesmixedareastroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesmixedareastrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesmixedareastroke_ = value;
          onChanged();
        } else {
          tschchartseriesmixedareastrokeBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 134;</code>
       */
      public Builder setTschchartseriesmixedareastroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesmixedareastrokeBuilder_ == null) {
          tschchartseriesmixedareastroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesmixedareastrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 134;</code>
       */
      public Builder mergeTschchartseriesmixedareastroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesmixedareastrokeBuilder_ == null) {
          if (((bitField2_ & 0x00000040) == 0x00000040) &&
              tschchartseriesmixedareastroke_ != null &&
              tschchartseriesmixedareastroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesmixedareastroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesmixedareastroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesmixedareastroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesmixedareastrokeBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 134;</code>
       */
      public Builder clearTschchartseriesmixedareastroke() {
        if (tschchartseriesmixedareastrokeBuilder_ == null) {
          tschchartseriesmixedareastroke_ = null;
          onChanged();
        } else {
          tschchartseriesmixedareastrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 134;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesmixedareastrokeBuilder() {
        bitField2_ |= 0x00000040;
        onChanged();
        return getTschchartseriesmixedareastrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 134;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedareastrokeOrBuilder() {
        if (tschchartseriesmixedareastrokeBuilder_ != null) {
          return tschchartseriesmixedareastrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesmixedareastroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedareastroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareastroke = 134;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesmixedareastrokeFieldBuilder() {
        if (tschchartseriesmixedareastrokeBuilder_ == null) {
          tschchartseriesmixedareastrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesmixedareastroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesmixedareastroke_ = null;
        }
        return tschchartseriesmixedareastrokeBuilder_;
      }

      private float tschchartseriesmixedlinesymbolsize_ ;
      /**
       * <code>optional float tschchartseriesmixedlinesymbolsize = 135;</code>
       */
      public boolean hasTschchartseriesmixedlinesymbolsize() {
        return ((bitField2_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float tschchartseriesmixedlinesymbolsize = 135;</code>
       */
      public float getTschchartseriesmixedlinesymbolsize() {
        return tschchartseriesmixedlinesymbolsize_;
      }
      /**
       * <code>optional float tschchartseriesmixedlinesymbolsize = 135;</code>
       */
      public Builder setTschchartseriesmixedlinesymbolsize(float value) {
        bitField2_ |= 0x00000080;
        tschchartseriesmixedlinesymbolsize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesmixedlinesymbolsize = 135;</code>
       */
      public Builder clearTschchartseriesmixedlinesymbolsize() {
        bitField2_ = (bitField2_ & ~0x00000080);
        tschchartseriesmixedlinesymbolsize_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartseriesmixedareasymbolsize_ ;
      /**
       * <code>optional float tschchartseriesmixedareasymbolsize = 136;</code>
       */
      public boolean hasTschchartseriesmixedareasymbolsize() {
        return ((bitField2_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float tschchartseriesmixedareasymbolsize = 136;</code>
       */
      public float getTschchartseriesmixedareasymbolsize() {
        return tschchartseriesmixedareasymbolsize_;
      }
      /**
       * <code>optional float tschchartseriesmixedareasymbolsize = 136;</code>
       */
      public Builder setTschchartseriesmixedareasymbolsize(float value) {
        bitField2_ |= 0x00000100;
        tschchartseriesmixedareasymbolsize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesmixedareasymbolsize = 136;</code>
       */
      public Builder clearTschchartseriesmixedareasymbolsize() {
        bitField2_ = (bitField2_ & ~0x00000100);
        tschchartseriesmixedareasymbolsize_ = 0F;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesmixedlinesymbolfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseriesmixedlinesymbolfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 137;</code>
       */
      public boolean hasTschchartseriesmixedlinesymbolfill() {
        return ((bitField2_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 137;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesmixedlinesymbolfill() {
        if (tschchartseriesmixedlinesymbolfillBuilder_ == null) {
          return tschchartseriesmixedlinesymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedlinesymbolfill_;
        } else {
          return tschchartseriesmixedlinesymbolfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 137;</code>
       */
      public Builder setTschchartseriesmixedlinesymbolfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesmixedlinesymbolfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesmixedlinesymbolfill_ = value;
          onChanged();
        } else {
          tschchartseriesmixedlinesymbolfillBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 137;</code>
       */
      public Builder setTschchartseriesmixedlinesymbolfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseriesmixedlinesymbolfillBuilder_ == null) {
          tschchartseriesmixedlinesymbolfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesmixedlinesymbolfillBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 137;</code>
       */
      public Builder mergeTschchartseriesmixedlinesymbolfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesmixedlinesymbolfillBuilder_ == null) {
          if (((bitField2_ & 0x00000200) == 0x00000200) &&
              tschchartseriesmixedlinesymbolfill_ != null &&
              tschchartseriesmixedlinesymbolfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseriesmixedlinesymbolfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseriesmixedlinesymbolfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesmixedlinesymbolfill_ = value;
          }
          onChanged();
        } else {
          tschchartseriesmixedlinesymbolfillBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 137;</code>
       */
      public Builder clearTschchartseriesmixedlinesymbolfill() {
        if (tschchartseriesmixedlinesymbolfillBuilder_ == null) {
          tschchartseriesmixedlinesymbolfill_ = null;
          onChanged();
        } else {
          tschchartseriesmixedlinesymbolfillBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 137;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseriesmixedlinesymbolfillBuilder() {
        bitField2_ |= 0x00000200;
        onChanged();
        return getTschchartseriesmixedlinesymbolfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 137;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesmixedlinesymbolfillOrBuilder() {
        if (tschchartseriesmixedlinesymbolfillBuilder_ != null) {
          return tschchartseriesmixedlinesymbolfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesmixedlinesymbolfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedlinesymbolfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedlinesymbolfill = 137;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseriesmixedlinesymbolfillFieldBuilder() {
        if (tschchartseriesmixedlinesymbolfillBuilder_ == null) {
          tschchartseriesmixedlinesymbolfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseriesmixedlinesymbolfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesmixedlinesymbolfill_ = null;
        }
        return tschchartseriesmixedlinesymbolfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseriesmixedareasymbolfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseriesmixedareasymbolfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 138;</code>
       */
      public boolean hasTschchartseriesmixedareasymbolfill() {
        return ((bitField2_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 138;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseriesmixedareasymbolfill() {
        if (tschchartseriesmixedareasymbolfillBuilder_ == null) {
          return tschchartseriesmixedareasymbolfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedareasymbolfill_;
        } else {
          return tschchartseriesmixedareasymbolfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 138;</code>
       */
      public Builder setTschchartseriesmixedareasymbolfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesmixedareasymbolfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesmixedareasymbolfill_ = value;
          onChanged();
        } else {
          tschchartseriesmixedareasymbolfillBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 138;</code>
       */
      public Builder setTschchartseriesmixedareasymbolfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseriesmixedareasymbolfillBuilder_ == null) {
          tschchartseriesmixedareasymbolfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesmixedareasymbolfillBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 138;</code>
       */
      public Builder mergeTschchartseriesmixedareasymbolfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseriesmixedareasymbolfillBuilder_ == null) {
          if (((bitField2_ & 0x00000400) == 0x00000400) &&
              tschchartseriesmixedareasymbolfill_ != null &&
              tschchartseriesmixedareasymbolfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseriesmixedareasymbolfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseriesmixedareasymbolfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesmixedareasymbolfill_ = value;
          }
          onChanged();
        } else {
          tschchartseriesmixedareasymbolfillBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 138;</code>
       */
      public Builder clearTschchartseriesmixedareasymbolfill() {
        if (tschchartseriesmixedareasymbolfillBuilder_ == null) {
          tschchartseriesmixedareasymbolfill_ = null;
          onChanged();
        } else {
          tschchartseriesmixedareasymbolfillBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 138;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseriesmixedareasymbolfillBuilder() {
        bitField2_ |= 0x00000400;
        onChanged();
        return getTschchartseriesmixedareasymbolfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 138;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseriesmixedareasymbolfillOrBuilder() {
        if (tschchartseriesmixedareasymbolfillBuilder_ != null) {
          return tschchartseriesmixedareasymbolfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesmixedareasymbolfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseriesmixedareasymbolfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseriesmixedareasymbolfill = 138;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseriesmixedareasymbolfillFieldBuilder() {
        if (tschchartseriesmixedareasymbolfillBuilder_ == null) {
          tschchartseriesmixedareasymbolfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseriesmixedareasymbolfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesmixedareasymbolfill_ = null;
        }
        return tschchartseriesmixedareasymbolfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesmixedlinesymbolstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesmixedlinesymbolstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 139;</code>
       */
      public boolean hasTschchartseriesmixedlinesymbolstroke() {
        return ((bitField2_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 139;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedlinesymbolstroke() {
        if (tschchartseriesmixedlinesymbolstrokeBuilder_ == null) {
          return tschchartseriesmixedlinesymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedlinesymbolstroke_;
        } else {
          return tschchartseriesmixedlinesymbolstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 139;</code>
       */
      public Builder setTschchartseriesmixedlinesymbolstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesmixedlinesymbolstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesmixedlinesymbolstroke_ = value;
          onChanged();
        } else {
          tschchartseriesmixedlinesymbolstrokeBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 139;</code>
       */
      public Builder setTschchartseriesmixedlinesymbolstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesmixedlinesymbolstrokeBuilder_ == null) {
          tschchartseriesmixedlinesymbolstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesmixedlinesymbolstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 139;</code>
       */
      public Builder mergeTschchartseriesmixedlinesymbolstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesmixedlinesymbolstrokeBuilder_ == null) {
          if (((bitField2_ & 0x00000800) == 0x00000800) &&
              tschchartseriesmixedlinesymbolstroke_ != null &&
              tschchartseriesmixedlinesymbolstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesmixedlinesymbolstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesmixedlinesymbolstroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesmixedlinesymbolstroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesmixedlinesymbolstrokeBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 139;</code>
       */
      public Builder clearTschchartseriesmixedlinesymbolstroke() {
        if (tschchartseriesmixedlinesymbolstrokeBuilder_ == null) {
          tschchartseriesmixedlinesymbolstroke_ = null;
          onChanged();
        } else {
          tschchartseriesmixedlinesymbolstrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 139;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesmixedlinesymbolstrokeBuilder() {
        bitField2_ |= 0x00000800;
        onChanged();
        return getTschchartseriesmixedlinesymbolstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 139;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedlinesymbolstrokeOrBuilder() {
        if (tschchartseriesmixedlinesymbolstrokeBuilder_ != null) {
          return tschchartseriesmixedlinesymbolstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesmixedlinesymbolstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedlinesymbolstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedlinesymbolstroke = 139;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesmixedlinesymbolstrokeFieldBuilder() {
        if (tschchartseriesmixedlinesymbolstrokeBuilder_ == null) {
          tschchartseriesmixedlinesymbolstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesmixedlinesymbolstroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesmixedlinesymbolstroke_ = null;
        }
        return tschchartseriesmixedlinesymbolstrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesmixedareasymbolstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesmixedareasymbolstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 140;</code>
       */
      public boolean hasTschchartseriesmixedareasymbolstroke() {
        return ((bitField2_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 140;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesmixedareasymbolstroke() {
        if (tschchartseriesmixedareasymbolstrokeBuilder_ == null) {
          return tschchartseriesmixedareasymbolstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedareasymbolstroke_;
        } else {
          return tschchartseriesmixedareasymbolstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 140;</code>
       */
      public Builder setTschchartseriesmixedareasymbolstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesmixedareasymbolstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesmixedareasymbolstroke_ = value;
          onChanged();
        } else {
          tschchartseriesmixedareasymbolstrokeBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 140;</code>
       */
      public Builder setTschchartseriesmixedareasymbolstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesmixedareasymbolstrokeBuilder_ == null) {
          tschchartseriesmixedareasymbolstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesmixedareasymbolstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 140;</code>
       */
      public Builder mergeTschchartseriesmixedareasymbolstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesmixedareasymbolstrokeBuilder_ == null) {
          if (((bitField2_ & 0x00001000) == 0x00001000) &&
              tschchartseriesmixedareasymbolstroke_ != null &&
              tschchartseriesmixedareasymbolstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesmixedareasymbolstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesmixedareasymbolstroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesmixedareasymbolstroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesmixedareasymbolstrokeBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 140;</code>
       */
      public Builder clearTschchartseriesmixedareasymbolstroke() {
        if (tschchartseriesmixedareasymbolstrokeBuilder_ == null) {
          tschchartseriesmixedareasymbolstroke_ = null;
          onChanged();
        } else {
          tschchartseriesmixedareasymbolstrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 140;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesmixedareasymbolstrokeBuilder() {
        bitField2_ |= 0x00001000;
        onChanged();
        return getTschchartseriesmixedareasymbolstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 140;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesmixedareasymbolstrokeOrBuilder() {
        if (tschchartseriesmixedareasymbolstrokeBuilder_ != null) {
          return tschchartseriesmixedareasymbolstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesmixedareasymbolstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesmixedareasymbolstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesmixedareasymbolstroke = 140;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesmixedareasymbolstrokeFieldBuilder() {
        if (tschchartseriesmixedareasymbolstrokeBuilder_ == null) {
          tschchartseriesmixedareasymbolstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesmixedareasymbolstroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesmixedareasymbolstroke_ = null;
        }
        return tschchartseriesmixedareasymbolstrokeBuilder_;
      }

      private int tschchartseriesmixedcolumnvaluelabelposition_ ;
      /**
       * <code>optional int32 tschchartseriesmixedcolumnvaluelabelposition = 141;</code>
       */
      public boolean hasTschchartseriesmixedcolumnvaluelabelposition() {
        return ((bitField2_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 tschchartseriesmixedcolumnvaluelabelposition = 141;</code>
       */
      public int getTschchartseriesmixedcolumnvaluelabelposition() {
        return tschchartseriesmixedcolumnvaluelabelposition_;
      }
      /**
       * <code>optional int32 tschchartseriesmixedcolumnvaluelabelposition = 141;</code>
       */
      public Builder setTschchartseriesmixedcolumnvaluelabelposition(int value) {
        bitField2_ |= 0x00002000;
        tschchartseriesmixedcolumnvaluelabelposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesmixedcolumnvaluelabelposition = 141;</code>
       */
      public Builder clearTschchartseriesmixedcolumnvaluelabelposition() {
        bitField2_ = (bitField2_ & ~0x00002000);
        tschchartseriesmixedcolumnvaluelabelposition_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesmixedlinevaluelabelposition_ ;
      /**
       * <code>optional int32 tschchartseriesmixedlinevaluelabelposition = 142;</code>
       */
      public boolean hasTschchartseriesmixedlinevaluelabelposition() {
        return ((bitField2_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 tschchartseriesmixedlinevaluelabelposition = 142;</code>
       */
      public int getTschchartseriesmixedlinevaluelabelposition() {
        return tschchartseriesmixedlinevaluelabelposition_;
      }
      /**
       * <code>optional int32 tschchartseriesmixedlinevaluelabelposition = 142;</code>
       */
      public Builder setTschchartseriesmixedlinevaluelabelposition(int value) {
        bitField2_ |= 0x00004000;
        tschchartseriesmixedlinevaluelabelposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesmixedlinevaluelabelposition = 142;</code>
       */
      public Builder clearTschchartseriesmixedlinevaluelabelposition() {
        bitField2_ = (bitField2_ & ~0x00004000);
        tschchartseriesmixedlinevaluelabelposition_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesmixedareavaluelabelposition_ ;
      /**
       * <code>optional int32 tschchartseriesmixedareavaluelabelposition = 143;</code>
       */
      public boolean hasTschchartseriesmixedareavaluelabelposition() {
        return ((bitField2_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 tschchartseriesmixedareavaluelabelposition = 143;</code>
       */
      public int getTschchartseriesmixedareavaluelabelposition() {
        return tschchartseriesmixedareavaluelabelposition_;
      }
      /**
       * <code>optional int32 tschchartseriesmixedareavaluelabelposition = 143;</code>
       */
      public Builder setTschchartseriesmixedareavaluelabelposition(int value) {
        bitField2_ |= 0x00008000;
        tschchartseriesmixedareavaluelabelposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesmixedareavaluelabelposition = 143;</code>
       */
      public Builder clearTschchartseriesmixedareavaluelabelposition() {
        bitField2_ = (bitField2_ & ~0x00008000);
        tschchartseriesmixedareavaluelabelposition_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesdefaultoutsidelabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartseriesdefaultoutsidelabelparagraphstyleindex = 150;</code>
       */
      public boolean hasTschchartseriesdefaultoutsidelabelparagraphstyleindex() {
        return ((bitField2_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 tschchartseriesdefaultoutsidelabelparagraphstyleindex = 150;</code>
       */
      public int getTschchartseriesdefaultoutsidelabelparagraphstyleindex() {
        return tschchartseriesdefaultoutsidelabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaultoutsidelabelparagraphstyleindex = 150;</code>
       */
      public Builder setTschchartseriesdefaultoutsidelabelparagraphstyleindex(int value) {
        bitField2_ |= 0x00010000;
        tschchartseriesdefaultoutsidelabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaultoutsidelabelparagraphstyleindex = 150;</code>
       */
      public Builder clearTschchartseriesdefaultoutsidelabelparagraphstyleindex() {
        bitField2_ = (bitField2_ & ~0x00010000);
        tschchartseriesdefaultoutsidelabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesbaroutsidelabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartseriesbaroutsidelabelparagraphstyleindex = 151;</code>
       */
      public boolean hasTschchartseriesbaroutsidelabelparagraphstyleindex() {
        return ((bitField2_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 tschchartseriesbaroutsidelabelparagraphstyleindex = 151;</code>
       */
      public int getTschchartseriesbaroutsidelabelparagraphstyleindex() {
        return tschchartseriesbaroutsidelabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartseriesbaroutsidelabelparagraphstyleindex = 151;</code>
       */
      public Builder setTschchartseriesbaroutsidelabelparagraphstyleindex(int value) {
        bitField2_ |= 0x00020000;
        tschchartseriesbaroutsidelabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesbaroutsidelabelparagraphstyleindex = 151;</code>
       */
      public Builder clearTschchartseriesbaroutsidelabelparagraphstyleindex() {
        bitField2_ = (bitField2_ & ~0x00020000);
        tschchartseriesbaroutsidelabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesareaoutsidelabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartseriesareaoutsidelabelparagraphstyleindex = 153;</code>
       */
      public boolean hasTschchartseriesareaoutsidelabelparagraphstyleindex() {
        return ((bitField2_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 tschchartseriesareaoutsidelabelparagraphstyleindex = 153;</code>
       */
      public int getTschchartseriesareaoutsidelabelparagraphstyleindex() {
        return tschchartseriesareaoutsidelabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartseriesareaoutsidelabelparagraphstyleindex = 153;</code>
       */
      public Builder setTschchartseriesareaoutsidelabelparagraphstyleindex(int value) {
        bitField2_ |= 0x00040000;
        tschchartseriesareaoutsidelabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesareaoutsidelabelparagraphstyleindex = 153;</code>
       */
      public Builder clearTschchartseriesareaoutsidelabelparagraphstyleindex() {
        bitField2_ = (bitField2_ & ~0x00040000);
        tschchartseriesareaoutsidelabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriespieoutsidelabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartseriespieoutsidelabelparagraphstyleindex = 154;</code>
       */
      public boolean hasTschchartseriespieoutsidelabelparagraphstyleindex() {
        return ((bitField2_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 tschchartseriespieoutsidelabelparagraphstyleindex = 154;</code>
       */
      public int getTschchartseriespieoutsidelabelparagraphstyleindex() {
        return tschchartseriespieoutsidelabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartseriespieoutsidelabelparagraphstyleindex = 154;</code>
       */
      public Builder setTschchartseriespieoutsidelabelparagraphstyleindex(int value) {
        bitField2_ |= 0x00080000;
        tschchartseriespieoutsidelabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriespieoutsidelabelparagraphstyleindex = 154;</code>
       */
      public Builder clearTschchartseriespieoutsidelabelparagraphstyleindex() {
        bitField2_ = (bitField2_ & ~0x00080000);
        tschchartseriespieoutsidelabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesmixedoutsidelabelparagraphstyleindex_ ;
      /**
       * <code>optional int32 tschchartseriesmixedoutsidelabelparagraphstyleindex = 155;</code>
       */
      public boolean hasTschchartseriesmixedoutsidelabelparagraphstyleindex() {
        return ((bitField2_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 tschchartseriesmixedoutsidelabelparagraphstyleindex = 155;</code>
       */
      public int getTschchartseriesmixedoutsidelabelparagraphstyleindex() {
        return tschchartseriesmixedoutsidelabelparagraphstyleindex_;
      }
      /**
       * <code>optional int32 tschchartseriesmixedoutsidelabelparagraphstyleindex = 155;</code>
       */
      public Builder setTschchartseriesmixedoutsidelabelparagraphstyleindex(int value) {
        bitField2_ |= 0x00100000;
        tschchartseriesmixedoutsidelabelparagraphstyleindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesmixedoutsidelabelparagraphstyleindex = 155;</code>
       */
      public Builder clearTschchartseriesmixedoutsidelabelparagraphstyleindex() {
        bitField2_ = (bitField2_ & ~0x00100000);
        tschchartseriesmixedoutsidelabelparagraphstyleindex_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesstackedbarvaluelabelposition_ ;
      /**
       * <code>optional int32 tschchartseriesstackedbarvaluelabelposition = 156;</code>
       */
      public boolean hasTschchartseriesstackedbarvaluelabelposition() {
        return ((bitField2_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 tschchartseriesstackedbarvaluelabelposition = 156;</code>
       */
      public int getTschchartseriesstackedbarvaluelabelposition() {
        return tschchartseriesstackedbarvaluelabelposition_;
      }
      /**
       * <code>optional int32 tschchartseriesstackedbarvaluelabelposition = 156;</code>
       */
      public Builder setTschchartseriesstackedbarvaluelabelposition(int value) {
        bitField2_ |= 0x00200000;
        tschchartseriesstackedbarvaluelabelposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesstackedbarvaluelabelposition = 156;</code>
       */
      public Builder clearTschchartseriesstackedbarvaluelabelposition() {
        bitField2_ = (bitField2_ & ~0x00200000);
        tschchartseriesstackedbarvaluelabelposition_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesstackedareavaluelabelposition_ ;
      /**
       * <code>optional int32 tschchartseriesstackedareavaluelabelposition = 157;</code>
       */
      public boolean hasTschchartseriesstackedareavaluelabelposition() {
        return ((bitField2_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 tschchartseriesstackedareavaluelabelposition = 157;</code>
       */
      public int getTschchartseriesstackedareavaluelabelposition() {
        return tschchartseriesstackedareavaluelabelposition_;
      }
      /**
       * <code>optional int32 tschchartseriesstackedareavaluelabelposition = 157;</code>
       */
      public Builder setTschchartseriesstackedareavaluelabelposition(int value) {
        bitField2_ |= 0x00400000;
        tschchartseriesstackedareavaluelabelposition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesstackedareavaluelabelposition = 157;</code>
       */
      public Builder clearTschchartseriesstackedareavaluelabelposition() {
        bitField2_ = (bitField2_ & ~0x00400000);
        tschchartseriesstackedareavaluelabelposition_ = 0;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesdefaulttrendlinestroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesdefaulttrendlinestrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 167;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlinestroke() {
        return ((bitField2_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 167;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesdefaulttrendlinestroke() {
        if (tschchartseriesdefaulttrendlinestrokeBuilder_ == null) {
          return tschchartseriesdefaulttrendlinestroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesdefaulttrendlinestroke_;
        } else {
          return tschchartseriesdefaulttrendlinestrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 167;</code>
       */
      public Builder setTschchartseriesdefaulttrendlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesdefaulttrendlinestrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaulttrendlinestroke_ = value;
          onChanged();
        } else {
          tschchartseriesdefaulttrendlinestrokeBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 167;</code>
       */
      public Builder setTschchartseriesdefaulttrendlinestroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesdefaulttrendlinestrokeBuilder_ == null) {
          tschchartseriesdefaulttrendlinestroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaulttrendlinestrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 167;</code>
       */
      public Builder mergeTschchartseriesdefaulttrendlinestroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesdefaulttrendlinestrokeBuilder_ == null) {
          if (((bitField2_ & 0x00800000) == 0x00800000) &&
              tschchartseriesdefaulttrendlinestroke_ != null &&
              tschchartseriesdefaulttrendlinestroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesdefaulttrendlinestroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesdefaulttrendlinestroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaulttrendlinestroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaulttrendlinestrokeBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 167;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlinestroke() {
        if (tschchartseriesdefaulttrendlinestrokeBuilder_ == null) {
          tschchartseriesdefaulttrendlinestroke_ = null;
          onChanged();
        } else {
          tschchartseriesdefaulttrendlinestrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00800000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 167;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesdefaulttrendlinestrokeBuilder() {
        bitField2_ |= 0x00800000;
        onChanged();
        return getTschchartseriesdefaulttrendlinestrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 167;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesdefaulttrendlinestrokeOrBuilder() {
        if (tschchartseriesdefaulttrendlinestrokeBuilder_ != null) {
          return tschchartseriesdefaulttrendlinestrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaulttrendlinestroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesdefaulttrendlinestroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulttrendlinestroke = 167;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesdefaulttrendlinestrokeFieldBuilder() {
        if (tschchartseriesdefaulttrendlinestrokeBuilder_ == null) {
          tschchartseriesdefaulttrendlinestrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesdefaulttrendlinestroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaulttrendlinestroke_ = null;
        }
        return tschchartseriesdefaulttrendlinestrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesdefaulttrendlineshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseriesdefaulttrendlineshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 168;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlineshadow() {
        return ((bitField2_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 168;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesdefaulttrendlineshadow() {
        if (tschchartseriesdefaulttrendlineshadowBuilder_ == null) {
          return tschchartseriesdefaulttrendlineshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesdefaulttrendlineshadow_;
        } else {
          return tschchartseriesdefaulttrendlineshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 168;</code>
       */
      public Builder setTschchartseriesdefaulttrendlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesdefaulttrendlineshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaulttrendlineshadow_ = value;
          onChanged();
        } else {
          tschchartseriesdefaulttrendlineshadowBuilder_.setMessage(value);
        }
        bitField2_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 168;</code>
       */
      public Builder setTschchartseriesdefaulttrendlineshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseriesdefaulttrendlineshadowBuilder_ == null) {
          tschchartseriesdefaulttrendlineshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaulttrendlineshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 168;</code>
       */
      public Builder mergeTschchartseriesdefaulttrendlineshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesdefaulttrendlineshadowBuilder_ == null) {
          if (((bitField2_ & 0x01000000) == 0x01000000) &&
              tschchartseriesdefaulttrendlineshadow_ != null &&
              tschchartseriesdefaulttrendlineshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseriesdefaulttrendlineshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseriesdefaulttrendlineshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaulttrendlineshadow_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaulttrendlineshadowBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 168;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlineshadow() {
        if (tschchartseriesdefaulttrendlineshadowBuilder_ == null) {
          tschchartseriesdefaulttrendlineshadow_ = null;
          onChanged();
        } else {
          tschchartseriesdefaulttrendlineshadowBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x01000000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 168;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseriesdefaulttrendlineshadowBuilder() {
        bitField2_ |= 0x01000000;
        onChanged();
        return getTschchartseriesdefaulttrendlineshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 168;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesdefaulttrendlineshadowOrBuilder() {
        if (tschchartseriesdefaulttrendlineshadowBuilder_ != null) {
          return tschchartseriesdefaulttrendlineshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaulttrendlineshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesdefaulttrendlineshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulttrendlineshadow = 168;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseriesdefaulttrendlineshadowFieldBuilder() {
        if (tschchartseriesdefaulttrendlineshadowBuilder_ == null) {
          tschchartseriesdefaulttrendlineshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseriesdefaulttrendlineshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaulttrendlineshadow_ = null;
        }
        return tschchartseriesdefaulttrendlineshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive tschchartseriesdefaulterrorbarshadow_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> tschchartseriesdefaulterrorbarshadowBuilder_;
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 180;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarshadow() {
        return ((bitField2_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 180;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive getTschchartseriesdefaulterrorbarshadow() {
        if (tschchartseriesdefaulterrorbarshadowBuilder_ == null) {
          return tschchartseriesdefaulterrorbarshadow_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarshadow_;
        } else {
          return tschchartseriesdefaulterrorbarshadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 180;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesdefaulterrorbarshadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaulterrorbarshadow_ = value;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarshadowBuilder_.setMessage(value);
        }
        bitField2_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 180;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarshadow(
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder builderForValue) {
        if (tschchartseriesdefaulterrorbarshadowBuilder_ == null) {
          tschchartseriesdefaulterrorbarshadow_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarshadowBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 180;</code>
       */
      public Builder mergeTschchartseriesdefaulterrorbarshadow(org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive value) {
        if (tschchartseriesdefaulterrorbarshadowBuilder_ == null) {
          if (((bitField2_ & 0x02000000) == 0x02000000) &&
              tschchartseriesdefaulterrorbarshadow_ != null &&
              tschchartseriesdefaulterrorbarshadow_ != org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance()) {
            tschchartseriesdefaulterrorbarshadow_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.newBuilder(tschchartseriesdefaulterrorbarshadow_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaulterrorbarshadow_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarshadowBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 180;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarshadow() {
        if (tschchartseriesdefaulterrorbarshadowBuilder_ == null) {
          tschchartseriesdefaulterrorbarshadow_ = null;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarshadowBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x02000000);
        return this;
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 180;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder getTschchartseriesdefaulterrorbarshadowBuilder() {
        bitField2_ |= 0x02000000;
        onChanged();
        return getTschchartseriesdefaulterrorbarshadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 180;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder getTschchartseriesdefaulterrorbarshadowOrBuilder() {
        if (tschchartseriesdefaulterrorbarshadowBuilder_ != null) {
          return tschchartseriesdefaulterrorbarshadowBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaulterrorbarshadow_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarshadow_;
        }
      }
      /**
       * <code>optional .TSD.ShadowArchive tschchartseriesdefaulterrorbarshadow = 180;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder> 
          getTschchartseriesdefaulterrorbarshadowFieldBuilder() {
        if (tschchartseriesdefaulterrorbarshadowBuilder_ == null) {
          tschchartseriesdefaulterrorbarshadowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.ShadowArchiveOrBuilder>(
                  getTschchartseriesdefaulterrorbarshadow(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaulterrorbarshadow_ = null;
        }
        return tschchartseriesdefaulterrorbarshadowBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesdefaulterrorbarstroke_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesdefaulterrorbarstrokeBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 181;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarstroke() {
        return ((bitField2_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 181;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesdefaulterrorbarstroke() {
        if (tschchartseriesdefaulterrorbarstrokeBuilder_ == null) {
          return tschchartseriesdefaulterrorbarstroke_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarstroke_;
        } else {
          return tschchartseriesdefaulterrorbarstrokeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 181;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesdefaulterrorbarstrokeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaulterrorbarstroke_ = value;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarstrokeBuilder_.setMessage(value);
        }
        bitField2_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 181;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarstroke(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesdefaulterrorbarstrokeBuilder_ == null) {
          tschchartseriesdefaulterrorbarstroke_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarstrokeBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 181;</code>
       */
      public Builder mergeTschchartseriesdefaulterrorbarstroke(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesdefaulterrorbarstrokeBuilder_ == null) {
          if (((bitField2_ & 0x04000000) == 0x04000000) &&
              tschchartseriesdefaulterrorbarstroke_ != null &&
              tschchartseriesdefaulterrorbarstroke_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesdefaulterrorbarstroke_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesdefaulterrorbarstroke_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaulterrorbarstroke_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarstrokeBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 181;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarstroke() {
        if (tschchartseriesdefaulterrorbarstrokeBuilder_ == null) {
          tschchartseriesdefaulterrorbarstroke_ = null;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarstrokeBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x04000000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 181;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesdefaulterrorbarstrokeBuilder() {
        bitField2_ |= 0x04000000;
        onChanged();
        return getTschchartseriesdefaulterrorbarstrokeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 181;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesdefaulterrorbarstrokeOrBuilder() {
        if (tschchartseriesdefaulterrorbarstrokeBuilder_ != null) {
          return tschchartseriesdefaulterrorbarstrokeBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaulterrorbarstroke_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarstroke_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstroke = 181;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesdefaulterrorbarstrokeFieldBuilder() {
        if (tschchartseriesdefaulterrorbarstrokeBuilder_ == null) {
          tschchartseriesdefaulterrorbarstrokeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesdefaulterrorbarstroke(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaulterrorbarstroke_ = null;
        }
        return tschchartseriesdefaulterrorbarstrokeBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> tschchartseriesdefaulterrorbarstrokescatterxBuilder_;
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 182;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarstrokescatterx() {
        return ((bitField2_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 182;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive getTschchartseriesdefaulterrorbarstrokescatterx() {
        if (tschchartseriesdefaulterrorbarstrokescatterxBuilder_ == null) {
          return tschchartseriesdefaulterrorbarstrokescatterx_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarstrokescatterx_;
        } else {
          return tschchartseriesdefaulterrorbarstrokescatterxBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 182;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarstrokescatterx(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesdefaulterrorbarstrokescatterxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaulterrorbarstrokescatterx_ = value;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarstrokescatterxBuilder_.setMessage(value);
        }
        bitField2_ |= 0x08000000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 182;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarstrokescatterx(
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder builderForValue) {
        if (tschchartseriesdefaulterrorbarstrokescatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarstrokescatterx_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarstrokescatterxBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x08000000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 182;</code>
       */
      public Builder mergeTschchartseriesdefaulterrorbarstrokescatterx(org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive value) {
        if (tschchartseriesdefaulterrorbarstrokescatterxBuilder_ == null) {
          if (((bitField2_ & 0x08000000) == 0x08000000) &&
              tschchartseriesdefaulterrorbarstrokescatterx_ != null &&
              tschchartseriesdefaulterrorbarstrokescatterx_ != org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance()) {
            tschchartseriesdefaulterrorbarstrokescatterx_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.newBuilder(tschchartseriesdefaulterrorbarstrokescatterx_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaulterrorbarstrokescatterx_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarstrokescatterxBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x08000000;
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 182;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarstrokescatterx() {
        if (tschchartseriesdefaulterrorbarstrokescatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarstrokescatterx_ = null;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarstrokescatterxBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x08000000);
        return this;
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 182;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder getTschchartseriesdefaulterrorbarstrokescatterxBuilder() {
        bitField2_ |= 0x08000000;
        onChanged();
        return getTschchartseriesdefaulterrorbarstrokescatterxFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 182;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder getTschchartseriesdefaulterrorbarstrokescatterxOrBuilder() {
        if (tschchartseriesdefaulterrorbarstrokescatterxBuilder_ != null) {
          return tschchartseriesdefaulterrorbarstrokescatterxBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaulterrorbarstrokescatterx_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarstrokescatterx_;
        }
      }
      /**
       * <code>optional .TSD.StrokeArchive tschchartseriesdefaulterrorbarstrokescatterx = 182;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder> 
          getTschchartseriesdefaulterrorbarstrokescatterxFieldBuilder() {
        if (tschchartseriesdefaulterrorbarstrokescatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarstrokescatterxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.StrokeArchiveOrBuilder>(
                  getTschchartseriesdefaulterrorbarstrokescatterx(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaulterrorbarstrokescatterx_ = null;
        }
        return tschchartseriesdefaulterrorbarstrokescatterxBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive tschchartseriesdefaulterrorbarlineend_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive, org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchiveOrBuilder> tschchartseriesdefaulterrorbarlineendBuilder_;
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 183;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarlineend() {
        return ((bitField2_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 183;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive getTschchartseriesdefaulterrorbarlineend() {
        if (tschchartseriesdefaulterrorbarlineendBuilder_ == null) {
          return tschchartseriesdefaulterrorbarlineend_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarlineend_;
        } else {
          return tschchartseriesdefaulterrorbarlineendBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 183;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarlineend(org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive value) {
        if (tschchartseriesdefaulterrorbarlineendBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaulterrorbarlineend_ = value;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarlineendBuilder_.setMessage(value);
        }
        bitField2_ |= 0x10000000;
        return this;
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 183;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarlineend(
          org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.Builder builderForValue) {
        if (tschchartseriesdefaulterrorbarlineendBuilder_ == null) {
          tschchartseriesdefaulterrorbarlineend_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarlineendBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x10000000;
        return this;
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 183;</code>
       */
      public Builder mergeTschchartseriesdefaulterrorbarlineend(org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive value) {
        if (tschchartseriesdefaulterrorbarlineendBuilder_ == null) {
          if (((bitField2_ & 0x10000000) == 0x10000000) &&
              tschchartseriesdefaulterrorbarlineend_ != null &&
              tschchartseriesdefaulterrorbarlineend_ != org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.getDefaultInstance()) {
            tschchartseriesdefaulterrorbarlineend_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.newBuilder(tschchartseriesdefaulterrorbarlineend_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaulterrorbarlineend_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarlineendBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x10000000;
        return this;
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 183;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarlineend() {
        if (tschchartseriesdefaulterrorbarlineendBuilder_ == null) {
          tschchartseriesdefaulterrorbarlineend_ = null;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarlineendBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x10000000);
        return this;
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 183;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.Builder getTschchartseriesdefaulterrorbarlineendBuilder() {
        bitField2_ |= 0x10000000;
        onChanged();
        return getTschchartseriesdefaulterrorbarlineendFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 183;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchiveOrBuilder getTschchartseriesdefaulterrorbarlineendOrBuilder() {
        if (tschchartseriesdefaulterrorbarlineendBuilder_ != null) {
          return tschchartseriesdefaulterrorbarlineendBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaulterrorbarlineend_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarlineend_;
        }
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineend = 183;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive, org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchiveOrBuilder> 
          getTschchartseriesdefaulterrorbarlineendFieldBuilder() {
        if (tschchartseriesdefaulterrorbarlineendBuilder_ == null) {
          tschchartseriesdefaulterrorbarlineendBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive, org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchiveOrBuilder>(
                  getTschchartseriesdefaulterrorbarlineend(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaulterrorbarlineend_ = null;
        }
        return tschchartseriesdefaulterrorbarlineendBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive, org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchiveOrBuilder> tschchartseriesdefaulterrorbarlineendscatterxBuilder_;
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 184;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarlineendscatterx() {
        return ((bitField2_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 184;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive getTschchartseriesdefaulterrorbarlineendscatterx() {
        if (tschchartseriesdefaulterrorbarlineendscatterxBuilder_ == null) {
          return tschchartseriesdefaulterrorbarlineendscatterx_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarlineendscatterx_;
        } else {
          return tschchartseriesdefaulterrorbarlineendscatterxBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 184;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarlineendscatterx(org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive value) {
        if (tschchartseriesdefaulterrorbarlineendscatterxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaulterrorbarlineendscatterx_ = value;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarlineendscatterxBuilder_.setMessage(value);
        }
        bitField2_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 184;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarlineendscatterx(
          org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.Builder builderForValue) {
        if (tschchartseriesdefaulterrorbarlineendscatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarlineendscatterx_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarlineendscatterxBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 184;</code>
       */
      public Builder mergeTschchartseriesdefaulterrorbarlineendscatterx(org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive value) {
        if (tschchartseriesdefaulterrorbarlineendscatterxBuilder_ == null) {
          if (((bitField2_ & 0x20000000) == 0x20000000) &&
              tschchartseriesdefaulterrorbarlineendscatterx_ != null &&
              tschchartseriesdefaulterrorbarlineendscatterx_ != org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.getDefaultInstance()) {
            tschchartseriesdefaulterrorbarlineendscatterx_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.newBuilder(tschchartseriesdefaulterrorbarlineendscatterx_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaulterrorbarlineendscatterx_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarlineendscatterxBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 184;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarlineendscatterx() {
        if (tschchartseriesdefaulterrorbarlineendscatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarlineendscatterx_ = null;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarlineendscatterxBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x20000000);
        return this;
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 184;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.Builder getTschchartseriesdefaulterrorbarlineendscatterxBuilder() {
        bitField2_ |= 0x20000000;
        onChanged();
        return getTschchartseriesdefaulterrorbarlineendscatterxFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 184;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchiveOrBuilder getTschchartseriesdefaulterrorbarlineendscatterxOrBuilder() {
        if (tschchartseriesdefaulterrorbarlineendscatterxBuilder_ != null) {
          return tschchartseriesdefaulterrorbarlineendscatterxBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaulterrorbarlineendscatterx_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarlineendscatterx_;
        }
      }
      /**
       * <code>optional .TSD.LineEndArchive tschchartseriesdefaulterrorbarlineendscatterx = 184;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive, org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchiveOrBuilder> 
          getTschchartseriesdefaulterrorbarlineendscatterxFieldBuilder() {
        if (tschchartseriesdefaulterrorbarlineendscatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarlineendscatterxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive, org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.LineEndArchiveOrBuilder>(
                  getTschchartseriesdefaulterrorbarlineendscatterx(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaulterrorbarlineendscatterx_ = null;
        }
        return tschchartseriesdefaulterrorbarlineendscatterxBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive tschchartseriesdefaultdeprecated3Dfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder> tschchartseriesdefaultdeprecated3DfillBuilder_;
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesdefaultdeprecated3dfill = 300;</code>
       */
      public boolean hasTschchartseriesdefaultdeprecated3Dfill() {
        return ((bitField2_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesdefaultdeprecated3dfill = 300;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive getTschchartseriesdefaultdeprecated3Dfill() {
        if (tschchartseriesdefaultdeprecated3DfillBuilder_ == null) {
          return tschchartseriesdefaultdeprecated3Dfill_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance() : tschchartseriesdefaultdeprecated3Dfill_;
        } else {
          return tschchartseriesdefaultdeprecated3DfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesdefaultdeprecated3dfill = 300;</code>
       */
      public Builder setTschchartseriesdefaultdeprecated3Dfill(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive value) {
        if (tschchartseriesdefaultdeprecated3DfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaultdeprecated3Dfill_ = value;
          onChanged();
        } else {
          tschchartseriesdefaultdeprecated3DfillBuilder_.setMessage(value);
        }
        bitField2_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesdefaultdeprecated3dfill = 300;</code>
       */
      public Builder setTschchartseriesdefaultdeprecated3Dfill(
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder builderForValue) {
        if (tschchartseriesdefaultdeprecated3DfillBuilder_ == null) {
          tschchartseriesdefaultdeprecated3Dfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaultdeprecated3DfillBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesdefaultdeprecated3dfill = 300;</code>
       */
      public Builder mergeTschchartseriesdefaultdeprecated3Dfill(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive value) {
        if (tschchartseriesdefaultdeprecated3DfillBuilder_ == null) {
          if (((bitField2_ & 0x40000000) == 0x40000000) &&
              tschchartseriesdefaultdeprecated3Dfill_ != null &&
              tschchartseriesdefaultdeprecated3Dfill_ != org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance()) {
            tschchartseriesdefaultdeprecated3Dfill_ =
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.newBuilder(tschchartseriesdefaultdeprecated3Dfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaultdeprecated3Dfill_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaultdeprecated3DfillBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesdefaultdeprecated3dfill = 300;</code>
       */
      public Builder clearTschchartseriesdefaultdeprecated3Dfill() {
        if (tschchartseriesdefaultdeprecated3DfillBuilder_ == null) {
          tschchartseriesdefaultdeprecated3Dfill_ = null;
          onChanged();
        } else {
          tschchartseriesdefaultdeprecated3DfillBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x40000000);
        return this;
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesdefaultdeprecated3dfill = 300;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder getTschchartseriesdefaultdeprecated3DfillBuilder() {
        bitField2_ |= 0x40000000;
        onChanged();
        return getTschchartseriesdefaultdeprecated3DfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesdefaultdeprecated3dfill = 300;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder getTschchartseriesdefaultdeprecated3DfillOrBuilder() {
        if (tschchartseriesdefaultdeprecated3DfillBuilder_ != null) {
          return tschchartseriesdefaultdeprecated3DfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaultdeprecated3Dfill_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance() : tschchartseriesdefaultdeprecated3Dfill_;
        }
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesdefaultdeprecated3dfill = 300;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder> 
          getTschchartseriesdefaultdeprecated3DfillFieldBuilder() {
        if (tschchartseriesdefaultdeprecated3DfillBuilder_ == null) {
          tschchartseriesdefaultdeprecated3DfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder>(
                  getTschchartseriesdefaultdeprecated3Dfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaultdeprecated3Dfill_ = null;
        }
        return tschchartseriesdefaultdeprecated3DfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive tschchartseriesbardeprecated3Dfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder> tschchartseriesbardeprecated3DfillBuilder_;
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesbardeprecated3dfill = 301;</code>
       */
      public boolean hasTschchartseriesbardeprecated3Dfill() {
        return ((bitField2_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesbardeprecated3dfill = 301;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive getTschchartseriesbardeprecated3Dfill() {
        if (tschchartseriesbardeprecated3DfillBuilder_ == null) {
          return tschchartseriesbardeprecated3Dfill_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance() : tschchartseriesbardeprecated3Dfill_;
        } else {
          return tschchartseriesbardeprecated3DfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesbardeprecated3dfill = 301;</code>
       */
      public Builder setTschchartseriesbardeprecated3Dfill(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive value) {
        if (tschchartseriesbardeprecated3DfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesbardeprecated3Dfill_ = value;
          onChanged();
        } else {
          tschchartseriesbardeprecated3DfillBuilder_.setMessage(value);
        }
        bitField2_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesbardeprecated3dfill = 301;</code>
       */
      public Builder setTschchartseriesbardeprecated3Dfill(
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder builderForValue) {
        if (tschchartseriesbardeprecated3DfillBuilder_ == null) {
          tschchartseriesbardeprecated3Dfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesbardeprecated3DfillBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesbardeprecated3dfill = 301;</code>
       */
      public Builder mergeTschchartseriesbardeprecated3Dfill(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive value) {
        if (tschchartseriesbardeprecated3DfillBuilder_ == null) {
          if (((bitField2_ & 0x80000000) == 0x80000000) &&
              tschchartseriesbardeprecated3Dfill_ != null &&
              tschchartseriesbardeprecated3Dfill_ != org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance()) {
            tschchartseriesbardeprecated3Dfill_ =
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.newBuilder(tschchartseriesbardeprecated3Dfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesbardeprecated3Dfill_ = value;
          }
          onChanged();
        } else {
          tschchartseriesbardeprecated3DfillBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesbardeprecated3dfill = 301;</code>
       */
      public Builder clearTschchartseriesbardeprecated3Dfill() {
        if (tschchartseriesbardeprecated3DfillBuilder_ == null) {
          tschchartseriesbardeprecated3Dfill_ = null;
          onChanged();
        } else {
          tschchartseriesbardeprecated3DfillBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x80000000);
        return this;
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesbardeprecated3dfill = 301;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder getTschchartseriesbardeprecated3DfillBuilder() {
        bitField2_ |= 0x80000000;
        onChanged();
        return getTschchartseriesbardeprecated3DfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesbardeprecated3dfill = 301;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder getTschchartseriesbardeprecated3DfillOrBuilder() {
        if (tschchartseriesbardeprecated3DfillBuilder_ != null) {
          return tschchartseriesbardeprecated3DfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesbardeprecated3Dfill_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance() : tschchartseriesbardeprecated3Dfill_;
        }
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesbardeprecated3dfill = 301;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder> 
          getTschchartseriesbardeprecated3DfillFieldBuilder() {
        if (tschchartseriesbardeprecated3DfillBuilder_ == null) {
          tschchartseriesbardeprecated3DfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder>(
                  getTschchartseriesbardeprecated3Dfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesbardeprecated3Dfill_ = null;
        }
        return tschchartseriesbardeprecated3DfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive tschchartseriescolumndeprecated3Dfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder> tschchartseriescolumndeprecated3DfillBuilder_;
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriescolumndeprecated3dfill = 302;</code>
       */
      public boolean hasTschchartseriescolumndeprecated3Dfill() {
        return ((bitField3_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriescolumndeprecated3dfill = 302;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive getTschchartseriescolumndeprecated3Dfill() {
        if (tschchartseriescolumndeprecated3DfillBuilder_ == null) {
          return tschchartseriescolumndeprecated3Dfill_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance() : tschchartseriescolumndeprecated3Dfill_;
        } else {
          return tschchartseriescolumndeprecated3DfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriescolumndeprecated3dfill = 302;</code>
       */
      public Builder setTschchartseriescolumndeprecated3Dfill(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive value) {
        if (tschchartseriescolumndeprecated3DfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriescolumndeprecated3Dfill_ = value;
          onChanged();
        } else {
          tschchartseriescolumndeprecated3DfillBuilder_.setMessage(value);
        }
        bitField3_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriescolumndeprecated3dfill = 302;</code>
       */
      public Builder setTschchartseriescolumndeprecated3Dfill(
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder builderForValue) {
        if (tschchartseriescolumndeprecated3DfillBuilder_ == null) {
          tschchartseriescolumndeprecated3Dfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriescolumndeprecated3DfillBuilder_.setMessage(builderForValue.build());
        }
        bitField3_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriescolumndeprecated3dfill = 302;</code>
       */
      public Builder mergeTschchartseriescolumndeprecated3Dfill(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive value) {
        if (tschchartseriescolumndeprecated3DfillBuilder_ == null) {
          if (((bitField3_ & 0x00000001) == 0x00000001) &&
              tschchartseriescolumndeprecated3Dfill_ != null &&
              tschchartseriescolumndeprecated3Dfill_ != org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance()) {
            tschchartseriescolumndeprecated3Dfill_ =
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.newBuilder(tschchartseriescolumndeprecated3Dfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriescolumndeprecated3Dfill_ = value;
          }
          onChanged();
        } else {
          tschchartseriescolumndeprecated3DfillBuilder_.mergeFrom(value);
        }
        bitField3_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriescolumndeprecated3dfill = 302;</code>
       */
      public Builder clearTschchartseriescolumndeprecated3Dfill() {
        if (tschchartseriescolumndeprecated3DfillBuilder_ == null) {
          tschchartseriescolumndeprecated3Dfill_ = null;
          onChanged();
        } else {
          tschchartseriescolumndeprecated3DfillBuilder_.clear();
        }
        bitField3_ = (bitField3_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriescolumndeprecated3dfill = 302;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder getTschchartseriescolumndeprecated3DfillBuilder() {
        bitField3_ |= 0x00000001;
        onChanged();
        return getTschchartseriescolumndeprecated3DfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriescolumndeprecated3dfill = 302;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder getTschchartseriescolumndeprecated3DfillOrBuilder() {
        if (tschchartseriescolumndeprecated3DfillBuilder_ != null) {
          return tschchartseriescolumndeprecated3DfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriescolumndeprecated3Dfill_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance() : tschchartseriescolumndeprecated3Dfill_;
        }
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriescolumndeprecated3dfill = 302;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder> 
          getTschchartseriescolumndeprecated3DfillFieldBuilder() {
        if (tschchartseriescolumndeprecated3DfillBuilder_ == null) {
          tschchartseriescolumndeprecated3DfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder>(
                  getTschchartseriescolumndeprecated3Dfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriescolumndeprecated3Dfill_ = null;
        }
        return tschchartseriescolumndeprecated3DfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive tschchartserieslinedeprecated3Dfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder> tschchartserieslinedeprecated3DfillBuilder_;
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartserieslinedeprecated3dfill = 303;</code>
       */
      public boolean hasTschchartserieslinedeprecated3Dfill() {
        return ((bitField3_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartserieslinedeprecated3dfill = 303;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive getTschchartserieslinedeprecated3Dfill() {
        if (tschchartserieslinedeprecated3DfillBuilder_ == null) {
          return tschchartserieslinedeprecated3Dfill_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance() : tschchartserieslinedeprecated3Dfill_;
        } else {
          return tschchartserieslinedeprecated3DfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartserieslinedeprecated3dfill = 303;</code>
       */
      public Builder setTschchartserieslinedeprecated3Dfill(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive value) {
        if (tschchartserieslinedeprecated3DfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartserieslinedeprecated3Dfill_ = value;
          onChanged();
        } else {
          tschchartserieslinedeprecated3DfillBuilder_.setMessage(value);
        }
        bitField3_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartserieslinedeprecated3dfill = 303;</code>
       */
      public Builder setTschchartserieslinedeprecated3Dfill(
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder builderForValue) {
        if (tschchartserieslinedeprecated3DfillBuilder_ == null) {
          tschchartserieslinedeprecated3Dfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartserieslinedeprecated3DfillBuilder_.setMessage(builderForValue.build());
        }
        bitField3_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartserieslinedeprecated3dfill = 303;</code>
       */
      public Builder mergeTschchartserieslinedeprecated3Dfill(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive value) {
        if (tschchartserieslinedeprecated3DfillBuilder_ == null) {
          if (((bitField3_ & 0x00000002) == 0x00000002) &&
              tschchartserieslinedeprecated3Dfill_ != null &&
              tschchartserieslinedeprecated3Dfill_ != org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance()) {
            tschchartserieslinedeprecated3Dfill_ =
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.newBuilder(tschchartserieslinedeprecated3Dfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartserieslinedeprecated3Dfill_ = value;
          }
          onChanged();
        } else {
          tschchartserieslinedeprecated3DfillBuilder_.mergeFrom(value);
        }
        bitField3_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartserieslinedeprecated3dfill = 303;</code>
       */
      public Builder clearTschchartserieslinedeprecated3Dfill() {
        if (tschchartserieslinedeprecated3DfillBuilder_ == null) {
          tschchartserieslinedeprecated3Dfill_ = null;
          onChanged();
        } else {
          tschchartserieslinedeprecated3DfillBuilder_.clear();
        }
        bitField3_ = (bitField3_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartserieslinedeprecated3dfill = 303;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder getTschchartserieslinedeprecated3DfillBuilder() {
        bitField3_ |= 0x00000002;
        onChanged();
        return getTschchartserieslinedeprecated3DfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartserieslinedeprecated3dfill = 303;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder getTschchartserieslinedeprecated3DfillOrBuilder() {
        if (tschchartserieslinedeprecated3DfillBuilder_ != null) {
          return tschchartserieslinedeprecated3DfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartserieslinedeprecated3Dfill_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance() : tschchartserieslinedeprecated3Dfill_;
        }
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartserieslinedeprecated3dfill = 303;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder> 
          getTschchartserieslinedeprecated3DfillFieldBuilder() {
        if (tschchartserieslinedeprecated3DfillBuilder_ == null) {
          tschchartserieslinedeprecated3DfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder>(
                  getTschchartserieslinedeprecated3Dfill(),
                  getParentForChildren(),
                  isClean());
          tschchartserieslinedeprecated3Dfill_ = null;
        }
        return tschchartserieslinedeprecated3DfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive tschchartseriesareadeprecated3Dfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder> tschchartseriesareadeprecated3DfillBuilder_;
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesareadeprecated3dfill = 304;</code>
       */
      public boolean hasTschchartseriesareadeprecated3Dfill() {
        return ((bitField3_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesareadeprecated3dfill = 304;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive getTschchartseriesareadeprecated3Dfill() {
        if (tschchartseriesareadeprecated3DfillBuilder_ == null) {
          return tschchartseriesareadeprecated3Dfill_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance() : tschchartseriesareadeprecated3Dfill_;
        } else {
          return tschchartseriesareadeprecated3DfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesareadeprecated3dfill = 304;</code>
       */
      public Builder setTschchartseriesareadeprecated3Dfill(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive value) {
        if (tschchartseriesareadeprecated3DfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesareadeprecated3Dfill_ = value;
          onChanged();
        } else {
          tschchartseriesareadeprecated3DfillBuilder_.setMessage(value);
        }
        bitField3_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesareadeprecated3dfill = 304;</code>
       */
      public Builder setTschchartseriesareadeprecated3Dfill(
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder builderForValue) {
        if (tschchartseriesareadeprecated3DfillBuilder_ == null) {
          tschchartseriesareadeprecated3Dfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesareadeprecated3DfillBuilder_.setMessage(builderForValue.build());
        }
        bitField3_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesareadeprecated3dfill = 304;</code>
       */
      public Builder mergeTschchartseriesareadeprecated3Dfill(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive value) {
        if (tschchartseriesareadeprecated3DfillBuilder_ == null) {
          if (((bitField3_ & 0x00000004) == 0x00000004) &&
              tschchartseriesareadeprecated3Dfill_ != null &&
              tschchartseriesareadeprecated3Dfill_ != org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance()) {
            tschchartseriesareadeprecated3Dfill_ =
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.newBuilder(tschchartseriesareadeprecated3Dfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesareadeprecated3Dfill_ = value;
          }
          onChanged();
        } else {
          tschchartseriesareadeprecated3DfillBuilder_.mergeFrom(value);
        }
        bitField3_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesareadeprecated3dfill = 304;</code>
       */
      public Builder clearTschchartseriesareadeprecated3Dfill() {
        if (tschchartseriesareadeprecated3DfillBuilder_ == null) {
          tschchartseriesareadeprecated3Dfill_ = null;
          onChanged();
        } else {
          tschchartseriesareadeprecated3DfillBuilder_.clear();
        }
        bitField3_ = (bitField3_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesareadeprecated3dfill = 304;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder getTschchartseriesareadeprecated3DfillBuilder() {
        bitField3_ |= 0x00000004;
        onChanged();
        return getTschchartseriesareadeprecated3DfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesareadeprecated3dfill = 304;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder getTschchartseriesareadeprecated3DfillOrBuilder() {
        if (tschchartseriesareadeprecated3DfillBuilder_ != null) {
          return tschchartseriesareadeprecated3DfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesareadeprecated3Dfill_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance() : tschchartseriesareadeprecated3Dfill_;
        }
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriesareadeprecated3dfill = 304;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder> 
          getTschchartseriesareadeprecated3DfillFieldBuilder() {
        if (tschchartseriesareadeprecated3DfillBuilder_ == null) {
          tschchartseriesareadeprecated3DfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder>(
                  getTschchartseriesareadeprecated3Dfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesareadeprecated3Dfill_ = null;
        }
        return tschchartseriesareadeprecated3DfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive tschchartseriespiedeprecated3Dfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder> tschchartseriespiedeprecated3DfillBuilder_;
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriespiedeprecated3dfill = 305;</code>
       */
      public boolean hasTschchartseriespiedeprecated3Dfill() {
        return ((bitField3_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriespiedeprecated3dfill = 305;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive getTschchartseriespiedeprecated3Dfill() {
        if (tschchartseriespiedeprecated3DfillBuilder_ == null) {
          return tschchartseriespiedeprecated3Dfill_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance() : tschchartseriespiedeprecated3Dfill_;
        } else {
          return tschchartseriespiedeprecated3DfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriespiedeprecated3dfill = 305;</code>
       */
      public Builder setTschchartseriespiedeprecated3Dfill(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive value) {
        if (tschchartseriespiedeprecated3DfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriespiedeprecated3Dfill_ = value;
          onChanged();
        } else {
          tschchartseriespiedeprecated3DfillBuilder_.setMessage(value);
        }
        bitField3_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriespiedeprecated3dfill = 305;</code>
       */
      public Builder setTschchartseriespiedeprecated3Dfill(
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder builderForValue) {
        if (tschchartseriespiedeprecated3DfillBuilder_ == null) {
          tschchartseriespiedeprecated3Dfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriespiedeprecated3DfillBuilder_.setMessage(builderForValue.build());
        }
        bitField3_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriespiedeprecated3dfill = 305;</code>
       */
      public Builder mergeTschchartseriespiedeprecated3Dfill(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive value) {
        if (tschchartseriespiedeprecated3DfillBuilder_ == null) {
          if (((bitField3_ & 0x00000008) == 0x00000008) &&
              tschchartseriespiedeprecated3Dfill_ != null &&
              tschchartseriespiedeprecated3Dfill_ != org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance()) {
            tschchartseriespiedeprecated3Dfill_ =
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.newBuilder(tschchartseriespiedeprecated3Dfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriespiedeprecated3Dfill_ = value;
          }
          onChanged();
        } else {
          tschchartseriespiedeprecated3DfillBuilder_.mergeFrom(value);
        }
        bitField3_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriespiedeprecated3dfill = 305;</code>
       */
      public Builder clearTschchartseriespiedeprecated3Dfill() {
        if (tschchartseriespiedeprecated3DfillBuilder_ == null) {
          tschchartseriespiedeprecated3Dfill_ = null;
          onChanged();
        } else {
          tschchartseriespiedeprecated3DfillBuilder_.clear();
        }
        bitField3_ = (bitField3_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriespiedeprecated3dfill = 305;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder getTschchartseriespiedeprecated3DfillBuilder() {
        bitField3_ |= 0x00000008;
        onChanged();
        return getTschchartseriespiedeprecated3DfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriespiedeprecated3dfill = 305;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder getTschchartseriespiedeprecated3DfillOrBuilder() {
        if (tschchartseriespiedeprecated3DfillBuilder_ != null) {
          return tschchartseriespiedeprecated3DfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriespiedeprecated3Dfill_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.getDefaultInstance() : tschchartseriespiedeprecated3Dfill_;
        }
      }
      /**
       * <code>optional .TSCH.DEPRECATEDChart3DFillArchive tschchartseriespiedeprecated3dfill = 305;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder> 
          getTschchartseriespiedeprecated3DfillFieldBuilder() {
        if (tschchartseriespiedeprecated3DfillBuilder_ == null) {
          tschchartseriespiedeprecated3DfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.DEPRECATEDChart3DFillArchiveOrBuilder>(
                  getTschchartseriespiedeprecated3Dfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseriespiedeprecated3Dfill_ = null;
        }
        return tschchartseriespiedeprecated3DfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseries3Dbarfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseries3DbarfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 320;</code>
       */
      public boolean hasTschchartseries3Dbarfill() {
        return ((bitField3_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 320;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dbarfill() {
        if (tschchartseries3DbarfillBuilder_ == null) {
          return tschchartseries3Dbarfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dbarfill_;
        } else {
          return tschchartseries3DbarfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 320;</code>
       */
      public Builder setTschchartseries3Dbarfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseries3DbarfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseries3Dbarfill_ = value;
          onChanged();
        } else {
          tschchartseries3DbarfillBuilder_.setMessage(value);
        }
        bitField3_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 320;</code>
       */
      public Builder setTschchartseries3Dbarfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseries3DbarfillBuilder_ == null) {
          tschchartseries3Dbarfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseries3DbarfillBuilder_.setMessage(builderForValue.build());
        }
        bitField3_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 320;</code>
       */
      public Builder mergeTschchartseries3Dbarfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseries3DbarfillBuilder_ == null) {
          if (((bitField3_ & 0x00000010) == 0x00000010) &&
              tschchartseries3Dbarfill_ != null &&
              tschchartseries3Dbarfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseries3Dbarfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseries3Dbarfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseries3Dbarfill_ = value;
          }
          onChanged();
        } else {
          tschchartseries3DbarfillBuilder_.mergeFrom(value);
        }
        bitField3_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 320;</code>
       */
      public Builder clearTschchartseries3Dbarfill() {
        if (tschchartseries3DbarfillBuilder_ == null) {
          tschchartseries3Dbarfill_ = null;
          onChanged();
        } else {
          tschchartseries3DbarfillBuilder_.clear();
        }
        bitField3_ = (bitField3_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 320;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseries3DbarfillBuilder() {
        bitField3_ |= 0x00000010;
        onChanged();
        return getTschchartseries3DbarfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 320;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DbarfillOrBuilder() {
        if (tschchartseries3DbarfillBuilder_ != null) {
          return tschchartseries3DbarfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseries3Dbarfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dbarfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dbarfill = 320;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseries3DbarfillFieldBuilder() {
        if (tschchartseries3DbarfillBuilder_ == null) {
          tschchartseries3DbarfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseries3Dbarfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseries3Dbarfill_ = null;
        }
        return tschchartseries3DbarfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseries3Dcolumnfill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseries3DcolumnfillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 321;</code>
       */
      public boolean hasTschchartseries3Dcolumnfill() {
        return ((bitField3_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 321;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dcolumnfill() {
        if (tschchartseries3DcolumnfillBuilder_ == null) {
          return tschchartseries3Dcolumnfill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dcolumnfill_;
        } else {
          return tschchartseries3DcolumnfillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 321;</code>
       */
      public Builder setTschchartseries3Dcolumnfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseries3DcolumnfillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseries3Dcolumnfill_ = value;
          onChanged();
        } else {
          tschchartseries3DcolumnfillBuilder_.setMessage(value);
        }
        bitField3_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 321;</code>
       */
      public Builder setTschchartseries3Dcolumnfill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseries3DcolumnfillBuilder_ == null) {
          tschchartseries3Dcolumnfill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseries3DcolumnfillBuilder_.setMessage(builderForValue.build());
        }
        bitField3_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 321;</code>
       */
      public Builder mergeTschchartseries3Dcolumnfill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseries3DcolumnfillBuilder_ == null) {
          if (((bitField3_ & 0x00000020) == 0x00000020) &&
              tschchartseries3Dcolumnfill_ != null &&
              tschchartseries3Dcolumnfill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseries3Dcolumnfill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseries3Dcolumnfill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseries3Dcolumnfill_ = value;
          }
          onChanged();
        } else {
          tschchartseries3DcolumnfillBuilder_.mergeFrom(value);
        }
        bitField3_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 321;</code>
       */
      public Builder clearTschchartseries3Dcolumnfill() {
        if (tschchartseries3DcolumnfillBuilder_ == null) {
          tschchartseries3Dcolumnfill_ = null;
          onChanged();
        } else {
          tschchartseries3DcolumnfillBuilder_.clear();
        }
        bitField3_ = (bitField3_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 321;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseries3DcolumnfillBuilder() {
        bitField3_ |= 0x00000020;
        onChanged();
        return getTschchartseries3DcolumnfillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 321;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DcolumnfillOrBuilder() {
        if (tschchartseries3DcolumnfillBuilder_ != null) {
          return tschchartseries3DcolumnfillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseries3Dcolumnfill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dcolumnfill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dcolumnfill = 321;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseries3DcolumnfillFieldBuilder() {
        if (tschchartseries3DcolumnfillBuilder_ == null) {
          tschchartseries3DcolumnfillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseries3Dcolumnfill(),
                  getParentForChildren(),
                  isClean());
          tschchartseries3Dcolumnfill_ = null;
        }
        return tschchartseries3DcolumnfillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseries3Dlinefill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseries3DlinefillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 322;</code>
       */
      public boolean hasTschchartseries3Dlinefill() {
        return ((bitField3_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 322;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dlinefill() {
        if (tschchartseries3DlinefillBuilder_ == null) {
          return tschchartseries3Dlinefill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dlinefill_;
        } else {
          return tschchartseries3DlinefillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 322;</code>
       */
      public Builder setTschchartseries3Dlinefill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseries3DlinefillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseries3Dlinefill_ = value;
          onChanged();
        } else {
          tschchartseries3DlinefillBuilder_.setMessage(value);
        }
        bitField3_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 322;</code>
       */
      public Builder setTschchartseries3Dlinefill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseries3DlinefillBuilder_ == null) {
          tschchartseries3Dlinefill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseries3DlinefillBuilder_.setMessage(builderForValue.build());
        }
        bitField3_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 322;</code>
       */
      public Builder mergeTschchartseries3Dlinefill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseries3DlinefillBuilder_ == null) {
          if (((bitField3_ & 0x00000040) == 0x00000040) &&
              tschchartseries3Dlinefill_ != null &&
              tschchartseries3Dlinefill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseries3Dlinefill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseries3Dlinefill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseries3Dlinefill_ = value;
          }
          onChanged();
        } else {
          tschchartseries3DlinefillBuilder_.mergeFrom(value);
        }
        bitField3_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 322;</code>
       */
      public Builder clearTschchartseries3Dlinefill() {
        if (tschchartseries3DlinefillBuilder_ == null) {
          tschchartseries3Dlinefill_ = null;
          onChanged();
        } else {
          tschchartseries3DlinefillBuilder_.clear();
        }
        bitField3_ = (bitField3_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 322;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseries3DlinefillBuilder() {
        bitField3_ |= 0x00000040;
        onChanged();
        return getTschchartseries3DlinefillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 322;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DlinefillOrBuilder() {
        if (tschchartseries3DlinefillBuilder_ != null) {
          return tschchartseries3DlinefillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseries3Dlinefill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dlinefill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dlinefill = 322;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseries3DlinefillFieldBuilder() {
        if (tschchartseries3DlinefillBuilder_ == null) {
          tschchartseries3DlinefillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseries3Dlinefill(),
                  getParentForChildren(),
                  isClean());
          tschchartseries3Dlinefill_ = null;
        }
        return tschchartseries3DlinefillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseries3Dareafill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseries3DareafillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dareafill = 323;</code>
       */
      public boolean hasTschchartseries3Dareafill() {
        return ((bitField3_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dareafill = 323;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dareafill() {
        if (tschchartseries3DareafillBuilder_ == null) {
          return tschchartseries3Dareafill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dareafill_;
        } else {
          return tschchartseries3DareafillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dareafill = 323;</code>
       */
      public Builder setTschchartseries3Dareafill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseries3DareafillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseries3Dareafill_ = value;
          onChanged();
        } else {
          tschchartseries3DareafillBuilder_.setMessage(value);
        }
        bitField3_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dareafill = 323;</code>
       */
      public Builder setTschchartseries3Dareafill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseries3DareafillBuilder_ == null) {
          tschchartseries3Dareafill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseries3DareafillBuilder_.setMessage(builderForValue.build());
        }
        bitField3_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dareafill = 323;</code>
       */
      public Builder mergeTschchartseries3Dareafill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseries3DareafillBuilder_ == null) {
          if (((bitField3_ & 0x00000080) == 0x00000080) &&
              tschchartseries3Dareafill_ != null &&
              tschchartseries3Dareafill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseries3Dareafill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseries3Dareafill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseries3Dareafill_ = value;
          }
          onChanged();
        } else {
          tschchartseries3DareafillBuilder_.mergeFrom(value);
        }
        bitField3_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dareafill = 323;</code>
       */
      public Builder clearTschchartseries3Dareafill() {
        if (tschchartseries3DareafillBuilder_ == null) {
          tschchartseries3Dareafill_ = null;
          onChanged();
        } else {
          tschchartseries3DareafillBuilder_.clear();
        }
        bitField3_ = (bitField3_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dareafill = 323;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseries3DareafillBuilder() {
        bitField3_ |= 0x00000080;
        onChanged();
        return getTschchartseries3DareafillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dareafill = 323;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DareafillOrBuilder() {
        if (tschchartseries3DareafillBuilder_ != null) {
          return tschchartseries3DareafillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseries3Dareafill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dareafill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dareafill = 323;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseries3DareafillFieldBuilder() {
        if (tschchartseries3DareafillBuilder_ == null) {
          tschchartseries3DareafillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseries3Dareafill(),
                  getParentForChildren(),
                  isClean());
          tschchartseries3Dareafill_ = null;
        }
        return tschchartseries3DareafillBuilder_;
      }

      private org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive tschchartseries3Dpiefill_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> tschchartseries3DpiefillBuilder_;
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 324;</code>
       */
      public boolean hasTschchartseries3Dpiefill() {
        return ((bitField3_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 324;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive getTschchartseries3Dpiefill() {
        if (tschchartseries3DpiefillBuilder_ == null) {
          return tschchartseries3Dpiefill_ == null ? org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dpiefill_;
        } else {
          return tschchartseries3DpiefillBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 324;</code>
       */
      public Builder setTschchartseries3Dpiefill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseries3DpiefillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseries3Dpiefill_ = value;
          onChanged();
        } else {
          tschchartseries3DpiefillBuilder_.setMessage(value);
        }
        bitField3_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 324;</code>
       */
      public Builder setTschchartseries3Dpiefill(
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder builderForValue) {
        if (tschchartseries3DpiefillBuilder_ == null) {
          tschchartseries3Dpiefill_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseries3DpiefillBuilder_.setMessage(builderForValue.build());
        }
        bitField3_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 324;</code>
       */
      public Builder mergeTschchartseries3Dpiefill(org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive value) {
        if (tschchartseries3DpiefillBuilder_ == null) {
          if (((bitField3_ & 0x00000100) == 0x00000100) &&
              tschchartseries3Dpiefill_ != null &&
              tschchartseries3Dpiefill_ != org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance()) {
            tschchartseries3Dpiefill_ =
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.newBuilder(tschchartseries3Dpiefill_).mergeFrom(value).buildPartial();
          } else {
            tschchartseries3Dpiefill_ = value;
          }
          onChanged();
        } else {
          tschchartseries3DpiefillBuilder_.mergeFrom(value);
        }
        bitField3_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 324;</code>
       */
      public Builder clearTschchartseries3Dpiefill() {
        if (tschchartseries3DpiefillBuilder_ == null) {
          tschchartseries3Dpiefill_ = null;
          onChanged();
        } else {
          tschchartseries3DpiefillBuilder_.clear();
        }
        bitField3_ = (bitField3_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 324;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder getTschchartseries3DpiefillBuilder() {
        bitField3_ |= 0x00000100;
        onChanged();
        return getTschchartseries3DpiefillFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 324;</code>
       */
      public org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder getTschchartseries3DpiefillOrBuilder() {
        if (tschchartseries3DpiefillBuilder_ != null) {
          return tschchartseries3DpiefillBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseries3Dpiefill_ == null ?
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.getDefaultInstance() : tschchartseries3Dpiefill_;
        }
      }
      /**
       * <code>optional .TSD.FillArchive tschchartseries3dpiefill = 324;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder> 
          getTschchartseries3DpiefillFieldBuilder() {
        if (tschchartseries3DpiefillBuilder_ == null) {
          tschchartseries3DpiefillBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchive.Builder, org.techforumist.keynote.proto.TSD.TSDArchives.FillArchiveOrBuilder>(
                  getTschchartseries3Dpiefill(),
                  getParentForChildren(),
                  isClean());
          tschchartseries3Dpiefill_ = null;
        }
        return tschchartseries3DpiefillBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TSCH.PreUFF.ChartSeriesStyleArchive)
    }

    // @@protoc_insertion_point(class_scope:TSCH.PreUFF.ChartSeriesStyleArchive)
    private static final org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive();
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ChartSeriesStyleArchive>
        PARSER = new com.google.protobuf.AbstractParser<ChartSeriesStyleArchive>() {
      public ChartSeriesStyleArchive parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ChartSeriesStyleArchive(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChartSeriesStyleArchive> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChartSeriesStyleArchive> getParserForType() {
      return PARSER;
    }

    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesStyleArchive getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChartSeriesNonStyleArchiveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TSCH.PreUFF.ChartSeriesNonStyleArchive)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    boolean hasSuper();
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive getSuper();
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder getSuperOrBuilder();

    /**
     * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesdefaultnumberformat = 10;</code>
     */
    boolean hasTschchartseriesdefaultnumberformat();
    /**
     * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesdefaultnumberformat = 10;</code>
     */
    org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive getTschchartseriesdefaultnumberformat();
    /**
     * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesdefaultnumberformat = 10;</code>
     */
    org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchiveOrBuilder getTschchartseriesdefaultnumberformatOrBuilder();

    /**
     * <code>optional int32 tschchartseriesdefaultnumberformattype = 11;</code>
     */
    boolean hasTschchartseriesdefaultnumberformattype();
    /**
     * <code>optional int32 tschchartseriesdefaultnumberformattype = 11;</code>
     */
    int getTschchartseriesdefaultnumberformattype();

    /**
     * <code>optional bool tschchartseriesbarshowvaluelabels = 12;</code>
     */
    boolean hasTschchartseriesbarshowvaluelabels();
    /**
     * <code>optional bool tschchartseriesbarshowvaluelabels = 12;</code>
     */
    boolean getTschchartseriesbarshowvaluelabels();

    /**
     * <code>optional int32 tschchartserieslinesymboltype = 19;</code>
     */
    boolean hasTschchartserieslinesymboltype();
    /**
     * <code>optional int32 tschchartserieslinesymboltype = 19;</code>
     */
    int getTschchartserieslinesymboltype();

    /**
     * <code>optional bool tschchartserieslineshowsymbol = 20;</code>
     */
    boolean hasTschchartserieslineshowsymbol();
    /**
     * <code>optional bool tschchartserieslineshowsymbol = 20;</code>
     */
    boolean getTschchartserieslineshowsymbol();

    /**
     * <code>optional bool tschchartserieslineshowvaluelabels = 21;</code>
     */
    boolean hasTschchartserieslineshowvaluelabels();
    /**
     * <code>optional bool tschchartserieslineshowvaluelabels = 21;</code>
     */
    boolean getTschchartserieslineshowvaluelabels();

    /**
     * <code>optional bool tschchartseriesareashowvaluelabels = 27;</code>
     */
    boolean hasTschchartseriesareashowvaluelabels();
    /**
     * <code>optional bool tschchartseriesareashowvaluelabels = 27;</code>
     */
    boolean getTschchartseriesareashowvaluelabels();

    /**
     * <code>optional int32 tschchartserieslinelinetype = 30;</code>
     */
    boolean hasTschchartserieslinelinetype();
    /**
     * <code>optional int32 tschchartserieslinelinetype = 30;</code>
     */
    int getTschchartserieslinelinetype();

    /**
     * <code>optional int32 tschchartseriesareasymboltype = 31;</code>
     */
    boolean hasTschchartseriesareasymboltype();
    /**
     * <code>optional int32 tschchartseriesareasymboltype = 31;</code>
     */
    int getTschchartseriesareasymboltype();

    /**
     * <code>optional bool tschchartseriesareashowsymbol = 32;</code>
     */
    boolean hasTschchartseriesareashowsymbol();
    /**
     * <code>optional bool tschchartseriesareashowsymbol = 32;</code>
     */
    boolean getTschchartseriesareashowsymbol();

    /**
     * <code>optional bool tschchartseriespieshowvaluelabels = 37;</code>
     */
    boolean hasTschchartseriespieshowvaluelabels();
    /**
     * <code>optional bool tschchartseriespieshowvaluelabels = 37;</code>
     */
    boolean getTschchartseriespieshowvaluelabels();

    /**
     * <code>optional bool tschchartseriesscattershowvaluelabels = 45;</code>
     */
    boolean hasTschchartseriesscattershowvaluelabels();
    /**
     * <code>optional bool tschchartseriesscattershowvaluelabels = 45;</code>
     */
    boolean getTschchartseriesscattershowvaluelabels();

    /**
     * <code>optional float tschchartseriespiewedgeexplosion = 50;</code>
     */
    boolean hasTschchartseriespiewedgeexplosion();
    /**
     * <code>optional float tschchartseriespiewedgeexplosion = 50;</code>
     */
    float getTschchartseriespiewedgeexplosion();

    /**
     * <code>optional bool tschchartseriesdefaultshowvaluelabels = 51;</code>
     */
    boolean hasTschchartseriesdefaultshowvaluelabels();
    /**
     * <code>optional bool tschchartseriesdefaultshowvaluelabels = 51;</code>
     */
    boolean getTschchartseriesdefaultshowvaluelabels();

    /**
     * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriespienumberformat = 52;</code>
     */
    boolean hasTschchartseriespienumberformat();
    /**
     * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriespienumberformat = 52;</code>
     */
    org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive getTschchartseriespienumberformat();
    /**
     * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriespienumberformat = 52;</code>
     */
    org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchiveOrBuilder getTschchartseriespienumberformatOrBuilder();

    /**
     * <code>optional int32 tschchartseriespienumberformattype = 53;</code>
     */
    boolean hasTschchartseriespienumberformattype();
    /**
     * <code>optional int32 tschchartseriespienumberformattype = 53;</code>
     */
    int getTschchartseriespienumberformattype();

    /**
     * <code>optional float tschchartseriespielabelexplosion = 54;</code>
     */
    boolean hasTschchartseriespielabelexplosion();
    /**
     * <code>optional float tschchartseriespielabelexplosion = 54;</code>
     */
    float getTschchartseriespielabelexplosion();

    /**
     * <code>optional bool tschchartseriesmixedlineshowsymbol = 58;</code>
     */
    boolean hasTschchartseriesmixedlineshowsymbol();
    /**
     * <code>optional bool tschchartseriesmixedlineshowsymbol = 58;</code>
     */
    boolean getTschchartseriesmixedlineshowsymbol();

    /**
     * <code>optional bool tschchartseriesmixedareashowsymbol = 59;</code>
     */
    boolean hasTschchartseriesmixedareashowsymbol();
    /**
     * <code>optional bool tschchartseriesmixedareashowsymbol = 59;</code>
     */
    boolean getTschchartseriesmixedareashowsymbol();

    /**
     * <code>optional int32 tschchartseriesmixedlinesymboltype = 60;</code>
     */
    boolean hasTschchartseriesmixedlinesymboltype();
    /**
     * <code>optional int32 tschchartseriesmixedlinesymboltype = 60;</code>
     */
    int getTschchartseriesmixedlinesymboltype();

    /**
     * <code>optional int32 tschchartseriesmixedareasymboltype = 61;</code>
     */
    boolean hasTschchartseriesmixedareasymboltype();
    /**
     * <code>optional int32 tschchartseriesmixedareasymboltype = 61;</code>
     */
    int getTschchartseriesmixedareasymboltype();

    /**
     * <code>optional bool tschchartseriesmixedshowvaluelabels = 62;</code>
     */
    boolean hasTschchartseriesmixedshowvaluelabels();
    /**
     * <code>optional bool tschchartseriesmixedshowvaluelabels = 62;</code>
     */
    boolean getTschchartseriesmixedshowvaluelabels();

    /**
     * <code>optional int32 tschchartseriesmixedlinelinetype = 63;</code>
     */
    boolean hasTschchartseriesmixedlinelinetype();
    /**
     * <code>optional int32 tschchartseriesmixedlinelinetype = 63;</code>
     */
    int getTschchartseriesmixedlinelinetype();

    /**
     * <code>optional int32 tschchartseriesdefaultyaxisordinal = 65;</code>
     */
    boolean hasTschchartseriesdefaultyaxisordinal();
    /**
     * <code>optional int32 tschchartseriesdefaultyaxisordinal = 65;</code>
     */
    int getTschchartseriesdefaultyaxisordinal();

    /**
     * <code>optional bool tschchartseriespieshowserieslabels = 66;</code>
     */
    boolean hasTschchartseriespieshowserieslabels();
    /**
     * <code>optional bool tschchartseriespieshowserieslabels = 66;</code>
     */
    boolean getTschchartseriespieshowserieslabels();

    /**
     * <code>optional bool tschchartseriesscattershowsymbol = 69;</code>
     */
    boolean hasTschchartseriesscattershowsymbol();
    /**
     * <code>optional bool tschchartseriesscattershowsymbol = 69;</code>
     */
    boolean getTschchartseriesscattershowsymbol();

    /**
     * <code>optional int32 tschchartseriesscattersymboltype = 70;</code>
     */
    boolean hasTschchartseriesscattersymboltype();
    /**
     * <code>optional int32 tschchartseriesscattersymboltype = 70;</code>
     */
    int getTschchartseriesscattersymboltype();

    /**
     * <code>optional int32 tschchartseriesscatterlinetype = 71;</code>
     */
    boolean hasTschchartseriesscatterlinetype();
    /**
     * <code>optional int32 tschchartseriesscatterlinetype = 71;</code>
     */
    int getTschchartseriesscatterlinetype();

    /**
     * <code>optional bool tschchartseriesscattershowline = 72;</code>
     */
    boolean hasTschchartseriesscattershowline();
    /**
     * <code>optional bool tschchartseriesscattershowline = 72;</code>
     */
    boolean getTschchartseriesscattershowline();

    /**
     * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesstackedpercentnumberformat = 90;</code>
     */
    boolean hasTschchartseriesstackedpercentnumberformat();
    /**
     * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesstackedpercentnumberformat = 90;</code>
     */
    org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive getTschchartseriesstackedpercentnumberformat();
    /**
     * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesstackedpercentnumberformat = 90;</code>
     */
    org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchiveOrBuilder getTschchartseriesstackedpercentnumberformatOrBuilder();

    /**
     * <code>optional int32 tschchartseriesdefaultseriestype = 126;</code>
     */
    boolean hasTschchartseriesdefaultseriestype();
    /**
     * <code>optional int32 tschchartseriesdefaultseriestype = 126;</code>
     */
    int getTschchartseriesdefaultseriestype();

    /**
     * <code>optional int32 tschchartseriesdefaulttrendlinetype = 160;</code>
     */
    boolean hasTschchartseriesdefaulttrendlinetype();
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlinetype = 160;</code>
     */
    int getTschchartseriesdefaulttrendlinetype();

    /**
     * <code>optional int32 tschchartseriesdefaulttrendlineorder = 161;</code>
     */
    boolean hasTschchartseriesdefaulttrendlineorder();
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlineorder = 161;</code>
     */
    int getTschchartseriesdefaulttrendlineorder();

    /**
     * <code>optional int32 tschchartseriesdefaulttrendlineperiod = 162;</code>
     */
    boolean hasTschchartseriesdefaulttrendlineperiod();
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlineperiod = 162;</code>
     */
    int getTschchartseriesdefaulttrendlineperiod();

    /**
     * <code>optional bool tschchartseriesdefaulttrendlineshowlabel = 163;</code>
     */
    boolean hasTschchartseriesdefaulttrendlineshowlabel();
    /**
     * <code>optional bool tschchartseriesdefaulttrendlineshowlabel = 163;</code>
     */
    boolean getTschchartseriesdefaulttrendlineshowlabel();

    /**
     * <code>optional string tschchartseriesdefaulttrendlinelabelstring = 164;</code>
     */
    boolean hasTschchartseriesdefaulttrendlinelabelstring();
    /**
     * <code>optional string tschchartseriesdefaulttrendlinelabelstring = 164;</code>
     */
    java.lang.String getTschchartseriesdefaulttrendlinelabelstring();
    /**
     * <code>optional string tschchartseriesdefaulttrendlinelabelstring = 164;</code>
     */
    com.google.protobuf.ByteString
        getTschchartseriesdefaulttrendlinelabelstringBytes();

    /**
     * <code>optional bool tschchartseriesdefaulttrendlineshowequation = 165;</code>
     */
    boolean hasTschchartseriesdefaulttrendlineshowequation();
    /**
     * <code>optional bool tschchartseriesdefaulttrendlineshowequation = 165;</code>
     */
    boolean getTschchartseriesdefaulttrendlineshowequation();

    /**
     * <code>optional bool tschchartseriesdefaulttrendlineshowr2value = 166;</code>
     */
    boolean hasTschchartseriesdefaulttrendlineshowr2Value();
    /**
     * <code>optional bool tschchartseriesdefaulttrendlineshowr2value = 166;</code>
     */
    boolean getTschchartseriesdefaulttrendlineshowr2Value();

    /**
     * <code>optional int32 tschchartseriesdefaulterrorbarsetting = 170;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarsetting();
    /**
     * <code>optional int32 tschchartseriesdefaulterrorbarsetting = 170;</code>
     */
    int getTschchartseriesdefaulterrorbarsetting();

    /**
     * <code>optional int32 tschchartseriesdefaulterrorbarsettingscatterx = 171;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarsettingscatterx();
    /**
     * <code>optional int32 tschchartseriesdefaulterrorbarsettingscatterx = 171;</code>
     */
    int getTschchartseriesdefaulterrorbarsettingscatterx();

    /**
     * <code>optional int32 tschchartseriesdefaulterrorbartype = 172;</code>
     */
    boolean hasTschchartseriesdefaulterrorbartype();
    /**
     * <code>optional int32 tschchartseriesdefaulterrorbartype = 172;</code>
     */
    int getTschchartseriesdefaulterrorbartype();

    /**
     * <code>optional int32 tschchartseriesdefaulterrorbartypescatterx = 173;</code>
     */
    boolean hasTschchartseriesdefaulterrorbartypescatterx();
    /**
     * <code>optional int32 tschchartseriesdefaulterrorbartypescatterx = 173;</code>
     */
    int getTschchartseriesdefaulterrorbartypescatterx();

    /**
     * <code>optional float tschchartseriesdefaulterrorbarfixedvalue = 174;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarfixedvalue();
    /**
     * <code>optional float tschchartseriesdefaulterrorbarfixedvalue = 174;</code>
     */
    float getTschchartseriesdefaulterrorbarfixedvalue();

    /**
     * <code>optional float tschchartseriesdefaulterrorbarfixedvaluescatterx = 175;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarfixedvaluescatterx();
    /**
     * <code>optional float tschchartseriesdefaulterrorbarfixedvaluescatterx = 175;</code>
     */
    float getTschchartseriesdefaulterrorbarfixedvaluescatterx();

    /**
     * <code>optional float tschchartseriesdefaulterrorbarpercentvalue = 176;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarpercentvalue();
    /**
     * <code>optional float tschchartseriesdefaulterrorbarpercentvalue = 176;</code>
     */
    float getTschchartseriesdefaulterrorbarpercentvalue();

    /**
     * <code>optional float tschchartseriesdefaulterrorbarpercentvaluescatterx = 177;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarpercentvaluescatterx();
    /**
     * <code>optional float tschchartseriesdefaulterrorbarpercentvaluescatterx = 177;</code>
     */
    float getTschchartseriesdefaulterrorbarpercentvaluescatterx();

    /**
     * <code>optional float tschchartseriesdefaulterrorbarstddevvalue = 178;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarstddevvalue();
    /**
     * <code>optional float tschchartseriesdefaulterrorbarstddevvalue = 178;</code>
     */
    float getTschchartseriesdefaulterrorbarstddevvalue();

    /**
     * <code>optional float tschchartseriesdefaulterrorbarstddevvaluescatterx = 179;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarstddevvaluescatterx();
    /**
     * <code>optional float tschchartseriesdefaulterrorbarstddevvaluescatterx = 179;</code>
     */
    float getTschchartseriesdefaulterrorbarstddevvaluescatterx();

    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 190;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarcustompositivedata();
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 190;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive getTschchartseriesdefaulterrorbarcustompositivedata();
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 190;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder getTschchartseriesdefaulterrorbarcustompositivedataOrBuilder();

    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 191;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarcustompositivedatascatterx();
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 191;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive getTschchartseriesdefaulterrorbarcustompositivedatascatterx();
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 191;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder getTschchartseriesdefaulterrorbarcustompositivedatascatterxOrBuilder();

    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 192;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarcustomnegativedata();
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 192;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive getTschchartseriesdefaulterrorbarcustomnegativedata();
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 192;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder getTschchartseriesdefaulterrorbarcustomnegativedataOrBuilder();

    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 193;</code>
     */
    boolean hasTschchartseriesdefaulterrorbarcustomnegativedatascatterx();
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 193;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive getTschchartseriesdefaulterrorbarcustomnegativedatascatterx();
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 193;</code>
     */
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder getTschchartseriesdefaulterrorbarcustomnegativedatascatterxOrBuilder();

    /**
     * <code>optional float tschchartseriesdefaulttrendlineequationoffsetx = 194;</code>
     */
    boolean hasTschchartseriesdefaulttrendlineequationoffsetx();
    /**
     * <code>optional float tschchartseriesdefaulttrendlineequationoffsetx = 194;</code>
     */
    float getTschchartseriesdefaulttrendlineequationoffsetx();

    /**
     * <code>optional float tschchartseriesdefaulttrendlineequationoffsety = 195;</code>
     */
    boolean hasTschchartseriesdefaulttrendlineequationoffsety();
    /**
     * <code>optional float tschchartseriesdefaulttrendlineequationoffsety = 195;</code>
     */
    float getTschchartseriesdefaulttrendlineequationoffsety();

    /**
     * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsetx = 196;</code>
     */
    boolean hasTschchartseriesdefaulttrendlinersquaredoffsetx();
    /**
     * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsetx = 196;</code>
     */
    float getTschchartseriesdefaulttrendlinersquaredoffsetx();

    /**
     * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsety = 197;</code>
     */
    boolean hasTschchartseriesdefaulttrendlinersquaredoffsety();
    /**
     * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsety = 197;</code>
     */
    float getTschchartseriesdefaulttrendlinersquaredoffsety();

    /**
     * <code>optional bool tschchartseriesdefaultshowtrendline = 198;</code>
     */
    boolean hasTschchartseriesdefaultshowtrendline();
    /**
     * <code>optional bool tschchartseriesdefaultshowtrendline = 198;</code>
     */
    boolean getTschchartseriesdefaultshowtrendline();

    /**
     * <code>optional bool tschchartseriesdefaultshowerrorbar = 199;</code>
     */
    boolean hasTschchartseriesdefaultshowerrorbar();
    /**
     * <code>optional bool tschchartseriesdefaultshowerrorbar = 199;</code>
     */
    boolean getTschchartseriesdefaultshowerrorbar();

    /**
     * <code>optional bool tschchartseriesdefaultshowerrorbarscatterx = 200;</code>
     */
    boolean hasTschchartseriesdefaultshowerrorbarscatterx();
    /**
     * <code>optional bool tschchartseriesdefaultshowerrorbarscatterx = 200;</code>
     */
    boolean getTschchartseriesdefaultshowerrorbarscatterx();

    /**
     * <code>optional int32 tschchartseriesbubblesizedimension = 208;</code>
     */
    boolean hasTschchartseriesbubblesizedimension();
    /**
     * <code>optional int32 tschchartseriesbubblesizedimension = 208;</code>
     */
    int getTschchartseriesbubblesizedimension();

    /**
     * <code>optional bool tschchartseriesbubbleshowvaluelabels = 209;</code>
     */
    boolean hasTschchartseriesbubbleshowvaluelabels();
    /**
     * <code>optional bool tschchartseriesbubbleshowvaluelabels = 209;</code>
     */
    boolean getTschchartseriesbubbleshowvaluelabels();

    /**
     * <code>optional int32 tschchartseriesbubblelinetype = 210;</code>
     */
    boolean hasTschchartseriesbubblelinetype();
    /**
     * <code>optional int32 tschchartseriesbubblelinetype = 210;</code>
     */
    int getTschchartseriesbubblelinetype();

    /**
     * <code>optional bool tschchartseriesbubbleshownegativedata = 216;</code>
     */
    boolean hasTschchartseriesbubbleshownegativedata();
    /**
     * <code>optional bool tschchartseriesbubbleshownegativedata = 216;</code>
     */
    boolean getTschchartseriesbubbleshownegativedata();

    /**
     * <code>optional float tschchartseriesbubbleadjustmentscale = 217;</code>
     */
    boolean hasTschchartseriesbubbleadjustmentscale();
    /**
     * <code>optional float tschchartseriesbubbleadjustmentscale = 217;</code>
     */
    float getTschchartseriesbubbleadjustmentscale();
  }
  /**
   * Protobuf type {@code TSCH.PreUFF.ChartSeriesNonStyleArchive}
   */
  public  static final class ChartSeriesNonStyleArchive extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TSCH.PreUFF.ChartSeriesNonStyleArchive)
      ChartSeriesNonStyleArchiveOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChartSeriesNonStyleArchive.newBuilder() to construct.
    private ChartSeriesNonStyleArchive(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChartSeriesNonStyleArchive() {
      tschchartseriesdefaultnumberformattype_ = 0;
      tschchartseriesbarshowvaluelabels_ = false;
      tschchartserieslinesymboltype_ = 0;
      tschchartserieslineshowsymbol_ = false;
      tschchartserieslineshowvaluelabels_ = false;
      tschchartseriesareashowvaluelabels_ = false;
      tschchartserieslinelinetype_ = 0;
      tschchartseriesareasymboltype_ = 0;
      tschchartseriesareashowsymbol_ = false;
      tschchartseriespieshowvaluelabels_ = false;
      tschchartseriesscattershowvaluelabels_ = false;
      tschchartseriespiewedgeexplosion_ = 0F;
      tschchartseriesdefaultshowvaluelabels_ = false;
      tschchartseriespienumberformattype_ = 0;
      tschchartseriespielabelexplosion_ = 0F;
      tschchartseriesmixedlineshowsymbol_ = false;
      tschchartseriesmixedareashowsymbol_ = false;
      tschchartseriesmixedlinesymboltype_ = 0;
      tschchartseriesmixedareasymboltype_ = 0;
      tschchartseriesmixedshowvaluelabels_ = false;
      tschchartseriesmixedlinelinetype_ = 0;
      tschchartseriesdefaultyaxisordinal_ = 0;
      tschchartseriespieshowserieslabels_ = false;
      tschchartseriesscattershowsymbol_ = false;
      tschchartseriesscattersymboltype_ = 0;
      tschchartseriesscatterlinetype_ = 0;
      tschchartseriesscattershowline_ = false;
      tschchartseriesdefaultseriestype_ = 0;
      tschchartseriesdefaulttrendlinetype_ = 0;
      tschchartseriesdefaulttrendlineorder_ = 0;
      tschchartseriesdefaulttrendlineperiod_ = 0;
      tschchartseriesdefaulttrendlineshowlabel_ = false;
      tschchartseriesdefaulttrendlinelabelstring_ = "";
      tschchartseriesdefaulttrendlineshowequation_ = false;
      tschchartseriesdefaulttrendlineshowr2Value_ = false;
      tschchartseriesdefaulterrorbarsetting_ = 0;
      tschchartseriesdefaulterrorbarsettingscatterx_ = 0;
      tschchartseriesdefaulterrorbartype_ = 0;
      tschchartseriesdefaulterrorbartypescatterx_ = 0;
      tschchartseriesdefaulterrorbarfixedvalue_ = 0F;
      tschchartseriesdefaulterrorbarfixedvaluescatterx_ = 0F;
      tschchartseriesdefaulterrorbarpercentvalue_ = 0F;
      tschchartseriesdefaulterrorbarpercentvaluescatterx_ = 0F;
      tschchartseriesdefaulterrorbarstddevvalue_ = 0F;
      tschchartseriesdefaulterrorbarstddevvaluescatterx_ = 0F;
      tschchartseriesdefaulttrendlineequationoffsetx_ = 0F;
      tschchartseriesdefaulttrendlineequationoffsety_ = 0F;
      tschchartseriesdefaulttrendlinersquaredoffsetx_ = 0F;
      tschchartseriesdefaulttrendlinersquaredoffsety_ = 0F;
      tschchartseriesdefaultshowtrendline_ = false;
      tschchartseriesdefaultshowerrorbar_ = false;
      tschchartseriesdefaultshowerrorbarscatterx_ = false;
      tschchartseriesbubblesizedimension_ = 0;
      tschchartseriesbubbleshowvaluelabels_ = false;
      tschchartseriesbubblelinetype_ = 0;
      tschchartseriesbubbleshownegativedata_ = false;
      tschchartseriesbubbleadjustmentscale_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChartSeriesNonStyleArchive(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      int mutable_bitField2_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = super_.toBuilder();
              }
              super_ = input.readMessage(org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(super_);
                super_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 82: {
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = tschchartseriesdefaultnumberformat_.toBuilder();
              }
              tschchartseriesdefaultnumberformat_ = input.readMessage(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaultnumberformat_);
                tschchartseriesdefaultnumberformat_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 88: {
              bitField0_ |= 0x00000004;
              tschchartseriesdefaultnumberformattype_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000008;
              tschchartseriesbarshowvaluelabels_ = input.readBool();
              break;
            }
            case 152: {
              bitField0_ |= 0x00000010;
              tschchartserieslinesymboltype_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00000020;
              tschchartserieslineshowsymbol_ = input.readBool();
              break;
            }
            case 168: {
              bitField0_ |= 0x00000040;
              tschchartserieslineshowvaluelabels_ = input.readBool();
              break;
            }
            case 216: {
              bitField0_ |= 0x00000080;
              tschchartseriesareashowvaluelabels_ = input.readBool();
              break;
            }
            case 240: {
              bitField0_ |= 0x00000100;
              tschchartserieslinelinetype_ = input.readInt32();
              break;
            }
            case 248: {
              bitField0_ |= 0x00000200;
              tschchartseriesareasymboltype_ = input.readInt32();
              break;
            }
            case 256: {
              bitField0_ |= 0x00000400;
              tschchartseriesareashowsymbol_ = input.readBool();
              break;
            }
            case 296: {
              bitField0_ |= 0x00000800;
              tschchartseriespieshowvaluelabels_ = input.readBool();
              break;
            }
            case 360: {
              bitField0_ |= 0x00001000;
              tschchartseriesscattershowvaluelabels_ = input.readBool();
              break;
            }
            case 405: {
              bitField0_ |= 0x00002000;
              tschchartseriespiewedgeexplosion_ = input.readFloat();
              break;
            }
            case 408: {
              bitField0_ |= 0x00004000;
              tschchartseriesdefaultshowvaluelabels_ = input.readBool();
              break;
            }
            case 418: {
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x00008000) == 0x00008000)) {
                subBuilder = tschchartseriespienumberformat_.toBuilder();
              }
              tschchartseriespienumberformat_ = input.readMessage(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriespienumberformat_);
                tschchartseriespienumberformat_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00008000;
              break;
            }
            case 424: {
              bitField0_ |= 0x00010000;
              tschchartseriespienumberformattype_ = input.readInt32();
              break;
            }
            case 437: {
              bitField0_ |= 0x00020000;
              tschchartseriespielabelexplosion_ = input.readFloat();
              break;
            }
            case 464: {
              bitField0_ |= 0x00040000;
              tschchartseriesmixedlineshowsymbol_ = input.readBool();
              break;
            }
            case 472: {
              bitField0_ |= 0x00080000;
              tschchartseriesmixedareashowsymbol_ = input.readBool();
              break;
            }
            case 480: {
              bitField0_ |= 0x00100000;
              tschchartseriesmixedlinesymboltype_ = input.readInt32();
              break;
            }
            case 488: {
              bitField0_ |= 0x00200000;
              tschchartseriesmixedareasymboltype_ = input.readInt32();
              break;
            }
            case 496: {
              bitField0_ |= 0x00400000;
              tschchartseriesmixedshowvaluelabels_ = input.readBool();
              break;
            }
            case 504: {
              bitField0_ |= 0x00800000;
              tschchartseriesmixedlinelinetype_ = input.readInt32();
              break;
            }
            case 520: {
              bitField0_ |= 0x01000000;
              tschchartseriesdefaultyaxisordinal_ = input.readInt32();
              break;
            }
            case 528: {
              bitField0_ |= 0x02000000;
              tschchartseriespieshowserieslabels_ = input.readBool();
              break;
            }
            case 552: {
              bitField0_ |= 0x04000000;
              tschchartseriesscattershowsymbol_ = input.readBool();
              break;
            }
            case 560: {
              bitField0_ |= 0x08000000;
              tschchartseriesscattersymboltype_ = input.readInt32();
              break;
            }
            case 568: {
              bitField0_ |= 0x10000000;
              tschchartseriesscatterlinetype_ = input.readInt32();
              break;
            }
            case 576: {
              bitField0_ |= 0x20000000;
              tschchartseriesscattershowline_ = input.readBool();
              break;
            }
            case 722: {
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder subBuilder = null;
              if (((bitField0_ & 0x40000000) == 0x40000000)) {
                subBuilder = tschchartseriesstackedpercentnumberformat_.toBuilder();
              }
              tschchartseriesstackedpercentnumberformat_ = input.readMessage(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesstackedpercentnumberformat_);
                tschchartseriesstackedpercentnumberformat_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x40000000;
              break;
            }
            case 1008: {
              bitField0_ |= 0x80000000;
              tschchartseriesdefaultseriestype_ = input.readInt32();
              break;
            }
            case 1280: {
              bitField1_ |= 0x00000001;
              tschchartseriesdefaulttrendlinetype_ = input.readInt32();
              break;
            }
            case 1288: {
              bitField1_ |= 0x00000002;
              tschchartseriesdefaulttrendlineorder_ = input.readInt32();
              break;
            }
            case 1296: {
              bitField1_ |= 0x00000004;
              tschchartseriesdefaulttrendlineperiod_ = input.readInt32();
              break;
            }
            case 1304: {
              bitField1_ |= 0x00000008;
              tschchartseriesdefaulttrendlineshowlabel_ = input.readBool();
              break;
            }
            case 1314: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField1_ |= 0x00000010;
              tschchartseriesdefaulttrendlinelabelstring_ = bs;
              break;
            }
            case 1320: {
              bitField1_ |= 0x00000020;
              tschchartseriesdefaulttrendlineshowequation_ = input.readBool();
              break;
            }
            case 1328: {
              bitField1_ |= 0x00000040;
              tschchartseriesdefaulttrendlineshowr2Value_ = input.readBool();
              break;
            }
            case 1360: {
              bitField1_ |= 0x00000080;
              tschchartseriesdefaulterrorbarsetting_ = input.readInt32();
              break;
            }
            case 1368: {
              bitField1_ |= 0x00000100;
              tschchartseriesdefaulterrorbarsettingscatterx_ = input.readInt32();
              break;
            }
            case 1376: {
              bitField1_ |= 0x00000200;
              tschchartseriesdefaulterrorbartype_ = input.readInt32();
              break;
            }
            case 1384: {
              bitField1_ |= 0x00000400;
              tschchartseriesdefaulterrorbartypescatterx_ = input.readInt32();
              break;
            }
            case 1397: {
              bitField1_ |= 0x00000800;
              tschchartseriesdefaulterrorbarfixedvalue_ = input.readFloat();
              break;
            }
            case 1405: {
              bitField1_ |= 0x00001000;
              tschchartseriesdefaulterrorbarfixedvaluescatterx_ = input.readFloat();
              break;
            }
            case 1413: {
              bitField1_ |= 0x00002000;
              tschchartseriesdefaulterrorbarpercentvalue_ = input.readFloat();
              break;
            }
            case 1421: {
              bitField1_ |= 0x00004000;
              tschchartseriesdefaulterrorbarpercentvaluescatterx_ = input.readFloat();
              break;
            }
            case 1429: {
              bitField1_ |= 0x00008000;
              tschchartseriesdefaulterrorbarstddevvalue_ = input.readFloat();
              break;
            }
            case 1437: {
              bitField1_ |= 0x00010000;
              tschchartseriesdefaulterrorbarstddevvaluescatterx_ = input.readFloat();
              break;
            }
            case 1522: {
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00020000) == 0x00020000)) {
                subBuilder = tschchartseriesdefaulterrorbarcustompositivedata_.toBuilder();
              }
              tschchartseriesdefaulterrorbarcustompositivedata_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaulterrorbarcustompositivedata_);
                tschchartseriesdefaulterrorbarcustompositivedata_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00020000;
              break;
            }
            case 1530: {
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00040000) == 0x00040000)) {
                subBuilder = tschchartseriesdefaulterrorbarcustompositivedatascatterx_.toBuilder();
              }
              tschchartseriesdefaulterrorbarcustompositivedatascatterx_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaulterrorbarcustompositivedatascatterx_);
                tschchartseriesdefaulterrorbarcustompositivedatascatterx_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00040000;
              break;
            }
            case 1538: {
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00080000) == 0x00080000)) {
                subBuilder = tschchartseriesdefaulterrorbarcustomnegativedata_.toBuilder();
              }
              tschchartseriesdefaulterrorbarcustomnegativedata_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaulterrorbarcustomnegativedata_);
                tschchartseriesdefaulterrorbarcustomnegativedata_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00080000;
              break;
            }
            case 1546: {
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder subBuilder = null;
              if (((bitField1_ & 0x00100000) == 0x00100000)) {
                subBuilder = tschchartseriesdefaulterrorbarcustomnegativedatascatterx_.toBuilder();
              }
              tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ = input.readMessage(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tschchartseriesdefaulterrorbarcustomnegativedatascatterx_);
                tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00100000;
              break;
            }
            case 1557: {
              bitField1_ |= 0x00200000;
              tschchartseriesdefaulttrendlineequationoffsetx_ = input.readFloat();
              break;
            }
            case 1565: {
              bitField1_ |= 0x00400000;
              tschchartseriesdefaulttrendlineequationoffsety_ = input.readFloat();
              break;
            }
            case 1573: {
              bitField1_ |= 0x00800000;
              tschchartseriesdefaulttrendlinersquaredoffsetx_ = input.readFloat();
              break;
            }
            case 1581: {
              bitField1_ |= 0x01000000;
              tschchartseriesdefaulttrendlinersquaredoffsety_ = input.readFloat();
              break;
            }
            case 1584: {
              bitField1_ |= 0x02000000;
              tschchartseriesdefaultshowtrendline_ = input.readBool();
              break;
            }
            case 1592: {
              bitField1_ |= 0x04000000;
              tschchartseriesdefaultshowerrorbar_ = input.readBool();
              break;
            }
            case 1600: {
              bitField1_ |= 0x08000000;
              tschchartseriesdefaultshowerrorbarscatterx_ = input.readBool();
              break;
            }
            case 1664: {
              bitField1_ |= 0x10000000;
              tschchartseriesbubblesizedimension_ = input.readInt32();
              break;
            }
            case 1672: {
              bitField1_ |= 0x20000000;
              tschchartseriesbubbleshowvaluelabels_ = input.readBool();
              break;
            }
            case 1680: {
              bitField1_ |= 0x40000000;
              tschchartseriesbubblelinetype_ = input.readInt32();
              break;
            }
            case 1728: {
              bitField1_ |= 0x80000000;
              tschchartseriesbubbleshownegativedata_ = input.readBool();
              break;
            }
            case 1741: {
              bitField2_ |= 0x00000001;
              tschchartseriesbubbleadjustmentscale_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartSeriesNonStyleArchive_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartSeriesNonStyleArchive_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive.Builder.class);
    }

    private int bitField0_;
    private int bitField1_;
    private int bitField2_;
    public static final int SUPER_FIELD_NUMBER = 1;
    private org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive super_;
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    public boolean hasSuper() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive getSuper() {
      return super_ == null ? org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
    }
    /**
     * <code>required .TSS.StyleArchive super = 1;</code>
     */
    public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder getSuperOrBuilder() {
      return super_ == null ? org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
    }

    public static final int TSCHCHARTSERIESDEFAULTNUMBERFORMAT_FIELD_NUMBER = 10;
    private org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive tschchartseriesdefaultnumberformat_;
    /**
     * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesdefaultnumberformat = 10;</code>
     */
    public boolean hasTschchartseriesdefaultnumberformat() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesdefaultnumberformat = 10;</code>
     */
    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive getTschchartseriesdefaultnumberformat() {
      return tschchartseriesdefaultnumberformat_ == null ? org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.getDefaultInstance() : tschchartseriesdefaultnumberformat_;
    }
    /**
     * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesdefaultnumberformat = 10;</code>
     */
    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchiveOrBuilder getTschchartseriesdefaultnumberformatOrBuilder() {
      return tschchartseriesdefaultnumberformat_ == null ? org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.getDefaultInstance() : tschchartseriesdefaultnumberformat_;
    }

    public static final int TSCHCHARTSERIESDEFAULTNUMBERFORMATTYPE_FIELD_NUMBER = 11;
    private int tschchartseriesdefaultnumberformattype_;
    /**
     * <code>optional int32 tschchartseriesdefaultnumberformattype = 11;</code>
     */
    public boolean hasTschchartseriesdefaultnumberformattype() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 tschchartseriesdefaultnumberformattype = 11;</code>
     */
    public int getTschchartseriesdefaultnumberformattype() {
      return tschchartseriesdefaultnumberformattype_;
    }

    public static final int TSCHCHARTSERIESBARSHOWVALUELABELS_FIELD_NUMBER = 12;
    private boolean tschchartseriesbarshowvaluelabels_;
    /**
     * <code>optional bool tschchartseriesbarshowvaluelabels = 12;</code>
     */
    public boolean hasTschchartseriesbarshowvaluelabels() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool tschchartseriesbarshowvaluelabels = 12;</code>
     */
    public boolean getTschchartseriesbarshowvaluelabels() {
      return tschchartseriesbarshowvaluelabels_;
    }

    public static final int TSCHCHARTSERIESLINESYMBOLTYPE_FIELD_NUMBER = 19;
    private int tschchartserieslinesymboltype_;
    /**
     * <code>optional int32 tschchartserieslinesymboltype = 19;</code>
     */
    public boolean hasTschchartserieslinesymboltype() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 tschchartserieslinesymboltype = 19;</code>
     */
    public int getTschchartserieslinesymboltype() {
      return tschchartserieslinesymboltype_;
    }

    public static final int TSCHCHARTSERIESLINESHOWSYMBOL_FIELD_NUMBER = 20;
    private boolean tschchartserieslineshowsymbol_;
    /**
     * <code>optional bool tschchartserieslineshowsymbol = 20;</code>
     */
    public boolean hasTschchartserieslineshowsymbol() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool tschchartserieslineshowsymbol = 20;</code>
     */
    public boolean getTschchartserieslineshowsymbol() {
      return tschchartserieslineshowsymbol_;
    }

    public static final int TSCHCHARTSERIESLINESHOWVALUELABELS_FIELD_NUMBER = 21;
    private boolean tschchartserieslineshowvaluelabels_;
    /**
     * <code>optional bool tschchartserieslineshowvaluelabels = 21;</code>
     */
    public boolean hasTschchartserieslineshowvaluelabels() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool tschchartserieslineshowvaluelabels = 21;</code>
     */
    public boolean getTschchartserieslineshowvaluelabels() {
      return tschchartserieslineshowvaluelabels_;
    }

    public static final int TSCHCHARTSERIESAREASHOWVALUELABELS_FIELD_NUMBER = 27;
    private boolean tschchartseriesareashowvaluelabels_;
    /**
     * <code>optional bool tschchartseriesareashowvaluelabels = 27;</code>
     */
    public boolean hasTschchartseriesareashowvaluelabels() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool tschchartseriesareashowvaluelabels = 27;</code>
     */
    public boolean getTschchartseriesareashowvaluelabels() {
      return tschchartseriesareashowvaluelabels_;
    }

    public static final int TSCHCHARTSERIESLINELINETYPE_FIELD_NUMBER = 30;
    private int tschchartserieslinelinetype_;
    /**
     * <code>optional int32 tschchartserieslinelinetype = 30;</code>
     */
    public boolean hasTschchartserieslinelinetype() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 tschchartserieslinelinetype = 30;</code>
     */
    public int getTschchartserieslinelinetype() {
      return tschchartserieslinelinetype_;
    }

    public static final int TSCHCHARTSERIESAREASYMBOLTYPE_FIELD_NUMBER = 31;
    private int tschchartseriesareasymboltype_;
    /**
     * <code>optional int32 tschchartseriesareasymboltype = 31;</code>
     */
    public boolean hasTschchartseriesareasymboltype() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 tschchartseriesareasymboltype = 31;</code>
     */
    public int getTschchartseriesareasymboltype() {
      return tschchartseriesareasymboltype_;
    }

    public static final int TSCHCHARTSERIESAREASHOWSYMBOL_FIELD_NUMBER = 32;
    private boolean tschchartseriesareashowsymbol_;
    /**
     * <code>optional bool tschchartseriesareashowsymbol = 32;</code>
     */
    public boolean hasTschchartseriesareashowsymbol() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool tschchartseriesareashowsymbol = 32;</code>
     */
    public boolean getTschchartseriesareashowsymbol() {
      return tschchartseriesareashowsymbol_;
    }

    public static final int TSCHCHARTSERIESPIESHOWVALUELABELS_FIELD_NUMBER = 37;
    private boolean tschchartseriespieshowvaluelabels_;
    /**
     * <code>optional bool tschchartseriespieshowvaluelabels = 37;</code>
     */
    public boolean hasTschchartseriespieshowvaluelabels() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool tschchartseriespieshowvaluelabels = 37;</code>
     */
    public boolean getTschchartseriespieshowvaluelabels() {
      return tschchartseriespieshowvaluelabels_;
    }

    public static final int TSCHCHARTSERIESSCATTERSHOWVALUELABELS_FIELD_NUMBER = 45;
    private boolean tschchartseriesscattershowvaluelabels_;
    /**
     * <code>optional bool tschchartseriesscattershowvaluelabels = 45;</code>
     */
    public boolean hasTschchartseriesscattershowvaluelabels() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional bool tschchartseriesscattershowvaluelabels = 45;</code>
     */
    public boolean getTschchartseriesscattershowvaluelabels() {
      return tschchartseriesscattershowvaluelabels_;
    }

    public static final int TSCHCHARTSERIESPIEWEDGEEXPLOSION_FIELD_NUMBER = 50;
    private float tschchartseriespiewedgeexplosion_;
    /**
     * <code>optional float tschchartseriespiewedgeexplosion = 50;</code>
     */
    public boolean hasTschchartseriespiewedgeexplosion() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional float tschchartseriespiewedgeexplosion = 50;</code>
     */
    public float getTschchartseriespiewedgeexplosion() {
      return tschchartseriespiewedgeexplosion_;
    }

    public static final int TSCHCHARTSERIESDEFAULTSHOWVALUELABELS_FIELD_NUMBER = 51;
    private boolean tschchartseriesdefaultshowvaluelabels_;
    /**
     * <code>optional bool tschchartseriesdefaultshowvaluelabels = 51;</code>
     */
    public boolean hasTschchartseriesdefaultshowvaluelabels() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional bool tschchartseriesdefaultshowvaluelabels = 51;</code>
     */
    public boolean getTschchartseriesdefaultshowvaluelabels() {
      return tschchartseriesdefaultshowvaluelabels_;
    }

    public static final int TSCHCHARTSERIESPIENUMBERFORMAT_FIELD_NUMBER = 52;
    private org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive tschchartseriespienumberformat_;
    /**
     * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriespienumberformat = 52;</code>
     */
    public boolean hasTschchartseriespienumberformat() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriespienumberformat = 52;</code>
     */
    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive getTschchartseriespienumberformat() {
      return tschchartseriespienumberformat_ == null ? org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.getDefaultInstance() : tschchartseriespienumberformat_;
    }
    /**
     * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriespienumberformat = 52;</code>
     */
    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchiveOrBuilder getTschchartseriespienumberformatOrBuilder() {
      return tschchartseriespienumberformat_ == null ? org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.getDefaultInstance() : tschchartseriespienumberformat_;
    }

    public static final int TSCHCHARTSERIESPIENUMBERFORMATTYPE_FIELD_NUMBER = 53;
    private int tschchartseriespienumberformattype_;
    /**
     * <code>optional int32 tschchartseriespienumberformattype = 53;</code>
     */
    public boolean hasTschchartseriespienumberformattype() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 tschchartseriespienumberformattype = 53;</code>
     */
    public int getTschchartseriespienumberformattype() {
      return tschchartseriespienumberformattype_;
    }

    public static final int TSCHCHARTSERIESPIELABELEXPLOSION_FIELD_NUMBER = 54;
    private float tschchartseriespielabelexplosion_;
    /**
     * <code>optional float tschchartseriespielabelexplosion = 54;</code>
     */
    public boolean hasTschchartseriespielabelexplosion() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional float tschchartseriespielabelexplosion = 54;</code>
     */
    public float getTschchartseriespielabelexplosion() {
      return tschchartseriespielabelexplosion_;
    }

    public static final int TSCHCHARTSERIESMIXEDLINESHOWSYMBOL_FIELD_NUMBER = 58;
    private boolean tschchartseriesmixedlineshowsymbol_;
    /**
     * <code>optional bool tschchartseriesmixedlineshowsymbol = 58;</code>
     */
    public boolean hasTschchartseriesmixedlineshowsymbol() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional bool tschchartseriesmixedlineshowsymbol = 58;</code>
     */
    public boolean getTschchartseriesmixedlineshowsymbol() {
      return tschchartseriesmixedlineshowsymbol_;
    }

    public static final int TSCHCHARTSERIESMIXEDAREASHOWSYMBOL_FIELD_NUMBER = 59;
    private boolean tschchartseriesmixedareashowsymbol_;
    /**
     * <code>optional bool tschchartseriesmixedareashowsymbol = 59;</code>
     */
    public boolean hasTschchartseriesmixedareashowsymbol() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional bool tschchartseriesmixedareashowsymbol = 59;</code>
     */
    public boolean getTschchartseriesmixedareashowsymbol() {
      return tschchartseriesmixedareashowsymbol_;
    }

    public static final int TSCHCHARTSERIESMIXEDLINESYMBOLTYPE_FIELD_NUMBER = 60;
    private int tschchartseriesmixedlinesymboltype_;
    /**
     * <code>optional int32 tschchartseriesmixedlinesymboltype = 60;</code>
     */
    public boolean hasTschchartseriesmixedlinesymboltype() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 tschchartseriesmixedlinesymboltype = 60;</code>
     */
    public int getTschchartseriesmixedlinesymboltype() {
      return tschchartseriesmixedlinesymboltype_;
    }

    public static final int TSCHCHARTSERIESMIXEDAREASYMBOLTYPE_FIELD_NUMBER = 61;
    private int tschchartseriesmixedareasymboltype_;
    /**
     * <code>optional int32 tschchartseriesmixedareasymboltype = 61;</code>
     */
    public boolean hasTschchartseriesmixedareasymboltype() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int32 tschchartseriesmixedareasymboltype = 61;</code>
     */
    public int getTschchartseriesmixedareasymboltype() {
      return tschchartseriesmixedareasymboltype_;
    }

    public static final int TSCHCHARTSERIESMIXEDSHOWVALUELABELS_FIELD_NUMBER = 62;
    private boolean tschchartseriesmixedshowvaluelabels_;
    /**
     * <code>optional bool tschchartseriesmixedshowvaluelabels = 62;</code>
     */
    public boolean hasTschchartseriesmixedshowvaluelabels() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional bool tschchartseriesmixedshowvaluelabels = 62;</code>
     */
    public boolean getTschchartseriesmixedshowvaluelabels() {
      return tschchartseriesmixedshowvaluelabels_;
    }

    public static final int TSCHCHARTSERIESMIXEDLINELINETYPE_FIELD_NUMBER = 63;
    private int tschchartseriesmixedlinelinetype_;
    /**
     * <code>optional int32 tschchartseriesmixedlinelinetype = 63;</code>
     */
    public boolean hasTschchartseriesmixedlinelinetype() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int32 tschchartseriesmixedlinelinetype = 63;</code>
     */
    public int getTschchartseriesmixedlinelinetype() {
      return tschchartseriesmixedlinelinetype_;
    }

    public static final int TSCHCHARTSERIESDEFAULTYAXISORDINAL_FIELD_NUMBER = 65;
    private int tschchartseriesdefaultyaxisordinal_;
    /**
     * <code>optional int32 tschchartseriesdefaultyaxisordinal = 65;</code>
     */
    public boolean hasTschchartseriesdefaultyaxisordinal() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int32 tschchartseriesdefaultyaxisordinal = 65;</code>
     */
    public int getTschchartseriesdefaultyaxisordinal() {
      return tschchartseriesdefaultyaxisordinal_;
    }

    public static final int TSCHCHARTSERIESPIESHOWSERIESLABELS_FIELD_NUMBER = 66;
    private boolean tschchartseriespieshowserieslabels_;
    /**
     * <code>optional bool tschchartseriespieshowserieslabels = 66;</code>
     */
    public boolean hasTschchartseriespieshowserieslabels() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional bool tschchartseriespieshowserieslabels = 66;</code>
     */
    public boolean getTschchartseriespieshowserieslabels() {
      return tschchartseriespieshowserieslabels_;
    }

    public static final int TSCHCHARTSERIESSCATTERSHOWSYMBOL_FIELD_NUMBER = 69;
    private boolean tschchartseriesscattershowsymbol_;
    /**
     * <code>optional bool tschchartseriesscattershowsymbol = 69;</code>
     */
    public boolean hasTschchartseriesscattershowsymbol() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional bool tschchartseriesscattershowsymbol = 69;</code>
     */
    public boolean getTschchartseriesscattershowsymbol() {
      return tschchartseriesscattershowsymbol_;
    }

    public static final int TSCHCHARTSERIESSCATTERSYMBOLTYPE_FIELD_NUMBER = 70;
    private int tschchartseriesscattersymboltype_;
    /**
     * <code>optional int32 tschchartseriesscattersymboltype = 70;</code>
     */
    public boolean hasTschchartseriesscattersymboltype() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int32 tschchartseriesscattersymboltype = 70;</code>
     */
    public int getTschchartseriesscattersymboltype() {
      return tschchartseriesscattersymboltype_;
    }

    public static final int TSCHCHARTSERIESSCATTERLINETYPE_FIELD_NUMBER = 71;
    private int tschchartseriesscatterlinetype_;
    /**
     * <code>optional int32 tschchartseriesscatterlinetype = 71;</code>
     */
    public boolean hasTschchartseriesscatterlinetype() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int32 tschchartseriesscatterlinetype = 71;</code>
     */
    public int getTschchartseriesscatterlinetype() {
      return tschchartseriesscatterlinetype_;
    }

    public static final int TSCHCHARTSERIESSCATTERSHOWLINE_FIELD_NUMBER = 72;
    private boolean tschchartseriesscattershowline_;
    /**
     * <code>optional bool tschchartseriesscattershowline = 72;</code>
     */
    public boolean hasTschchartseriesscattershowline() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional bool tschchartseriesscattershowline = 72;</code>
     */
    public boolean getTschchartseriesscattershowline() {
      return tschchartseriesscattershowline_;
    }

    public static final int TSCHCHARTSERIESSTACKEDPERCENTNUMBERFORMAT_FIELD_NUMBER = 90;
    private org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive tschchartseriesstackedpercentnumberformat_;
    /**
     * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesstackedpercentnumberformat = 90;</code>
     */
    public boolean hasTschchartseriesstackedpercentnumberformat() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesstackedpercentnumberformat = 90;</code>
     */
    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive getTschchartseriesstackedpercentnumberformat() {
      return tschchartseriesstackedpercentnumberformat_ == null ? org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.getDefaultInstance() : tschchartseriesstackedpercentnumberformat_;
    }
    /**
     * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesstackedpercentnumberformat = 90;</code>
     */
    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchiveOrBuilder getTschchartseriesstackedpercentnumberformatOrBuilder() {
      return tschchartseriesstackedpercentnumberformat_ == null ? org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.getDefaultInstance() : tschchartseriesstackedpercentnumberformat_;
    }

    public static final int TSCHCHARTSERIESDEFAULTSERIESTYPE_FIELD_NUMBER = 126;
    private int tschchartseriesdefaultseriestype_;
    /**
     * <code>optional int32 tschchartseriesdefaultseriestype = 126;</code>
     */
    public boolean hasTschchartseriesdefaultseriestype() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional int32 tschchartseriesdefaultseriestype = 126;</code>
     */
    public int getTschchartseriesdefaultseriestype() {
      return tschchartseriesdefaultseriestype_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINETYPE_FIELD_NUMBER = 160;
    private int tschchartseriesdefaulttrendlinetype_;
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlinetype = 160;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlinetype() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlinetype = 160;</code>
     */
    public int getTschchartseriesdefaulttrendlinetype() {
      return tschchartseriesdefaulttrendlinetype_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINEORDER_FIELD_NUMBER = 161;
    private int tschchartseriesdefaulttrendlineorder_;
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlineorder = 161;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlineorder() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlineorder = 161;</code>
     */
    public int getTschchartseriesdefaulttrendlineorder() {
      return tschchartseriesdefaulttrendlineorder_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINEPERIOD_FIELD_NUMBER = 162;
    private int tschchartseriesdefaulttrendlineperiod_;
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlineperiod = 162;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlineperiod() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 tschchartseriesdefaulttrendlineperiod = 162;</code>
     */
    public int getTschchartseriesdefaulttrendlineperiod() {
      return tschchartseriesdefaulttrendlineperiod_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINESHOWLABEL_FIELD_NUMBER = 163;
    private boolean tschchartseriesdefaulttrendlineshowlabel_;
    /**
     * <code>optional bool tschchartseriesdefaulttrendlineshowlabel = 163;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlineshowlabel() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool tschchartseriesdefaulttrendlineshowlabel = 163;</code>
     */
    public boolean getTschchartseriesdefaulttrendlineshowlabel() {
      return tschchartseriesdefaulttrendlineshowlabel_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINELABELSTRING_FIELD_NUMBER = 164;
    private volatile java.lang.Object tschchartseriesdefaulttrendlinelabelstring_;
    /**
     * <code>optional string tschchartseriesdefaulttrendlinelabelstring = 164;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlinelabelstring() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string tschchartseriesdefaulttrendlinelabelstring = 164;</code>
     */
    public java.lang.String getTschchartseriesdefaulttrendlinelabelstring() {
      java.lang.Object ref = tschchartseriesdefaulttrendlinelabelstring_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tschchartseriesdefaulttrendlinelabelstring_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string tschchartseriesdefaulttrendlinelabelstring = 164;</code>
     */
    public com.google.protobuf.ByteString
        getTschchartseriesdefaulttrendlinelabelstringBytes() {
      java.lang.Object ref = tschchartseriesdefaulttrendlinelabelstring_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tschchartseriesdefaulttrendlinelabelstring_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINESHOWEQUATION_FIELD_NUMBER = 165;
    private boolean tschchartseriesdefaulttrendlineshowequation_;
    /**
     * <code>optional bool tschchartseriesdefaulttrendlineshowequation = 165;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlineshowequation() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool tschchartseriesdefaulttrendlineshowequation = 165;</code>
     */
    public boolean getTschchartseriesdefaulttrendlineshowequation() {
      return tschchartseriesdefaulttrendlineshowequation_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINESHOWR2VALUE_FIELD_NUMBER = 166;
    private boolean tschchartseriesdefaulttrendlineshowr2Value_;
    /**
     * <code>optional bool tschchartseriesdefaulttrendlineshowr2value = 166;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlineshowr2Value() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool tschchartseriesdefaulttrendlineshowr2value = 166;</code>
     */
    public boolean getTschchartseriesdefaulttrendlineshowr2Value() {
      return tschchartseriesdefaulttrendlineshowr2Value_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARSETTING_FIELD_NUMBER = 170;
    private int tschchartseriesdefaulterrorbarsetting_;
    /**
     * <code>optional int32 tschchartseriesdefaulterrorbarsetting = 170;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarsetting() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 tschchartseriesdefaulterrorbarsetting = 170;</code>
     */
    public int getTschchartseriesdefaulterrorbarsetting() {
      return tschchartseriesdefaulterrorbarsetting_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARSETTINGSCATTERX_FIELD_NUMBER = 171;
    private int tschchartseriesdefaulterrorbarsettingscatterx_;
    /**
     * <code>optional int32 tschchartseriesdefaulterrorbarsettingscatterx = 171;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarsettingscatterx() {
      return ((bitField1_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 tschchartseriesdefaulterrorbarsettingscatterx = 171;</code>
     */
    public int getTschchartseriesdefaulterrorbarsettingscatterx() {
      return tschchartseriesdefaulterrorbarsettingscatterx_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARTYPE_FIELD_NUMBER = 172;
    private int tschchartseriesdefaulterrorbartype_;
    /**
     * <code>optional int32 tschchartseriesdefaulterrorbartype = 172;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbartype() {
      return ((bitField1_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 tschchartseriesdefaulterrorbartype = 172;</code>
     */
    public int getTschchartseriesdefaulterrorbartype() {
      return tschchartseriesdefaulterrorbartype_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARTYPESCATTERX_FIELD_NUMBER = 173;
    private int tschchartseriesdefaulterrorbartypescatterx_;
    /**
     * <code>optional int32 tschchartseriesdefaulterrorbartypescatterx = 173;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbartypescatterx() {
      return ((bitField1_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 tschchartseriesdefaulterrorbartypescatterx = 173;</code>
     */
    public int getTschchartseriesdefaulterrorbartypescatterx() {
      return tschchartseriesdefaulterrorbartypescatterx_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARFIXEDVALUE_FIELD_NUMBER = 174;
    private float tschchartseriesdefaulterrorbarfixedvalue_;
    /**
     * <code>optional float tschchartseriesdefaulterrorbarfixedvalue = 174;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarfixedvalue() {
      return ((bitField1_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional float tschchartseriesdefaulterrorbarfixedvalue = 174;</code>
     */
    public float getTschchartseriesdefaulterrorbarfixedvalue() {
      return tschchartseriesdefaulterrorbarfixedvalue_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARFIXEDVALUESCATTERX_FIELD_NUMBER = 175;
    private float tschchartseriesdefaulterrorbarfixedvaluescatterx_;
    /**
     * <code>optional float tschchartseriesdefaulterrorbarfixedvaluescatterx = 175;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarfixedvaluescatterx() {
      return ((bitField1_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional float tschchartseriesdefaulterrorbarfixedvaluescatterx = 175;</code>
     */
    public float getTschchartseriesdefaulterrorbarfixedvaluescatterx() {
      return tschchartseriesdefaulterrorbarfixedvaluescatterx_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARPERCENTVALUE_FIELD_NUMBER = 176;
    private float tschchartseriesdefaulterrorbarpercentvalue_;
    /**
     * <code>optional float tschchartseriesdefaulterrorbarpercentvalue = 176;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarpercentvalue() {
      return ((bitField1_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional float tschchartseriesdefaulterrorbarpercentvalue = 176;</code>
     */
    public float getTschchartseriesdefaulterrorbarpercentvalue() {
      return tschchartseriesdefaulterrorbarpercentvalue_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARPERCENTVALUESCATTERX_FIELD_NUMBER = 177;
    private float tschchartseriesdefaulterrorbarpercentvaluescatterx_;
    /**
     * <code>optional float tschchartseriesdefaulterrorbarpercentvaluescatterx = 177;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarpercentvaluescatterx() {
      return ((bitField1_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional float tschchartseriesdefaulterrorbarpercentvaluescatterx = 177;</code>
     */
    public float getTschchartseriesdefaulterrorbarpercentvaluescatterx() {
      return tschchartseriesdefaulterrorbarpercentvaluescatterx_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARSTDDEVVALUE_FIELD_NUMBER = 178;
    private float tschchartseriesdefaulterrorbarstddevvalue_;
    /**
     * <code>optional float tschchartseriesdefaulterrorbarstddevvalue = 178;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarstddevvalue() {
      return ((bitField1_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional float tschchartseriesdefaulterrorbarstddevvalue = 178;</code>
     */
    public float getTschchartseriesdefaulterrorbarstddevvalue() {
      return tschchartseriesdefaulterrorbarstddevvalue_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARSTDDEVVALUESCATTERX_FIELD_NUMBER = 179;
    private float tschchartseriesdefaulterrorbarstddevvaluescatterx_;
    /**
     * <code>optional float tschchartseriesdefaulterrorbarstddevvaluescatterx = 179;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarstddevvaluescatterx() {
      return ((bitField1_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional float tschchartseriesdefaulterrorbarstddevvaluescatterx = 179;</code>
     */
    public float getTschchartseriesdefaulterrorbarstddevvaluescatterx() {
      return tschchartseriesdefaulterrorbarstddevvaluescatterx_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARCUSTOMPOSITIVEDATA_FIELD_NUMBER = 190;
    private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata_;
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 190;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarcustompositivedata() {
      return ((bitField1_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 190;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive getTschchartseriesdefaulterrorbarcustompositivedata() {
      return tschchartseriesdefaulterrorbarcustompositivedata_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustompositivedata_;
    }
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 190;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder getTschchartseriesdefaulterrorbarcustompositivedataOrBuilder() {
      return tschchartseriesdefaulterrorbarcustompositivedata_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustompositivedata_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARCUSTOMPOSITIVEDATASCATTERX_FIELD_NUMBER = 191;
    private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx_;
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 191;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarcustompositivedatascatterx() {
      return ((bitField1_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 191;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive getTschchartseriesdefaulterrorbarcustompositivedatascatterx() {
      return tschchartseriesdefaulterrorbarcustompositivedatascatterx_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustompositivedatascatterx_;
    }
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 191;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder getTschchartseriesdefaulterrorbarcustompositivedatascatterxOrBuilder() {
      return tschchartseriesdefaulterrorbarcustompositivedatascatterx_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustompositivedatascatterx_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARCUSTOMNEGATIVEDATA_FIELD_NUMBER = 192;
    private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata_;
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 192;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarcustomnegativedata() {
      return ((bitField1_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 192;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive getTschchartseriesdefaulterrorbarcustomnegativedata() {
      return tschchartseriesdefaulterrorbarcustomnegativedata_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustomnegativedata_;
    }
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 192;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder getTschchartseriesdefaulterrorbarcustomnegativedataOrBuilder() {
      return tschchartseriesdefaulterrorbarcustomnegativedata_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustomnegativedata_;
    }

    public static final int TSCHCHARTSERIESDEFAULTERRORBARCUSTOMNEGATIVEDATASCATTERX_FIELD_NUMBER = 193;
    private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx_;
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 193;</code>
     */
    public boolean hasTschchartseriesdefaulterrorbarcustomnegativedatascatterx() {
      return ((bitField1_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 193;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive getTschchartseriesdefaulterrorbarcustomnegativedatascatterx() {
      return tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustomnegativedatascatterx_;
    }
    /**
     * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 193;</code>
     */
    public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder getTschchartseriesdefaulterrorbarcustomnegativedatascatterxOrBuilder() {
      return tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustomnegativedatascatterx_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINEEQUATIONOFFSETX_FIELD_NUMBER = 194;
    private float tschchartseriesdefaulttrendlineequationoffsetx_;
    /**
     * <code>optional float tschchartseriesdefaulttrendlineequationoffsetx = 194;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlineequationoffsetx() {
      return ((bitField1_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional float tschchartseriesdefaulttrendlineequationoffsetx = 194;</code>
     */
    public float getTschchartseriesdefaulttrendlineequationoffsetx() {
      return tschchartseriesdefaulttrendlineequationoffsetx_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINEEQUATIONOFFSETY_FIELD_NUMBER = 195;
    private float tschchartseriesdefaulttrendlineequationoffsety_;
    /**
     * <code>optional float tschchartseriesdefaulttrendlineequationoffsety = 195;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlineequationoffsety() {
      return ((bitField1_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional float tschchartseriesdefaulttrendlineequationoffsety = 195;</code>
     */
    public float getTschchartseriesdefaulttrendlineequationoffsety() {
      return tschchartseriesdefaulttrendlineequationoffsety_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINERSQUAREDOFFSETX_FIELD_NUMBER = 196;
    private float tschchartseriesdefaulttrendlinersquaredoffsetx_;
    /**
     * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsetx = 196;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlinersquaredoffsetx() {
      return ((bitField1_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsetx = 196;</code>
     */
    public float getTschchartseriesdefaulttrendlinersquaredoffsetx() {
      return tschchartseriesdefaulttrendlinersquaredoffsetx_;
    }

    public static final int TSCHCHARTSERIESDEFAULTTRENDLINERSQUAREDOFFSETY_FIELD_NUMBER = 197;
    private float tschchartseriesdefaulttrendlinersquaredoffsety_;
    /**
     * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsety = 197;</code>
     */
    public boolean hasTschchartseriesdefaulttrendlinersquaredoffsety() {
      return ((bitField1_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsety = 197;</code>
     */
    public float getTschchartseriesdefaulttrendlinersquaredoffsety() {
      return tschchartseriesdefaulttrendlinersquaredoffsety_;
    }

    public static final int TSCHCHARTSERIESDEFAULTSHOWTRENDLINE_FIELD_NUMBER = 198;
    private boolean tschchartseriesdefaultshowtrendline_;
    /**
     * <code>optional bool tschchartseriesdefaultshowtrendline = 198;</code>
     */
    public boolean hasTschchartseriesdefaultshowtrendline() {
      return ((bitField1_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional bool tschchartseriesdefaultshowtrendline = 198;</code>
     */
    public boolean getTschchartseriesdefaultshowtrendline() {
      return tschchartseriesdefaultshowtrendline_;
    }

    public static final int TSCHCHARTSERIESDEFAULTSHOWERRORBAR_FIELD_NUMBER = 199;
    private boolean tschchartseriesdefaultshowerrorbar_;
    /**
     * <code>optional bool tschchartseriesdefaultshowerrorbar = 199;</code>
     */
    public boolean hasTschchartseriesdefaultshowerrorbar() {
      return ((bitField1_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional bool tschchartseriesdefaultshowerrorbar = 199;</code>
     */
    public boolean getTschchartseriesdefaultshowerrorbar() {
      return tschchartseriesdefaultshowerrorbar_;
    }

    public static final int TSCHCHARTSERIESDEFAULTSHOWERRORBARSCATTERX_FIELD_NUMBER = 200;
    private boolean tschchartseriesdefaultshowerrorbarscatterx_;
    /**
     * <code>optional bool tschchartseriesdefaultshowerrorbarscatterx = 200;</code>
     */
    public boolean hasTschchartseriesdefaultshowerrorbarscatterx() {
      return ((bitField1_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional bool tschchartseriesdefaultshowerrorbarscatterx = 200;</code>
     */
    public boolean getTschchartseriesdefaultshowerrorbarscatterx() {
      return tschchartseriesdefaultshowerrorbarscatterx_;
    }

    public static final int TSCHCHARTSERIESBUBBLESIZEDIMENSION_FIELD_NUMBER = 208;
    private int tschchartseriesbubblesizedimension_;
    /**
     * <code>optional int32 tschchartseriesbubblesizedimension = 208;</code>
     */
    public boolean hasTschchartseriesbubblesizedimension() {
      return ((bitField1_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int32 tschchartseriesbubblesizedimension = 208;</code>
     */
    public int getTschchartseriesbubblesizedimension() {
      return tschchartseriesbubblesizedimension_;
    }

    public static final int TSCHCHARTSERIESBUBBLESHOWVALUELABELS_FIELD_NUMBER = 209;
    private boolean tschchartseriesbubbleshowvaluelabels_;
    /**
     * <code>optional bool tschchartseriesbubbleshowvaluelabels = 209;</code>
     */
    public boolean hasTschchartseriesbubbleshowvaluelabels() {
      return ((bitField1_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional bool tschchartseriesbubbleshowvaluelabels = 209;</code>
     */
    public boolean getTschchartseriesbubbleshowvaluelabels() {
      return tschchartseriesbubbleshowvaluelabels_;
    }

    public static final int TSCHCHARTSERIESBUBBLELINETYPE_FIELD_NUMBER = 210;
    private int tschchartseriesbubblelinetype_;
    /**
     * <code>optional int32 tschchartseriesbubblelinetype = 210;</code>
     */
    public boolean hasTschchartseriesbubblelinetype() {
      return ((bitField1_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int32 tschchartseriesbubblelinetype = 210;</code>
     */
    public int getTschchartseriesbubblelinetype() {
      return tschchartseriesbubblelinetype_;
    }

    public static final int TSCHCHARTSERIESBUBBLESHOWNEGATIVEDATA_FIELD_NUMBER = 216;
    private boolean tschchartseriesbubbleshownegativedata_;
    /**
     * <code>optional bool tschchartseriesbubbleshownegativedata = 216;</code>
     */
    public boolean hasTschchartseriesbubbleshownegativedata() {
      return ((bitField1_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional bool tschchartseriesbubbleshownegativedata = 216;</code>
     */
    public boolean getTschchartseriesbubbleshownegativedata() {
      return tschchartseriesbubbleshownegativedata_;
    }

    public static final int TSCHCHARTSERIESBUBBLEADJUSTMENTSCALE_FIELD_NUMBER = 217;
    private float tschchartseriesbubbleadjustmentscale_;
    /**
     * <code>optional float tschchartseriesbubbleadjustmentscale = 217;</code>
     */
    public boolean hasTschchartseriesbubbleadjustmentscale() {
      return ((bitField2_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional float tschchartseriesbubbleadjustmentscale = 217;</code>
     */
    public float getTschchartseriesbubbleadjustmentscale() {
      return tschchartseriesbubbleadjustmentscale_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSuper()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSuper().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasTschchartseriesdefaultnumberformat()) {
        if (!getTschchartseriesdefaultnumberformat().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriespienumberformat()) {
        if (!getTschchartseriespienumberformat().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTschchartseriesstackedpercentnumberformat()) {
        if (!getTschchartseriesstackedpercentnumberformat().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getSuper());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(10, getTschchartseriesdefaultnumberformat());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(11, tschchartseriesdefaultnumberformattype_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(12, tschchartseriesbarshowvaluelabels_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(19, tschchartserieslinesymboltype_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(20, tschchartserieslineshowsymbol_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(21, tschchartserieslineshowvaluelabels_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(27, tschchartseriesareashowvaluelabels_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(30, tschchartserieslinelinetype_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(31, tschchartseriesareasymboltype_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(32, tschchartseriesareashowsymbol_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(37, tschchartseriespieshowvaluelabels_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBool(45, tschchartseriesscattershowvaluelabels_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeFloat(50, tschchartseriespiewedgeexplosion_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBool(51, tschchartseriesdefaultshowvaluelabels_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(52, getTschchartseriespienumberformat());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(53, tschchartseriespienumberformattype_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeFloat(54, tschchartseriespielabelexplosion_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeBool(58, tschchartseriesmixedlineshowsymbol_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeBool(59, tschchartseriesmixedareashowsymbol_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(60, tschchartseriesmixedlinesymboltype_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(61, tschchartseriesmixedareasymboltype_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeBool(62, tschchartseriesmixedshowvaluelabels_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(63, tschchartseriesmixedlinelinetype_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(65, tschchartseriesdefaultyaxisordinal_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeBool(66, tschchartseriespieshowserieslabels_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeBool(69, tschchartseriesscattershowsymbol_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(70, tschchartseriesscattersymboltype_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(71, tschchartseriesscatterlinetype_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeBool(72, tschchartseriesscattershowline_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeMessage(90, getTschchartseriesstackedpercentnumberformat());
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeInt32(126, tschchartseriesdefaultseriestype_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(160, tschchartseriesdefaulttrendlinetype_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(161, tschchartseriesdefaulttrendlineorder_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(162, tschchartseriesdefaulttrendlineperiod_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeBool(163, tschchartseriesdefaulttrendlineshowlabel_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 164, tschchartseriesdefaulttrendlinelabelstring_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeBool(165, tschchartseriesdefaulttrendlineshowequation_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeBool(166, tschchartseriesdefaulttrendlineshowr2Value_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(170, tschchartseriesdefaulterrorbarsetting_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(171, tschchartseriesdefaulterrorbarsettingscatterx_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(172, tschchartseriesdefaulterrorbartype_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(173, tschchartseriesdefaulterrorbartypescatterx_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(174, tschchartseriesdefaulterrorbarfixedvalue_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        output.writeFloat(175, tschchartseriesdefaulterrorbarfixedvaluescatterx_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        output.writeFloat(176, tschchartseriesdefaulterrorbarpercentvalue_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        output.writeFloat(177, tschchartseriesdefaulterrorbarpercentvaluescatterx_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        output.writeFloat(178, tschchartseriesdefaulterrorbarstddevvalue_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        output.writeFloat(179, tschchartseriesdefaulterrorbarstddevvaluescatterx_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(190, getTschchartseriesdefaulterrorbarcustompositivedata());
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        output.writeMessage(191, getTschchartseriesdefaulterrorbarcustompositivedatascatterx());
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        output.writeMessage(192, getTschchartseriesdefaulterrorbarcustomnegativedata());
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        output.writeMessage(193, getTschchartseriesdefaulterrorbarcustomnegativedatascatterx());
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        output.writeFloat(194, tschchartseriesdefaulttrendlineequationoffsetx_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        output.writeFloat(195, tschchartseriesdefaulttrendlineequationoffsety_);
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        output.writeFloat(196, tschchartseriesdefaulttrendlinersquaredoffsetx_);
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        output.writeFloat(197, tschchartseriesdefaulttrendlinersquaredoffsety_);
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        output.writeBool(198, tschchartseriesdefaultshowtrendline_);
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        output.writeBool(199, tschchartseriesdefaultshowerrorbar_);
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        output.writeBool(200, tschchartseriesdefaultshowerrorbarscatterx_);
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(208, tschchartseriesbubblesizedimension_);
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        output.writeBool(209, tschchartseriesbubbleshowvaluelabels_);
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        output.writeInt32(210, tschchartseriesbubblelinetype_);
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        output.writeBool(216, tschchartseriesbubbleshownegativedata_);
      }
      if (((bitField2_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(217, tschchartseriesbubbleadjustmentscale_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSuper());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getTschchartseriesdefaultnumberformat());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, tschchartseriesdefaultnumberformattype_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, tschchartseriesbarshowvaluelabels_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, tschchartserieslinesymboltype_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(20, tschchartserieslineshowsymbol_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(21, tschchartserieslineshowvaluelabels_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(27, tschchartseriesareashowvaluelabels_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(30, tschchartserieslinelinetype_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(31, tschchartseriesareasymboltype_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(32, tschchartseriesareashowsymbol_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(37, tschchartseriespieshowvaluelabels_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(45, tschchartseriesscattershowvaluelabels_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(50, tschchartseriespiewedgeexplosion_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(51, tschchartseriesdefaultshowvaluelabels_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(52, getTschchartseriespienumberformat());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(53, tschchartseriespienumberformattype_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(54, tschchartseriespielabelexplosion_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(58, tschchartseriesmixedlineshowsymbol_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(59, tschchartseriesmixedareashowsymbol_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(60, tschchartseriesmixedlinesymboltype_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(61, tschchartseriesmixedareasymboltype_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(62, tschchartseriesmixedshowvaluelabels_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(63, tschchartseriesmixedlinelinetype_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(65, tschchartseriesdefaultyaxisordinal_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(66, tschchartseriespieshowserieslabels_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(69, tschchartseriesscattershowsymbol_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(70, tschchartseriesscattersymboltype_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(71, tschchartseriesscatterlinetype_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(72, tschchartseriesscattershowline_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(90, getTschchartseriesstackedpercentnumberformat());
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(126, tschchartseriesdefaultseriestype_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(160, tschchartseriesdefaulttrendlinetype_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(161, tschchartseriesdefaulttrendlineorder_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(162, tschchartseriesdefaulttrendlineperiod_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(163, tschchartseriesdefaulttrendlineshowlabel_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(164, tschchartseriesdefaulttrendlinelabelstring_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(165, tschchartseriesdefaulttrendlineshowequation_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(166, tschchartseriesdefaulttrendlineshowr2Value_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(170, tschchartseriesdefaulterrorbarsetting_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(171, tschchartseriesdefaulterrorbarsettingscatterx_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(172, tschchartseriesdefaulterrorbartype_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(173, tschchartseriesdefaulterrorbartypescatterx_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(174, tschchartseriesdefaulterrorbarfixedvalue_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(175, tschchartseriesdefaulterrorbarfixedvaluescatterx_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(176, tschchartseriesdefaulterrorbarpercentvalue_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(177, tschchartseriesdefaulterrorbarpercentvaluescatterx_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(178, tschchartseriesdefaulterrorbarstddevvalue_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(179, tschchartseriesdefaulterrorbarstddevvaluescatterx_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(190, getTschchartseriesdefaulterrorbarcustompositivedata());
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(191, getTschchartseriesdefaulterrorbarcustompositivedatascatterx());
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(192, getTschchartseriesdefaulterrorbarcustomnegativedata());
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(193, getTschchartseriesdefaulterrorbarcustomnegativedatascatterx());
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(194, tschchartseriesdefaulttrendlineequationoffsetx_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(195, tschchartseriesdefaulttrendlineequationoffsety_);
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(196, tschchartseriesdefaulttrendlinersquaredoffsetx_);
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(197, tschchartseriesdefaulttrendlinersquaredoffsety_);
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(198, tschchartseriesdefaultshowtrendline_);
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(199, tschchartseriesdefaultshowerrorbar_);
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(200, tschchartseriesdefaultshowerrorbarscatterx_);
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(208, tschchartseriesbubblesizedimension_);
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(209, tschchartseriesbubbleshowvaluelabels_);
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(210, tschchartseriesbubblelinetype_);
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(216, tschchartseriesbubbleshownegativedata_);
      }
      if (((bitField2_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(217, tschchartseriesbubbleadjustmentscale_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive)) {
        return super.equals(obj);
      }
      org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive other = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive) obj;

      boolean result = true;
      result = result && (hasSuper() == other.hasSuper());
      if (hasSuper()) {
        result = result && getSuper()
            .equals(other.getSuper());
      }
      result = result && (hasTschchartseriesdefaultnumberformat() == other.hasTschchartseriesdefaultnumberformat());
      if (hasTschchartseriesdefaultnumberformat()) {
        result = result && getTschchartseriesdefaultnumberformat()
            .equals(other.getTschchartseriesdefaultnumberformat());
      }
      result = result && (hasTschchartseriesdefaultnumberformattype() == other.hasTschchartseriesdefaultnumberformattype());
      if (hasTschchartseriesdefaultnumberformattype()) {
        result = result && (getTschchartseriesdefaultnumberformattype()
            == other.getTschchartseriesdefaultnumberformattype());
      }
      result = result && (hasTschchartseriesbarshowvaluelabels() == other.hasTschchartseriesbarshowvaluelabels());
      if (hasTschchartseriesbarshowvaluelabels()) {
        result = result && (getTschchartseriesbarshowvaluelabels()
            == other.getTschchartseriesbarshowvaluelabels());
      }
      result = result && (hasTschchartserieslinesymboltype() == other.hasTschchartserieslinesymboltype());
      if (hasTschchartserieslinesymboltype()) {
        result = result && (getTschchartserieslinesymboltype()
            == other.getTschchartserieslinesymboltype());
      }
      result = result && (hasTschchartserieslineshowsymbol() == other.hasTschchartserieslineshowsymbol());
      if (hasTschchartserieslineshowsymbol()) {
        result = result && (getTschchartserieslineshowsymbol()
            == other.getTschchartserieslineshowsymbol());
      }
      result = result && (hasTschchartserieslineshowvaluelabels() == other.hasTschchartserieslineshowvaluelabels());
      if (hasTschchartserieslineshowvaluelabels()) {
        result = result && (getTschchartserieslineshowvaluelabels()
            == other.getTschchartserieslineshowvaluelabels());
      }
      result = result && (hasTschchartseriesareashowvaluelabels() == other.hasTschchartseriesareashowvaluelabels());
      if (hasTschchartseriesareashowvaluelabels()) {
        result = result && (getTschchartseriesareashowvaluelabels()
            == other.getTschchartseriesareashowvaluelabels());
      }
      result = result && (hasTschchartserieslinelinetype() == other.hasTschchartserieslinelinetype());
      if (hasTschchartserieslinelinetype()) {
        result = result && (getTschchartserieslinelinetype()
            == other.getTschchartserieslinelinetype());
      }
      result = result && (hasTschchartseriesareasymboltype() == other.hasTschchartseriesareasymboltype());
      if (hasTschchartseriesareasymboltype()) {
        result = result && (getTschchartseriesareasymboltype()
            == other.getTschchartseriesareasymboltype());
      }
      result = result && (hasTschchartseriesareashowsymbol() == other.hasTschchartseriesareashowsymbol());
      if (hasTschchartseriesareashowsymbol()) {
        result = result && (getTschchartseriesareashowsymbol()
            == other.getTschchartseriesareashowsymbol());
      }
      result = result && (hasTschchartseriespieshowvaluelabels() == other.hasTschchartseriespieshowvaluelabels());
      if (hasTschchartseriespieshowvaluelabels()) {
        result = result && (getTschchartseriespieshowvaluelabels()
            == other.getTschchartseriespieshowvaluelabels());
      }
      result = result && (hasTschchartseriesscattershowvaluelabels() == other.hasTschchartseriesscattershowvaluelabels());
      if (hasTschchartseriesscattershowvaluelabels()) {
        result = result && (getTschchartseriesscattershowvaluelabels()
            == other.getTschchartseriesscattershowvaluelabels());
      }
      result = result && (hasTschchartseriespiewedgeexplosion() == other.hasTschchartseriespiewedgeexplosion());
      if (hasTschchartseriespiewedgeexplosion()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriespiewedgeexplosion())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriespiewedgeexplosion()));
      }
      result = result && (hasTschchartseriesdefaultshowvaluelabels() == other.hasTschchartseriesdefaultshowvaluelabels());
      if (hasTschchartseriesdefaultshowvaluelabels()) {
        result = result && (getTschchartseriesdefaultshowvaluelabels()
            == other.getTschchartseriesdefaultshowvaluelabels());
      }
      result = result && (hasTschchartseriespienumberformat() == other.hasTschchartseriespienumberformat());
      if (hasTschchartseriespienumberformat()) {
        result = result && getTschchartseriespienumberformat()
            .equals(other.getTschchartseriespienumberformat());
      }
      result = result && (hasTschchartseriespienumberformattype() == other.hasTschchartseriespienumberformattype());
      if (hasTschchartseriespienumberformattype()) {
        result = result && (getTschchartseriespienumberformattype()
            == other.getTschchartseriespienumberformattype());
      }
      result = result && (hasTschchartseriespielabelexplosion() == other.hasTschchartseriespielabelexplosion());
      if (hasTschchartseriespielabelexplosion()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriespielabelexplosion())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriespielabelexplosion()));
      }
      result = result && (hasTschchartseriesmixedlineshowsymbol() == other.hasTschchartseriesmixedlineshowsymbol());
      if (hasTschchartseriesmixedlineshowsymbol()) {
        result = result && (getTschchartseriesmixedlineshowsymbol()
            == other.getTschchartseriesmixedlineshowsymbol());
      }
      result = result && (hasTschchartseriesmixedareashowsymbol() == other.hasTschchartseriesmixedareashowsymbol());
      if (hasTschchartseriesmixedareashowsymbol()) {
        result = result && (getTschchartseriesmixedareashowsymbol()
            == other.getTschchartseriesmixedareashowsymbol());
      }
      result = result && (hasTschchartseriesmixedlinesymboltype() == other.hasTschchartseriesmixedlinesymboltype());
      if (hasTschchartseriesmixedlinesymboltype()) {
        result = result && (getTschchartseriesmixedlinesymboltype()
            == other.getTschchartseriesmixedlinesymboltype());
      }
      result = result && (hasTschchartseriesmixedareasymboltype() == other.hasTschchartseriesmixedareasymboltype());
      if (hasTschchartseriesmixedareasymboltype()) {
        result = result && (getTschchartseriesmixedareasymboltype()
            == other.getTschchartseriesmixedareasymboltype());
      }
      result = result && (hasTschchartseriesmixedshowvaluelabels() == other.hasTschchartseriesmixedshowvaluelabels());
      if (hasTschchartseriesmixedshowvaluelabels()) {
        result = result && (getTschchartseriesmixedshowvaluelabels()
            == other.getTschchartseriesmixedshowvaluelabels());
      }
      result = result && (hasTschchartseriesmixedlinelinetype() == other.hasTschchartseriesmixedlinelinetype());
      if (hasTschchartseriesmixedlinelinetype()) {
        result = result && (getTschchartseriesmixedlinelinetype()
            == other.getTschchartseriesmixedlinelinetype());
      }
      result = result && (hasTschchartseriesdefaultyaxisordinal() == other.hasTschchartseriesdefaultyaxisordinal());
      if (hasTschchartseriesdefaultyaxisordinal()) {
        result = result && (getTschchartseriesdefaultyaxisordinal()
            == other.getTschchartseriesdefaultyaxisordinal());
      }
      result = result && (hasTschchartseriespieshowserieslabels() == other.hasTschchartseriespieshowserieslabels());
      if (hasTschchartseriespieshowserieslabels()) {
        result = result && (getTschchartseriespieshowserieslabels()
            == other.getTschchartseriespieshowserieslabels());
      }
      result = result && (hasTschchartseriesscattershowsymbol() == other.hasTschchartseriesscattershowsymbol());
      if (hasTschchartseriesscattershowsymbol()) {
        result = result && (getTschchartseriesscattershowsymbol()
            == other.getTschchartseriesscattershowsymbol());
      }
      result = result && (hasTschchartseriesscattersymboltype() == other.hasTschchartseriesscattersymboltype());
      if (hasTschchartseriesscattersymboltype()) {
        result = result && (getTschchartseriesscattersymboltype()
            == other.getTschchartseriesscattersymboltype());
      }
      result = result && (hasTschchartseriesscatterlinetype() == other.hasTschchartseriesscatterlinetype());
      if (hasTschchartseriesscatterlinetype()) {
        result = result && (getTschchartseriesscatterlinetype()
            == other.getTschchartseriesscatterlinetype());
      }
      result = result && (hasTschchartseriesscattershowline() == other.hasTschchartseriesscattershowline());
      if (hasTschchartseriesscattershowline()) {
        result = result && (getTschchartseriesscattershowline()
            == other.getTschchartseriesscattershowline());
      }
      result = result && (hasTschchartseriesstackedpercentnumberformat() == other.hasTschchartseriesstackedpercentnumberformat());
      if (hasTschchartseriesstackedpercentnumberformat()) {
        result = result && getTschchartseriesstackedpercentnumberformat()
            .equals(other.getTschchartseriesstackedpercentnumberformat());
      }
      result = result && (hasTschchartseriesdefaultseriestype() == other.hasTschchartseriesdefaultseriestype());
      if (hasTschchartseriesdefaultseriestype()) {
        result = result && (getTschchartseriesdefaultseriestype()
            == other.getTschchartseriesdefaultseriestype());
      }
      result = result && (hasTschchartseriesdefaulttrendlinetype() == other.hasTschchartseriesdefaulttrendlinetype());
      if (hasTschchartseriesdefaulttrendlinetype()) {
        result = result && (getTschchartseriesdefaulttrendlinetype()
            == other.getTschchartseriesdefaulttrendlinetype());
      }
      result = result && (hasTschchartseriesdefaulttrendlineorder() == other.hasTschchartseriesdefaulttrendlineorder());
      if (hasTschchartseriesdefaulttrendlineorder()) {
        result = result && (getTschchartseriesdefaulttrendlineorder()
            == other.getTschchartseriesdefaulttrendlineorder());
      }
      result = result && (hasTschchartseriesdefaulttrendlineperiod() == other.hasTschchartseriesdefaulttrendlineperiod());
      if (hasTschchartseriesdefaulttrendlineperiod()) {
        result = result && (getTschchartseriesdefaulttrendlineperiod()
            == other.getTschchartseriesdefaulttrendlineperiod());
      }
      result = result && (hasTschchartseriesdefaulttrendlineshowlabel() == other.hasTschchartseriesdefaulttrendlineshowlabel());
      if (hasTschchartseriesdefaulttrendlineshowlabel()) {
        result = result && (getTschchartseriesdefaulttrendlineshowlabel()
            == other.getTschchartseriesdefaulttrendlineshowlabel());
      }
      result = result && (hasTschchartseriesdefaulttrendlinelabelstring() == other.hasTschchartseriesdefaulttrendlinelabelstring());
      if (hasTschchartseriesdefaulttrendlinelabelstring()) {
        result = result && getTschchartseriesdefaulttrendlinelabelstring()
            .equals(other.getTschchartseriesdefaulttrendlinelabelstring());
      }
      result = result && (hasTschchartseriesdefaulttrendlineshowequation() == other.hasTschchartseriesdefaulttrendlineshowequation());
      if (hasTschchartseriesdefaulttrendlineshowequation()) {
        result = result && (getTschchartseriesdefaulttrendlineshowequation()
            == other.getTschchartseriesdefaulttrendlineshowequation());
      }
      result = result && (hasTschchartseriesdefaulttrendlineshowr2Value() == other.hasTschchartseriesdefaulttrendlineshowr2Value());
      if (hasTschchartseriesdefaulttrendlineshowr2Value()) {
        result = result && (getTschchartseriesdefaulttrendlineshowr2Value()
            == other.getTschchartseriesdefaulttrendlineshowr2Value());
      }
      result = result && (hasTschchartseriesdefaulterrorbarsetting() == other.hasTschchartseriesdefaulterrorbarsetting());
      if (hasTschchartseriesdefaulterrorbarsetting()) {
        result = result && (getTschchartseriesdefaulterrorbarsetting()
            == other.getTschchartseriesdefaulterrorbarsetting());
      }
      result = result && (hasTschchartseriesdefaulterrorbarsettingscatterx() == other.hasTschchartseriesdefaulterrorbarsettingscatterx());
      if (hasTschchartseriesdefaulterrorbarsettingscatterx()) {
        result = result && (getTschchartseriesdefaulterrorbarsettingscatterx()
            == other.getTschchartseriesdefaulterrorbarsettingscatterx());
      }
      result = result && (hasTschchartseriesdefaulterrorbartype() == other.hasTschchartseriesdefaulterrorbartype());
      if (hasTschchartseriesdefaulterrorbartype()) {
        result = result && (getTschchartseriesdefaulterrorbartype()
            == other.getTschchartseriesdefaulterrorbartype());
      }
      result = result && (hasTschchartseriesdefaulterrorbartypescatterx() == other.hasTschchartseriesdefaulterrorbartypescatterx());
      if (hasTschchartseriesdefaulterrorbartypescatterx()) {
        result = result && (getTschchartseriesdefaulterrorbartypescatterx()
            == other.getTschchartseriesdefaulterrorbartypescatterx());
      }
      result = result && (hasTschchartseriesdefaulterrorbarfixedvalue() == other.hasTschchartseriesdefaulterrorbarfixedvalue());
      if (hasTschchartseriesdefaulterrorbarfixedvalue()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaulterrorbarfixedvalue())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaulterrorbarfixedvalue()));
      }
      result = result && (hasTschchartseriesdefaulterrorbarfixedvaluescatterx() == other.hasTschchartseriesdefaulterrorbarfixedvaluescatterx());
      if (hasTschchartseriesdefaulterrorbarfixedvaluescatterx()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaulterrorbarfixedvaluescatterx())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaulterrorbarfixedvaluescatterx()));
      }
      result = result && (hasTschchartseriesdefaulterrorbarpercentvalue() == other.hasTschchartseriesdefaulterrorbarpercentvalue());
      if (hasTschchartseriesdefaulterrorbarpercentvalue()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaulterrorbarpercentvalue())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaulterrorbarpercentvalue()));
      }
      result = result && (hasTschchartseriesdefaulterrorbarpercentvaluescatterx() == other.hasTschchartseriesdefaulterrorbarpercentvaluescatterx());
      if (hasTschchartseriesdefaulterrorbarpercentvaluescatterx()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaulterrorbarpercentvaluescatterx())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaulterrorbarpercentvaluescatterx()));
      }
      result = result && (hasTschchartseriesdefaulterrorbarstddevvalue() == other.hasTschchartseriesdefaulterrorbarstddevvalue());
      if (hasTschchartseriesdefaulterrorbarstddevvalue()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaulterrorbarstddevvalue())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaulterrorbarstddevvalue()));
      }
      result = result && (hasTschchartseriesdefaulterrorbarstddevvaluescatterx() == other.hasTschchartseriesdefaulterrorbarstddevvaluescatterx());
      if (hasTschchartseriesdefaulterrorbarstddevvaluescatterx()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaulterrorbarstddevvaluescatterx())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaulterrorbarstddevvaluescatterx()));
      }
      result = result && (hasTschchartseriesdefaulterrorbarcustompositivedata() == other.hasTschchartseriesdefaulterrorbarcustompositivedata());
      if (hasTschchartseriesdefaulterrorbarcustompositivedata()) {
        result = result && getTschchartseriesdefaulterrorbarcustompositivedata()
            .equals(other.getTschchartseriesdefaulterrorbarcustompositivedata());
      }
      result = result && (hasTschchartseriesdefaulterrorbarcustompositivedatascatterx() == other.hasTschchartseriesdefaulterrorbarcustompositivedatascatterx());
      if (hasTschchartseriesdefaulterrorbarcustompositivedatascatterx()) {
        result = result && getTschchartseriesdefaulterrorbarcustompositivedatascatterx()
            .equals(other.getTschchartseriesdefaulterrorbarcustompositivedatascatterx());
      }
      result = result && (hasTschchartseriesdefaulterrorbarcustomnegativedata() == other.hasTschchartseriesdefaulterrorbarcustomnegativedata());
      if (hasTschchartseriesdefaulterrorbarcustomnegativedata()) {
        result = result && getTschchartseriesdefaulterrorbarcustomnegativedata()
            .equals(other.getTschchartseriesdefaulterrorbarcustomnegativedata());
      }
      result = result && (hasTschchartseriesdefaulterrorbarcustomnegativedatascatterx() == other.hasTschchartseriesdefaulterrorbarcustomnegativedatascatterx());
      if (hasTschchartseriesdefaulterrorbarcustomnegativedatascatterx()) {
        result = result && getTschchartseriesdefaulterrorbarcustomnegativedatascatterx()
            .equals(other.getTschchartseriesdefaulterrorbarcustomnegativedatascatterx());
      }
      result = result && (hasTschchartseriesdefaulttrendlineequationoffsetx() == other.hasTschchartseriesdefaulttrendlineequationoffsetx());
      if (hasTschchartseriesdefaulttrendlineequationoffsetx()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaulttrendlineequationoffsetx())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaulttrendlineequationoffsetx()));
      }
      result = result && (hasTschchartseriesdefaulttrendlineequationoffsety() == other.hasTschchartseriesdefaulttrendlineequationoffsety());
      if (hasTschchartseriesdefaulttrendlineequationoffsety()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaulttrendlineequationoffsety())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaulttrendlineequationoffsety()));
      }
      result = result && (hasTschchartseriesdefaulttrendlinersquaredoffsetx() == other.hasTschchartseriesdefaulttrendlinersquaredoffsetx());
      if (hasTschchartseriesdefaulttrendlinersquaredoffsetx()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaulttrendlinersquaredoffsetx())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaulttrendlinersquaredoffsetx()));
      }
      result = result && (hasTschchartseriesdefaulttrendlinersquaredoffsety() == other.hasTschchartseriesdefaulttrendlinersquaredoffsety());
      if (hasTschchartseriesdefaulttrendlinersquaredoffsety()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesdefaulttrendlinersquaredoffsety())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesdefaulttrendlinersquaredoffsety()));
      }
      result = result && (hasTschchartseriesdefaultshowtrendline() == other.hasTschchartseriesdefaultshowtrendline());
      if (hasTschchartseriesdefaultshowtrendline()) {
        result = result && (getTschchartseriesdefaultshowtrendline()
            == other.getTschchartseriesdefaultshowtrendline());
      }
      result = result && (hasTschchartseriesdefaultshowerrorbar() == other.hasTschchartseriesdefaultshowerrorbar());
      if (hasTschchartseriesdefaultshowerrorbar()) {
        result = result && (getTschchartseriesdefaultshowerrorbar()
            == other.getTschchartseriesdefaultshowerrorbar());
      }
      result = result && (hasTschchartseriesdefaultshowerrorbarscatterx() == other.hasTschchartseriesdefaultshowerrorbarscatterx());
      if (hasTschchartseriesdefaultshowerrorbarscatterx()) {
        result = result && (getTschchartseriesdefaultshowerrorbarscatterx()
            == other.getTschchartseriesdefaultshowerrorbarscatterx());
      }
      result = result && (hasTschchartseriesbubblesizedimension() == other.hasTschchartseriesbubblesizedimension());
      if (hasTschchartseriesbubblesizedimension()) {
        result = result && (getTschchartseriesbubblesizedimension()
            == other.getTschchartseriesbubblesizedimension());
      }
      result = result && (hasTschchartseriesbubbleshowvaluelabels() == other.hasTschchartseriesbubbleshowvaluelabels());
      if (hasTschchartseriesbubbleshowvaluelabels()) {
        result = result && (getTschchartseriesbubbleshowvaluelabels()
            == other.getTschchartseriesbubbleshowvaluelabels());
      }
      result = result && (hasTschchartseriesbubblelinetype() == other.hasTschchartseriesbubblelinetype());
      if (hasTschchartseriesbubblelinetype()) {
        result = result && (getTschchartseriesbubblelinetype()
            == other.getTschchartseriesbubblelinetype());
      }
      result = result && (hasTschchartseriesbubbleshownegativedata() == other.hasTschchartseriesbubbleshownegativedata());
      if (hasTschchartseriesbubbleshownegativedata()) {
        result = result && (getTschchartseriesbubbleshownegativedata()
            == other.getTschchartseriesbubbleshownegativedata());
      }
      result = result && (hasTschchartseriesbubbleadjustmentscale() == other.hasTschchartseriesbubbleadjustmentscale());
      if (hasTschchartseriesbubbleadjustmentscale()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTschchartseriesbubbleadjustmentscale())
            == java.lang.Float.floatToIntBits(
                other.getTschchartseriesbubbleadjustmentscale()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSuper()) {
        hash = (37 * hash) + SUPER_FIELD_NUMBER;
        hash = (53 * hash) + getSuper().hashCode();
      }
      if (hasTschchartseriesdefaultnumberformat()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTNUMBERFORMAT_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaultnumberformat().hashCode();
      }
      if (hasTschchartseriesdefaultnumberformattype()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTNUMBERFORMATTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaultnumberformattype();
      }
      if (hasTschchartseriesbarshowvaluelabels()) {
        hash = (37 * hash) + TSCHCHARTSERIESBARSHOWVALUELABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesbarshowvaluelabels());
      }
      if (hasTschchartserieslinesymboltype()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINESYMBOLTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartserieslinesymboltype();
      }
      if (hasTschchartserieslineshowsymbol()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINESHOWSYMBOL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartserieslineshowsymbol());
      }
      if (hasTschchartserieslineshowvaluelabels()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINESHOWVALUELABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartserieslineshowvaluelabels());
      }
      if (hasTschchartseriesareashowvaluelabels()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREASHOWVALUELABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesareashowvaluelabels());
      }
      if (hasTschchartserieslinelinetype()) {
        hash = (37 * hash) + TSCHCHARTSERIESLINELINETYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartserieslinelinetype();
      }
      if (hasTschchartseriesareasymboltype()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREASYMBOLTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesareasymboltype();
      }
      if (hasTschchartseriesareashowsymbol()) {
        hash = (37 * hash) + TSCHCHARTSERIESAREASHOWSYMBOL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesareashowsymbol());
      }
      if (hasTschchartseriespieshowvaluelabels()) {
        hash = (37 * hash) + TSCHCHARTSERIESPIESHOWVALUELABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriespieshowvaluelabels());
      }
      if (hasTschchartseriesscattershowvaluelabels()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERSHOWVALUELABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesscattershowvaluelabels());
      }
      if (hasTschchartseriespiewedgeexplosion()) {
        hash = (37 * hash) + TSCHCHARTSERIESPIEWEDGEEXPLOSION_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriespiewedgeexplosion());
      }
      if (hasTschchartseriesdefaultshowvaluelabels()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTSHOWVALUELABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesdefaultshowvaluelabels());
      }
      if (hasTschchartseriespienumberformat()) {
        hash = (37 * hash) + TSCHCHARTSERIESPIENUMBERFORMAT_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriespienumberformat().hashCode();
      }
      if (hasTschchartseriespienumberformattype()) {
        hash = (37 * hash) + TSCHCHARTSERIESPIENUMBERFORMATTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriespienumberformattype();
      }
      if (hasTschchartseriespielabelexplosion()) {
        hash = (37 * hash) + TSCHCHARTSERIESPIELABELEXPLOSION_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriespielabelexplosion());
      }
      if (hasTschchartseriesmixedlineshowsymbol()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDLINESHOWSYMBOL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesmixedlineshowsymbol());
      }
      if (hasTschchartseriesmixedareashowsymbol()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDAREASHOWSYMBOL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesmixedareashowsymbol());
      }
      if (hasTschchartseriesmixedlinesymboltype()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDLINESYMBOLTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedlinesymboltype();
      }
      if (hasTschchartseriesmixedareasymboltype()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDAREASYMBOLTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedareasymboltype();
      }
      if (hasTschchartseriesmixedshowvaluelabels()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDSHOWVALUELABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesmixedshowvaluelabels());
      }
      if (hasTschchartseriesmixedlinelinetype()) {
        hash = (37 * hash) + TSCHCHARTSERIESMIXEDLINELINETYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesmixedlinelinetype();
      }
      if (hasTschchartseriesdefaultyaxisordinal()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTYAXISORDINAL_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaultyaxisordinal();
      }
      if (hasTschchartseriespieshowserieslabels()) {
        hash = (37 * hash) + TSCHCHARTSERIESPIESHOWSERIESLABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriespieshowserieslabels());
      }
      if (hasTschchartseriesscattershowsymbol()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERSHOWSYMBOL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesscattershowsymbol());
      }
      if (hasTschchartseriesscattersymboltype()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERSYMBOLTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesscattersymboltype();
      }
      if (hasTschchartseriesscatterlinetype()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERLINETYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesscatterlinetype();
      }
      if (hasTschchartseriesscattershowline()) {
        hash = (37 * hash) + TSCHCHARTSERIESSCATTERSHOWLINE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesscattershowline());
      }
      if (hasTschchartseriesstackedpercentnumberformat()) {
        hash = (37 * hash) + TSCHCHARTSERIESSTACKEDPERCENTNUMBERFORMAT_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesstackedpercentnumberformat().hashCode();
      }
      if (hasTschchartseriesdefaultseriestype()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTSERIESTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaultseriestype();
      }
      if (hasTschchartseriesdefaulttrendlinetype()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINETYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulttrendlinetype();
      }
      if (hasTschchartseriesdefaulttrendlineorder()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINEORDER_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulttrendlineorder();
      }
      if (hasTschchartseriesdefaulttrendlineperiod()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINEPERIOD_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulttrendlineperiod();
      }
      if (hasTschchartseriesdefaulttrendlineshowlabel()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINESHOWLABEL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesdefaulttrendlineshowlabel());
      }
      if (hasTschchartseriesdefaulttrendlinelabelstring()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINELABELSTRING_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulttrendlinelabelstring().hashCode();
      }
      if (hasTschchartseriesdefaulttrendlineshowequation()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINESHOWEQUATION_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesdefaulttrendlineshowequation());
      }
      if (hasTschchartseriesdefaulttrendlineshowr2Value()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINESHOWR2VALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesdefaulttrendlineshowr2Value());
      }
      if (hasTschchartseriesdefaulterrorbarsetting()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARSETTING_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbarsetting();
      }
      if (hasTschchartseriesdefaulterrorbarsettingscatterx()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARSETTINGSCATTERX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbarsettingscatterx();
      }
      if (hasTschchartseriesdefaulterrorbartype()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbartype();
      }
      if (hasTschchartseriesdefaulterrorbartypescatterx()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARTYPESCATTERX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbartypescatterx();
      }
      if (hasTschchartseriesdefaulterrorbarfixedvalue()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARFIXEDVALUE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaulterrorbarfixedvalue());
      }
      if (hasTschchartseriesdefaulterrorbarfixedvaluescatterx()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARFIXEDVALUESCATTERX_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaulterrorbarfixedvaluescatterx());
      }
      if (hasTschchartseriesdefaulterrorbarpercentvalue()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARPERCENTVALUE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaulterrorbarpercentvalue());
      }
      if (hasTschchartseriesdefaulterrorbarpercentvaluescatterx()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARPERCENTVALUESCATTERX_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaulterrorbarpercentvaluescatterx());
      }
      if (hasTschchartseriesdefaulterrorbarstddevvalue()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARSTDDEVVALUE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaulterrorbarstddevvalue());
      }
      if (hasTschchartseriesdefaulterrorbarstddevvaluescatterx()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARSTDDEVVALUESCATTERX_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaulterrorbarstddevvaluescatterx());
      }
      if (hasTschchartseriesdefaulterrorbarcustompositivedata()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARCUSTOMPOSITIVEDATA_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbarcustompositivedata().hashCode();
      }
      if (hasTschchartseriesdefaulterrorbarcustompositivedatascatterx()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARCUSTOMPOSITIVEDATASCATTERX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbarcustompositivedatascatterx().hashCode();
      }
      if (hasTschchartseriesdefaulterrorbarcustomnegativedata()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARCUSTOMNEGATIVEDATA_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbarcustomnegativedata().hashCode();
      }
      if (hasTschchartseriesdefaulterrorbarcustomnegativedatascatterx()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTERRORBARCUSTOMNEGATIVEDATASCATTERX_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesdefaulterrorbarcustomnegativedatascatterx().hashCode();
      }
      if (hasTschchartseriesdefaulttrendlineequationoffsetx()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINEEQUATIONOFFSETX_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaulttrendlineequationoffsetx());
      }
      if (hasTschchartseriesdefaulttrendlineequationoffsety()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINEEQUATIONOFFSETY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaulttrendlineequationoffsety());
      }
      if (hasTschchartseriesdefaulttrendlinersquaredoffsetx()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINERSQUAREDOFFSETX_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaulttrendlinersquaredoffsetx());
      }
      if (hasTschchartseriesdefaulttrendlinersquaredoffsety()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTTRENDLINERSQUAREDOFFSETY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesdefaulttrendlinersquaredoffsety());
      }
      if (hasTschchartseriesdefaultshowtrendline()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTSHOWTRENDLINE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesdefaultshowtrendline());
      }
      if (hasTschchartseriesdefaultshowerrorbar()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTSHOWERRORBAR_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesdefaultshowerrorbar());
      }
      if (hasTschchartseriesdefaultshowerrorbarscatterx()) {
        hash = (37 * hash) + TSCHCHARTSERIESDEFAULTSHOWERRORBARSCATTERX_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesdefaultshowerrorbarscatterx());
      }
      if (hasTschchartseriesbubblesizedimension()) {
        hash = (37 * hash) + TSCHCHARTSERIESBUBBLESIZEDIMENSION_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbubblesizedimension();
      }
      if (hasTschchartseriesbubbleshowvaluelabels()) {
        hash = (37 * hash) + TSCHCHARTSERIESBUBBLESHOWVALUELABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesbubbleshowvaluelabels());
      }
      if (hasTschchartseriesbubblelinetype()) {
        hash = (37 * hash) + TSCHCHARTSERIESBUBBLELINETYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTschchartseriesbubblelinetype();
      }
      if (hasTschchartseriesbubbleshownegativedata()) {
        hash = (37 * hash) + TSCHCHARTSERIESBUBBLESHOWNEGATIVEDATA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTschchartseriesbubbleshownegativedata());
      }
      if (hasTschchartseriesbubbleadjustmentscale()) {
        hash = (37 * hash) + TSCHCHARTSERIESBUBBLEADJUSTMENTSCALE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTschchartseriesbubbleadjustmentscale());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TSCH.PreUFF.ChartSeriesNonStyleArchive}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TSCH.PreUFF.ChartSeriesNonStyleArchive)
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchiveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartSeriesNonStyleArchive_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartSeriesNonStyleArchive_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive.class, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive.Builder.class);
      }

      // Construct using TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSuperFieldBuilder();
          getTschchartseriesdefaultnumberformatFieldBuilder();
          getTschchartseriespienumberformatFieldBuilder();
          getTschchartseriesstackedpercentnumberformatFieldBuilder();
          getTschchartseriesdefaulterrorbarcustompositivedataFieldBuilder();
          getTschchartseriesdefaulterrorbarcustompositivedatascatterxFieldBuilder();
          getTschchartseriesdefaulterrorbarcustomnegativedataFieldBuilder();
          getTschchartseriesdefaulterrorbarcustomnegativedatascatterxFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (superBuilder_ == null) {
          super_ = null;
        } else {
          superBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (tschchartseriesdefaultnumberformatBuilder_ == null) {
          tschchartseriesdefaultnumberformat_ = null;
        } else {
          tschchartseriesdefaultnumberformatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        tschchartseriesdefaultnumberformattype_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        tschchartseriesbarshowvaluelabels_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        tschchartserieslinesymboltype_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        tschchartserieslineshowsymbol_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        tschchartserieslineshowvaluelabels_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        tschchartseriesareashowvaluelabels_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        tschchartserieslinelinetype_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        tschchartseriesareasymboltype_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        tschchartseriesareashowsymbol_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        tschchartseriespieshowvaluelabels_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        tschchartseriesscattershowvaluelabels_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        tschchartseriespiewedgeexplosion_ = 0F;
        bitField0_ = (bitField0_ & ~0x00002000);
        tschchartseriesdefaultshowvaluelabels_ = false;
        bitField0_ = (bitField0_ & ~0x00004000);
        if (tschchartseriespienumberformatBuilder_ == null) {
          tschchartseriespienumberformat_ = null;
        } else {
          tschchartseriespienumberformatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        tschchartseriespienumberformattype_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        tschchartseriespielabelexplosion_ = 0F;
        bitField0_ = (bitField0_ & ~0x00020000);
        tschchartseriesmixedlineshowsymbol_ = false;
        bitField0_ = (bitField0_ & ~0x00040000);
        tschchartseriesmixedareashowsymbol_ = false;
        bitField0_ = (bitField0_ & ~0x00080000);
        tschchartseriesmixedlinesymboltype_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        tschchartseriesmixedareasymboltype_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        tschchartseriesmixedshowvaluelabels_ = false;
        bitField0_ = (bitField0_ & ~0x00400000);
        tschchartseriesmixedlinelinetype_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        tschchartseriesdefaultyaxisordinal_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        tschchartseriespieshowserieslabels_ = false;
        bitField0_ = (bitField0_ & ~0x02000000);
        tschchartseriesscattershowsymbol_ = false;
        bitField0_ = (bitField0_ & ~0x04000000);
        tschchartseriesscattersymboltype_ = 0;
        bitField0_ = (bitField0_ & ~0x08000000);
        tschchartseriesscatterlinetype_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        tschchartseriesscattershowline_ = false;
        bitField0_ = (bitField0_ & ~0x20000000);
        if (tschchartseriesstackedpercentnumberformatBuilder_ == null) {
          tschchartseriesstackedpercentnumberformat_ = null;
        } else {
          tschchartseriesstackedpercentnumberformatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x40000000);
        tschchartseriesdefaultseriestype_ = 0;
        bitField0_ = (bitField0_ & ~0x80000000);
        tschchartseriesdefaulttrendlinetype_ = 0;
        bitField1_ = (bitField1_ & ~0x00000001);
        tschchartseriesdefaulttrendlineorder_ = 0;
        bitField1_ = (bitField1_ & ~0x00000002);
        tschchartseriesdefaulttrendlineperiod_ = 0;
        bitField1_ = (bitField1_ & ~0x00000004);
        tschchartseriesdefaulttrendlineshowlabel_ = false;
        bitField1_ = (bitField1_ & ~0x00000008);
        tschchartseriesdefaulttrendlinelabelstring_ = "";
        bitField1_ = (bitField1_ & ~0x00000010);
        tschchartseriesdefaulttrendlineshowequation_ = false;
        bitField1_ = (bitField1_ & ~0x00000020);
        tschchartseriesdefaulttrendlineshowr2Value_ = false;
        bitField1_ = (bitField1_ & ~0x00000040);
        tschchartseriesdefaulterrorbarsetting_ = 0;
        bitField1_ = (bitField1_ & ~0x00000080);
        tschchartseriesdefaulterrorbarsettingscatterx_ = 0;
        bitField1_ = (bitField1_ & ~0x00000100);
        tschchartseriesdefaulterrorbartype_ = 0;
        bitField1_ = (bitField1_ & ~0x00000200);
        tschchartseriesdefaulterrorbartypescatterx_ = 0;
        bitField1_ = (bitField1_ & ~0x00000400);
        tschchartseriesdefaulterrorbarfixedvalue_ = 0F;
        bitField1_ = (bitField1_ & ~0x00000800);
        tschchartseriesdefaulterrorbarfixedvaluescatterx_ = 0F;
        bitField1_ = (bitField1_ & ~0x00001000);
        tschchartseriesdefaulterrorbarpercentvalue_ = 0F;
        bitField1_ = (bitField1_ & ~0x00002000);
        tschchartseriesdefaulterrorbarpercentvaluescatterx_ = 0F;
        bitField1_ = (bitField1_ & ~0x00004000);
        tschchartseriesdefaulterrorbarstddevvalue_ = 0F;
        bitField1_ = (bitField1_ & ~0x00008000);
        tschchartseriesdefaulterrorbarstddevvaluescatterx_ = 0F;
        bitField1_ = (bitField1_ & ~0x00010000);
        if (tschchartseriesdefaulterrorbarcustompositivedataBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustompositivedata_ = null;
        } else {
          tschchartseriesdefaulterrorbarcustompositivedataBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00020000);
        if (tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustompositivedatascatterx_ = null;
        } else {
          tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00040000);
        if (tschchartseriesdefaulterrorbarcustomnegativedataBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustomnegativedata_ = null;
        } else {
          tschchartseriesdefaulterrorbarcustomnegativedataBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00080000);
        if (tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ = null;
        } else {
          tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00100000);
        tschchartseriesdefaulttrendlineequationoffsetx_ = 0F;
        bitField1_ = (bitField1_ & ~0x00200000);
        tschchartseriesdefaulttrendlineequationoffsety_ = 0F;
        bitField1_ = (bitField1_ & ~0x00400000);
        tschchartseriesdefaulttrendlinersquaredoffsetx_ = 0F;
        bitField1_ = (bitField1_ & ~0x00800000);
        tschchartseriesdefaulttrendlinersquaredoffsety_ = 0F;
        bitField1_ = (bitField1_ & ~0x01000000);
        tschchartseriesdefaultshowtrendline_ = false;
        bitField1_ = (bitField1_ & ~0x02000000);
        tschchartseriesdefaultshowerrorbar_ = false;
        bitField1_ = (bitField1_ & ~0x04000000);
        tschchartseriesdefaultshowerrorbarscatterx_ = false;
        bitField1_ = (bitField1_ & ~0x08000000);
        tschchartseriesbubblesizedimension_ = 0;
        bitField1_ = (bitField1_ & ~0x10000000);
        tschchartseriesbubbleshowvaluelabels_ = false;
        bitField1_ = (bitField1_ & ~0x20000000);
        tschchartseriesbubblelinetype_ = 0;
        bitField1_ = (bitField1_ & ~0x40000000);
        tschchartseriesbubbleshownegativedata_ = false;
        bitField1_ = (bitField1_ & ~0x80000000);
        tschchartseriesbubbleadjustmentscale_ = 0F;
        bitField2_ = (bitField2_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.internal_static_TSCH_PreUFF_ChartSeriesNonStyleArchive_descriptor;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive getDefaultInstanceForType() {
        return org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive.getDefaultInstance();
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive build() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive buildPartial() {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive result = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int from_bitField2_ = bitField2_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        int to_bitField2_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (superBuilder_ == null) {
          result.super_ = super_;
        } else {
          result.super_ = superBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (tschchartseriesdefaultnumberformatBuilder_ == null) {
          result.tschchartseriesdefaultnumberformat_ = tschchartseriesdefaultnumberformat_;
        } else {
          result.tschchartseriesdefaultnumberformat_ = tschchartseriesdefaultnumberformatBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tschchartseriesdefaultnumberformattype_ = tschchartseriesdefaultnumberformattype_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.tschchartseriesbarshowvaluelabels_ = tschchartseriesbarshowvaluelabels_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.tschchartserieslinesymboltype_ = tschchartserieslinesymboltype_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.tschchartserieslineshowsymbol_ = tschchartserieslineshowsymbol_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.tschchartserieslineshowvaluelabels_ = tschchartserieslineshowvaluelabels_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.tschchartseriesareashowvaluelabels_ = tschchartseriesareashowvaluelabels_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.tschchartserieslinelinetype_ = tschchartserieslinelinetype_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.tschchartseriesareasymboltype_ = tschchartseriesareasymboltype_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.tschchartseriesareashowsymbol_ = tschchartseriesareashowsymbol_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.tschchartseriespieshowvaluelabels_ = tschchartseriespieshowvaluelabels_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.tschchartseriesscattershowvaluelabels_ = tschchartseriesscattershowvaluelabels_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.tschchartseriespiewedgeexplosion_ = tschchartseriespiewedgeexplosion_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.tschchartseriesdefaultshowvaluelabels_ = tschchartseriesdefaultshowvaluelabels_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        if (tschchartseriespienumberformatBuilder_ == null) {
          result.tschchartseriespienumberformat_ = tschchartseriespienumberformat_;
        } else {
          result.tschchartseriespienumberformat_ = tschchartseriespienumberformatBuilder_.build();
        }
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.tschchartseriespienumberformattype_ = tschchartseriespienumberformattype_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.tschchartseriespielabelexplosion_ = tschchartseriespielabelexplosion_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.tschchartseriesmixedlineshowsymbol_ = tschchartseriesmixedlineshowsymbol_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.tschchartseriesmixedareashowsymbol_ = tschchartseriesmixedareashowsymbol_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.tschchartseriesmixedlinesymboltype_ = tschchartseriesmixedlinesymboltype_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.tschchartseriesmixedareasymboltype_ = tschchartseriesmixedareasymboltype_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.tschchartseriesmixedshowvaluelabels_ = tschchartseriesmixedshowvaluelabels_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.tschchartseriesmixedlinelinetype_ = tschchartseriesmixedlinelinetype_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.tschchartseriesdefaultyaxisordinal_ = tschchartseriesdefaultyaxisordinal_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.tschchartseriespieshowserieslabels_ = tschchartseriespieshowserieslabels_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.tschchartseriesscattershowsymbol_ = tschchartseriesscattershowsymbol_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.tschchartseriesscattersymboltype_ = tschchartseriesscattersymboltype_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.tschchartseriesscatterlinetype_ = tschchartseriesscatterlinetype_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.tschchartseriesscattershowline_ = tschchartseriesscattershowline_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        if (tschchartseriesstackedpercentnumberformatBuilder_ == null) {
          result.tschchartseriesstackedpercentnumberformat_ = tschchartseriesstackedpercentnumberformat_;
        } else {
          result.tschchartseriesstackedpercentnumberformat_ = tschchartseriesstackedpercentnumberformatBuilder_.build();
        }
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        result.tschchartseriesdefaultseriestype_ = tschchartseriesdefaultseriestype_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        result.tschchartseriesdefaulttrendlinetype_ = tschchartseriesdefaulttrendlinetype_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000002;
        }
        result.tschchartseriesdefaulttrendlineorder_ = tschchartseriesdefaulttrendlineorder_;
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000004;
        }
        result.tschchartseriesdefaulttrendlineperiod_ = tschchartseriesdefaulttrendlineperiod_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000008;
        }
        result.tschchartseriesdefaulttrendlineshowlabel_ = tschchartseriesdefaulttrendlineshowlabel_;
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000010;
        }
        result.tschchartseriesdefaulttrendlinelabelstring_ = tschchartseriesdefaulttrendlinelabelstring_;
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000020;
        }
        result.tschchartseriesdefaulttrendlineshowequation_ = tschchartseriesdefaulttrendlineshowequation_;
        if (((from_bitField1_ & 0x00000040) == 0x00000040)) {
          to_bitField1_ |= 0x00000040;
        }
        result.tschchartseriesdefaulttrendlineshowr2Value_ = tschchartseriesdefaulttrendlineshowr2Value_;
        if (((from_bitField1_ & 0x00000080) == 0x00000080)) {
          to_bitField1_ |= 0x00000080;
        }
        result.tschchartseriesdefaulterrorbarsetting_ = tschchartseriesdefaulterrorbarsetting_;
        if (((from_bitField1_ & 0x00000100) == 0x00000100)) {
          to_bitField1_ |= 0x00000100;
        }
        result.tschchartseriesdefaulterrorbarsettingscatterx_ = tschchartseriesdefaulterrorbarsettingscatterx_;
        if (((from_bitField1_ & 0x00000200) == 0x00000200)) {
          to_bitField1_ |= 0x00000200;
        }
        result.tschchartseriesdefaulterrorbartype_ = tschchartseriesdefaulterrorbartype_;
        if (((from_bitField1_ & 0x00000400) == 0x00000400)) {
          to_bitField1_ |= 0x00000400;
        }
        result.tschchartseriesdefaulterrorbartypescatterx_ = tschchartseriesdefaulterrorbartypescatterx_;
        if (((from_bitField1_ & 0x00000800) == 0x00000800)) {
          to_bitField1_ |= 0x00000800;
        }
        result.tschchartseriesdefaulterrorbarfixedvalue_ = tschchartseriesdefaulterrorbarfixedvalue_;
        if (((from_bitField1_ & 0x00001000) == 0x00001000)) {
          to_bitField1_ |= 0x00001000;
        }
        result.tschchartseriesdefaulterrorbarfixedvaluescatterx_ = tschchartseriesdefaulterrorbarfixedvaluescatterx_;
        if (((from_bitField1_ & 0x00002000) == 0x00002000)) {
          to_bitField1_ |= 0x00002000;
        }
        result.tschchartseriesdefaulterrorbarpercentvalue_ = tschchartseriesdefaulterrorbarpercentvalue_;
        if (((from_bitField1_ & 0x00004000) == 0x00004000)) {
          to_bitField1_ |= 0x00004000;
        }
        result.tschchartseriesdefaulterrorbarpercentvaluescatterx_ = tschchartseriesdefaulterrorbarpercentvaluescatterx_;
        if (((from_bitField1_ & 0x00008000) == 0x00008000)) {
          to_bitField1_ |= 0x00008000;
        }
        result.tschchartseriesdefaulterrorbarstddevvalue_ = tschchartseriesdefaulterrorbarstddevvalue_;
        if (((from_bitField1_ & 0x00010000) == 0x00010000)) {
          to_bitField1_ |= 0x00010000;
        }
        result.tschchartseriesdefaulterrorbarstddevvaluescatterx_ = tschchartseriesdefaulterrorbarstddevvaluescatterx_;
        if (((from_bitField1_ & 0x00020000) == 0x00020000)) {
          to_bitField1_ |= 0x00020000;
        }
        if (tschchartseriesdefaulterrorbarcustompositivedataBuilder_ == null) {
          result.tschchartseriesdefaulterrorbarcustompositivedata_ = tschchartseriesdefaulterrorbarcustompositivedata_;
        } else {
          result.tschchartseriesdefaulterrorbarcustompositivedata_ = tschchartseriesdefaulterrorbarcustompositivedataBuilder_.build();
        }
        if (((from_bitField1_ & 0x00040000) == 0x00040000)) {
          to_bitField1_ |= 0x00040000;
        }
        if (tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_ == null) {
          result.tschchartseriesdefaulterrorbarcustompositivedatascatterx_ = tschchartseriesdefaulterrorbarcustompositivedatascatterx_;
        } else {
          result.tschchartseriesdefaulterrorbarcustompositivedatascatterx_ = tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_.build();
        }
        if (((from_bitField1_ & 0x00080000) == 0x00080000)) {
          to_bitField1_ |= 0x00080000;
        }
        if (tschchartseriesdefaulterrorbarcustomnegativedataBuilder_ == null) {
          result.tschchartseriesdefaulterrorbarcustomnegativedata_ = tschchartseriesdefaulterrorbarcustomnegativedata_;
        } else {
          result.tschchartseriesdefaulterrorbarcustomnegativedata_ = tschchartseriesdefaulterrorbarcustomnegativedataBuilder_.build();
        }
        if (((from_bitField1_ & 0x00100000) == 0x00100000)) {
          to_bitField1_ |= 0x00100000;
        }
        if (tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_ == null) {
          result.tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ = tschchartseriesdefaulterrorbarcustomnegativedatascatterx_;
        } else {
          result.tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ = tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_.build();
        }
        if (((from_bitField1_ & 0x00200000) == 0x00200000)) {
          to_bitField1_ |= 0x00200000;
        }
        result.tschchartseriesdefaulttrendlineequationoffsetx_ = tschchartseriesdefaulttrendlineequationoffsetx_;
        if (((from_bitField1_ & 0x00400000) == 0x00400000)) {
          to_bitField1_ |= 0x00400000;
        }
        result.tschchartseriesdefaulttrendlineequationoffsety_ = tschchartseriesdefaulttrendlineequationoffsety_;
        if (((from_bitField1_ & 0x00800000) == 0x00800000)) {
          to_bitField1_ |= 0x00800000;
        }
        result.tschchartseriesdefaulttrendlinersquaredoffsetx_ = tschchartseriesdefaulttrendlinersquaredoffsetx_;
        if (((from_bitField1_ & 0x01000000) == 0x01000000)) {
          to_bitField1_ |= 0x01000000;
        }
        result.tschchartseriesdefaulttrendlinersquaredoffsety_ = tschchartseriesdefaulttrendlinersquaredoffsety_;
        if (((from_bitField1_ & 0x02000000) == 0x02000000)) {
          to_bitField1_ |= 0x02000000;
        }
        result.tschchartseriesdefaultshowtrendline_ = tschchartseriesdefaultshowtrendline_;
        if (((from_bitField1_ & 0x04000000) == 0x04000000)) {
          to_bitField1_ |= 0x04000000;
        }
        result.tschchartseriesdefaultshowerrorbar_ = tschchartseriesdefaultshowerrorbar_;
        if (((from_bitField1_ & 0x08000000) == 0x08000000)) {
          to_bitField1_ |= 0x08000000;
        }
        result.tschchartseriesdefaultshowerrorbarscatterx_ = tschchartseriesdefaultshowerrorbarscatterx_;
        if (((from_bitField1_ & 0x10000000) == 0x10000000)) {
          to_bitField1_ |= 0x10000000;
        }
        result.tschchartseriesbubblesizedimension_ = tschchartseriesbubblesizedimension_;
        if (((from_bitField1_ & 0x20000000) == 0x20000000)) {
          to_bitField1_ |= 0x20000000;
        }
        result.tschchartseriesbubbleshowvaluelabels_ = tschchartseriesbubbleshowvaluelabels_;
        if (((from_bitField1_ & 0x40000000) == 0x40000000)) {
          to_bitField1_ |= 0x40000000;
        }
        result.tschchartseriesbubblelinetype_ = tschchartseriesbubblelinetype_;
        if (((from_bitField1_ & 0x80000000) == 0x80000000)) {
          to_bitField1_ |= 0x80000000;
        }
        result.tschchartseriesbubbleshownegativedata_ = tschchartseriesbubbleshownegativedata_;
        if (((from_bitField2_ & 0x00000001) == 0x00000001)) {
          to_bitField2_ |= 0x00000001;
        }
        result.tschchartseriesbubbleadjustmentscale_ = tschchartseriesbubbleadjustmentscale_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        result.bitField2_ = to_bitField2_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive) {
          return mergeFrom((org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive other) {
        if (other == org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive.getDefaultInstance()) return this;
        if (other.hasSuper()) {
          mergeSuper(other.getSuper());
        }
        if (other.hasTschchartseriesdefaultnumberformat()) {
          mergeTschchartseriesdefaultnumberformat(other.getTschchartseriesdefaultnumberformat());
        }
        if (other.hasTschchartseriesdefaultnumberformattype()) {
          setTschchartseriesdefaultnumberformattype(other.getTschchartseriesdefaultnumberformattype());
        }
        if (other.hasTschchartseriesbarshowvaluelabels()) {
          setTschchartseriesbarshowvaluelabels(other.getTschchartseriesbarshowvaluelabels());
        }
        if (other.hasTschchartserieslinesymboltype()) {
          setTschchartserieslinesymboltype(other.getTschchartserieslinesymboltype());
        }
        if (other.hasTschchartserieslineshowsymbol()) {
          setTschchartserieslineshowsymbol(other.getTschchartserieslineshowsymbol());
        }
        if (other.hasTschchartserieslineshowvaluelabels()) {
          setTschchartserieslineshowvaluelabels(other.getTschchartserieslineshowvaluelabels());
        }
        if (other.hasTschchartseriesareashowvaluelabels()) {
          setTschchartseriesareashowvaluelabels(other.getTschchartseriesareashowvaluelabels());
        }
        if (other.hasTschchartserieslinelinetype()) {
          setTschchartserieslinelinetype(other.getTschchartserieslinelinetype());
        }
        if (other.hasTschchartseriesareasymboltype()) {
          setTschchartseriesareasymboltype(other.getTschchartseriesareasymboltype());
        }
        if (other.hasTschchartseriesareashowsymbol()) {
          setTschchartseriesareashowsymbol(other.getTschchartseriesareashowsymbol());
        }
        if (other.hasTschchartseriespieshowvaluelabels()) {
          setTschchartseriespieshowvaluelabels(other.getTschchartseriespieshowvaluelabels());
        }
        if (other.hasTschchartseriesscattershowvaluelabels()) {
          setTschchartseriesscattershowvaluelabels(other.getTschchartseriesscattershowvaluelabels());
        }
        if (other.hasTschchartseriespiewedgeexplosion()) {
          setTschchartseriespiewedgeexplosion(other.getTschchartseriespiewedgeexplosion());
        }
        if (other.hasTschchartseriesdefaultshowvaluelabels()) {
          setTschchartseriesdefaultshowvaluelabels(other.getTschchartseriesdefaultshowvaluelabels());
        }
        if (other.hasTschchartseriespienumberformat()) {
          mergeTschchartseriespienumberformat(other.getTschchartseriespienumberformat());
        }
        if (other.hasTschchartseriespienumberformattype()) {
          setTschchartseriespienumberformattype(other.getTschchartseriespienumberformattype());
        }
        if (other.hasTschchartseriespielabelexplosion()) {
          setTschchartseriespielabelexplosion(other.getTschchartseriespielabelexplosion());
        }
        if (other.hasTschchartseriesmixedlineshowsymbol()) {
          setTschchartseriesmixedlineshowsymbol(other.getTschchartseriesmixedlineshowsymbol());
        }
        if (other.hasTschchartseriesmixedareashowsymbol()) {
          setTschchartseriesmixedareashowsymbol(other.getTschchartseriesmixedareashowsymbol());
        }
        if (other.hasTschchartseriesmixedlinesymboltype()) {
          setTschchartseriesmixedlinesymboltype(other.getTschchartseriesmixedlinesymboltype());
        }
        if (other.hasTschchartseriesmixedareasymboltype()) {
          setTschchartseriesmixedareasymboltype(other.getTschchartseriesmixedareasymboltype());
        }
        if (other.hasTschchartseriesmixedshowvaluelabels()) {
          setTschchartseriesmixedshowvaluelabels(other.getTschchartseriesmixedshowvaluelabels());
        }
        if (other.hasTschchartseriesmixedlinelinetype()) {
          setTschchartseriesmixedlinelinetype(other.getTschchartseriesmixedlinelinetype());
        }
        if (other.hasTschchartseriesdefaultyaxisordinal()) {
          setTschchartseriesdefaultyaxisordinal(other.getTschchartseriesdefaultyaxisordinal());
        }
        if (other.hasTschchartseriespieshowserieslabels()) {
          setTschchartseriespieshowserieslabels(other.getTschchartseriespieshowserieslabels());
        }
        if (other.hasTschchartseriesscattershowsymbol()) {
          setTschchartseriesscattershowsymbol(other.getTschchartseriesscattershowsymbol());
        }
        if (other.hasTschchartseriesscattersymboltype()) {
          setTschchartseriesscattersymboltype(other.getTschchartseriesscattersymboltype());
        }
        if (other.hasTschchartseriesscatterlinetype()) {
          setTschchartseriesscatterlinetype(other.getTschchartseriesscatterlinetype());
        }
        if (other.hasTschchartseriesscattershowline()) {
          setTschchartseriesscattershowline(other.getTschchartseriesscattershowline());
        }
        if (other.hasTschchartseriesstackedpercentnumberformat()) {
          mergeTschchartseriesstackedpercentnumberformat(other.getTschchartseriesstackedpercentnumberformat());
        }
        if (other.hasTschchartseriesdefaultseriestype()) {
          setTschchartseriesdefaultseriestype(other.getTschchartseriesdefaultseriestype());
        }
        if (other.hasTschchartseriesdefaulttrendlinetype()) {
          setTschchartseriesdefaulttrendlinetype(other.getTschchartseriesdefaulttrendlinetype());
        }
        if (other.hasTschchartseriesdefaulttrendlineorder()) {
          setTschchartseriesdefaulttrendlineorder(other.getTschchartseriesdefaulttrendlineorder());
        }
        if (other.hasTschchartseriesdefaulttrendlineperiod()) {
          setTschchartseriesdefaulttrendlineperiod(other.getTschchartseriesdefaulttrendlineperiod());
        }
        if (other.hasTschchartseriesdefaulttrendlineshowlabel()) {
          setTschchartseriesdefaulttrendlineshowlabel(other.getTschchartseriesdefaulttrendlineshowlabel());
        }
        if (other.hasTschchartseriesdefaulttrendlinelabelstring()) {
          bitField1_ |= 0x00000010;
          tschchartseriesdefaulttrendlinelabelstring_ = other.tschchartseriesdefaulttrendlinelabelstring_;
          onChanged();
        }
        if (other.hasTschchartseriesdefaulttrendlineshowequation()) {
          setTschchartseriesdefaulttrendlineshowequation(other.getTschchartseriesdefaulttrendlineshowequation());
        }
        if (other.hasTschchartseriesdefaulttrendlineshowr2Value()) {
          setTschchartseriesdefaulttrendlineshowr2Value(other.getTschchartseriesdefaulttrendlineshowr2Value());
        }
        if (other.hasTschchartseriesdefaulterrorbarsetting()) {
          setTschchartseriesdefaulterrorbarsetting(other.getTschchartseriesdefaulterrorbarsetting());
        }
        if (other.hasTschchartseriesdefaulterrorbarsettingscatterx()) {
          setTschchartseriesdefaulterrorbarsettingscatterx(other.getTschchartseriesdefaulterrorbarsettingscatterx());
        }
        if (other.hasTschchartseriesdefaulterrorbartype()) {
          setTschchartseriesdefaulterrorbartype(other.getTschchartseriesdefaulterrorbartype());
        }
        if (other.hasTschchartseriesdefaulterrorbartypescatterx()) {
          setTschchartseriesdefaulterrorbartypescatterx(other.getTschchartseriesdefaulterrorbartypescatterx());
        }
        if (other.hasTschchartseriesdefaulterrorbarfixedvalue()) {
          setTschchartseriesdefaulterrorbarfixedvalue(other.getTschchartseriesdefaulterrorbarfixedvalue());
        }
        if (other.hasTschchartseriesdefaulterrorbarfixedvaluescatterx()) {
          setTschchartseriesdefaulterrorbarfixedvaluescatterx(other.getTschchartseriesdefaulterrorbarfixedvaluescatterx());
        }
        if (other.hasTschchartseriesdefaulterrorbarpercentvalue()) {
          setTschchartseriesdefaulterrorbarpercentvalue(other.getTschchartseriesdefaulterrorbarpercentvalue());
        }
        if (other.hasTschchartseriesdefaulterrorbarpercentvaluescatterx()) {
          setTschchartseriesdefaulterrorbarpercentvaluescatterx(other.getTschchartseriesdefaulterrorbarpercentvaluescatterx());
        }
        if (other.hasTschchartseriesdefaulterrorbarstddevvalue()) {
          setTschchartseriesdefaulterrorbarstddevvalue(other.getTschchartseriesdefaulterrorbarstddevvalue());
        }
        if (other.hasTschchartseriesdefaulterrorbarstddevvaluescatterx()) {
          setTschchartseriesdefaulterrorbarstddevvaluescatterx(other.getTschchartseriesdefaulterrorbarstddevvaluescatterx());
        }
        if (other.hasTschchartseriesdefaulterrorbarcustompositivedata()) {
          mergeTschchartseriesdefaulterrorbarcustompositivedata(other.getTschchartseriesdefaulterrorbarcustompositivedata());
        }
        if (other.hasTschchartseriesdefaulterrorbarcustompositivedatascatterx()) {
          mergeTschchartseriesdefaulterrorbarcustompositivedatascatterx(other.getTschchartseriesdefaulterrorbarcustompositivedatascatterx());
        }
        if (other.hasTschchartseriesdefaulterrorbarcustomnegativedata()) {
          mergeTschchartseriesdefaulterrorbarcustomnegativedata(other.getTschchartseriesdefaulterrorbarcustomnegativedata());
        }
        if (other.hasTschchartseriesdefaulterrorbarcustomnegativedatascatterx()) {
          mergeTschchartseriesdefaulterrorbarcustomnegativedatascatterx(other.getTschchartseriesdefaulterrorbarcustomnegativedatascatterx());
        }
        if (other.hasTschchartseriesdefaulttrendlineequationoffsetx()) {
          setTschchartseriesdefaulttrendlineequationoffsetx(other.getTschchartseriesdefaulttrendlineequationoffsetx());
        }
        if (other.hasTschchartseriesdefaulttrendlineequationoffsety()) {
          setTschchartseriesdefaulttrendlineequationoffsety(other.getTschchartseriesdefaulttrendlineequationoffsety());
        }
        if (other.hasTschchartseriesdefaulttrendlinersquaredoffsetx()) {
          setTschchartseriesdefaulttrendlinersquaredoffsetx(other.getTschchartseriesdefaulttrendlinersquaredoffsetx());
        }
        if (other.hasTschchartseriesdefaulttrendlinersquaredoffsety()) {
          setTschchartseriesdefaulttrendlinersquaredoffsety(other.getTschchartseriesdefaulttrendlinersquaredoffsety());
        }
        if (other.hasTschchartseriesdefaultshowtrendline()) {
          setTschchartseriesdefaultshowtrendline(other.getTschchartseriesdefaultshowtrendline());
        }
        if (other.hasTschchartseriesdefaultshowerrorbar()) {
          setTschchartseriesdefaultshowerrorbar(other.getTschchartseriesdefaultshowerrorbar());
        }
        if (other.hasTschchartseriesdefaultshowerrorbarscatterx()) {
          setTschchartseriesdefaultshowerrorbarscatterx(other.getTschchartseriesdefaultshowerrorbarscatterx());
        }
        if (other.hasTschchartseriesbubblesizedimension()) {
          setTschchartseriesbubblesizedimension(other.getTschchartseriesbubblesizedimension());
        }
        if (other.hasTschchartseriesbubbleshowvaluelabels()) {
          setTschchartseriesbubbleshowvaluelabels(other.getTschchartseriesbubbleshowvaluelabels());
        }
        if (other.hasTschchartseriesbubblelinetype()) {
          setTschchartseriesbubblelinetype(other.getTschchartseriesbubblelinetype());
        }
        if (other.hasTschchartseriesbubbleshownegativedata()) {
          setTschchartseriesbubbleshownegativedata(other.getTschchartseriesbubbleshownegativedata());
        }
        if (other.hasTschchartseriesbubbleadjustmentscale()) {
          setTschchartseriesbubbleadjustmentscale(other.getTschchartseriesbubbleadjustmentscale());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSuper()) {
          return false;
        }
        if (!getSuper().isInitialized()) {
          return false;
        }
        if (hasTschchartseriesdefaultnumberformat()) {
          if (!getTschchartseriesdefaultnumberformat().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriespienumberformat()) {
          if (!getTschchartseriespienumberformat().isInitialized()) {
            return false;
          }
        }
        if (hasTschchartseriesstackedpercentnumberformat()) {
          if (!getTschchartseriesstackedpercentnumberformat().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;
      private int bitField2_;

      private org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive super_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder> superBuilder_;
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public boolean hasSuper() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive getSuper() {
        if (superBuilder_ == null) {
          return super_ == null ? org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
        } else {
          return superBuilder_.getMessage();
        }
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder setSuper(org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive value) {
        if (superBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          super_ = value;
          onChanged();
        } else {
          superBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder setSuper(
          org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder builderForValue) {
        if (superBuilder_ == null) {
          super_ = builderForValue.build();
          onChanged();
        } else {
          superBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder mergeSuper(org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive value) {
        if (superBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              super_ != null &&
              super_ != org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance()) {
            super_ =
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.newBuilder(super_).mergeFrom(value).buildPartial();
          } else {
            super_ = value;
          }
          onChanged();
        } else {
          superBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public Builder clearSuper() {
        if (superBuilder_ == null) {
          super_ = null;
          onChanged();
        } else {
          superBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder getSuperBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSuperFieldBuilder().getBuilder();
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      public org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder getSuperOrBuilder() {
        if (superBuilder_ != null) {
          return superBuilder_.getMessageOrBuilder();
        } else {
          return super_ == null ?
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.getDefaultInstance() : super_;
        }
      }
      /**
       * <code>required .TSS.StyleArchive super = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder> 
          getSuperFieldBuilder() {
        if (superBuilder_ == null) {
          superBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchive.Builder, org.techforumist.keynote.proto.TSS.TSSArchives.StyleArchiveOrBuilder>(
                  getSuper(),
                  getParentForChildren(),
                  isClean());
          super_ = null;
        }
        return superBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive tschchartseriesdefaultnumberformat_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchiveOrBuilder> tschchartseriesdefaultnumberformatBuilder_;
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesdefaultnumberformat = 10;</code>
       */
      public boolean hasTschchartseriesdefaultnumberformat() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesdefaultnumberformat = 10;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive getTschchartseriesdefaultnumberformat() {
        if (tschchartseriesdefaultnumberformatBuilder_ == null) {
          return tschchartseriesdefaultnumberformat_ == null ? org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.getDefaultInstance() : tschchartseriesdefaultnumberformat_;
        } else {
          return tschchartseriesdefaultnumberformatBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesdefaultnumberformat = 10;</code>
       */
      public Builder setTschchartseriesdefaultnumberformat(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive value) {
        if (tschchartseriesdefaultnumberformatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaultnumberformat_ = value;
          onChanged();
        } else {
          tschchartseriesdefaultnumberformatBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesdefaultnumberformat = 10;</code>
       */
      public Builder setTschchartseriesdefaultnumberformat(
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder builderForValue) {
        if (tschchartseriesdefaultnumberformatBuilder_ == null) {
          tschchartseriesdefaultnumberformat_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaultnumberformatBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesdefaultnumberformat = 10;</code>
       */
      public Builder mergeTschchartseriesdefaultnumberformat(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive value) {
        if (tschchartseriesdefaultnumberformatBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              tschchartseriesdefaultnumberformat_ != null &&
              tschchartseriesdefaultnumberformat_ != org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.getDefaultInstance()) {
            tschchartseriesdefaultnumberformat_ =
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.newBuilder(tschchartseriesdefaultnumberformat_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaultnumberformat_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaultnumberformatBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesdefaultnumberformat = 10;</code>
       */
      public Builder clearTschchartseriesdefaultnumberformat() {
        if (tschchartseriesdefaultnumberformatBuilder_ == null) {
          tschchartseriesdefaultnumberformat_ = null;
          onChanged();
        } else {
          tschchartseriesdefaultnumberformatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesdefaultnumberformat = 10;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder getTschchartseriesdefaultnumberformatBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTschchartseriesdefaultnumberformatFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesdefaultnumberformat = 10;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchiveOrBuilder getTschchartseriesdefaultnumberformatOrBuilder() {
        if (tschchartseriesdefaultnumberformatBuilder_ != null) {
          return tschchartseriesdefaultnumberformatBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaultnumberformat_ == null ?
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.getDefaultInstance() : tschchartseriesdefaultnumberformat_;
        }
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesdefaultnumberformat = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchiveOrBuilder> 
          getTschchartseriesdefaultnumberformatFieldBuilder() {
        if (tschchartseriesdefaultnumberformatBuilder_ == null) {
          tschchartseriesdefaultnumberformatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchiveOrBuilder>(
                  getTschchartseriesdefaultnumberformat(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaultnumberformat_ = null;
        }
        return tschchartseriesdefaultnumberformatBuilder_;
      }

      private int tschchartseriesdefaultnumberformattype_ ;
      /**
       * <code>optional int32 tschchartseriesdefaultnumberformattype = 11;</code>
       */
      public boolean hasTschchartseriesdefaultnumberformattype() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 tschchartseriesdefaultnumberformattype = 11;</code>
       */
      public int getTschchartseriesdefaultnumberformattype() {
        return tschchartseriesdefaultnumberformattype_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaultnumberformattype = 11;</code>
       */
      public Builder setTschchartseriesdefaultnumberformattype(int value) {
        bitField0_ |= 0x00000004;
        tschchartseriesdefaultnumberformattype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaultnumberformattype = 11;</code>
       */
      public Builder clearTschchartseriesdefaultnumberformattype() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tschchartseriesdefaultnumberformattype_ = 0;
        onChanged();
        return this;
      }

      private boolean tschchartseriesbarshowvaluelabels_ ;
      /**
       * <code>optional bool tschchartseriesbarshowvaluelabels = 12;</code>
       */
      public boolean hasTschchartseriesbarshowvaluelabels() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool tschchartseriesbarshowvaluelabels = 12;</code>
       */
      public boolean getTschchartseriesbarshowvaluelabels() {
        return tschchartseriesbarshowvaluelabels_;
      }
      /**
       * <code>optional bool tschchartseriesbarshowvaluelabels = 12;</code>
       */
      public Builder setTschchartseriesbarshowvaluelabels(boolean value) {
        bitField0_ |= 0x00000008;
        tschchartseriesbarshowvaluelabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesbarshowvaluelabels = 12;</code>
       */
      public Builder clearTschchartseriesbarshowvaluelabels() {
        bitField0_ = (bitField0_ & ~0x00000008);
        tschchartseriesbarshowvaluelabels_ = false;
        onChanged();
        return this;
      }

      private int tschchartserieslinesymboltype_ ;
      /**
       * <code>optional int32 tschchartserieslinesymboltype = 19;</code>
       */
      public boolean hasTschchartserieslinesymboltype() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 tschchartserieslinesymboltype = 19;</code>
       */
      public int getTschchartserieslinesymboltype() {
        return tschchartserieslinesymboltype_;
      }
      /**
       * <code>optional int32 tschchartserieslinesymboltype = 19;</code>
       */
      public Builder setTschchartserieslinesymboltype(int value) {
        bitField0_ |= 0x00000010;
        tschchartserieslinesymboltype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartserieslinesymboltype = 19;</code>
       */
      public Builder clearTschchartserieslinesymboltype() {
        bitField0_ = (bitField0_ & ~0x00000010);
        tschchartserieslinesymboltype_ = 0;
        onChanged();
        return this;
      }

      private boolean tschchartserieslineshowsymbol_ ;
      /**
       * <code>optional bool tschchartserieslineshowsymbol = 20;</code>
       */
      public boolean hasTschchartserieslineshowsymbol() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool tschchartserieslineshowsymbol = 20;</code>
       */
      public boolean getTschchartserieslineshowsymbol() {
        return tschchartserieslineshowsymbol_;
      }
      /**
       * <code>optional bool tschchartserieslineshowsymbol = 20;</code>
       */
      public Builder setTschchartserieslineshowsymbol(boolean value) {
        bitField0_ |= 0x00000020;
        tschchartserieslineshowsymbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartserieslineshowsymbol = 20;</code>
       */
      public Builder clearTschchartserieslineshowsymbol() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tschchartserieslineshowsymbol_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartserieslineshowvaluelabels_ ;
      /**
       * <code>optional bool tschchartserieslineshowvaluelabels = 21;</code>
       */
      public boolean hasTschchartserieslineshowvaluelabels() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool tschchartserieslineshowvaluelabels = 21;</code>
       */
      public boolean getTschchartserieslineshowvaluelabels() {
        return tschchartserieslineshowvaluelabels_;
      }
      /**
       * <code>optional bool tschchartserieslineshowvaluelabels = 21;</code>
       */
      public Builder setTschchartserieslineshowvaluelabels(boolean value) {
        bitField0_ |= 0x00000040;
        tschchartserieslineshowvaluelabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartserieslineshowvaluelabels = 21;</code>
       */
      public Builder clearTschchartserieslineshowvaluelabels() {
        bitField0_ = (bitField0_ & ~0x00000040);
        tschchartserieslineshowvaluelabels_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesareashowvaluelabels_ ;
      /**
       * <code>optional bool tschchartseriesareashowvaluelabels = 27;</code>
       */
      public boolean hasTschchartseriesareashowvaluelabels() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool tschchartseriesareashowvaluelabels = 27;</code>
       */
      public boolean getTschchartseriesareashowvaluelabels() {
        return tschchartseriesareashowvaluelabels_;
      }
      /**
       * <code>optional bool tschchartseriesareashowvaluelabels = 27;</code>
       */
      public Builder setTschchartseriesareashowvaluelabels(boolean value) {
        bitField0_ |= 0x00000080;
        tschchartseriesareashowvaluelabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesareashowvaluelabels = 27;</code>
       */
      public Builder clearTschchartseriesareashowvaluelabels() {
        bitField0_ = (bitField0_ & ~0x00000080);
        tschchartseriesareashowvaluelabels_ = false;
        onChanged();
        return this;
      }

      private int tschchartserieslinelinetype_ ;
      /**
       * <code>optional int32 tschchartserieslinelinetype = 30;</code>
       */
      public boolean hasTschchartserieslinelinetype() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 tschchartserieslinelinetype = 30;</code>
       */
      public int getTschchartserieslinelinetype() {
        return tschchartserieslinelinetype_;
      }
      /**
       * <code>optional int32 tschchartserieslinelinetype = 30;</code>
       */
      public Builder setTschchartserieslinelinetype(int value) {
        bitField0_ |= 0x00000100;
        tschchartserieslinelinetype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartserieslinelinetype = 30;</code>
       */
      public Builder clearTschchartserieslinelinetype() {
        bitField0_ = (bitField0_ & ~0x00000100);
        tschchartserieslinelinetype_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesareasymboltype_ ;
      /**
       * <code>optional int32 tschchartseriesareasymboltype = 31;</code>
       */
      public boolean hasTschchartseriesareasymboltype() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 tschchartseriesareasymboltype = 31;</code>
       */
      public int getTschchartseriesareasymboltype() {
        return tschchartseriesareasymboltype_;
      }
      /**
       * <code>optional int32 tschchartseriesareasymboltype = 31;</code>
       */
      public Builder setTschchartseriesareasymboltype(int value) {
        bitField0_ |= 0x00000200;
        tschchartseriesareasymboltype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesareasymboltype = 31;</code>
       */
      public Builder clearTschchartseriesareasymboltype() {
        bitField0_ = (bitField0_ & ~0x00000200);
        tschchartseriesareasymboltype_ = 0;
        onChanged();
        return this;
      }

      private boolean tschchartseriesareashowsymbol_ ;
      /**
       * <code>optional bool tschchartseriesareashowsymbol = 32;</code>
       */
      public boolean hasTschchartseriesareashowsymbol() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool tschchartseriesareashowsymbol = 32;</code>
       */
      public boolean getTschchartseriesareashowsymbol() {
        return tschchartseriesareashowsymbol_;
      }
      /**
       * <code>optional bool tschchartseriesareashowsymbol = 32;</code>
       */
      public Builder setTschchartseriesareashowsymbol(boolean value) {
        bitField0_ |= 0x00000400;
        tschchartseriesareashowsymbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesareashowsymbol = 32;</code>
       */
      public Builder clearTschchartseriesareashowsymbol() {
        bitField0_ = (bitField0_ & ~0x00000400);
        tschchartseriesareashowsymbol_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriespieshowvaluelabels_ ;
      /**
       * <code>optional bool tschchartseriespieshowvaluelabels = 37;</code>
       */
      public boolean hasTschchartseriespieshowvaluelabels() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool tschchartseriespieshowvaluelabels = 37;</code>
       */
      public boolean getTschchartseriespieshowvaluelabels() {
        return tschchartseriespieshowvaluelabels_;
      }
      /**
       * <code>optional bool tschchartseriespieshowvaluelabels = 37;</code>
       */
      public Builder setTschchartseriespieshowvaluelabels(boolean value) {
        bitField0_ |= 0x00000800;
        tschchartseriespieshowvaluelabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriespieshowvaluelabels = 37;</code>
       */
      public Builder clearTschchartseriespieshowvaluelabels() {
        bitField0_ = (bitField0_ & ~0x00000800);
        tschchartseriespieshowvaluelabels_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesscattershowvaluelabels_ ;
      /**
       * <code>optional bool tschchartseriesscattershowvaluelabels = 45;</code>
       */
      public boolean hasTschchartseriesscattershowvaluelabels() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bool tschchartseriesscattershowvaluelabels = 45;</code>
       */
      public boolean getTschchartseriesscattershowvaluelabels() {
        return tschchartseriesscattershowvaluelabels_;
      }
      /**
       * <code>optional bool tschchartseriesscattershowvaluelabels = 45;</code>
       */
      public Builder setTschchartseriesscattershowvaluelabels(boolean value) {
        bitField0_ |= 0x00001000;
        tschchartseriesscattershowvaluelabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesscattershowvaluelabels = 45;</code>
       */
      public Builder clearTschchartseriesscattershowvaluelabels() {
        bitField0_ = (bitField0_ & ~0x00001000);
        tschchartseriesscattershowvaluelabels_ = false;
        onChanged();
        return this;
      }

      private float tschchartseriespiewedgeexplosion_ ;
      /**
       * <code>optional float tschchartseriespiewedgeexplosion = 50;</code>
       */
      public boolean hasTschchartseriespiewedgeexplosion() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional float tschchartseriespiewedgeexplosion = 50;</code>
       */
      public float getTschchartseriespiewedgeexplosion() {
        return tschchartseriespiewedgeexplosion_;
      }
      /**
       * <code>optional float tschchartseriespiewedgeexplosion = 50;</code>
       */
      public Builder setTschchartseriespiewedgeexplosion(float value) {
        bitField0_ |= 0x00002000;
        tschchartseriespiewedgeexplosion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriespiewedgeexplosion = 50;</code>
       */
      public Builder clearTschchartseriespiewedgeexplosion() {
        bitField0_ = (bitField0_ & ~0x00002000);
        tschchartseriespiewedgeexplosion_ = 0F;
        onChanged();
        return this;
      }

      private boolean tschchartseriesdefaultshowvaluelabels_ ;
      /**
       * <code>optional bool tschchartseriesdefaultshowvaluelabels = 51;</code>
       */
      public boolean hasTschchartseriesdefaultshowvaluelabels() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional bool tschchartseriesdefaultshowvaluelabels = 51;</code>
       */
      public boolean getTschchartseriesdefaultshowvaluelabels() {
        return tschchartseriesdefaultshowvaluelabels_;
      }
      /**
       * <code>optional bool tschchartseriesdefaultshowvaluelabels = 51;</code>
       */
      public Builder setTschchartseriesdefaultshowvaluelabels(boolean value) {
        bitField0_ |= 0x00004000;
        tschchartseriesdefaultshowvaluelabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesdefaultshowvaluelabels = 51;</code>
       */
      public Builder clearTschchartseriesdefaultshowvaluelabels() {
        bitField0_ = (bitField0_ & ~0x00004000);
        tschchartseriesdefaultshowvaluelabels_ = false;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive tschchartseriespienumberformat_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchiveOrBuilder> tschchartseriespienumberformatBuilder_;
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriespienumberformat = 52;</code>
       */
      public boolean hasTschchartseriespienumberformat() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriespienumberformat = 52;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive getTschchartseriespienumberformat() {
        if (tschchartseriespienumberformatBuilder_ == null) {
          return tschchartseriespienumberformat_ == null ? org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.getDefaultInstance() : tschchartseriespienumberformat_;
        } else {
          return tschchartseriespienumberformatBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriespienumberformat = 52;</code>
       */
      public Builder setTschchartseriespienumberformat(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive value) {
        if (tschchartseriespienumberformatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriespienumberformat_ = value;
          onChanged();
        } else {
          tschchartseriespienumberformatBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriespienumberformat = 52;</code>
       */
      public Builder setTschchartseriespienumberformat(
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder builderForValue) {
        if (tschchartseriespienumberformatBuilder_ == null) {
          tschchartseriespienumberformat_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriespienumberformatBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriespienumberformat = 52;</code>
       */
      public Builder mergeTschchartseriespienumberformat(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive value) {
        if (tschchartseriespienumberformatBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000) &&
              tschchartseriespienumberformat_ != null &&
              tschchartseriespienumberformat_ != org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.getDefaultInstance()) {
            tschchartseriespienumberformat_ =
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.newBuilder(tschchartseriespienumberformat_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriespienumberformat_ = value;
          }
          onChanged();
        } else {
          tschchartseriespienumberformatBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriespienumberformat = 52;</code>
       */
      public Builder clearTschchartseriespienumberformat() {
        if (tschchartseriespienumberformatBuilder_ == null) {
          tschchartseriespienumberformat_ = null;
          onChanged();
        } else {
          tschchartseriespienumberformatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriespienumberformat = 52;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder getTschchartseriespienumberformatBuilder() {
        bitField0_ |= 0x00008000;
        onChanged();
        return getTschchartseriespienumberformatFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriespienumberformat = 52;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchiveOrBuilder getTschchartseriespienumberformatOrBuilder() {
        if (tschchartseriespienumberformatBuilder_ != null) {
          return tschchartseriespienumberformatBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriespienumberformat_ == null ?
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.getDefaultInstance() : tschchartseriespienumberformat_;
        }
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriespienumberformat = 52;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchiveOrBuilder> 
          getTschchartseriespienumberformatFieldBuilder() {
        if (tschchartseriespienumberformatBuilder_ == null) {
          tschchartseriespienumberformatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchiveOrBuilder>(
                  getTschchartseriespienumberformat(),
                  getParentForChildren(),
                  isClean());
          tschchartseriespienumberformat_ = null;
        }
        return tschchartseriespienumberformatBuilder_;
      }

      private int tschchartseriespienumberformattype_ ;
      /**
       * <code>optional int32 tschchartseriespienumberformattype = 53;</code>
       */
      public boolean hasTschchartseriespienumberformattype() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 tschchartseriespienumberformattype = 53;</code>
       */
      public int getTschchartseriespienumberformattype() {
        return tschchartseriespienumberformattype_;
      }
      /**
       * <code>optional int32 tschchartseriespienumberformattype = 53;</code>
       */
      public Builder setTschchartseriespienumberformattype(int value) {
        bitField0_ |= 0x00010000;
        tschchartseriespienumberformattype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriespienumberformattype = 53;</code>
       */
      public Builder clearTschchartseriespienumberformattype() {
        bitField0_ = (bitField0_ & ~0x00010000);
        tschchartseriespienumberformattype_ = 0;
        onChanged();
        return this;
      }

      private float tschchartseriespielabelexplosion_ ;
      /**
       * <code>optional float tschchartseriespielabelexplosion = 54;</code>
       */
      public boolean hasTschchartseriespielabelexplosion() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional float tschchartseriespielabelexplosion = 54;</code>
       */
      public float getTschchartseriespielabelexplosion() {
        return tschchartseriespielabelexplosion_;
      }
      /**
       * <code>optional float tschchartseriespielabelexplosion = 54;</code>
       */
      public Builder setTschchartseriespielabelexplosion(float value) {
        bitField0_ |= 0x00020000;
        tschchartseriespielabelexplosion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriespielabelexplosion = 54;</code>
       */
      public Builder clearTschchartseriespielabelexplosion() {
        bitField0_ = (bitField0_ & ~0x00020000);
        tschchartseriespielabelexplosion_ = 0F;
        onChanged();
        return this;
      }

      private boolean tschchartseriesmixedlineshowsymbol_ ;
      /**
       * <code>optional bool tschchartseriesmixedlineshowsymbol = 58;</code>
       */
      public boolean hasTschchartseriesmixedlineshowsymbol() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional bool tschchartseriesmixedlineshowsymbol = 58;</code>
       */
      public boolean getTschchartseriesmixedlineshowsymbol() {
        return tschchartseriesmixedlineshowsymbol_;
      }
      /**
       * <code>optional bool tschchartseriesmixedlineshowsymbol = 58;</code>
       */
      public Builder setTschchartseriesmixedlineshowsymbol(boolean value) {
        bitField0_ |= 0x00040000;
        tschchartseriesmixedlineshowsymbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesmixedlineshowsymbol = 58;</code>
       */
      public Builder clearTschchartseriesmixedlineshowsymbol() {
        bitField0_ = (bitField0_ & ~0x00040000);
        tschchartseriesmixedlineshowsymbol_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesmixedareashowsymbol_ ;
      /**
       * <code>optional bool tschchartseriesmixedareashowsymbol = 59;</code>
       */
      public boolean hasTschchartseriesmixedareashowsymbol() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional bool tschchartseriesmixedareashowsymbol = 59;</code>
       */
      public boolean getTschchartseriesmixedareashowsymbol() {
        return tschchartseriesmixedareashowsymbol_;
      }
      /**
       * <code>optional bool tschchartseriesmixedareashowsymbol = 59;</code>
       */
      public Builder setTschchartseriesmixedareashowsymbol(boolean value) {
        bitField0_ |= 0x00080000;
        tschchartseriesmixedareashowsymbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesmixedareashowsymbol = 59;</code>
       */
      public Builder clearTschchartseriesmixedareashowsymbol() {
        bitField0_ = (bitField0_ & ~0x00080000);
        tschchartseriesmixedareashowsymbol_ = false;
        onChanged();
        return this;
      }

      private int tschchartseriesmixedlinesymboltype_ ;
      /**
       * <code>optional int32 tschchartseriesmixedlinesymboltype = 60;</code>
       */
      public boolean hasTschchartseriesmixedlinesymboltype() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 tschchartseriesmixedlinesymboltype = 60;</code>
       */
      public int getTschchartseriesmixedlinesymboltype() {
        return tschchartseriesmixedlinesymboltype_;
      }
      /**
       * <code>optional int32 tschchartseriesmixedlinesymboltype = 60;</code>
       */
      public Builder setTschchartseriesmixedlinesymboltype(int value) {
        bitField0_ |= 0x00100000;
        tschchartseriesmixedlinesymboltype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesmixedlinesymboltype = 60;</code>
       */
      public Builder clearTschchartseriesmixedlinesymboltype() {
        bitField0_ = (bitField0_ & ~0x00100000);
        tschchartseriesmixedlinesymboltype_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesmixedareasymboltype_ ;
      /**
       * <code>optional int32 tschchartseriesmixedareasymboltype = 61;</code>
       */
      public boolean hasTschchartseriesmixedareasymboltype() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 tschchartseriesmixedareasymboltype = 61;</code>
       */
      public int getTschchartseriesmixedareasymboltype() {
        return tschchartseriesmixedareasymboltype_;
      }
      /**
       * <code>optional int32 tschchartseriesmixedareasymboltype = 61;</code>
       */
      public Builder setTschchartseriesmixedareasymboltype(int value) {
        bitField0_ |= 0x00200000;
        tschchartseriesmixedareasymboltype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesmixedareasymboltype = 61;</code>
       */
      public Builder clearTschchartseriesmixedareasymboltype() {
        bitField0_ = (bitField0_ & ~0x00200000);
        tschchartseriesmixedareasymboltype_ = 0;
        onChanged();
        return this;
      }

      private boolean tschchartseriesmixedshowvaluelabels_ ;
      /**
       * <code>optional bool tschchartseriesmixedshowvaluelabels = 62;</code>
       */
      public boolean hasTschchartseriesmixedshowvaluelabels() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional bool tschchartseriesmixedshowvaluelabels = 62;</code>
       */
      public boolean getTschchartseriesmixedshowvaluelabels() {
        return tschchartseriesmixedshowvaluelabels_;
      }
      /**
       * <code>optional bool tschchartseriesmixedshowvaluelabels = 62;</code>
       */
      public Builder setTschchartseriesmixedshowvaluelabels(boolean value) {
        bitField0_ |= 0x00400000;
        tschchartseriesmixedshowvaluelabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesmixedshowvaluelabels = 62;</code>
       */
      public Builder clearTschchartseriesmixedshowvaluelabels() {
        bitField0_ = (bitField0_ & ~0x00400000);
        tschchartseriesmixedshowvaluelabels_ = false;
        onChanged();
        return this;
      }

      private int tschchartseriesmixedlinelinetype_ ;
      /**
       * <code>optional int32 tschchartseriesmixedlinelinetype = 63;</code>
       */
      public boolean hasTschchartseriesmixedlinelinetype() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int32 tschchartseriesmixedlinelinetype = 63;</code>
       */
      public int getTschchartseriesmixedlinelinetype() {
        return tschchartseriesmixedlinelinetype_;
      }
      /**
       * <code>optional int32 tschchartseriesmixedlinelinetype = 63;</code>
       */
      public Builder setTschchartseriesmixedlinelinetype(int value) {
        bitField0_ |= 0x00800000;
        tschchartseriesmixedlinelinetype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesmixedlinelinetype = 63;</code>
       */
      public Builder clearTschchartseriesmixedlinelinetype() {
        bitField0_ = (bitField0_ & ~0x00800000);
        tschchartseriesmixedlinelinetype_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesdefaultyaxisordinal_ ;
      /**
       * <code>optional int32 tschchartseriesdefaultyaxisordinal = 65;</code>
       */
      public boolean hasTschchartseriesdefaultyaxisordinal() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int32 tschchartseriesdefaultyaxisordinal = 65;</code>
       */
      public int getTschchartseriesdefaultyaxisordinal() {
        return tschchartseriesdefaultyaxisordinal_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaultyaxisordinal = 65;</code>
       */
      public Builder setTschchartseriesdefaultyaxisordinal(int value) {
        bitField0_ |= 0x01000000;
        tschchartseriesdefaultyaxisordinal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaultyaxisordinal = 65;</code>
       */
      public Builder clearTschchartseriesdefaultyaxisordinal() {
        bitField0_ = (bitField0_ & ~0x01000000);
        tschchartseriesdefaultyaxisordinal_ = 0;
        onChanged();
        return this;
      }

      private boolean tschchartseriespieshowserieslabels_ ;
      /**
       * <code>optional bool tschchartseriespieshowserieslabels = 66;</code>
       */
      public boolean hasTschchartseriespieshowserieslabels() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional bool tschchartseriespieshowserieslabels = 66;</code>
       */
      public boolean getTschchartseriespieshowserieslabels() {
        return tschchartseriespieshowserieslabels_;
      }
      /**
       * <code>optional bool tschchartseriespieshowserieslabels = 66;</code>
       */
      public Builder setTschchartseriespieshowserieslabels(boolean value) {
        bitField0_ |= 0x02000000;
        tschchartseriespieshowserieslabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriespieshowserieslabels = 66;</code>
       */
      public Builder clearTschchartseriespieshowserieslabels() {
        bitField0_ = (bitField0_ & ~0x02000000);
        tschchartseriespieshowserieslabels_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesscattershowsymbol_ ;
      /**
       * <code>optional bool tschchartseriesscattershowsymbol = 69;</code>
       */
      public boolean hasTschchartseriesscattershowsymbol() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional bool tschchartseriesscattershowsymbol = 69;</code>
       */
      public boolean getTschchartseriesscattershowsymbol() {
        return tschchartseriesscattershowsymbol_;
      }
      /**
       * <code>optional bool tschchartseriesscattershowsymbol = 69;</code>
       */
      public Builder setTschchartseriesscattershowsymbol(boolean value) {
        bitField0_ |= 0x04000000;
        tschchartseriesscattershowsymbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesscattershowsymbol = 69;</code>
       */
      public Builder clearTschchartseriesscattershowsymbol() {
        bitField0_ = (bitField0_ & ~0x04000000);
        tschchartseriesscattershowsymbol_ = false;
        onChanged();
        return this;
      }

      private int tschchartseriesscattersymboltype_ ;
      /**
       * <code>optional int32 tschchartseriesscattersymboltype = 70;</code>
       */
      public boolean hasTschchartseriesscattersymboltype() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int32 tschchartseriesscattersymboltype = 70;</code>
       */
      public int getTschchartseriesscattersymboltype() {
        return tschchartseriesscattersymboltype_;
      }
      /**
       * <code>optional int32 tschchartseriesscattersymboltype = 70;</code>
       */
      public Builder setTschchartseriesscattersymboltype(int value) {
        bitField0_ |= 0x08000000;
        tschchartseriesscattersymboltype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesscattersymboltype = 70;</code>
       */
      public Builder clearTschchartseriesscattersymboltype() {
        bitField0_ = (bitField0_ & ~0x08000000);
        tschchartseriesscattersymboltype_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesscatterlinetype_ ;
      /**
       * <code>optional int32 tschchartseriesscatterlinetype = 71;</code>
       */
      public boolean hasTschchartseriesscatterlinetype() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int32 tschchartseriesscatterlinetype = 71;</code>
       */
      public int getTschchartseriesscatterlinetype() {
        return tschchartseriesscatterlinetype_;
      }
      /**
       * <code>optional int32 tschchartseriesscatterlinetype = 71;</code>
       */
      public Builder setTschchartseriesscatterlinetype(int value) {
        bitField0_ |= 0x10000000;
        tschchartseriesscatterlinetype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesscatterlinetype = 71;</code>
       */
      public Builder clearTschchartseriesscatterlinetype() {
        bitField0_ = (bitField0_ & ~0x10000000);
        tschchartseriesscatterlinetype_ = 0;
        onChanged();
        return this;
      }

      private boolean tschchartseriesscattershowline_ ;
      /**
       * <code>optional bool tschchartseriesscattershowline = 72;</code>
       */
      public boolean hasTschchartseriesscattershowline() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional bool tschchartseriesscattershowline = 72;</code>
       */
      public boolean getTschchartseriesscattershowline() {
        return tschchartseriesscattershowline_;
      }
      /**
       * <code>optional bool tschchartseriesscattershowline = 72;</code>
       */
      public Builder setTschchartseriesscattershowline(boolean value) {
        bitField0_ |= 0x20000000;
        tschchartseriesscattershowline_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesscattershowline = 72;</code>
       */
      public Builder clearTschchartseriesscattershowline() {
        bitField0_ = (bitField0_ & ~0x20000000);
        tschchartseriesscattershowline_ = false;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive tschchartseriesstackedpercentnumberformat_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchiveOrBuilder> tschchartseriesstackedpercentnumberformatBuilder_;
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesstackedpercentnumberformat = 90;</code>
       */
      public boolean hasTschchartseriesstackedpercentnumberformat() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesstackedpercentnumberformat = 90;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive getTschchartseriesstackedpercentnumberformat() {
        if (tschchartseriesstackedpercentnumberformatBuilder_ == null) {
          return tschchartseriesstackedpercentnumberformat_ == null ? org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.getDefaultInstance() : tschchartseriesstackedpercentnumberformat_;
        } else {
          return tschchartseriesstackedpercentnumberformatBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesstackedpercentnumberformat = 90;</code>
       */
      public Builder setTschchartseriesstackedpercentnumberformat(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive value) {
        if (tschchartseriesstackedpercentnumberformatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesstackedpercentnumberformat_ = value;
          onChanged();
        } else {
          tschchartseriesstackedpercentnumberformatBuilder_.setMessage(value);
        }
        bitField0_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesstackedpercentnumberformat = 90;</code>
       */
      public Builder setTschchartseriesstackedpercentnumberformat(
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder builderForValue) {
        if (tschchartseriesstackedpercentnumberformatBuilder_ == null) {
          tschchartseriesstackedpercentnumberformat_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesstackedpercentnumberformatBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesstackedpercentnumberformat = 90;</code>
       */
      public Builder mergeTschchartseriesstackedpercentnumberformat(org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive value) {
        if (tschchartseriesstackedpercentnumberformatBuilder_ == null) {
          if (((bitField0_ & 0x40000000) == 0x40000000) &&
              tschchartseriesstackedpercentnumberformat_ != null &&
              tschchartseriesstackedpercentnumberformat_ != org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.getDefaultInstance()) {
            tschchartseriesstackedpercentnumberformat_ =
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.newBuilder(tschchartseriesstackedpercentnumberformat_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesstackedpercentnumberformat_ = value;
          }
          onChanged();
        } else {
          tschchartseriesstackedpercentnumberformatBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesstackedpercentnumberformat = 90;</code>
       */
      public Builder clearTschchartseriesstackedpercentnumberformat() {
        if (tschchartseriesstackedpercentnumberformatBuilder_ == null) {
          tschchartseriesstackedpercentnumberformat_ = null;
          onChanged();
        } else {
          tschchartseriesstackedpercentnumberformatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x40000000);
        return this;
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesstackedpercentnumberformat = 90;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder getTschchartseriesstackedpercentnumberformatBuilder() {
        bitField0_ |= 0x40000000;
        onChanged();
        return getTschchartseriesstackedpercentnumberformatFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesstackedpercentnumberformat = 90;</code>
       */
      public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchiveOrBuilder getTschchartseriesstackedpercentnumberformatOrBuilder() {
        if (tschchartseriesstackedpercentnumberformatBuilder_ != null) {
          return tschchartseriesstackedpercentnumberformatBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesstackedpercentnumberformat_ == null ?
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.getDefaultInstance() : tschchartseriesstackedpercentnumberformat_;
        }
      }
      /**
       * <code>optional .TSCH.PreUFF.ChartsNumberFormatArchive tschchartseriesstackedpercentnumberformat = 90;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchiveOrBuilder> 
          getTschchartseriesstackedpercentnumberformatFieldBuilder() {
        if (tschchartseriesstackedpercentnumberformatBuilder_ == null) {
          tschchartseriesstackedpercentnumberformatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchive.Builder, org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartsNumberFormatArchiveOrBuilder>(
                  getTschchartseriesstackedpercentnumberformat(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesstackedpercentnumberformat_ = null;
        }
        return tschchartseriesstackedpercentnumberformatBuilder_;
      }

      private int tschchartseriesdefaultseriestype_ ;
      /**
       * <code>optional int32 tschchartseriesdefaultseriestype = 126;</code>
       */
      public boolean hasTschchartseriesdefaultseriestype() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional int32 tschchartseriesdefaultseriestype = 126;</code>
       */
      public int getTschchartseriesdefaultseriestype() {
        return tschchartseriesdefaultseriestype_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaultseriestype = 126;</code>
       */
      public Builder setTschchartseriesdefaultseriestype(int value) {
        bitField0_ |= 0x80000000;
        tschchartseriesdefaultseriestype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaultseriestype = 126;</code>
       */
      public Builder clearTschchartseriesdefaultseriestype() {
        bitField0_ = (bitField0_ & ~0x80000000);
        tschchartseriesdefaultseriestype_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesdefaulttrendlinetype_ ;
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlinetype = 160;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlinetype() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlinetype = 160;</code>
       */
      public int getTschchartseriesdefaulttrendlinetype() {
        return tschchartseriesdefaulttrendlinetype_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlinetype = 160;</code>
       */
      public Builder setTschchartseriesdefaulttrendlinetype(int value) {
        bitField1_ |= 0x00000001;
        tschchartseriesdefaulttrendlinetype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlinetype = 160;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlinetype() {
        bitField1_ = (bitField1_ & ~0x00000001);
        tschchartseriesdefaulttrendlinetype_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesdefaulttrendlineorder_ ;
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlineorder = 161;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlineorder() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlineorder = 161;</code>
       */
      public int getTschchartseriesdefaulttrendlineorder() {
        return tschchartseriesdefaulttrendlineorder_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlineorder = 161;</code>
       */
      public Builder setTschchartseriesdefaulttrendlineorder(int value) {
        bitField1_ |= 0x00000002;
        tschchartseriesdefaulttrendlineorder_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlineorder = 161;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlineorder() {
        bitField1_ = (bitField1_ & ~0x00000002);
        tschchartseriesdefaulttrendlineorder_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesdefaulttrendlineperiod_ ;
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlineperiod = 162;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlineperiod() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlineperiod = 162;</code>
       */
      public int getTschchartseriesdefaulttrendlineperiod() {
        return tschchartseriesdefaulttrendlineperiod_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlineperiod = 162;</code>
       */
      public Builder setTschchartseriesdefaulttrendlineperiod(int value) {
        bitField1_ |= 0x00000004;
        tschchartseriesdefaulttrendlineperiod_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulttrendlineperiod = 162;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlineperiod() {
        bitField1_ = (bitField1_ & ~0x00000004);
        tschchartseriesdefaulttrendlineperiod_ = 0;
        onChanged();
        return this;
      }

      private boolean tschchartseriesdefaulttrendlineshowlabel_ ;
      /**
       * <code>optional bool tschchartseriesdefaulttrendlineshowlabel = 163;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlineshowlabel() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool tschchartseriesdefaulttrendlineshowlabel = 163;</code>
       */
      public boolean getTschchartseriesdefaulttrendlineshowlabel() {
        return tschchartseriesdefaulttrendlineshowlabel_;
      }
      /**
       * <code>optional bool tschchartseriesdefaulttrendlineshowlabel = 163;</code>
       */
      public Builder setTschchartseriesdefaulttrendlineshowlabel(boolean value) {
        bitField1_ |= 0x00000008;
        tschchartseriesdefaulttrendlineshowlabel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesdefaulttrendlineshowlabel = 163;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlineshowlabel() {
        bitField1_ = (bitField1_ & ~0x00000008);
        tschchartseriesdefaulttrendlineshowlabel_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object tschchartseriesdefaulttrendlinelabelstring_ = "";
      /**
       * <code>optional string tschchartseriesdefaulttrendlinelabelstring = 164;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlinelabelstring() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string tschchartseriesdefaulttrendlinelabelstring = 164;</code>
       */
      public java.lang.String getTschchartseriesdefaulttrendlinelabelstring() {
        java.lang.Object ref = tschchartseriesdefaulttrendlinelabelstring_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tschchartseriesdefaulttrendlinelabelstring_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string tschchartseriesdefaulttrendlinelabelstring = 164;</code>
       */
      public com.google.protobuf.ByteString
          getTschchartseriesdefaulttrendlinelabelstringBytes() {
        java.lang.Object ref = tschchartseriesdefaulttrendlinelabelstring_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tschchartseriesdefaulttrendlinelabelstring_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string tschchartseriesdefaulttrendlinelabelstring = 164;</code>
       */
      public Builder setTschchartseriesdefaulttrendlinelabelstring(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000010;
        tschchartseriesdefaulttrendlinelabelstring_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string tschchartseriesdefaulttrendlinelabelstring = 164;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlinelabelstring() {
        bitField1_ = (bitField1_ & ~0x00000010);
        tschchartseriesdefaulttrendlinelabelstring_ = getDefaultInstance().getTschchartseriesdefaulttrendlinelabelstring();
        onChanged();
        return this;
      }
      /**
       * <code>optional string tschchartseriesdefaulttrendlinelabelstring = 164;</code>
       */
      public Builder setTschchartseriesdefaulttrendlinelabelstringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000010;
        tschchartseriesdefaulttrendlinelabelstring_ = value;
        onChanged();
        return this;
      }

      private boolean tschchartseriesdefaulttrendlineshowequation_ ;
      /**
       * <code>optional bool tschchartseriesdefaulttrendlineshowequation = 165;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlineshowequation() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool tschchartseriesdefaulttrendlineshowequation = 165;</code>
       */
      public boolean getTschchartseriesdefaulttrendlineshowequation() {
        return tschchartseriesdefaulttrendlineshowequation_;
      }
      /**
       * <code>optional bool tschchartseriesdefaulttrendlineshowequation = 165;</code>
       */
      public Builder setTschchartseriesdefaulttrendlineshowequation(boolean value) {
        bitField1_ |= 0x00000020;
        tschchartseriesdefaulttrendlineshowequation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesdefaulttrendlineshowequation = 165;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlineshowequation() {
        bitField1_ = (bitField1_ & ~0x00000020);
        tschchartseriesdefaulttrendlineshowequation_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesdefaulttrendlineshowr2Value_ ;
      /**
       * <code>optional bool tschchartseriesdefaulttrendlineshowr2value = 166;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlineshowr2Value() {
        return ((bitField1_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool tschchartseriesdefaulttrendlineshowr2value = 166;</code>
       */
      public boolean getTschchartseriesdefaulttrendlineshowr2Value() {
        return tschchartseriesdefaulttrendlineshowr2Value_;
      }
      /**
       * <code>optional bool tschchartseriesdefaulttrendlineshowr2value = 166;</code>
       */
      public Builder setTschchartseriesdefaulttrendlineshowr2Value(boolean value) {
        bitField1_ |= 0x00000040;
        tschchartseriesdefaulttrendlineshowr2Value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesdefaulttrendlineshowr2value = 166;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlineshowr2Value() {
        bitField1_ = (bitField1_ & ~0x00000040);
        tschchartseriesdefaulttrendlineshowr2Value_ = false;
        onChanged();
        return this;
      }

      private int tschchartseriesdefaulterrorbarsetting_ ;
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbarsetting = 170;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarsetting() {
        return ((bitField1_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbarsetting = 170;</code>
       */
      public int getTschchartseriesdefaulterrorbarsetting() {
        return tschchartseriesdefaulterrorbarsetting_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbarsetting = 170;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarsetting(int value) {
        bitField1_ |= 0x00000080;
        tschchartseriesdefaulterrorbarsetting_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbarsetting = 170;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarsetting() {
        bitField1_ = (bitField1_ & ~0x00000080);
        tschchartseriesdefaulterrorbarsetting_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesdefaulterrorbarsettingscatterx_ ;
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbarsettingscatterx = 171;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarsettingscatterx() {
        return ((bitField1_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbarsettingscatterx = 171;</code>
       */
      public int getTschchartseriesdefaulterrorbarsettingscatterx() {
        return tschchartseriesdefaulterrorbarsettingscatterx_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbarsettingscatterx = 171;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarsettingscatterx(int value) {
        bitField1_ |= 0x00000100;
        tschchartseriesdefaulterrorbarsettingscatterx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbarsettingscatterx = 171;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarsettingscatterx() {
        bitField1_ = (bitField1_ & ~0x00000100);
        tschchartseriesdefaulterrorbarsettingscatterx_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesdefaulterrorbartype_ ;
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbartype = 172;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbartype() {
        return ((bitField1_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbartype = 172;</code>
       */
      public int getTschchartseriesdefaulterrorbartype() {
        return tschchartseriesdefaulterrorbartype_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbartype = 172;</code>
       */
      public Builder setTschchartseriesdefaulterrorbartype(int value) {
        bitField1_ |= 0x00000200;
        tschchartseriesdefaulterrorbartype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbartype = 172;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbartype() {
        bitField1_ = (bitField1_ & ~0x00000200);
        tschchartseriesdefaulterrorbartype_ = 0;
        onChanged();
        return this;
      }

      private int tschchartseriesdefaulterrorbartypescatterx_ ;
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbartypescatterx = 173;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbartypescatterx() {
        return ((bitField1_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbartypescatterx = 173;</code>
       */
      public int getTschchartseriesdefaulterrorbartypescatterx() {
        return tschchartseriesdefaulterrorbartypescatterx_;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbartypescatterx = 173;</code>
       */
      public Builder setTschchartseriesdefaulterrorbartypescatterx(int value) {
        bitField1_ |= 0x00000400;
        tschchartseriesdefaulterrorbartypescatterx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesdefaulterrorbartypescatterx = 173;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbartypescatterx() {
        bitField1_ = (bitField1_ & ~0x00000400);
        tschchartseriesdefaulterrorbartypescatterx_ = 0;
        onChanged();
        return this;
      }

      private float tschchartseriesdefaulterrorbarfixedvalue_ ;
      /**
       * <code>optional float tschchartseriesdefaulterrorbarfixedvalue = 174;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarfixedvalue() {
        return ((bitField1_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarfixedvalue = 174;</code>
       */
      public float getTschchartseriesdefaulterrorbarfixedvalue() {
        return tschchartseriesdefaulterrorbarfixedvalue_;
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarfixedvalue = 174;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarfixedvalue(float value) {
        bitField1_ |= 0x00000800;
        tschchartseriesdefaulterrorbarfixedvalue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarfixedvalue = 174;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarfixedvalue() {
        bitField1_ = (bitField1_ & ~0x00000800);
        tschchartseriesdefaulterrorbarfixedvalue_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartseriesdefaulterrorbarfixedvaluescatterx_ ;
      /**
       * <code>optional float tschchartseriesdefaulterrorbarfixedvaluescatterx = 175;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarfixedvaluescatterx() {
        return ((bitField1_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarfixedvaluescatterx = 175;</code>
       */
      public float getTschchartseriesdefaulterrorbarfixedvaluescatterx() {
        return tschchartseriesdefaulterrorbarfixedvaluescatterx_;
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarfixedvaluescatterx = 175;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarfixedvaluescatterx(float value) {
        bitField1_ |= 0x00001000;
        tschchartseriesdefaulterrorbarfixedvaluescatterx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarfixedvaluescatterx = 175;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarfixedvaluescatterx() {
        bitField1_ = (bitField1_ & ~0x00001000);
        tschchartseriesdefaulterrorbarfixedvaluescatterx_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartseriesdefaulterrorbarpercentvalue_ ;
      /**
       * <code>optional float tschchartseriesdefaulterrorbarpercentvalue = 176;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarpercentvalue() {
        return ((bitField1_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarpercentvalue = 176;</code>
       */
      public float getTschchartseriesdefaulterrorbarpercentvalue() {
        return tschchartseriesdefaulterrorbarpercentvalue_;
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarpercentvalue = 176;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarpercentvalue(float value) {
        bitField1_ |= 0x00002000;
        tschchartseriesdefaulterrorbarpercentvalue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarpercentvalue = 176;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarpercentvalue() {
        bitField1_ = (bitField1_ & ~0x00002000);
        tschchartseriesdefaulterrorbarpercentvalue_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartseriesdefaulterrorbarpercentvaluescatterx_ ;
      /**
       * <code>optional float tschchartseriesdefaulterrorbarpercentvaluescatterx = 177;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarpercentvaluescatterx() {
        return ((bitField1_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarpercentvaluescatterx = 177;</code>
       */
      public float getTschchartseriesdefaulterrorbarpercentvaluescatterx() {
        return tschchartseriesdefaulterrorbarpercentvaluescatterx_;
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarpercentvaluescatterx = 177;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarpercentvaluescatterx(float value) {
        bitField1_ |= 0x00004000;
        tschchartseriesdefaulterrorbarpercentvaluescatterx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarpercentvaluescatterx = 177;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarpercentvaluescatterx() {
        bitField1_ = (bitField1_ & ~0x00004000);
        tschchartseriesdefaulterrorbarpercentvaluescatterx_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartseriesdefaulterrorbarstddevvalue_ ;
      /**
       * <code>optional float tschchartseriesdefaulterrorbarstddevvalue = 178;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarstddevvalue() {
        return ((bitField1_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarstddevvalue = 178;</code>
       */
      public float getTschchartseriesdefaulterrorbarstddevvalue() {
        return tschchartseriesdefaulterrorbarstddevvalue_;
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarstddevvalue = 178;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarstddevvalue(float value) {
        bitField1_ |= 0x00008000;
        tschchartseriesdefaulterrorbarstddevvalue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarstddevvalue = 178;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarstddevvalue() {
        bitField1_ = (bitField1_ & ~0x00008000);
        tschchartseriesdefaulterrorbarstddevvalue_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartseriesdefaulterrorbarstddevvaluescatterx_ ;
      /**
       * <code>optional float tschchartseriesdefaulterrorbarstddevvaluescatterx = 179;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarstddevvaluescatterx() {
        return ((bitField1_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarstddevvaluescatterx = 179;</code>
       */
      public float getTschchartseriesdefaulterrorbarstddevvaluescatterx() {
        return tschchartseriesdefaulterrorbarstddevvaluescatterx_;
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarstddevvaluescatterx = 179;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarstddevvaluescatterx(float value) {
        bitField1_ |= 0x00010000;
        tschchartseriesdefaulterrorbarstddevvaluescatterx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaulterrorbarstddevvaluescatterx = 179;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarstddevvaluescatterx() {
        bitField1_ = (bitField1_ & ~0x00010000);
        tschchartseriesdefaulterrorbarstddevvaluescatterx_ = 0F;
        onChanged();
        return this;
      }

      private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder> tschchartseriesdefaulterrorbarcustompositivedataBuilder_;
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 190;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarcustompositivedata() {
        return ((bitField1_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 190;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive getTschchartseriesdefaulterrorbarcustompositivedata() {
        if (tschchartseriesdefaulterrorbarcustompositivedataBuilder_ == null) {
          return tschchartseriesdefaulterrorbarcustompositivedata_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustompositivedata_;
        } else {
          return tschchartseriesdefaulterrorbarcustompositivedataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 190;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarcustompositivedata(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive value) {
        if (tschchartseriesdefaulterrorbarcustompositivedataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaulterrorbarcustompositivedata_ = value;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustompositivedataBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 190;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarcustompositivedata(
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder builderForValue) {
        if (tschchartseriesdefaulterrorbarcustompositivedataBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustompositivedata_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustompositivedataBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 190;</code>
       */
      public Builder mergeTschchartseriesdefaulterrorbarcustompositivedata(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive value) {
        if (tschchartseriesdefaulterrorbarcustompositivedataBuilder_ == null) {
          if (((bitField1_ & 0x00020000) == 0x00020000) &&
              tschchartseriesdefaulterrorbarcustompositivedata_ != null &&
              tschchartseriesdefaulterrorbarcustompositivedata_ != org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance()) {
            tschchartseriesdefaulterrorbarcustompositivedata_ =
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.newBuilder(tschchartseriesdefaulterrorbarcustompositivedata_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaulterrorbarcustompositivedata_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustompositivedataBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 190;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarcustompositivedata() {
        if (tschchartseriesdefaulterrorbarcustompositivedataBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustompositivedata_ = null;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustompositivedataBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00020000);
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 190;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder getTschchartseriesdefaulterrorbarcustompositivedataBuilder() {
        bitField1_ |= 0x00020000;
        onChanged();
        return getTschchartseriesdefaulterrorbarcustompositivedataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 190;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder getTschchartseriesdefaulterrorbarcustompositivedataOrBuilder() {
        if (tschchartseriesdefaulterrorbarcustompositivedataBuilder_ != null) {
          return tschchartseriesdefaulterrorbarcustompositivedataBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaulterrorbarcustompositivedata_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustompositivedata_;
        }
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedata = 190;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder> 
          getTschchartseriesdefaulterrorbarcustompositivedataFieldBuilder() {
        if (tschchartseriesdefaulterrorbarcustompositivedataBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustompositivedataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder>(
                  getTschchartseriesdefaulterrorbarcustompositivedata(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaulterrorbarcustompositivedata_ = null;
        }
        return tschchartseriesdefaulterrorbarcustompositivedataBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder> tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_;
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 191;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarcustompositivedatascatterx() {
        return ((bitField1_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 191;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive getTschchartseriesdefaulterrorbarcustompositivedatascatterx() {
        if (tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_ == null) {
          return tschchartseriesdefaulterrorbarcustompositivedatascatterx_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustompositivedatascatterx_;
        } else {
          return tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 191;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarcustompositivedatascatterx(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive value) {
        if (tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaulterrorbarcustompositivedatascatterx_ = value;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 191;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarcustompositivedatascatterx(
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder builderForValue) {
        if (tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustompositivedatascatterx_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 191;</code>
       */
      public Builder mergeTschchartseriesdefaulterrorbarcustompositivedatascatterx(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive value) {
        if (tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_ == null) {
          if (((bitField1_ & 0x00040000) == 0x00040000) &&
              tschchartseriesdefaulterrorbarcustompositivedatascatterx_ != null &&
              tschchartseriesdefaulterrorbarcustompositivedatascatterx_ != org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance()) {
            tschchartseriesdefaulterrorbarcustompositivedatascatterx_ =
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.newBuilder(tschchartseriesdefaulterrorbarcustompositivedatascatterx_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaulterrorbarcustompositivedatascatterx_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 191;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarcustompositivedatascatterx() {
        if (tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustompositivedatascatterx_ = null;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00040000);
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 191;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder getTschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder() {
        bitField1_ |= 0x00040000;
        onChanged();
        return getTschchartseriesdefaulterrorbarcustompositivedatascatterxFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 191;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder getTschchartseriesdefaulterrorbarcustompositivedatascatterxOrBuilder() {
        if (tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_ != null) {
          return tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaulterrorbarcustompositivedatascatterx_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustompositivedatascatterx_;
        }
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustompositivedatascatterx = 191;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder> 
          getTschchartseriesdefaulterrorbarcustompositivedatascatterxFieldBuilder() {
        if (tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder>(
                  getTschchartseriesdefaulterrorbarcustompositivedatascatterx(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaulterrorbarcustompositivedatascatterx_ = null;
        }
        return tschchartseriesdefaulterrorbarcustompositivedatascatterxBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder> tschchartseriesdefaulterrorbarcustomnegativedataBuilder_;
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 192;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarcustomnegativedata() {
        return ((bitField1_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 192;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive getTschchartseriesdefaulterrorbarcustomnegativedata() {
        if (tschchartseriesdefaulterrorbarcustomnegativedataBuilder_ == null) {
          return tschchartseriesdefaulterrorbarcustomnegativedata_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustomnegativedata_;
        } else {
          return tschchartseriesdefaulterrorbarcustomnegativedataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 192;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarcustomnegativedata(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive value) {
        if (tschchartseriesdefaulterrorbarcustomnegativedataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaulterrorbarcustomnegativedata_ = value;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustomnegativedataBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 192;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarcustomnegativedata(
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder builderForValue) {
        if (tschchartseriesdefaulterrorbarcustomnegativedataBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustomnegativedata_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustomnegativedataBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 192;</code>
       */
      public Builder mergeTschchartseriesdefaulterrorbarcustomnegativedata(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive value) {
        if (tschchartseriesdefaulterrorbarcustomnegativedataBuilder_ == null) {
          if (((bitField1_ & 0x00080000) == 0x00080000) &&
              tschchartseriesdefaulterrorbarcustomnegativedata_ != null &&
              tschchartseriesdefaulterrorbarcustomnegativedata_ != org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance()) {
            tschchartseriesdefaulterrorbarcustomnegativedata_ =
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.newBuilder(tschchartseriesdefaulterrorbarcustomnegativedata_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaulterrorbarcustomnegativedata_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustomnegativedataBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 192;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarcustomnegativedata() {
        if (tschchartseriesdefaulterrorbarcustomnegativedataBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustomnegativedata_ = null;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustomnegativedataBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00080000);
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 192;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder getTschchartseriesdefaulterrorbarcustomnegativedataBuilder() {
        bitField1_ |= 0x00080000;
        onChanged();
        return getTschchartseriesdefaulterrorbarcustomnegativedataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 192;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder getTschchartseriesdefaulterrorbarcustomnegativedataOrBuilder() {
        if (tschchartseriesdefaulterrorbarcustomnegativedataBuilder_ != null) {
          return tschchartseriesdefaulterrorbarcustomnegativedataBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaulterrorbarcustomnegativedata_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustomnegativedata_;
        }
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedata = 192;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder> 
          getTschchartseriesdefaulterrorbarcustomnegativedataFieldBuilder() {
        if (tschchartseriesdefaulterrorbarcustomnegativedataBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustomnegativedataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder>(
                  getTschchartseriesdefaulterrorbarcustomnegativedata(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaulterrorbarcustomnegativedata_ = null;
        }
        return tschchartseriesdefaulterrorbarcustomnegativedataBuilder_;
      }

      private org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder> tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_;
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 193;</code>
       */
      public boolean hasTschchartseriesdefaulterrorbarcustomnegativedatascatterx() {
        return ((bitField1_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 193;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive getTschchartseriesdefaulterrorbarcustomnegativedatascatterx() {
        if (tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_ == null) {
          return tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ == null ? org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustomnegativedatascatterx_;
        } else {
          return tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 193;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarcustomnegativedatascatterx(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive value) {
        if (tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ = value;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 193;</code>
       */
      public Builder setTschchartseriesdefaulterrorbarcustomnegativedatascatterx(
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder builderForValue) {
        if (tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ = builderForValue.build();
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 193;</code>
       */
      public Builder mergeTschchartseriesdefaulterrorbarcustomnegativedatascatterx(org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive value) {
        if (tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_ == null) {
          if (((bitField1_ & 0x00100000) == 0x00100000) &&
              tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ != null &&
              tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ != org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance()) {
            tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ =
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.newBuilder(tschchartseriesdefaulterrorbarcustomnegativedatascatterx_).mergeFrom(value).buildPartial();
          } else {
            tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ = value;
          }
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 193;</code>
       */
      public Builder clearTschchartseriesdefaulterrorbarcustomnegativedatascatterx() {
        if (tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ = null;
          onChanged();
        } else {
          tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00100000);
        return this;
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 193;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder getTschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder() {
        bitField1_ |= 0x00100000;
        onChanged();
        return getTschchartseriesdefaulterrorbarcustomnegativedatascatterxFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 193;</code>
       */
      public org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder getTschchartseriesdefaulterrorbarcustomnegativedatascatterxOrBuilder() {
        if (tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_ != null) {
          return tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_.getMessageOrBuilder();
        } else {
          return tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ == null ?
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.getDefaultInstance() : tschchartseriesdefaulterrorbarcustomnegativedatascatterx_;
        }
      }
      /**
       * <code>optional .TSCH.ChartsNSArrayOfNSNumberDoubleArchive tschchartseriesdefaulterrorbarcustomnegativedatascatterx = 193;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder> 
          getTschchartseriesdefaulterrorbarcustomnegativedatascatterxFieldBuilder() {
        if (tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_ == null) {
          tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchive.Builder, org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.ChartsNSArrayOfNSNumberDoubleArchiveOrBuilder>(
                  getTschchartseriesdefaulterrorbarcustomnegativedatascatterx(),
                  getParentForChildren(),
                  isClean());
          tschchartseriesdefaulterrorbarcustomnegativedatascatterx_ = null;
        }
        return tschchartseriesdefaulterrorbarcustomnegativedatascatterxBuilder_;
      }

      private float tschchartseriesdefaulttrendlineequationoffsetx_ ;
      /**
       * <code>optional float tschchartseriesdefaulttrendlineequationoffsetx = 194;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlineequationoffsetx() {
        return ((bitField1_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlineequationoffsetx = 194;</code>
       */
      public float getTschchartseriesdefaulttrendlineequationoffsetx() {
        return tschchartseriesdefaulttrendlineequationoffsetx_;
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlineequationoffsetx = 194;</code>
       */
      public Builder setTschchartseriesdefaulttrendlineequationoffsetx(float value) {
        bitField1_ |= 0x00200000;
        tschchartseriesdefaulttrendlineequationoffsetx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlineequationoffsetx = 194;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlineequationoffsetx() {
        bitField1_ = (bitField1_ & ~0x00200000);
        tschchartseriesdefaulttrendlineequationoffsetx_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartseriesdefaulttrendlineequationoffsety_ ;
      /**
       * <code>optional float tschchartseriesdefaulttrendlineequationoffsety = 195;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlineequationoffsety() {
        return ((bitField1_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlineequationoffsety = 195;</code>
       */
      public float getTschchartseriesdefaulttrendlineequationoffsety() {
        return tschchartseriesdefaulttrendlineequationoffsety_;
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlineequationoffsety = 195;</code>
       */
      public Builder setTschchartseriesdefaulttrendlineequationoffsety(float value) {
        bitField1_ |= 0x00400000;
        tschchartseriesdefaulttrendlineequationoffsety_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlineequationoffsety = 195;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlineequationoffsety() {
        bitField1_ = (bitField1_ & ~0x00400000);
        tschchartseriesdefaulttrendlineequationoffsety_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartseriesdefaulttrendlinersquaredoffsetx_ ;
      /**
       * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsetx = 196;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlinersquaredoffsetx() {
        return ((bitField1_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsetx = 196;</code>
       */
      public float getTschchartseriesdefaulttrendlinersquaredoffsetx() {
        return tschchartseriesdefaulttrendlinersquaredoffsetx_;
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsetx = 196;</code>
       */
      public Builder setTschchartseriesdefaulttrendlinersquaredoffsetx(float value) {
        bitField1_ |= 0x00800000;
        tschchartseriesdefaulttrendlinersquaredoffsetx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsetx = 196;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlinersquaredoffsetx() {
        bitField1_ = (bitField1_ & ~0x00800000);
        tschchartseriesdefaulttrendlinersquaredoffsetx_ = 0F;
        onChanged();
        return this;
      }

      private float tschchartseriesdefaulttrendlinersquaredoffsety_ ;
      /**
       * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsety = 197;</code>
       */
      public boolean hasTschchartseriesdefaulttrendlinersquaredoffsety() {
        return ((bitField1_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsety = 197;</code>
       */
      public float getTschchartseriesdefaulttrendlinersquaredoffsety() {
        return tschchartseriesdefaulttrendlinersquaredoffsety_;
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsety = 197;</code>
       */
      public Builder setTschchartseriesdefaulttrendlinersquaredoffsety(float value) {
        bitField1_ |= 0x01000000;
        tschchartseriesdefaulttrendlinersquaredoffsety_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesdefaulttrendlinersquaredoffsety = 197;</code>
       */
      public Builder clearTschchartseriesdefaulttrendlinersquaredoffsety() {
        bitField1_ = (bitField1_ & ~0x01000000);
        tschchartseriesdefaulttrendlinersquaredoffsety_ = 0F;
        onChanged();
        return this;
      }

      private boolean tschchartseriesdefaultshowtrendline_ ;
      /**
       * <code>optional bool tschchartseriesdefaultshowtrendline = 198;</code>
       */
      public boolean hasTschchartseriesdefaultshowtrendline() {
        return ((bitField1_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional bool tschchartseriesdefaultshowtrendline = 198;</code>
       */
      public boolean getTschchartseriesdefaultshowtrendline() {
        return tschchartseriesdefaultshowtrendline_;
      }
      /**
       * <code>optional bool tschchartseriesdefaultshowtrendline = 198;</code>
       */
      public Builder setTschchartseriesdefaultshowtrendline(boolean value) {
        bitField1_ |= 0x02000000;
        tschchartseriesdefaultshowtrendline_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesdefaultshowtrendline = 198;</code>
       */
      public Builder clearTschchartseriesdefaultshowtrendline() {
        bitField1_ = (bitField1_ & ~0x02000000);
        tschchartseriesdefaultshowtrendline_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesdefaultshowerrorbar_ ;
      /**
       * <code>optional bool tschchartseriesdefaultshowerrorbar = 199;</code>
       */
      public boolean hasTschchartseriesdefaultshowerrorbar() {
        return ((bitField1_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional bool tschchartseriesdefaultshowerrorbar = 199;</code>
       */
      public boolean getTschchartseriesdefaultshowerrorbar() {
        return tschchartseriesdefaultshowerrorbar_;
      }
      /**
       * <code>optional bool tschchartseriesdefaultshowerrorbar = 199;</code>
       */
      public Builder setTschchartseriesdefaultshowerrorbar(boolean value) {
        bitField1_ |= 0x04000000;
        tschchartseriesdefaultshowerrorbar_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesdefaultshowerrorbar = 199;</code>
       */
      public Builder clearTschchartseriesdefaultshowerrorbar() {
        bitField1_ = (bitField1_ & ~0x04000000);
        tschchartseriesdefaultshowerrorbar_ = false;
        onChanged();
        return this;
      }

      private boolean tschchartseriesdefaultshowerrorbarscatterx_ ;
      /**
       * <code>optional bool tschchartseriesdefaultshowerrorbarscatterx = 200;</code>
       */
      public boolean hasTschchartseriesdefaultshowerrorbarscatterx() {
        return ((bitField1_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional bool tschchartseriesdefaultshowerrorbarscatterx = 200;</code>
       */
      public boolean getTschchartseriesdefaultshowerrorbarscatterx() {
        return tschchartseriesdefaultshowerrorbarscatterx_;
      }
      /**
       * <code>optional bool tschchartseriesdefaultshowerrorbarscatterx = 200;</code>
       */
      public Builder setTschchartseriesdefaultshowerrorbarscatterx(boolean value) {
        bitField1_ |= 0x08000000;
        tschchartseriesdefaultshowerrorbarscatterx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesdefaultshowerrorbarscatterx = 200;</code>
       */
      public Builder clearTschchartseriesdefaultshowerrorbarscatterx() {
        bitField1_ = (bitField1_ & ~0x08000000);
        tschchartseriesdefaultshowerrorbarscatterx_ = false;
        onChanged();
        return this;
      }

      private int tschchartseriesbubblesizedimension_ ;
      /**
       * <code>optional int32 tschchartseriesbubblesizedimension = 208;</code>
       */
      public boolean hasTschchartseriesbubblesizedimension() {
        return ((bitField1_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int32 tschchartseriesbubblesizedimension = 208;</code>
       */
      public int getTschchartseriesbubblesizedimension() {
        return tschchartseriesbubblesizedimension_;
      }
      /**
       * <code>optional int32 tschchartseriesbubblesizedimension = 208;</code>
       */
      public Builder setTschchartseriesbubblesizedimension(int value) {
        bitField1_ |= 0x10000000;
        tschchartseriesbubblesizedimension_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesbubblesizedimension = 208;</code>
       */
      public Builder clearTschchartseriesbubblesizedimension() {
        bitField1_ = (bitField1_ & ~0x10000000);
        tschchartseriesbubblesizedimension_ = 0;
        onChanged();
        return this;
      }

      private boolean tschchartseriesbubbleshowvaluelabels_ ;
      /**
       * <code>optional bool tschchartseriesbubbleshowvaluelabels = 209;</code>
       */
      public boolean hasTschchartseriesbubbleshowvaluelabels() {
        return ((bitField1_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional bool tschchartseriesbubbleshowvaluelabels = 209;</code>
       */
      public boolean getTschchartseriesbubbleshowvaluelabels() {
        return tschchartseriesbubbleshowvaluelabels_;
      }
      /**
       * <code>optional bool tschchartseriesbubbleshowvaluelabels = 209;</code>
       */
      public Builder setTschchartseriesbubbleshowvaluelabels(boolean value) {
        bitField1_ |= 0x20000000;
        tschchartseriesbubbleshowvaluelabels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesbubbleshowvaluelabels = 209;</code>
       */
      public Builder clearTschchartseriesbubbleshowvaluelabels() {
        bitField1_ = (bitField1_ & ~0x20000000);
        tschchartseriesbubbleshowvaluelabels_ = false;
        onChanged();
        return this;
      }

      private int tschchartseriesbubblelinetype_ ;
      /**
       * <code>optional int32 tschchartseriesbubblelinetype = 210;</code>
       */
      public boolean hasTschchartseriesbubblelinetype() {
        return ((bitField1_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int32 tschchartseriesbubblelinetype = 210;</code>
       */
      public int getTschchartseriesbubblelinetype() {
        return tschchartseriesbubblelinetype_;
      }
      /**
       * <code>optional int32 tschchartseriesbubblelinetype = 210;</code>
       */
      public Builder setTschchartseriesbubblelinetype(int value) {
        bitField1_ |= 0x40000000;
        tschchartseriesbubblelinetype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tschchartseriesbubblelinetype = 210;</code>
       */
      public Builder clearTschchartseriesbubblelinetype() {
        bitField1_ = (bitField1_ & ~0x40000000);
        tschchartseriesbubblelinetype_ = 0;
        onChanged();
        return this;
      }

      private boolean tschchartseriesbubbleshownegativedata_ ;
      /**
       * <code>optional bool tschchartseriesbubbleshownegativedata = 216;</code>
       */
      public boolean hasTschchartseriesbubbleshownegativedata() {
        return ((bitField1_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional bool tschchartseriesbubbleshownegativedata = 216;</code>
       */
      public boolean getTschchartseriesbubbleshownegativedata() {
        return tschchartseriesbubbleshownegativedata_;
      }
      /**
       * <code>optional bool tschchartseriesbubbleshownegativedata = 216;</code>
       */
      public Builder setTschchartseriesbubbleshownegativedata(boolean value) {
        bitField1_ |= 0x80000000;
        tschchartseriesbubbleshownegativedata_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tschchartseriesbubbleshownegativedata = 216;</code>
       */
      public Builder clearTschchartseriesbubbleshownegativedata() {
        bitField1_ = (bitField1_ & ~0x80000000);
        tschchartseriesbubbleshownegativedata_ = false;
        onChanged();
        return this;
      }

      private float tschchartseriesbubbleadjustmentscale_ ;
      /**
       * <code>optional float tschchartseriesbubbleadjustmentscale = 217;</code>
       */
      public boolean hasTschchartseriesbubbleadjustmentscale() {
        return ((bitField2_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional float tschchartseriesbubbleadjustmentscale = 217;</code>
       */
      public float getTschchartseriesbubbleadjustmentscale() {
        return tschchartseriesbubbleadjustmentscale_;
      }
      /**
       * <code>optional float tschchartseriesbubbleadjustmentscale = 217;</code>
       */
      public Builder setTschchartseriesbubbleadjustmentscale(float value) {
        bitField2_ |= 0x00000001;
        tschchartseriesbubbleadjustmentscale_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tschchartseriesbubbleadjustmentscale = 217;</code>
       */
      public Builder clearTschchartseriesbubbleadjustmentscale() {
        bitField2_ = (bitField2_ & ~0x00000001);
        tschchartseriesbubbleadjustmentscale_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TSCH.PreUFF.ChartSeriesNonStyleArchive)
    }

    // @@protoc_insertion_point(class_scope:TSCH.PreUFF.ChartSeriesNonStyleArchive)
    private static final org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive();
    }

    public static org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ChartSeriesNonStyleArchive>
        PARSER = new com.google.protobuf.AbstractParser<ChartSeriesNonStyleArchive>() {
      public ChartSeriesNonStyleArchive parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ChartSeriesNonStyleArchive(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChartSeriesNonStyleArchive> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChartSeriesNonStyleArchive> getParserForType() {
      return PARSER;
    }

    public org.techforumist.keynote.proto.TSCH.PreUFF.TSCHPreUFFArchives.ChartSeriesNonStyleArchive getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TSCH_PreUFF_ChartInfoArchive_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TSCH_PreUFF_ChartInfoArchive_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TSCH_PreUFF_LegendModelArchive_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TSCH_PreUFF_LegendModelArchive_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TSCH_PreUFF_ChartModelArchive_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TSCH_PreUFF_ChartModelArchive_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TSCH_PreUFF_ChartGridArchive_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TSCH_PreUFF_ChartGridArchive_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TSCH_PreUFF_ChartGridArchive_ValueRow_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TSCH_PreUFF_ChartGridArchive_ValueRow_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TSCH_PreUFF_ChartsNumberFormatArchive_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TSCH_PreUFF_ChartsNumberFormatArchive_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TSCH_PreUFF_ChartStyleArchive_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TSCH_PreUFF_ChartStyleArchive_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TSCH_PreUFF_ChartNonStyleArchive_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TSCH_PreUFF_ChartNonStyleArchive_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TSCH_PreUFF_LegendStyleArchive_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TSCH_PreUFF_LegendStyleArchive_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TSCH_PreUFF_LegendNonStyleArchive_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TSCH_PreUFF_LegendNonStyleArchive_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TSCH_PreUFF_ChartAxisStyleArchive_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TSCH_PreUFF_ChartAxisStyleArchive_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TSCH_PreUFF_ChartAxisNonStyleArchive_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TSCH_PreUFF_ChartAxisNonStyleArchive_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TSCH_PreUFF_ChartSeriesStyleArchive_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TSCH_PreUFF_ChartSeriesStyleArchive_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TSCH_PreUFF_ChartSeriesNonStyleArchive_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TSCH_PreUFF_ChartSeriesNonStyleArchive_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030TSCHPreUFFArchives.proto\022\013TSCH.PreUFF\032" +
      "\021TSPMessages.proto\032\021TSKArchives.proto\032\021T" +
      "SDArchives.proto\032\021TSSArchives.proto\032\031TSC" +
      "HArchives.Common.proto\032\024TSCH3DArchives.p" +
      "roto\"\334\007\n\020ChartInfoArchive\022#\n\005super\030\001 \002(\013" +
      "2\024.TSD.DrawableArchive\0223\n\013chart_model\030\002 " +
      "\002(\0132\036.TSCH.PreUFF.ChartModelArchive\022\035\n\005s" +
      "tyle\030\003 \001(\0132\016.TSP.Reference\022#\n\nchart_type" +
      "\030\004 \002(\0162\017.TSCH.ChartType\0225\n\014legend_model\030" +
      "\005 \001(\0132\037.TSCH.PreUFF.LegendModelArchive\022,",
      "\n\021inner_chart_frame\030\006 \002(\0132\021.TSCH.RectArc" +
      "hive\022)\n\021value_axis_styles\030\007 \003(\0132\016.TSP.Re" +
      "ference\022,\n\024category_axis_styles\030\010 \003(\0132\016." +
      "TSP.Reference\022,\n\024value_axis_nonstyles\030\t " +
      "\003(\0132\016.TSP.Reference\022/\n\027category_axis_non" +
      "styles\030\n \003(\0132\016.TSP.Reference\022+\n\023series_t" +
      "heme_styles\030\013 \003(\0132\016.TSP.Reference\022@\n\025ser" +
      "ies_private_styles\030\014 \001(\0132!.TSCH.SparseRe" +
      "ferenceArrayArchive\022<\n\021series_non_styles" +
      "\030\r \001(\0132!.TSCH.SparseReferenceArrayArchiv",
      "e\022!\n\tnon_style\030\016 \001(\0132\016.TSP.Reference\022 \n\010" +
      "mediator\030\017 \001(\0132\016.TSP.Reference\022&\n\022cde_pr" +
      "eview_origin\030\020 \001(\0132\n.TSP.Point\022*\n\022chart_" +
      "style_preset\030\021 \001(\0132\016.TSP.Reference\022(\n\020pa" +
      "ragraph_styles\030\022 \003(\0132\016.TSP.Reference\022\"\n\032" +
      "last_row_sected_in_the_cde\030\023 \001(\005\022%\n\035last" +
      "_column_sected_in_the_cde\030\024 \001(\005\022 \n\030chart" +
      "_style_preset_index\030\025 \001(\005\0220\n(needs_calc_" +
      "engine_deferred_import_action\030\026 \001(\010\"\226\001\n\022" +
      "LegendModelArchive\022\034\n\004info\030\001 \001(\0132\016.TSP.R",
      "eference\022 \n\005frame\030\002 \002(\0132\021.TSCH.RectArchi" +
      "ve\022\035\n\005style\030\003 \002(\0132\016.TSP.Reference\022!\n\tnon" +
      "_style\030\004 \002(\0132\016.TSP.Reference\"\315\001\n\021ChartMo" +
      "delArchive\022\034\n\004info\030\001 \001(\0132\016.TSP.Reference" +
      "\022\034\n\004grid\030\002 \002(\0132\016.TSP.Reference\022\024\n\014series" +
      "_types\030\003 \003(\r\022\026\n\016scatter_format\030\004 \001(\r\0222\n\013" +
      "inline_grid\030\005 \001(\0132\035.TSCH.PreUFF.ChartGri" +
      "dArchive\022\032\n\022multidataset_index\030\006 \001(\r\"\261\001\n" +
      "\020ChartGridArchive\022\021\n\tdirection\030\001 \002(\005\022\020\n\010" +
      "row_name\030\002 \003(\t\022\023\n\013column_name\030\003 \003(\t\0229\n\tv",
      "alue_row\030\004 \003(\0132&.TSCH.PreUFF.ChartGridAr" +
      "chive.ValueRow\022\r\n\005dirty\030\006 \002(\010\032\031\n\010ValueRo" +
      "w\022\r\n\005value\030\001 \003(\001\"\254\006\n\031ChartsNumberFormatA" +
      "rchive\022)\n\nvalue_type\030\001 \002(\0162\025.TSCH.Number" +
      "ValueType\022\025\n\rformat_string\030\002 \001(\t\022\026\n\016deci" +
      "mal_places\030\003 \002(\r\022\025\n\rcurrency_code\030\004 \001(\t\022" +
      "1\n\016negative_style\030\005 \002(\0162\031.TSCH.NegativeN" +
      "umberStyle\022 \n\030show_thousands_separator\030\006" +
      " \002(\010\0221\n\021fraction_accuracy\030\007 \002(\0162\026.TSCH.F" +
      "ractionAccuracy\022\025\n\rsuffix_string\030\010 \001(\t\022\014",
      "\n\004base\030\t \002(\r\022\023\n\013base_places\030\n \002(\r\022\033\n\023bas" +
      "e_use_minus_sign\030\013 \002(\010\022\034\n\024use_accounting" +
      "_style\030\014 \002(\010\022\021\n\tis_custom\030\r \002(\010\022\024\n\014scale" +
      "_factor\030\016 \002(\001\022\034\n\024interstitial_strings\030\017 " +
      "\003(\t\022<\n%interstitial_string_insertion_ind" +
      "exes\030\020 \002(\0132\r.TSP.IndexSet\0222\n*index_from_" +
      "right_of_last_digit_placeholder\030\021 \002(\r\022\026\n" +
      "\016is_text_format\030\022 \002(\010\022\035\n\025minimum_integer" +
      "_width\030\023 \002(\r\022\025\n\rdecimal_width\030\024 \002(\r\0226\n.n" +
      "umber_of_non_space_integer_placeholder_d",
      "igits\030\025 \002(\r\0226\n.number_of_non_space_decim" +
      "al_placeholder_digits\030\026 \002(\r\022\023\n\013format_na" +
      "me\030\027 \001(\t\022\025\n\rprefix_string\030\030 \001(\t\"\365\022\n\021Char" +
      "tStyleArchive\022 \n\005super\030\001 \002(\0132\021.TSS.Style" +
      "Archive\022<\n\"tschchartinfodefaultbackgroun" +
      "dfill\030\n \001(\0132\020.TSD.FillArchive\022@\n$tschcha" +
      "rtinfodefaultbackgroundstroke\030\013 \001(\0132\022.TS" +
      "D.StrokeArchive\022@\n&tschchartinfodefaultg" +
      "ridbackgroundfill\030\014 \001(\0132\020.TSD.FillArchiv" +
      "e\022\'\n\037tschchartinfodefaultintersetgap\030\r \001",
      "(\002\022\'\n\037tschchartinfodefaultinterbargap\030\016 " +
      "\001(\002\022&\n\036tschchartinfodefaultshowborder\030\017 " +
      "\001(\010\022<\n tschchartinfodefaultborderstroke\030" +
      "\020 \001(\0132\022.TSD.StrokeArchive\0222\n\036tschchartin" +
      "fodefaulttitlecolor\030\022 \001(\0132\n.TSP.Color\0221\n" +
      ")tschchartinfodefaultgridbackgroundopaci" +
      "ty\030\023 \001(\002\022)\n!tschchartinfodefaultcombinel" +
      "ayers\030\024 \001(\010\022<\n tschchartinfodefaultborde" +
      "rshadow\030\025 \001(\0132\022.TSD.ShadowArchive\022)\n!tsc" +
      "hchartinfodefaultborderopacity\030\026 \001(\002\0224\n,",
      "tschchartinfodefaulttitleparagraphstylei" +
      "ndex\030\027 \001(\005\0226\n.tschchartinfodefaultdeprec" +
      "atedmasterfontfamily\030\030 \001(\t\0229\n1tschcharti" +
      "nfodefaultdeprecatedmasterfontnamedsize\030" +
      "\031 \001(\005\022J\nBtschchartinfodefaultdeprecatedt" +
      "rendlineequationparagraphstyleindex\030\036 \001(" +
      "\005\022J\nBtschchartinfodefaultdeprecatedtrend" +
      "linersquaredparagraphstyleindex\030\037 \001(\005\022Q\n" +
      "5tschchartinfodefaultdeprecatedtrendline" +
      "equationshadow\030  \001(\0132\022.TSD.ShadowArchive",
      "\022Q\n5tschchartinfodefaultdeprecatedtrendl" +
      "inersquaredshadow\030! \001(\0132\022.TSD.ShadowArch" +
      "ive\022>\n6tschchartinfodefaultdeprecatedtre" +
      "ndlineequationopacity\030\" \001(\002\022>\n6tschchart" +
      "infodefaultdeprecatedtrendlinersquaredop" +
      "acity\030# \001(\002\022?\n\"tschchartinfobardeprecate" +
      "d3dshadow\030\264\002 \001(\0132\022.TSD.ShadowArchive\022B\n%" +
      "tschchartinfocolumndeprecated3dshadow\030\265\002" +
      " \001(\0132\022.TSD.ShadowArchive\022@\n#tschchartinf" +
      "olinedeprecated3dshadow\030\266\002 \001(\0132\022.TSD.Sha",
      "dowArchive\022@\n#tschchartinfoareadeprecate" +
      "d3dshadow\030\267\002 \001(\0132\022.TSD.ShadowArchive\022?\n\"" +
      "tschchartinfopiedeprecated3dshadow\030\270\002 \001(" +
      "\0132\022.TSD.ShadowArchive\022S\n%tschchartinfode" +
      "fault3dlightingpackage\030\271\002 \001(\0132#.TSCH.Cha" +
      "rt3DLightingPackageArchive\022R\n$tschcharti" +
      "nfocolumn3dlightingpackage\030\272\002 \001(\0132#.TSCH" +
      ".Chart3DLightingPackageArchive\022O\n!tschch" +
      "artinfobar3dlightingpackage\030\273\002 \001(\0132#.TSC" +
      "H.Chart3DLightingPackageArchive\022P\n\"tschc",
      "hartinfoline3dlightingpackage\030\274\002 \001(\0132#.T" +
      "SCH.Chart3DLightingPackageArchive\022P\n\"tsc" +
      "hchartinfoarea3dlightingpackage\030\275\002 \001(\0132#" +
      ".TSCH.Chart3DLightingPackageArchive\022O\n!t" +
      "schchartinfopie3dlightingpackage\030\276\002 \001(\0132" +
      "#.TSCH.Chart3DLightingPackageArchive\0223\n*" +
      "tschchartinfodefaultdeprecated3dbeveledg" +
      "es\030\306\002 \001(\010\022/\n&tschchartinfopiedeprecated3" +
      "dbeveledges\030\307\002 \001(\010\022/\n&tschchartinfobarde" +
      "precated3dbeveledges\030\310\002 \001(\010\0222\n)tschchart",
      "infocolumndeprecated3dbeveledges\030\311\002 \001(\010\022" +
      "1\n(tschchartinfodefaultdeprecated3dbarsh" +
      "ape\030\312\002 \001(\005\022+\n\"tschchartinfodefault3dchar" +
      "topacity\030\317\002 \001(\002\"\371\013\n\024ChartNonStyleArchive" +
      "\022 \n\005super\030\001 \002(\0132\021.TSS.StyleArchive\022!\n\031ts" +
      "chchartinfodefaulttitle\030\n \001(\t\022&\n\036tschcha" +
      "rtinfodefaultshowlegend\030\013 \001(\010\022)\n!tschcha" +
      "rtinfodefaultpiestartangle\030\014 \001(\002\022%\n\035tsch" +
      "chartinfodefaultshowtitle\030\r \001(\010\022>\n6tschc" +
      "hartinfodefaultdeprecatedagainmasterfont",
      "namedsize\030\031 \001(\005\022C\n\036tschchartinfodefault3" +
      "drotation\030\254\002 \001(\0132\032.TSCH.Chart3DVectorArc" +
      "hive\022@\n\033tschchartinfodefault3dscale\030\255\002 \001" +
      "(\0132\032.TSCH.Chart3DVectorArchive\022?\n\032tschch" +
      "artinfocolumn3dscale\030\256\002 \001(\0132\032.TSCH.Chart" +
      "3DVectorArchive\022<\n\027tschchartinfobar3dsca" +
      "le\030\257\002 \001(\0132\032.TSCH.Chart3DVectorArchive\022=\n" +
      "\030tschchartinfoline3dscale\030\260\002 \001(\0132\032.TSCH." +
      "Chart3DVectorArchive\022=\n\030tschchartinfoare" +
      "a3dscale\030\261\002 \001(\0132\032.TSCH.Chart3DVectorArch",
      "ive\022<\n\027tschchartinfopie3dscale\030\262\002 \001(\0132\032." +
      "TSCH.Chart3DVectorArchive\022C\n\036tschchartin" +
      "fodefault3dviewport\030\271\002 \001(\0132\032.TSCH.Chart3" +
      "DVectorArchive\022]\n/tschchartinfodefaultde" +
      "precated3dlightingpackage\030\300\002 \001(\0132#.TSCH." +
      "Chart3DLightingPackageArchive\022\\\n.tschcha" +
      "rtinfocolumndeprecated3dlightingpackage\030" +
      "\301\002 \001(\0132#.TSCH.Chart3DLightingPackageArch" +
      "ive\022Y\n+tschchartinfobardeprecated3dlight" +
      "ingpackage\030\302\002 \001(\0132#.TSCH.Chart3DLighting",
      "PackageArchive\022Z\n,tschchartinfolinedepre" +
      "cated3dlightingpackage\030\303\002 \001(\0132#.TSCH.Cha" +
      "rt3DLightingPackageArchive\022Z\n,tschcharti" +
      "nfoareadeprecated3dlightingpackage\030\304\002 \001(" +
      "\0132#.TSCH.Chart3DLightingPackageArchive\022Y" +
      "\n+tschchartinfopiedeprecated3dlightingpa" +
      "ckage\030\305\002 \001(\0132#.TSCH.Chart3DLightingPacka" +
      "geArchive\022+\n\"tschchartinfodefaultskiphid" +
      "dendata\030\306\002 \001(\010\022)\n tschchartinfodefault3d" +
      "beveledges\030\307\002 \001(\010\022\'\n\036tschchartinfodefaul",
      "t3dbarshape\030\320\002 \001(\005\022/\n&tschchartinfodefau" +
      "lt3dintersetdepthgap\030\313\002 \001(\002\"\277\002\n\022LegendSt" +
      "yleArchive\022 \n\005super\030\001 \002(\0132\021.TSS.StyleArc" +
      "hive\0224\n\032tschlegendmodeldefaultfill\030\n \001(\013" +
      "2\020.TSD.FillArchive\0228\n\034tschlegendmodeldef" +
      "aultstroke\030\013 \001(\0132\022.TSD.StrokeArchive\0228\n\034" +
      "tschlegendmodeldefaultshadow\030\016 \001(\0132\022.TSD" +
      ".ShadowArchive\022%\n\035tschlegendmodeldefault" +
      "opacity\030\017 \001(\002\0226\n.tschlegendmodeldefaultl" +
      "abelparagraphstyleindex\030\020 \001(\005\"9\n\025LegendN",
      "onStyleArchive\022 \n\005super\030\001 \002(\0132\021.TSS.Styl" +
      "eArchive\"\255\021\n\025ChartAxisStyleArchive\022 \n\005su" +
      "per\030\001 \002(\0132\021.TSS.StyleArchive\022,\n$tschchar" +
      "taxisvalueshowmajorgridlines\030\n \001(\010\022,\n$ts" +
      "chchartaxisvalueshowminorgridlines\030\013 \001(\010" +
      "\022A\n%tschchartaxisvaluemajorgridlinestrok" +
      "e\030\014 \001(\0132\022.TSD.StrokeArchive\022A\n%tschchart" +
      "axisvalueminorgridlinestroke\030\r \001(\0132\022.TSD" +
      ".StrokeArchive\022*\n\"tschchartaxisvaluetick" +
      "marklocation\030\016 \001(\005\022,\n$tschchartaxisvalue",
      "showmajortickmarks\030\017 \001(\010\022,\n$tschchartaxi" +
      "svalueshowminortickmarks\030\020 \001(\010\022+\n#tschch" +
      "artaxisvaluelabelsorientation\030\021 \001(\002\022*\n\"t" +
      "schchartaxisvalueshowminimumlabel\030\022 \001(\010\022" +
      "A\n%tschchartaxisvaluemajorgridlineshadow" +
      "\030\025 \001(\0132\022.TSD.ShadowArchive\022A\n%tschcharta" +
      "xisvalueminorgridlineshadow\030\026 \001(\0132\022.TSD." +
      "ShadowArchive\022.\n&tschchartaxisvaluemajor" +
      "gridlineopacity\030\027 \001(\002\022.\n&tschchartaxisva" +
      "lueminorgridlineopacity\030\030 \001(\002\022\"\n\032tschcha",
      "rtaxisvalueshowaxis\030\031 \001(\010\022/\n\'tschchartax" +
      "iscategoryshowmajorgridlines\0302 \001(\010\022/\n\'ts" +
      "chchartaxiscategoryshowminorgridlines\0303 " +
      "\001(\010\022D\n(tschchartaxiscategorymajorgridlin" +
      "estroke\0304 \001(\0132\022.TSD.StrokeArchive\022D\n(tsc" +
      "hchartaxiscategoryminorgridlinestroke\0305 " +
      "\001(\0132\022.TSD.StrokeArchive\022-\n%tschchartaxis" +
      "categorytickmarklocation\0306 \001(\005\022/\n\'tschch" +
      "artaxiscategoryshowmajortickmarks\0307 \001(\010\022" +
      "/\n\'tschchartaxiscategoryshowminortickmar",
      "ks\0308 \001(\010\022.\n&tschchartaxiscategorylabelso" +
      "rientation\0309 \001(\002\022.\n&tschchartaxiscategor" +
      "yhorizontalspacing\030: \001(\005\022,\n$tschchartaxi" +
      "scategoryverticalspacing\030; \001(\005\022*\n\"tschch" +
      "artaxiscategoryshowlastlabel\030< \001(\010\022D\n(ts" +
      "chchartaxiscategorymajorgridlineshadow\030?" +
      " \001(\0132\022.TSD.ShadowArchive\022D\n(tschchartaxi" +
      "scategoryminorgridlineshadow\030@ \001(\0132\022.TSD" +
      ".ShadowArchive\0221\n)tschchartaxiscategorym" +
      "ajorgridlineopacity\030A \001(\002\0221\n)tschchartax",
      "iscategoryminorgridlineopacity\030B \001(\002\022%\n\035" +
      "tschchartaxiscategoryshowaxis\030C \001(\010\022-\n%t" +
      "schchartaxisdefaultlabelsorientation\030f \001" +
      "(\002\0224\n,tschchartaxisdefaulttitleparagraph" +
      "styleindex\030n \001(\005\0224\n,tschchartaxisdefault" +
      "labelparagraphstyleindex\030o \001(\005\0222\n*tschch" +
      "artaxisvaluetitleparagraphstyleindex\030p \001" +
      "(\005\0222\n*tschchartaxisvaluelabelparagraphst" +
      "yleindex\030q \001(\005\0225\n-tschchartaxiscategoryt" +
      "itleparagraphstyleindex\030r \001(\005\0225\n-tschcha",
      "rtaxiscategorylabelparagraphstyleindex\030s" +
      " \001(\005\022?\n\"tschchartaxisvalue3dgridlinestro" +
      "ke\030\313\002 \001(\0132\022.TSD.StrokeArchive\022B\n%tschcha" +
      "rtaxiscategory3dgridlinestroke\030\314\002 \001(\0132\022." +
      "TSD.StrokeArchive\022,\n#tschchartaxisvalue3" +
      "dgridlineopacity\030\315\002 \001(\002\022/\n&tschchartaxis" +
      "category3dgridlineopacity\030\316\002 \001(\002\"\214\007\n\030Cha" +
      "rtAxisNonStyleArchive\022 \n\005super\030\001 \002(\0132\021.T" +
      "SS.StyleArchive\022F\n\033tschchartaxisdefaultu" +
      "sermin\030\013 \001(\0132!.TSCH.ChartsNSNumberDouble",
      "Archive\022F\n\033tschchartaxisdefaultusermax\030\014" +
      " \001(\0132!.TSCH.ChartsNSNumberDoubleArchive\022" +
      "P\n tschchartaxisdefaultnumberformat\030\r \001(" +
      "\0132&.TSCH.PreUFF.ChartsNumberFormatArchiv" +
      "e\022&\n\036tschchartaxisdefaultshowlabels\030\016 \001(" +
      "\010\0220\n(tschchartaxisvaluenumberofminorgrid" +
      "lines\0302 \001(\005\022\037\n\027tschchartaxisvaluescale\0303" +
      " \001(\005\022)\n!tschchartaxisvaluenumberofdecade" +
      "s\0304 \001(\005\022$\n\034tschchartaxisvalueshowlabels\030" +
      "5 \001(\010\022#\n\033tschchartaxisvalueshowtitle\0306 \001",
      "(\010\0220\n(tschchartaxisvaluenumberofmajorgri" +
      "dlines\0307 \001(\005\022\037\n\027tschchartaxisvaluetitle\030" +
      "8 \001(\t\022\'\n\037tschchartaxiscategoryshowlabels" +
      "\030d \001(\010\022-\n%tschchartaxiscategoryshowserie" +
      "slabels\030e \001(\010\022&\n\036tschchartaxiscategorysh" +
      "owtitle\030f \001(\010\022\"\n\032tschchartaxiscategoryti" +
      "tle\030g \001(\t\022,\n$tschchartaxisdefaultnumberf" +
      "ormattype\030x \001(\005\022,\n#tschchartaxisdefault3" +
      "dlabelposition\030\320\002 \001(\005\022(\n tschchartaxisca" +
      "tegoryplottoedges\030t \001(\010\"\342/\n\027ChartSeriesS",
      "tyleArchive\022 \n\005super\030\001 \002(\0132\021.TSS.StyleAr" +
      "chive\022C\n:tschchartseriesdefaulttrendline" +
      "equationparagraphstyleindex\030\311\001 \001(\005\022C\n:ts" +
      "chchartseriesdefaulttrendlinersquaredpar" +
      "agraphstyleindex\030\312\001 \001(\005\0227\n.tschchartseri" +
      "esdefaulttrendlineequationopacity\030\315\001 \001(\002" +
      "\0227\n.tschchartseriesdefaulttrendlinersqua" +
      "redopacity\030\316\001 \001(\002\0220\n\026tschchartseriesbarf" +
      "ill\030\n \001(\0132\020.TSD.FillArchive\0224\n\030tschchart" +
      "seriesbarstroke\030\013 \001(\0132\022.TSD.StrokeArchiv",
      "e\022,\n$tschchartseriesbarvaluelabelpositio" +
      "n\030\r \001(\005\0225\n\031tschchartserieslinestroke\030\020 \001" +
      "(\0132\022.TSD.StrokeArchive\0227\n\035tschchartserie" +
      "slinesymbolfill\030\021 \001(\0132\020.TSD.FillArchive\022" +
      ";\n\037tschchartserieslinesymbolstroke\030\022 \001(\013" +
      "2\022.TSD.StrokeArchive\022%\n\035tschchartseriesl" +
      "inesymbolsize\030\024 \001(\002\022-\n%tschchartseriesli" +
      "nevaluelabelposition\030\026 \001(\005\0221\n\027tschcharts" +
      "eriesareafill\030\031 \001(\0132\020.TSD.FillArchive\0225\n" +
      "\031tschchartseriesareastroke\030\032 \001(\0132\022.TSD.S",
      "trokeArchive\022-\n%tschchartseriesareavalue" +
      "labelposition\030\034 \001(\005\0227\n\035tschchartseriesar" +
      "easymbolfill\030\035 \001(\0132\020.TSD.FillArchive\022;\n\037" +
      "tschchartseriesareasymbolstroke\030\036 \001(\0132\022." +
      "TSD.StrokeArchive\022%\n\035tschchartseriesarea" +
      "symbolsize\030  \001(\002\0220\n\026tschchartseriespiefi" +
      "ll\030# \001(\0132\020.TSD.FillArchive\0224\n\030tschcharts" +
      "eriespiestroke\030$ \001(\0132\022.TSD.StrokeArchive" +
      "\0228\n\034tschchartseriesscatterstroke\030( \001(\0132\022" +
      ".TSD.StrokeArchive\022:\n tschchartseriessca",
      "ttersymbolfill\030) \001(\0132\020.TSD.FillArchive\022>" +
      "\n\"tschchartseriesscattersymbolstroke\030* \001" +
      "(\0132\022.TSD.StrokeArchive\022(\n tschchartserie" +
      "sscattersymbolsize\030, \001(\002\0220\n(tschchartser" +
      "iesscattervaluelabelposition\030. \001(\005\0224\n\032ts" +
      "chchartseriesdefaultfill\0302 \001(\0132\020.TSD.Fil" +
      "lArchive\0220\n(tschchartseriesdefaultvaluel" +
      "abelposition\0304 \001(\005\0222\n*tschchartseriespie" +
      "deprecatedserieslabelson\030< \001(\010\0223\n\031tschch" +
      "artseriescolumnfill\030> \001(\0132\020.TSD.FillArch",
      "ive\0224\n\030tschchartseriespieshadow\030d \001(\0132\022." +
      "TSD.ShadowArchive\0224\n\030tschchartseriesbars" +
      "hadow\030e \001(\0132\022.TSD.ShadowArchive\0225\n\031tschc" +
      "hartseriesareashadow\030f \001(\0132\022.TSD.ShadowA" +
      "rchive\0228\n\034tschchartseriesscattershadow\030g" +
      " \001(\0132\022.TSD.ShadowArchive\022:\n\036tschchartser" +
      "iesmixedlineshadow\030h \001(\0132\022.TSD.ShadowArc" +
      "hive\022:\n\036tschchartseriesmixedareashadow\030i" +
      " \001(\0132\022.TSD.ShadowArchive\022<\n tschchartser" +
      "iesmixedcolumnshadow\030j \001(\0132\022.TSD.ShadowA",
      "rchive\0225\n\031tschchartserieslineshadow\030k \001(" +
      "\0132\022.TSD.ShadowArchive\0228\n\034tschchartseries" +
      "defaultshadow\030l \001(\0132\022.TSD.ShadowArchive\022" +
      ":\n\037tschchartseriesbubblesymbolfill\030\317\001 \001(" +
      "\0132\020.TSD.FillArchive\0228\n\033tschchartseriesbu" +
      "bblestroke\030\323\001 \001(\0132\022.TSD.StrokeArchive\022>\n" +
      "!tschchartseriesbubblesymbolstroke\030\324\001 \001(" +
      "\0132\022.TSD.StrokeArchive\0220\n\'tschchartseries" +
      "bubblevaluelabelposition\030\325\001 \001(\005\0228\n\033tschc" +
      "hartseriesbubbleshadow\030\326\001 \001(\0132\022.TSD.Shad",
      "owArchive\0227\n.tschchartseriesbubblesymbol" +
      "filluseseriesstroke\030\327\001 \001(\010\0227\n\032tschcharts" +
      "eries3dbarshadow\030\262\002 \001(\0132\022.TSD.ShadowArch" +
      "ive\022:\n\035tschchartseries3dcolumnshadow\030\263\002 " +
      "\001(\0132\022.TSD.ShadowArchive\0228\n\033tschchartseri" +
      "es3dlineshadow\030\264\002 \001(\0132\022.TSD.ShadowArchiv" +
      "e\0228\n\033tschchartseries3dareashadow\030\265\002 \001(\0132" +
      "\022.TSD.ShadowArchive\0227\n\032tschchartseries3d" +
      "pieshadow\030\266\002 \001(\0132\022.TSD.ShadowArchive\0226\n." +
      "tschchartseriesdefaultlabelparagraphstyl",
      "eindex\030n \001(\005\0222\n*tschchartseriesbarlabelp" +
      "aragraphstyleindex\030o \001(\005\0223\n+tschchartser" +
      "ieslinelabelparagraphstyleindex\030p \001(\005\0223\n" +
      "+tschchartseriesarealabelparagraphstylei" +
      "ndex\030q \001(\005\0222\n*tschchartseriespielabelpar" +
      "agraphstyleindex\030r \001(\005\0224\n,tschchartserie" +
      "smixedlabelparagraphstyleindex\030s \001(\005\022%\n\035" +
      "tschchartseriesdefaultopacity\030t \001(\002\0224\n,t" +
      "schchartserieslinesymbolfilluseseriesstr" +
      "oke\030u \001(\010\0224\n,tschchartseriesareasymbolfi",
      "lluseseriesstroke\030v \001(\010\0227\n/tschchartseri" +
      "esscattersymbolfilluseseriesstroke\030w \001(\010" +
      "\0229\n1tschchartseriesmixedlinesymbolfillus" +
      "eseriesstroke\030x \001(\010\0229\n1tschchartseriesmi" +
      "xedareasymbolfilluseseriesstroke\030y \001(\010\0222" +
      "\n*tschchartserieslinesymbolfilluseseries" +
      "fill\030z \001(\010\0222\n*tschchartseriesareasymbolf" +
      "illuseseriesfill\030{ \001(\010\0227\n/tschchartserie" +
      "smixedlinesymbolfilluseseriesfill\030| \001(\010\022" +
      "7\n/tschchartseriesmixedareasymbolfilluse",
      "seriesfill\030} \001(\010\0229\n\036tschchartseriesmixed" +
      "columnfill\030\202\001 \001(\0132\020.TSD.FillArchive\0227\n\034t" +
      "schchartseriesmixedareafill\030\203\001 \001(\0132\020.TSD" +
      ".FillArchive\022=\n tschchartseriesmixedcolu" +
      "mnstroke\030\204\001 \001(\0132\022.TSD.StrokeArchive\022;\n\036t" +
      "schchartseriesmixedlinestroke\030\205\001 \001(\0132\022.T" +
      "SD.StrokeArchive\022;\n\036tschchartseriesmixed" +
      "areastroke\030\206\001 \001(\0132\022.TSD.StrokeArchive\022+\n" +
      "\"tschchartseriesmixedlinesymbolsize\030\207\001 \001" +
      "(\002\022+\n\"tschchartseriesmixedareasymbolsize",
      "\030\210\001 \001(\002\022=\n\"tschchartseriesmixedlinesymbo" +
      "lfill\030\211\001 \001(\0132\020.TSD.FillArchive\022=\n\"tschch" +
      "artseriesmixedareasymbolfill\030\212\001 \001(\0132\020.TS" +
      "D.FillArchive\022A\n$tschchartseriesmixedlin" +
      "esymbolstroke\030\213\001 \001(\0132\022.TSD.StrokeArchive" +
      "\022A\n$tschchartseriesmixedareasymbolstroke" +
      "\030\214\001 \001(\0132\022.TSD.StrokeArchive\0225\n,tschchart" +
      "seriesmixedcolumnvaluelabelposition\030\215\001 \001" +
      "(\005\0223\n*tschchartseriesmixedlinevaluelabel" +
      "position\030\216\001 \001(\005\0223\n*tschchartseriesmixeda",
      "reavaluelabelposition\030\217\001 \001(\005\022>\n5tschchar" +
      "tseriesdefaultoutsidelabelparagraphstyle" +
      "index\030\226\001 \001(\005\022:\n1tschchartseriesbaroutsid" +
      "elabelparagraphstyleindex\030\227\001 \001(\005\022;\n2tsch" +
      "chartseriesareaoutsidelabelparagraphstyl" +
      "eindex\030\231\001 \001(\005\022:\n1tschchartseriespieoutsi" +
      "delabelparagraphstyleindex\030\232\001 \001(\005\022<\n3tsc" +
      "hchartseriesmixedoutsidelabelparagraphst" +
      "yleindex\030\233\001 \001(\005\0224\n+tschchartseriesstacke" +
      "dbarvaluelabelposition\030\234\001 \001(\005\0225\n,tschcha",
      "rtseriesstackedareavaluelabelposition\030\235\001" +
      " \001(\005\022B\n%tschchartseriesdefaulttrendlines" +
      "troke\030\247\001 \001(\0132\022.TSD.StrokeArchive\022B\n%tsch" +
      "chartseriesdefaulttrendlineshadow\030\250\001 \001(\013" +
      "2\022.TSD.ShadowArchive\022A\n$tschchartseriesd" +
      "efaulterrorbarshadow\030\264\001 \001(\0132\022.TSD.Shadow" +
      "Archive\022A\n$tschchartseriesdefaulterrorba" +
      "rstroke\030\265\001 \001(\0132\022.TSD.StrokeArchive\022I\n,ts" +
      "chchartseriesdefaulterrorbarstrokescatte" +
      "rx\030\266\001 \001(\0132\022.TSD.StrokeArchive\022C\n%tschcha",
      "rtseriesdefaulterrorbarlineend\030\267\001 \001(\0132\023." +
      "TSD.LineEndArchive\022K\n-tschchartseriesdef" +
      "aulterrorbarlineendscatterx\030\270\001 \001(\0132\023.TSD" +
      ".LineEndArchive\022S\n&tschchartseriesdefaul" +
      "tdeprecated3dfill\030\254\002 \001(\0132\".TSCH.DEPRECAT" +
      "EDChart3DFillArchive\022O\n\"tschchartseriesb" +
      "ardeprecated3dfill\030\255\002 \001(\0132\".TSCH.DEPRECA" +
      "TEDChart3DFillArchive\022R\n%tschchartseries" +
      "columndeprecated3dfill\030\256\002 \001(\0132\".TSCH.DEP" +
      "RECATEDChart3DFillArchive\022P\n#tschchartse",
      "rieslinedeprecated3dfill\030\257\002 \001(\0132\".TSCH.D" +
      "EPRECATEDChart3DFillArchive\022P\n#tschchart" +
      "seriesareadeprecated3dfill\030\260\002 \001(\0132\".TSCH" +
      ".DEPRECATEDChart3DFillArchive\022O\n\"tschcha" +
      "rtseriespiedeprecated3dfill\030\261\002 \001(\0132\".TSC" +
      "H.DEPRECATEDChart3DFillArchive\0223\n\030tschch" +
      "artseries3dbarfill\030\300\002 \001(\0132\020.TSD.FillArch" +
      "ive\0226\n\033tschchartseries3dcolumnfill\030\301\002 \001(" +
      "\0132\020.TSD.FillArchive\0224\n\031tschchartseries3d" +
      "linefill\030\302\002 \001(\0132\020.TSD.FillArchive\0224\n\031tsc",
      "hchartseries3dareafill\030\303\002 \001(\0132\020.TSD.Fill" +
      "Archive\0223\n\030tschchartseries3dpiefill\030\304\002 \001" +
      "(\0132\020.TSD.FillArchive\"\344\032\n\032ChartSeriesNonS" +
      "tyleArchive\022 \n\005super\030\001 \002(\0132\021.TSS.StyleAr" +
      "chive\022R\n\"tschchartseriesdefaultnumberfor" +
      "mat\030\n \001(\0132&.TSCH.PreUFF.ChartsNumberForm" +
      "atArchive\022.\n&tschchartseriesdefaultnumbe" +
      "rformattype\030\013 \001(\005\022)\n!tschchartseriesbars" +
      "howvaluelabels\030\014 \001(\010\022%\n\035tschchartseriesl" +
      "inesymboltype\030\023 \001(\005\022%\n\035tschchartseriesli",
      "neshowsymbol\030\024 \001(\010\022*\n\"tschchartserieslin" +
      "eshowvaluelabels\030\025 \001(\010\022*\n\"tschchartserie" +
      "sareashowvaluelabels\030\033 \001(\010\022#\n\033tschcharts" +
      "erieslinelinetype\030\036 \001(\005\022%\n\035tschchartseri" +
      "esareasymboltype\030\037 \001(\005\022%\n\035tschchartserie" +
      "sareashowsymbol\030  \001(\010\022)\n!tschchartseries" +
      "pieshowvaluelabels\030% \001(\010\022-\n%tschchartser" +
      "iesscattershowvaluelabels\030- \001(\010\022(\n tschc" +
      "hartseriespiewedgeexplosion\0302 \001(\002\022-\n%tsc" +
      "hchartseriesdefaultshowvaluelabels\0303 \001(\010",
      "\022N\n\036tschchartseriespienumberformat\0304 \001(\013" +
      "2&.TSCH.PreUFF.ChartsNumberFormatArchive" +
      "\022*\n\"tschchartseriespienumberformattype\0305" +
      " \001(\005\022(\n tschchartseriespielabelexplosion" +
      "\0306 \001(\002\022*\n\"tschchartseriesmixedlineshowsy" +
      "mbol\030: \001(\010\022*\n\"tschchartseriesmixedareash" +
      "owsymbol\030; \001(\010\022*\n\"tschchartseriesmixedli" +
      "nesymboltype\030< \001(\005\022*\n\"tschchartseriesmix" +
      "edareasymboltype\030= \001(\005\022+\n#tschchartserie" +
      "smixedshowvaluelabels\030> \001(\010\022(\n tschchart",
      "seriesmixedlinelinetype\030? \001(\005\022*\n\"tschcha" +
      "rtseriesdefaultyaxisordinal\030A \001(\005\022*\n\"tsc" +
      "hchartseriespieshowserieslabels\030B \001(\010\022(\n" +
      " tschchartseriesscattershowsymbol\030E \001(\010\022" +
      "(\n tschchartseriesscattersymboltype\030F \001(" +
      "\005\022&\n\036tschchartseriesscatterlinetype\030G \001(" +
      "\005\022&\n\036tschchartseriesscattershowline\030H \001(" +
      "\010\022Y\n)tschchartseriesstackedpercentnumber" +
      "format\030Z \001(\0132&.TSCH.PreUFF.ChartsNumberF" +
      "ormatArchive\022(\n tschchartseriesdefaultse",
      "riestype\030~ \001(\005\022,\n#tschchartseriesdefault" +
      "trendlinetype\030\240\001 \001(\005\022-\n$tschchartseriesd" +
      "efaulttrendlineorder\030\241\001 \001(\005\022.\n%tschchart" +
      "seriesdefaulttrendlineperiod\030\242\001 \001(\005\0221\n(t" +
      "schchartseriesdefaulttrendlineshowlabel\030" +
      "\243\001 \001(\010\0223\n*tschchartseriesdefaulttrendlin" +
      "elabelstring\030\244\001 \001(\t\0224\n+tschchartseriesde" +
      "faulttrendlineshowequation\030\245\001 \001(\010\0223\n*tsc" +
      "hchartseriesdefaulttrendlineshowr2value\030" +
      "\246\001 \001(\010\022.\n%tschchartseriesdefaulterrorbar",
      "setting\030\252\001 \001(\005\0226\n-tschchartseriesdefault" +
      "errorbarsettingscatterx\030\253\001 \001(\005\022+\n\"tschch" +
      "artseriesdefaulterrorbartype\030\254\001 \001(\005\0223\n*t" +
      "schchartseriesdefaulterrorbartypescatter" +
      "x\030\255\001 \001(\005\0221\n(tschchartseriesdefaulterrorb" +
      "arfixedvalue\030\256\001 \001(\002\0229\n0tschchartseriesde" +
      "faulterrorbarfixedvaluescatterx\030\257\001 \001(\002\0223" +
      "\n*tschchartseriesdefaulterrorbarpercentv" +
      "alue\030\260\001 \001(\002\022;\n2tschchartseriesdefaulterr" +
      "orbarpercentvaluescatterx\030\261\001 \001(\002\0222\n)tsch",
      "chartseriesdefaulterrorbarstddevvalue\030\262\001" +
      " \001(\002\022:\n1tschchartseriesdefaulterrorbarst" +
      "ddevvaluescatterx\030\263\001 \001(\002\022e\n0tschchartser" +
      "iesdefaulterrorbarcustompositivedata\030\276\001 " +
      "\001(\0132*.TSCH.ChartsNSArrayOfNSNumberDouble" +
      "Archive\022m\n8tschchartseriesdefaulterrorba" +
      "rcustompositivedatascatterx\030\277\001 \001(\0132*.TSC" +
      "H.ChartsNSArrayOfNSNumberDoubleArchive\022e" +
      "\n0tschchartseriesdefaulterrorbarcustomne" +
      "gativedata\030\300\001 \001(\0132*.TSCH.ChartsNSArrayOf",
      "NSNumberDoubleArchive\022m\n8tschchartseries" +
      "defaulterrorbarcustomnegativedatascatter" +
      "x\030\301\001 \001(\0132*.TSCH.ChartsNSArrayOfNSNumberD" +
      "oubleArchive\0227\n.tschchartseriesdefaulttr" +
      "endlineequationoffsetx\030\302\001 \001(\002\0227\n.tschcha" +
      "rtseriesdefaulttrendlineequationoffsety\030" +
      "\303\001 \001(\002\0227\n.tschchartseriesdefaulttrendlin" +
      "ersquaredoffsetx\030\304\001 \001(\002\0227\n.tschchartseri" +
      "esdefaulttrendlinersquaredoffsety\030\305\001 \001(\002" +
      "\022,\n#tschchartseriesdefaultshowtrendline\030",
      "\306\001 \001(\010\022+\n\"tschchartseriesdefaultshowerro" +
      "rbar\030\307\001 \001(\010\0223\n*tschchartseriesdefaultsho" +
      "werrorbarscatterx\030\310\001 \001(\010\022+\n\"tschchartser" +
      "iesbubblesizedimension\030\320\001 \001(\005\022-\n$tschcha" +
      "rtseriesbubbleshowvaluelabels\030\321\001 \001(\010\022&\n\035" +
      "tschchartseriesbubblelinetype\030\322\001 \001(\005\022.\n%" +
      "tschchartseriesbubbleshownegativedata\030\330\001" +
      " \001(\010\022-\n$tschchartseriesbubbleadjustments" +
      "cale\030\331\001 \001(\002"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.techforumist.keynote.proto.TSP.TSPMessages.getDescriptor(),
          org.techforumist.keynote.proto.TSK.TSKArchives.getDescriptor(),
          org.techforumist.keynote.proto.TSD.TSDArchives.getDescriptor(),
          org.techforumist.keynote.proto.TSS.TSSArchives.getDescriptor(),
          org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.getDescriptor(),
          org.techforumist.keynote.proto.TSCH.TSCH3DArchives.getDescriptor(),
        }, assigner);
    internal_static_TSCH_PreUFF_ChartInfoArchive_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_TSCH_PreUFF_ChartInfoArchive_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TSCH_PreUFF_ChartInfoArchive_descriptor,
        new java.lang.String[] { "Super", "ChartModel", "Style", "ChartType", "LegendModel", "InnerChartFrame", "ValueAxisStyles", "CategoryAxisStyles", "ValueAxisNonstyles", "CategoryAxisNonstyles", "SeriesThemeStyles", "SeriesPrivateStyles", "SeriesNonStyles", "NonStyle", "Mediator", "CdePreviewOrigin", "ChartStylePreset", "ParagraphStyles", "LastRowSectedInTheCde", "LastColumnSectedInTheCde", "ChartStylePresetIndex", "NeedsCalcEngineDeferredImportAction", });
    internal_static_TSCH_PreUFF_LegendModelArchive_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_TSCH_PreUFF_LegendModelArchive_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TSCH_PreUFF_LegendModelArchive_descriptor,
        new java.lang.String[] { "Info", "Frame", "Style", "NonStyle", });
    internal_static_TSCH_PreUFF_ChartModelArchive_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_TSCH_PreUFF_ChartModelArchive_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TSCH_PreUFF_ChartModelArchive_descriptor,
        new java.lang.String[] { "Info", "Grid", "SeriesTypes", "ScatterFormat", "InlineGrid", "MultidatasetIndex", });
    internal_static_TSCH_PreUFF_ChartGridArchive_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_TSCH_PreUFF_ChartGridArchive_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TSCH_PreUFF_ChartGridArchive_descriptor,
        new java.lang.String[] { "Direction", "RowName", "ColumnName", "ValueRow", "Dirty", });
    internal_static_TSCH_PreUFF_ChartGridArchive_ValueRow_descriptor =
      internal_static_TSCH_PreUFF_ChartGridArchive_descriptor.getNestedTypes().get(0);
    internal_static_TSCH_PreUFF_ChartGridArchive_ValueRow_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TSCH_PreUFF_ChartGridArchive_ValueRow_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_TSCH_PreUFF_ChartsNumberFormatArchive_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_TSCH_PreUFF_ChartsNumberFormatArchive_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TSCH_PreUFF_ChartsNumberFormatArchive_descriptor,
        new java.lang.String[] { "ValueType", "FormatString", "DecimalPlaces", "CurrencyCode", "NegativeStyle", "ShowThousandsSeparator", "FractionAccuracy", "SuffixString", "Base", "BasePlaces", "BaseUseMinusSign", "UseAccountingStyle", "IsCustom", "ScaleFactor", "InterstitialStrings", "InterstitialStringInsertionIndexes", "IndexFromRightOfLastDigitPlaceholder", "IsTextFormat", "MinimumIntegerWidth", "DecimalWidth", "NumberOfNonSpaceIntegerPlaceholderDigits", "NumberOfNonSpaceDecimalPlaceholderDigits", "FormatName", "PrefixString", });
    internal_static_TSCH_PreUFF_ChartStyleArchive_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_TSCH_PreUFF_ChartStyleArchive_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TSCH_PreUFF_ChartStyleArchive_descriptor,
        new java.lang.String[] { "Super", "Tschchartinfodefaultbackgroundfill", "Tschchartinfodefaultbackgroundstroke", "Tschchartinfodefaultgridbackgroundfill", "Tschchartinfodefaultintersetgap", "Tschchartinfodefaultinterbargap", "Tschchartinfodefaultshowborder", "Tschchartinfodefaultborderstroke", "Tschchartinfodefaulttitlecolor", "Tschchartinfodefaultgridbackgroundopacity", "Tschchartinfodefaultcombinelayers", "Tschchartinfodefaultbordershadow", "Tschchartinfodefaultborderopacity", "Tschchartinfodefaulttitleparagraphstyleindex", "Tschchartinfodefaultdeprecatedmasterfontfamily", "Tschchartinfodefaultdeprecatedmasterfontnamedsize", "Tschchartinfodefaultdeprecatedtrendlineequationparagraphstyleindex", "Tschchartinfodefaultdeprecatedtrendlinersquaredparagraphstyleindex", "Tschchartinfodefaultdeprecatedtrendlineequationshadow", "Tschchartinfodefaultdeprecatedtrendlinersquaredshadow", "Tschchartinfodefaultdeprecatedtrendlineequationopacity", "Tschchartinfodefaultdeprecatedtrendlinersquaredopacity", "Tschchartinfobardeprecated3Dshadow", "Tschchartinfocolumndeprecated3Dshadow", "Tschchartinfolinedeprecated3Dshadow", "Tschchartinfoareadeprecated3Dshadow", "Tschchartinfopiedeprecated3Dshadow", "Tschchartinfodefault3Dlightingpackage", "Tschchartinfocolumn3Dlightingpackage", "Tschchartinfobar3Dlightingpackage", "Tschchartinfoline3Dlightingpackage", "Tschchartinfoarea3Dlightingpackage", "Tschchartinfopie3Dlightingpackage", "Tschchartinfodefaultdeprecated3Dbeveledges", "Tschchartinfopiedeprecated3Dbeveledges", "Tschchartinfobardeprecated3Dbeveledges", "Tschchartinfocolumndeprecated3Dbeveledges", "Tschchartinfodefaultdeprecated3Dbarshape", "Tschchartinfodefault3Dchartopacity", });
    internal_static_TSCH_PreUFF_ChartNonStyleArchive_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_TSCH_PreUFF_ChartNonStyleArchive_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TSCH_PreUFF_ChartNonStyleArchive_descriptor,
        new java.lang.String[] { "Super", "Tschchartinfodefaulttitle", "Tschchartinfodefaultshowlegend", "Tschchartinfodefaultpiestartangle", "Tschchartinfodefaultshowtitle", "Tschchartinfodefaultdeprecatedagainmasterfontnamedsize", "Tschchartinfodefault3Drotation", "Tschchartinfodefault3Dscale", "Tschchartinfocolumn3Dscale", "Tschchartinfobar3Dscale", "Tschchartinfoline3Dscale", "Tschchartinfoarea3Dscale", "Tschchartinfopie3Dscale", "Tschchartinfodefault3Dviewport", "Tschchartinfodefaultdeprecated3Dlightingpackage", "Tschchartinfocolumndeprecated3Dlightingpackage", "Tschchartinfobardeprecated3Dlightingpackage", "Tschchartinfolinedeprecated3Dlightingpackage", "Tschchartinfoareadeprecated3Dlightingpackage", "Tschchartinfopiedeprecated3Dlightingpackage", "Tschchartinfodefaultskiphiddendata", "Tschchartinfodefault3Dbeveledges", "Tschchartinfodefault3Dbarshape", "Tschchartinfodefault3Dintersetdepthgap", });
    internal_static_TSCH_PreUFF_LegendStyleArchive_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_TSCH_PreUFF_LegendStyleArchive_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TSCH_PreUFF_LegendStyleArchive_descriptor,
        new java.lang.String[] { "Super", "Tschlegendmodeldefaultfill", "Tschlegendmodeldefaultstroke", "Tschlegendmodeldefaultshadow", "Tschlegendmodeldefaultopacity", "Tschlegendmodeldefaultlabelparagraphstyleindex", });
    internal_static_TSCH_PreUFF_LegendNonStyleArchive_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_TSCH_PreUFF_LegendNonStyleArchive_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TSCH_PreUFF_LegendNonStyleArchive_descriptor,
        new java.lang.String[] { "Super", });
    internal_static_TSCH_PreUFF_ChartAxisStyleArchive_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_TSCH_PreUFF_ChartAxisStyleArchive_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TSCH_PreUFF_ChartAxisStyleArchive_descriptor,
        new java.lang.String[] { "Super", "Tschchartaxisvalueshowmajorgridlines", "Tschchartaxisvalueshowminorgridlines", "Tschchartaxisvaluemajorgridlinestroke", "Tschchartaxisvalueminorgridlinestroke", "Tschchartaxisvaluetickmarklocation", "Tschchartaxisvalueshowmajortickmarks", "Tschchartaxisvalueshowminortickmarks", "Tschchartaxisvaluelabelsorientation", "Tschchartaxisvalueshowminimumlabel", "Tschchartaxisvaluemajorgridlineshadow", "Tschchartaxisvalueminorgridlineshadow", "Tschchartaxisvaluemajorgridlineopacity", "Tschchartaxisvalueminorgridlineopacity", "Tschchartaxisvalueshowaxis", "Tschchartaxiscategoryshowmajorgridlines", "Tschchartaxiscategoryshowminorgridlines", "Tschchartaxiscategorymajorgridlinestroke", "Tschchartaxiscategoryminorgridlinestroke", "Tschchartaxiscategorytickmarklocation", "Tschchartaxiscategoryshowmajortickmarks", "Tschchartaxiscategoryshowminortickmarks", "Tschchartaxiscategorylabelsorientation", "Tschchartaxiscategoryhorizontalspacing", "Tschchartaxiscategoryverticalspacing", "Tschchartaxiscategoryshowlastlabel", "Tschchartaxiscategorymajorgridlineshadow", "Tschchartaxiscategoryminorgridlineshadow", "Tschchartaxiscategorymajorgridlineopacity", "Tschchartaxiscategoryminorgridlineopacity", "Tschchartaxiscategoryshowaxis", "Tschchartaxisdefaultlabelsorientation", "Tschchartaxisdefaulttitleparagraphstyleindex", "Tschchartaxisdefaultlabelparagraphstyleindex", "Tschchartaxisvaluetitleparagraphstyleindex", "Tschchartaxisvaluelabelparagraphstyleindex", "Tschchartaxiscategorytitleparagraphstyleindex", "Tschchartaxiscategorylabelparagraphstyleindex", "Tschchartaxisvalue3Dgridlinestroke", "Tschchartaxiscategory3Dgridlinestroke", "Tschchartaxisvalue3Dgridlineopacity", "Tschchartaxiscategory3Dgridlineopacity", });
    internal_static_TSCH_PreUFF_ChartAxisNonStyleArchive_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_TSCH_PreUFF_ChartAxisNonStyleArchive_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TSCH_PreUFF_ChartAxisNonStyleArchive_descriptor,
        new java.lang.String[] { "Super", "Tschchartaxisdefaultusermin", "Tschchartaxisdefaultusermax", "Tschchartaxisdefaultnumberformat", "Tschchartaxisdefaultshowlabels", "Tschchartaxisvaluenumberofminorgridlines", "Tschchartaxisvaluescale", "Tschchartaxisvaluenumberofdecades", "Tschchartaxisvalueshowlabels", "Tschchartaxisvalueshowtitle", "Tschchartaxisvaluenumberofmajorgridlines", "Tschchartaxisvaluetitle", "Tschchartaxiscategoryshowlabels", "Tschchartaxiscategoryshowserieslabels", "Tschchartaxiscategoryshowtitle", "Tschchartaxiscategorytitle", "Tschchartaxisdefaultnumberformattype", "Tschchartaxisdefault3Dlabelposition", "Tschchartaxiscategoryplottoedges", });
    internal_static_TSCH_PreUFF_ChartSeriesStyleArchive_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_TSCH_PreUFF_ChartSeriesStyleArchive_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TSCH_PreUFF_ChartSeriesStyleArchive_descriptor,
        new java.lang.String[] { "Super", "Tschchartseriesdefaulttrendlineequationparagraphstyleindex", "Tschchartseriesdefaulttrendlinersquaredparagraphstyleindex", "Tschchartseriesdefaulttrendlineequationopacity", "Tschchartseriesdefaulttrendlinersquaredopacity", "Tschchartseriesbarfill", "Tschchartseriesbarstroke", "Tschchartseriesbarvaluelabelposition", "Tschchartserieslinestroke", "Tschchartserieslinesymbolfill", "Tschchartserieslinesymbolstroke", "Tschchartserieslinesymbolsize", "Tschchartserieslinevaluelabelposition", "Tschchartseriesareafill", "Tschchartseriesareastroke", "Tschchartseriesareavaluelabelposition", "Tschchartseriesareasymbolfill", "Tschchartseriesareasymbolstroke", "Tschchartseriesareasymbolsize", "Tschchartseriespiefill", "Tschchartseriespiestroke", "Tschchartseriesscatterstroke", "Tschchartseriesscattersymbolfill", "Tschchartseriesscattersymbolstroke", "Tschchartseriesscattersymbolsize", "Tschchartseriesscattervaluelabelposition", "Tschchartseriesdefaultfill", "Tschchartseriesdefaultvaluelabelposition", "Tschchartseriespiedeprecatedserieslabelson", "Tschchartseriescolumnfill", "Tschchartseriespieshadow", "Tschchartseriesbarshadow", "Tschchartseriesareashadow", "Tschchartseriesscattershadow", "Tschchartseriesmixedlineshadow", "Tschchartseriesmixedareashadow", "Tschchartseriesmixedcolumnshadow", "Tschchartserieslineshadow", "Tschchartseriesdefaultshadow", "Tschchartseriesbubblesymbolfill", "Tschchartseriesbubblestroke", "Tschchartseriesbubblesymbolstroke", "Tschchartseriesbubblevaluelabelposition", "Tschchartseriesbubbleshadow", "Tschchartseriesbubblesymbolfilluseseriesstroke", "Tschchartseries3Dbarshadow", "Tschchartseries3Dcolumnshadow", "Tschchartseries3Dlineshadow", "Tschchartseries3Dareashadow", "Tschchartseries3Dpieshadow", "Tschchartseriesdefaultlabelparagraphstyleindex", "Tschchartseriesbarlabelparagraphstyleindex", "Tschchartserieslinelabelparagraphstyleindex", "Tschchartseriesarealabelparagraphstyleindex", "Tschchartseriespielabelparagraphstyleindex", "Tschchartseriesmixedlabelparagraphstyleindex", "Tschchartseriesdefaultopacity", "Tschchartserieslinesymbolfilluseseriesstroke", "Tschchartseriesareasymbolfilluseseriesstroke", "Tschchartseriesscattersymbolfilluseseriesstroke", "Tschchartseriesmixedlinesymbolfilluseseriesstroke", "Tschchartseriesmixedareasymbolfilluseseriesstroke", "Tschchartserieslinesymbolfilluseseriesfill", "Tschchartseriesareasymbolfilluseseriesfill", "Tschchartseriesmixedlinesymbolfilluseseriesfill", "Tschchartseriesmixedareasymbolfilluseseriesfill", "Tschchartseriesmixedcolumnfill", "Tschchartseriesmixedareafill", "Tschchartseriesmixedcolumnstroke", "Tschchartseriesmixedlinestroke", "Tschchartseriesmixedareastroke", "Tschchartseriesmixedlinesymbolsize", "Tschchartseriesmixedareasymbolsize", "Tschchartseriesmixedlinesymbolfill", "Tschchartseriesmixedareasymbolfill", "Tschchartseriesmixedlinesymbolstroke", "Tschchartseriesmixedareasymbolstroke", "Tschchartseriesmixedcolumnvaluelabelposition", "Tschchartseriesmixedlinevaluelabelposition", "Tschchartseriesmixedareavaluelabelposition", "Tschchartseriesdefaultoutsidelabelparagraphstyleindex", "Tschchartseriesbaroutsidelabelparagraphstyleindex", "Tschchartseriesareaoutsidelabelparagraphstyleindex", "Tschchartseriespieoutsidelabelparagraphstyleindex", "Tschchartseriesmixedoutsidelabelparagraphstyleindex", "Tschchartseriesstackedbarvaluelabelposition", "Tschchartseriesstackedareavaluelabelposition", "Tschchartseriesdefaulttrendlinestroke", "Tschchartseriesdefaulttrendlineshadow", "Tschchartseriesdefaulterrorbarshadow", "Tschchartseriesdefaulterrorbarstroke", "Tschchartseriesdefaulterrorbarstrokescatterx", "Tschchartseriesdefaulterrorbarlineend", "Tschchartseriesdefaulterrorbarlineendscatterx", "Tschchartseriesdefaultdeprecated3Dfill", "Tschchartseriesbardeprecated3Dfill", "Tschchartseriescolumndeprecated3Dfill", "Tschchartserieslinedeprecated3Dfill", "Tschchartseriesareadeprecated3Dfill", "Tschchartseriespiedeprecated3Dfill", "Tschchartseries3Dbarfill", "Tschchartseries3Dcolumnfill", "Tschchartseries3Dlinefill", "Tschchartseries3Dareafill", "Tschchartseries3Dpiefill", });
    internal_static_TSCH_PreUFF_ChartSeriesNonStyleArchive_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_TSCH_PreUFF_ChartSeriesNonStyleArchive_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TSCH_PreUFF_ChartSeriesNonStyleArchive_descriptor,
        new java.lang.String[] { "Super", "Tschchartseriesdefaultnumberformat", "Tschchartseriesdefaultnumberformattype", "Tschchartseriesbarshowvaluelabels", "Tschchartserieslinesymboltype", "Tschchartserieslineshowsymbol", "Tschchartserieslineshowvaluelabels", "Tschchartseriesareashowvaluelabels", "Tschchartserieslinelinetype", "Tschchartseriesareasymboltype", "Tschchartseriesareashowsymbol", "Tschchartseriespieshowvaluelabels", "Tschchartseriesscattershowvaluelabels", "Tschchartseriespiewedgeexplosion", "Tschchartseriesdefaultshowvaluelabels", "Tschchartseriespienumberformat", "Tschchartseriespienumberformattype", "Tschchartseriespielabelexplosion", "Tschchartseriesmixedlineshowsymbol", "Tschchartseriesmixedareashowsymbol", "Tschchartseriesmixedlinesymboltype", "Tschchartseriesmixedareasymboltype", "Tschchartseriesmixedshowvaluelabels", "Tschchartseriesmixedlinelinetype", "Tschchartseriesdefaultyaxisordinal", "Tschchartseriespieshowserieslabels", "Tschchartseriesscattershowsymbol", "Tschchartseriesscattersymboltype", "Tschchartseriesscatterlinetype", "Tschchartseriesscattershowline", "Tschchartseriesstackedpercentnumberformat", "Tschchartseriesdefaultseriestype", "Tschchartseriesdefaulttrendlinetype", "Tschchartseriesdefaulttrendlineorder", "Tschchartseriesdefaulttrendlineperiod", "Tschchartseriesdefaulttrendlineshowlabel", "Tschchartseriesdefaulttrendlinelabelstring", "Tschchartseriesdefaulttrendlineshowequation", "Tschchartseriesdefaulttrendlineshowr2Value", "Tschchartseriesdefaulterrorbarsetting", "Tschchartseriesdefaulterrorbarsettingscatterx", "Tschchartseriesdefaulterrorbartype", "Tschchartseriesdefaulterrorbartypescatterx", "Tschchartseriesdefaulterrorbarfixedvalue", "Tschchartseriesdefaulterrorbarfixedvaluescatterx", "Tschchartseriesdefaulterrorbarpercentvalue", "Tschchartseriesdefaulterrorbarpercentvaluescatterx", "Tschchartseriesdefaulterrorbarstddevvalue", "Tschchartseriesdefaulterrorbarstddevvaluescatterx", "Tschchartseriesdefaulterrorbarcustompositivedata", "Tschchartseriesdefaulterrorbarcustompositivedatascatterx", "Tschchartseriesdefaulterrorbarcustomnegativedata", "Tschchartseriesdefaulterrorbarcustomnegativedatascatterx", "Tschchartseriesdefaulttrendlineequationoffsetx", "Tschchartseriesdefaulttrendlineequationoffsety", "Tschchartseriesdefaulttrendlinersquaredoffsetx", "Tschchartseriesdefaulttrendlinersquaredoffsety", "Tschchartseriesdefaultshowtrendline", "Tschchartseriesdefaultshowerrorbar", "Tschchartseriesdefaultshowerrorbarscatterx", "Tschchartseriesbubblesizedimension", "Tschchartseriesbubbleshowvaluelabels", "Tschchartseriesbubblelinetype", "Tschchartseriesbubbleshownegativedata", "Tschchartseriesbubbleadjustmentscale", });
    org.techforumist.keynote.proto.TSP.TSPMessages.getDescriptor();
    org.techforumist.keynote.proto.TSK.TSKArchives.getDescriptor();
    org.techforumist.keynote.proto.TSD.TSDArchives.getDescriptor();
    org.techforumist.keynote.proto.TSS.TSSArchives.getDescriptor();
    org.techforumist.keynote.proto.TSCH.TSCHArchivesCommon.getDescriptor();
    org.techforumist.keynote.proto.TSCH.TSCH3DArchives.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
